{
    "7": {
        "name": "reverse-integer",
        "tags": [
            "Math"
        ],
        "difficulty": "Medium"
    },
    "6": {
        "name": "zigzag-conversion",
        "tags": [
            "String"
        ],
        "difficulty": "Medium"
    },
    "2": {
        "name": "add-two-numbers",
        "tags": [
            "Linked List",
            "Math",
            "Recursion"
        ],
        "difficulty": "Medium"
    },
    "5": {
        "name": "longest-palindromic-substring",
        "tags": [
            "Two Pointers",
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "4": {
        "name": "median-of-two-sorted-arrays",
        "tags": [
            "Array",
            "Binary Search",
            "Divide and Conquer"
        ],
        "difficulty": "Hard"
    },
    "1": {
        "name": "two-sum",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Easy"
    },
    "8": {
        "name": "string-to-integer",
        "tags": [],
        "difficulty": null
    },
    "3": {
        "name": "longest-substring-without-repeating-characters",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "9": {
        "name": "palindrome-number",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "13": {
        "name": "roman-to-integer",
        "tags": [
            "Hash Table",
            "Math",
            "String"
        ],
        "difficulty": "Easy"
    },
    "11": {
        "name": "container-with-most-water",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "12": {
        "name": "integer-to-roman",
        "tags": [
            "Hash Table",
            "Math",
            "String"
        ],
        "difficulty": "Medium"
    },
    "10": {
        "name": "regular-expression-matching",
        "tags": [
            "String",
            "Dynamic Programming",
            "Recursion"
        ],
        "difficulty": "Hard"
    },
    "14": {
        "name": "longest-common-prefix",
        "tags": [
            "String",
            "Trie"
        ],
        "difficulty": "Easy"
    },
    "15": {
        "name": "3sum",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "16": {
        "name": "3sum-closest",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "17": {
        "name": "letter-combinations-of-a-phone-number",
        "tags": [
            "Hash Table",
            "String",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "22": {
        "name": "generate-parentheses",
        "tags": [
            "String",
            "Dynamic Programming",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "19": {
        "name": "remove-nth-node-from-end-of-list",
        "tags": [
            "Linked List",
            "Two Pointers"
        ],
        "difficulty": "Medium"
    },
    "20": {
        "name": "valid-parentheses",
        "tags": [
            "String",
            "Stack"
        ],
        "difficulty": "Easy"
    },
    "18": {
        "name": "4sum",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "23": {
        "name": "merge-k-sorted-lists",
        "tags": [
            "Linked List",
            "Divide and Conquer",
            "Heap (Priority Queue)",
            "Merge Sort"
        ],
        "difficulty": "Hard"
    },
    "21": {
        "name": "merge-two-sorted-lists",
        "tags": [
            "Linked List",
            "Recursion"
        ],
        "difficulty": "Easy"
    },
    "26": {
        "name": "remove-duplicates-from-sorted-array",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "difficulty": "Easy"
    },
    "28": {
        "name": "find-the-index-of-the-first-occurrence-in-a-string",
        "tags": [
            "Two Pointers",
            "String",
            "String Matching"
        ],
        "difficulty": "Easy"
    },
    "25": {
        "name": "reverse-nodes-in-k-group",
        "tags": [
            "Linked List",
            "Recursion"
        ],
        "difficulty": "Hard"
    },
    "24": {
        "name": "swap-nodes-in-pairs",
        "tags": [
            "Linked List",
            "Recursion"
        ],
        "difficulty": "Medium"
    },
    "30": {
        "name": "substring-with-concatenation-of-all-words",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "difficulty": "Hard"
    },
    "27": {
        "name": "remove-element",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "difficulty": "Easy"
    },
    "29": {
        "name": "divide-two-integers",
        "tags": [
            "Math",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "31": {
        "name": "next-permutation",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "difficulty": "Medium"
    },
    "38": {
        "name": "count-and-say",
        "tags": [
            "String"
        ],
        "difficulty": "Medium"
    },
    "35": {
        "name": "search-insert-position",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Easy"
    },
    "37": {
        "name": "sudoku-solver",
        "tags": [
            "Array",
            "Hash Table",
            "Backtracking",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "32": {
        "name": "longest-valid-parentheses",
        "tags": [
            "String",
            "Dynamic Programming",
            "Stack"
        ],
        "difficulty": "Hard"
    },
    "34": {
        "name": "find-first-and-last-position-of-element-in-sorted-array",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "39": {
        "name": "combination-sum",
        "tags": [
            "Array",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "33": {
        "name": "search-in-rotated-sorted-array",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "36": {
        "name": "valid-sudoku",
        "tags": [
            "Array",
            "Hash Table",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "41": {
        "name": "first-missing-positive",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Hard"
    },
    "43": {
        "name": "multiply-strings",
        "tags": [
            "Math",
            "String",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "44": {
        "name": "wildcard-matching",
        "tags": [
            "String",
            "Dynamic Programming",
            "Greedy",
            "Recursion"
        ],
        "difficulty": "Hard"
    },
    "42": {
        "name": "trapping-rain-water",
        "tags": [
            "Array",
            "Two Pointers",
            "Dynamic Programming",
            "Stack",
            "Monotonic Stack"
        ],
        "difficulty": "Hard"
    },
    "40": {
        "name": "combination-sum-ii",
        "tags": [
            "Array",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "46": {
        "name": "permutations",
        "tags": [
            "Array",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "47": {
        "name": "permutations-ii",
        "tags": [
            "Array",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "45": {
        "name": "jump-game-ii",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "49": {
        "name": "group-anagrams",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "48": {
        "name": "rotate-image",
        "tags": [
            "Array",
            "Math",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "51": {
        "name": "n-queens",
        "tags": [
            "Array",
            "Backtracking"
        ],
        "difficulty": "Hard"
    },
    "50": {
        "name": "pow(x,-n)",
        "tags": [],
        "difficulty": null
    },
    "52": {
        "name": "n-queens-ii",
        "tags": [
            "Backtracking"
        ],
        "difficulty": "Hard"
    },
    "53": {
        "name": "maximum-subarray",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "54": {
        "name": "spiral-matrix",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "55": {
        "name": "jump-game",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "56": {
        "name": "merge-intervals",
        "tags": [
            "Array",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "57": {
        "name": "insert-interval",
        "tags": [
            "Array"
        ],
        "difficulty": "Medium"
    },
    "58": {
        "name": "length-of-last-word",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "59": {
        "name": "spiral-matrix-ii",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "60": {
        "name": "permutation-sequence",
        "tags": [
            "Math",
            "Recursion"
        ],
        "difficulty": "Hard"
    },
    "61": {
        "name": "rotate-list",
        "tags": [
            "Linked List",
            "Two Pointers"
        ],
        "difficulty": "Medium"
    },
    "65": {
        "name": "valid-number",
        "tags": [
            "String"
        ],
        "difficulty": "Hard"
    },
    "62": {
        "name": "unique-paths",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "difficulty": "Medium"
    },
    "63": {
        "name": "unique-paths-ii",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "64": {
        "name": "minimum-path-sum",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "66": {
        "name": "plus-one",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Easy"
    },
    "67": {
        "name": "add-binary",
        "tags": [
            "Math",
            "String",
            "Bit Manipulation",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "68": {
        "name": "text-justification",
        "tags": [
            "Array",
            "String",
            "Simulation"
        ],
        "difficulty": "Hard"
    },
    "69": {
        "name": "sqrt(x)",
        "tags": [],
        "difficulty": null
    },
    "73": {
        "name": "set-matrix-zeroes",
        "tags": [
            "Array",
            "Hash Table",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "71": {
        "name": "simplify-path",
        "tags": [
            "String",
            "Stack"
        ],
        "difficulty": "Medium"
    },
    "70": {
        "name": "climbing-stairs",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Memoization"
        ],
        "difficulty": "Easy"
    },
    "72": {
        "name": "edit-distance",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "74": {
        "name": "search-a-2d-matrix",
        "tags": [
            "Array",
            "Binary Search",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "75": {
        "name": "sort-colors",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "76": {
        "name": "minimum-window-substring",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "difficulty": "Hard"
    },
    "78": {
        "name": "subsets",
        "tags": [
            "Array",
            "Backtracking",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "79": {
        "name": "word-search",
        "tags": [
            "Array",
            "String",
            "Backtracking",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "77": {
        "name": "combinations",
        "tags": [
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "80": {
        "name": "remove-duplicates-from-sorted-array-ii",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "difficulty": "Medium"
    },
    "81": {
        "name": "search-in-rotated-sorted-array-ii",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "82": {
        "name": "remove-duplicates-from-sorted-list-ii",
        "tags": [
            "Linked List",
            "Two Pointers"
        ],
        "difficulty": "Medium"
    },
    "87": {
        "name": "scramble-string",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "86": {
        "name": "partition-list",
        "tags": [
            "Linked List",
            "Two Pointers"
        ],
        "difficulty": "Medium"
    },
    "83": {
        "name": "remove-duplicates-from-sorted-list",
        "tags": [
            "Linked List"
        ],
        "difficulty": "Easy"
    },
    "85": {
        "name": "maximal-rectangle",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Stack",
            "Matrix",
            "Monotonic Stack"
        ],
        "difficulty": "Hard"
    },
    "84": {
        "name": "largest-rectangle-in-histogram",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ],
        "difficulty": "Hard"
    },
    "89": {
        "name": "gray-code",
        "tags": [
            "Math",
            "Backtracking",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "90": {
        "name": "subsets-ii",
        "tags": [
            "Array",
            "Backtracking",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "88": {
        "name": "merge-sorted-array",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "91": {
        "name": "decode-ways",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "92": {
        "name": "reverse-linked-list-ii",
        "tags": [
            "Linked List"
        ],
        "difficulty": "Medium"
    },
    "94": {
        "name": "binary-tree-inorder-traversal",
        "tags": [
            "Stack",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "93": {
        "name": "restore-ip-addresses",
        "tags": [
            "String",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "95": {
        "name": "unique-binary-search-trees-ii",
        "tags": [
            "Dynamic Programming",
            "Backtracking",
            "Tree",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "96": {
        "name": "unique-binary-search-trees",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Tree",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "98": {
        "name": "validate-binary-search-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "99": {
        "name": "recover-binary-search-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "97": {
        "name": "interleaving-string",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "100": {
        "name": "same-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "101": {
        "name": "symmetric-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "103": {
        "name": "binary-tree-zigzag-level-order-traversal",
        "tags": [
            "Tree",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "104": {
        "name": "maximum-depth-of-binary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "105": {
        "name": "construct-binary-tree-from-preorder-and-inorder-traversal",
        "tags": [
            "Array",
            "Hash Table",
            "Divide and Conquer",
            "Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "107": {
        "name": "binary-tree-level-order-traversal-ii",
        "tags": [
            "Tree",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "102": {
        "name": "binary-tree-level-order-traversal",
        "tags": [
            "Tree",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "106": {
        "name": "construct-binary-tree-from-inorder-and-postorder-traversal",
        "tags": [
            "Array",
            "Hash Table",
            "Divide and Conquer",
            "Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "108": {
        "name": "convert-sorted-array-to-binary-search-tree",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Tree",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "109": {
        "name": "convert-sorted-list-to-binary-search-tree",
        "tags": [
            "Linked List",
            "Divide and Conquer",
            "Tree",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "110": {
        "name": "balanced-binary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "115": {
        "name": "distinct-subsequences",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "114": {
        "name": "flatten-binary-tree-to-linked-list",
        "tags": [
            "Linked List",
            "Stack",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "111": {
        "name": "minimum-depth-of-binary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "112": {
        "name": "path-sum",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "116": {
        "name": "populating-next-right-pointers-in-each-node",
        "tags": [
            "Linked List",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "113": {
        "name": "path-sum-ii",
        "tags": [
            "Backtracking",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "117": {
        "name": "populating-next-right-pointers-in-each-node-ii",
        "tags": [
            "Linked List",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "119": {
        "name": "pascal's-triangle-ii",
        "tags": [],
        "difficulty": null
    },
    "118": {
        "name": "pascal's-triangle",
        "tags": [],
        "difficulty": null
    },
    "120": {
        "name": "triangle",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "123": {
        "name": "best-time-to-buy-and-sell-stock-iii",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "121": {
        "name": "best-time-to-buy-and-sell-stock",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Easy"
    },
    "122": {
        "name": "best-time-to-buy-and-sell-stock-ii",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "124": {
        "name": "binary-tree-maximum-path-sum",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Hard"
    },
    "126": {
        "name": "word-ladder-ii",
        "tags": [
            "Hash Table",
            "String",
            "Backtracking",
            "Breadth-First Search"
        ],
        "difficulty": "Hard"
    },
    "125": {
        "name": "valid-palindrome",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Easy"
    },
    "127": {
        "name": "word-ladder",
        "tags": [
            "Hash Table",
            "String",
            "Breadth-First Search"
        ],
        "difficulty": "Hard"
    },
    "128": {
        "name": "longest-consecutive-sequence",
        "tags": [
            "Array",
            "Hash Table",
            "Union Find"
        ],
        "difficulty": "Medium"
    },
    "130": {
        "name": "surrounded-regions",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "129": {
        "name": "sum-root-to-leaf-numbers",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "131": {
        "name": "palindrome-partitioning",
        "tags": [
            "String",
            "Dynamic Programming",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "132": {
        "name": "palindrome-partitioning-ii",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "133": {
        "name": "clone-graph",
        "tags": [
            "Hash Table",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "134": {
        "name": "gas-station",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "135": {
        "name": "candy",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Hard"
    },
    "138": {
        "name": "copy-list-with-random-pointer",
        "tags": [
            "Hash Table",
            "Linked List"
        ],
        "difficulty": "Medium"
    },
    "139": {
        "name": "word-break",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Dynamic Programming",
            "Trie",
            "Memoization"
        ],
        "difficulty": "Medium"
    },
    "136": {
        "name": "single-number",
        "tags": [
            "Array",
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "140": {
        "name": "word-break-ii",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Dynamic Programming",
            "Backtracking",
            "Trie",
            "Memoization"
        ],
        "difficulty": "Hard"
    },
    "137": {
        "name": "single-number-ii",
        "tags": [
            "Array",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "141": {
        "name": "linked-list-cycle",
        "tags": [
            "Hash Table",
            "Linked List",
            "Two Pointers"
        ],
        "difficulty": "Easy"
    },
    "142": {
        "name": "linked-list-cycle-ii",
        "tags": [
            "Hash Table",
            "Linked List",
            "Two Pointers"
        ],
        "difficulty": "Medium"
    },
    "143": {
        "name": "reorder-list",
        "tags": [
            "Linked List",
            "Two Pointers",
            "Stack",
            "Recursion"
        ],
        "difficulty": "Medium"
    },
    "145": {
        "name": "binary-tree-postorder-traversal",
        "tags": [
            "Stack",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "144": {
        "name": "binary-tree-preorder-traversal",
        "tags": [
            "Stack",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "149": {
        "name": "max-points-on-a-line",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Geometry"
        ],
        "difficulty": "Hard"
    },
    "147": {
        "name": "insertion-sort-list",
        "tags": [
            "Linked List",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "146": {
        "name": "lru-cache",
        "tags": [
            "Hash Table",
            "Linked List",
            "Design",
            "Doubly-Linked List"
        ],
        "difficulty": "Medium"
    },
    "148": {
        "name": "sort-list",
        "tags": [
            "Linked List",
            "Two Pointers",
            "Divide and Conquer",
            "Sorting",
            "Merge Sort"
        ],
        "difficulty": "Medium"
    },
    "150": {
        "name": "evaluate-reverse-polish-notation",
        "tags": [
            "Array",
            "Math",
            "Stack"
        ],
        "difficulty": "Medium"
    },
    "153": {
        "name": "find-minimum-in-rotated-sorted-array",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "151": {
        "name": "reverse-words-in-a-string",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Medium"
    },
    "152": {
        "name": "maximum-product-subarray",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "154": {
        "name": "find-minimum-in-rotated-sorted-array-ii",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Hard"
    },
    "156": {
        "name": "binary-tree-upside-down",
        "tags": [],
        "difficulty": null
    },
    "155": {
        "name": "min-stack",
        "tags": [
            "Stack",
            "Design"
        ],
        "difficulty": "Medium"
    },
    "158": {
        "name": "read-n-characters-given-read4-ii---call-multiple-times",
        "tags": [],
        "difficulty": null
    },
    "157": {
        "name": "read-n-characters-given-read4",
        "tags": [],
        "difficulty": null
    },
    "161": {
        "name": "one-edit-distance",
        "tags": [],
        "difficulty": null
    },
    "160": {
        "name": "intersection-of-two-linked-lists",
        "tags": [
            "Hash Table",
            "Linked List",
            "Two Pointers"
        ],
        "difficulty": "Easy"
    },
    "159": {
        "name": "longest-substring-with-at-most-two-distinct-characters",
        "tags": [],
        "difficulty": null
    },
    "163": {
        "name": "missing-ranges",
        "tags": [],
        "difficulty": null
    },
    "162": {
        "name": "find-peak-element",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "165": {
        "name": "compare-version-numbers",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Medium"
    },
    "164": {
        "name": "maximum-gap",
        "tags": [
            "Array",
            "Sorting",
            "Bucket Sort",
            "Radix Sort"
        ],
        "difficulty": "Medium"
    },
    "166": {
        "name": "fraction-to-recurring-decimal",
        "tags": [
            "Hash Table",
            "Math",
            "String"
        ],
        "difficulty": "Medium"
    },
    "167": {
        "name": "two-sum-ii---input-array-is-sorted",
        "tags": [],
        "difficulty": null
    },
    "168": {
        "name": "excel-sheet-column-title",
        "tags": [
            "Math",
            "String"
        ],
        "difficulty": "Easy"
    },
    "169": {
        "name": "majority-element",
        "tags": [
            "Array",
            "Hash Table",
            "Divide and Conquer",
            "Sorting",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "172": {
        "name": "factorial-trailing-zeroes",
        "tags": [
            "Math"
        ],
        "difficulty": "Medium"
    },
    "173": {
        "name": "binary-search-tree-iterator",
        "tags": [
            "Stack",
            "Tree",
            "Design",
            "Binary Search Tree",
            "Binary Tree",
            "Iterator"
        ],
        "difficulty": "Medium"
    },
    "174": {
        "name": "dungeon-game",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "170": {
        "name": "two-sum-iii---data-structure-design",
        "tags": [],
        "difficulty": null
    },
    "171": {
        "name": "excel-sheet-column-number",
        "tags": [
            "Math",
            "String"
        ],
        "difficulty": "Easy"
    },
    "177": {
        "name": "nth-highest-salary",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "176": {
        "name": "second-highest-salary",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "175": {
        "name": "combine-two-tables",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "180": {
        "name": "consecutive-numbers",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "182": {
        "name": "duplicate-emails",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "181": {
        "name": "employees-earning-more-than-their-managers",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "179": {
        "name": "largest-number",
        "tags": [
            "Array",
            "String",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "178": {
        "name": "rank-scores",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "183": {
        "name": "customers-who-never-order",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "184": {
        "name": "department-highest-salary",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "185": {
        "name": "department-top-three-salaries",
        "tags": [
            "Database"
        ],
        "difficulty": "Hard"
    },
    "187": {
        "name": "repeated-dna-sequences",
        "tags": [
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Sliding Window",
            "Rolling Hash",
            "Hash Function"
        ],
        "difficulty": "Medium"
    },
    "189": {
        "name": "rotate-array",
        "tags": [
            "Array",
            "Math",
            "Two Pointers"
        ],
        "difficulty": "Medium"
    },
    "188": {
        "name": "best-time-to-buy-and-sell-stock-iv",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "190": {
        "name": "reverse-bits",
        "tags": [
            "Divide and Conquer",
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "186": {
        "name": "reverse-words-in-a-string-ii",
        "tags": [],
        "difficulty": null
    },
    "193": {
        "name": "valid-phone-numbers",
        "tags": [
            "Shell"
        ],
        "difficulty": "Easy"
    },
    "191": {
        "name": "number-of-1-bits",
        "tags": [
            "Divide and Conquer",
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "194": {
        "name": "transpose-file",
        "tags": [
            "Shell"
        ],
        "difficulty": "Medium"
    },
    "192": {
        "name": "word-frequency",
        "tags": [
            "Shell"
        ],
        "difficulty": "Medium"
    },
    "195": {
        "name": "tenth-line",
        "tags": [
            "Shell"
        ],
        "difficulty": "Easy"
    },
    "196": {
        "name": "delete-duplicate-emails",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "201": {
        "name": "bitwise-and-of-numbers-range",
        "tags": [
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "198": {
        "name": "house-robber",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "197": {
        "name": "rising-temperature",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "200": {
        "name": "number-of-islands",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "203": {
        "name": "remove-linked-list-elements",
        "tags": [
            "Linked List",
            "Recursion"
        ],
        "difficulty": "Easy"
    },
    "202": {
        "name": "happy-number",
        "tags": [
            "Hash Table",
            "Math",
            "Two Pointers"
        ],
        "difficulty": "Easy"
    },
    "204": {
        "name": "count-primes",
        "tags": [
            "Array",
            "Math",
            "Enumeration",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "199": {
        "name": "binary-tree-right-side-view",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "205": {
        "name": "isomorphic-strings",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "209": {
        "name": "minimum-size-subarray-sum",
        "tags": [
            "Array",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "207": {
        "name": "course-schedule",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ],
        "difficulty": "Medium"
    },
    "208": {
        "name": "implement-trie-(prefix-tree)",
        "tags": [],
        "difficulty": null
    },
    "212": {
        "name": "word-search-ii",
        "tags": [
            "Array",
            "String",
            "Backtracking",
            "Trie",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "206": {
        "name": "reverse-linked-list",
        "tags": [
            "Linked List",
            "Recursion"
        ],
        "difficulty": "Easy"
    },
    "213": {
        "name": "house-robber-ii",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "211": {
        "name": "design-add-and-search-words-data-structure",
        "tags": [
            "String",
            "Depth-First Search",
            "Design",
            "Trie"
        ],
        "difficulty": "Medium"
    },
    "210": {
        "name": "course-schedule-ii",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ],
        "difficulty": "Medium"
    },
    "216": {
        "name": "combination-sum-iii",
        "tags": [
            "Array",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "217": {
        "name": "contains-duplicate",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "219": {
        "name": "contains-duplicate-ii",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ],
        "difficulty": "Easy"
    },
    "214": {
        "name": "shortest-palindrome",
        "tags": [
            "String",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ],
        "difficulty": "Hard"
    },
    "215": {
        "name": "kth-largest-element-in-an-array",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Sorting",
            "Heap (Priority Queue)",
            "Quickselect"
        ],
        "difficulty": "Medium"
    },
    "220": {
        "name": "contains-duplicate-iii",
        "tags": [
            "Array",
            "Sliding Window",
            "Sorting",
            "Bucket Sort",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "218": {
        "name": "the-skyline-problem",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Binary Indexed Tree",
            "Segment Tree",
            "Line Sweep",
            "Heap (Priority Queue)",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "227": {
        "name": "basic-calculator-ii",
        "tags": [
            "Math",
            "String",
            "Stack"
        ],
        "difficulty": "Medium"
    },
    "228": {
        "name": "summary-ranges",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "225": {
        "name": "implement-stack-using-queues",
        "tags": [
            "Stack",
            "Design",
            "Queue"
        ],
        "difficulty": "Easy"
    },
    "223": {
        "name": "rectangle-area",
        "tags": [
            "Math",
            "Geometry"
        ],
        "difficulty": "Medium"
    },
    "221": {
        "name": "maximal-square",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "226": {
        "name": "invert-binary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "224": {
        "name": "basic-calculator",
        "tags": [
            "Math",
            "String",
            "Stack",
            "Recursion"
        ],
        "difficulty": "Hard"
    },
    "222": {
        "name": "count-complete-tree-nodes",
        "tags": [
            "Binary Search",
            "Bit Manipulation",
            "Tree",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "233": {
        "name": "number-of-digit-one",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Recursion"
        ],
        "difficulty": "Hard"
    },
    "234": {
        "name": "palindrome-linked-list",
        "tags": [
            "Linked List",
            "Two Pointers",
            "Stack",
            "Recursion"
        ],
        "difficulty": "Easy"
    },
    "231": {
        "name": "power-of-two",
        "tags": [
            "Math",
            "Bit Manipulation",
            "Recursion"
        ],
        "difficulty": "Easy"
    },
    "236": {
        "name": "lowest-common-ancestor-of-a-binary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "229": {
        "name": "majority-element-ii",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "235": {
        "name": "lowest-common-ancestor-of-a-binary-search-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "230": {
        "name": "kth-smallest-element-in-a-bst",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "232": {
        "name": "implement-queue-using-stacks",
        "tags": [
            "Stack",
            "Design",
            "Queue"
        ],
        "difficulty": "Easy"
    },
    "237": {
        "name": "delete-node-in-a-linked-list",
        "tags": [
            "Linked List"
        ],
        "difficulty": "Medium"
    },
    "244": {
        "name": "shortest-word-distance-ii",
        "tags": [],
        "difficulty": null
    },
    "243": {
        "name": "shortest-word-distance",
        "tags": [],
        "difficulty": null
    },
    "242": {
        "name": "valid-anagram",
        "tags": [
            "Hash Table",
            "String",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "241": {
        "name": "different-ways-to-add-parentheses",
        "tags": [
            "Math",
            "String",
            "Dynamic Programming",
            "Recursion",
            "Memoization"
        ],
        "difficulty": "Medium"
    },
    "240": {
        "name": "search-a-2d-matrix-ii",
        "tags": [
            "Array",
            "Binary Search",
            "Divide and Conquer",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "238": {
        "name": "product-of-array-except-self",
        "tags": [
            "Array",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "239": {
        "name": "sliding-window-maximum",
        "tags": [
            "Array",
            "Queue",
            "Sliding Window",
            "Heap (Priority Queue)",
            "Monotonic Queue"
        ],
        "difficulty": "Hard"
    },
    "245": {
        "name": "shortest-word-distance-iii",
        "tags": [],
        "difficulty": null
    },
    "248": {
        "name": "strobogrammatic-number-iii",
        "tags": [],
        "difficulty": null
    },
    "251": {
        "name": "flatten-2d-vector",
        "tags": [],
        "difficulty": null
    },
    "250": {
        "name": "count-univalue-subtrees",
        "tags": [],
        "difficulty": null
    },
    "249": {
        "name": "group-shifted-strings",
        "tags": [],
        "difficulty": null
    },
    "246": {
        "name": "strobogrammatic-number",
        "tags": [],
        "difficulty": null
    },
    "247": {
        "name": "strobogrammatic-number-ii",
        "tags": [],
        "difficulty": null
    },
    "252": {
        "name": "meeting-rooms",
        "tags": [],
        "difficulty": null
    },
    "255": {
        "name": "verify-preorder-sequence-in-binary-search-tree",
        "tags": [],
        "difficulty": null
    },
    "256": {
        "name": "paint-house",
        "tags": [],
        "difficulty": null
    },
    "258": {
        "name": "add-digits",
        "tags": [
            "Math",
            "Simulation",
            "Number Theory"
        ],
        "difficulty": "Easy"
    },
    "257": {
        "name": "binary-tree-paths",
        "tags": [
            "String",
            "Backtracking",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "259": {
        "name": "3sum-smaller",
        "tags": [],
        "difficulty": null
    },
    "254": {
        "name": "factor-combinations",
        "tags": [],
        "difficulty": null
    },
    "253": {
        "name": "meeting-rooms-ii",
        "tags": [],
        "difficulty": null
    },
    "261": {
        "name": "graph-valid-tree",
        "tags": [],
        "difficulty": null
    },
    "262": {
        "name": "trips-and-users",
        "tags": [
            "Database"
        ],
        "difficulty": "Hard"
    },
    "260": {
        "name": "single-number-iii",
        "tags": [
            "Array",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "264": {
        "name": "ugly-number-ii",
        "tags": [
            "Hash Table",
            "Math",
            "Dynamic Programming",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "263": {
        "name": "ugly-number",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "265": {
        "name": "paint-house-ii",
        "tags": [],
        "difficulty": null
    },
    "267": {
        "name": "palindrome-permutation-ii",
        "tags": [],
        "difficulty": null
    },
    "266": {
        "name": "palindrome-permutation",
        "tags": [],
        "difficulty": null
    },
    "269": {
        "name": "alien-dictionary",
        "tags": [],
        "difficulty": null
    },
    "272": {
        "name": "closest-binary-search-tree-value-ii",
        "tags": [],
        "difficulty": null
    },
    "271": {
        "name": "encode-and-decode-strings",
        "tags": [],
        "difficulty": null
    },
    "268": {
        "name": "missing-number",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Binary Search",
            "Bit Manipulation",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "270": {
        "name": "closest-binary-search-tree-value",
        "tags": [],
        "difficulty": null
    },
    "275": {
        "name": "h-index-ii",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "274": {
        "name": "h-index",
        "tags": [
            "Array",
            "Sorting",
            "Counting Sort"
        ],
        "difficulty": "Medium"
    },
    "273": {
        "name": "integer-to-english-words",
        "tags": [
            "Math",
            "String",
            "Recursion"
        ],
        "difficulty": "Hard"
    },
    "276": {
        "name": "paint-fence",
        "tags": [],
        "difficulty": null
    },
    "277": {
        "name": "find-the-celebrity",
        "tags": [],
        "difficulty": null
    },
    "279": {
        "name": "perfect-squares",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Breadth-First Search"
        ],
        "difficulty": "Medium"
    },
    "278": {
        "name": "first-bad-version",
        "tags": [
            "Binary Search",
            "Interactive"
        ],
        "difficulty": "Easy"
    },
    "280": {
        "name": "wiggle-sort",
        "tags": [],
        "difficulty": null
    },
    "282": {
        "name": "expression-add-operators",
        "tags": [
            "Math",
            "String",
            "Backtracking"
        ],
        "difficulty": "Hard"
    },
    "284": {
        "name": "peeking-iterator",
        "tags": [
            "Array",
            "Design",
            "Iterator"
        ],
        "difficulty": "Medium"
    },
    "281": {
        "name": "zigzag-iterator",
        "tags": [],
        "difficulty": null
    },
    "283": {
        "name": "move-zeroes",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "difficulty": "Easy"
    },
    "285": {
        "name": "inorder-successor-in-bst",
        "tags": [],
        "difficulty": null
    },
    "288": {
        "name": "unique-word-abbreviation",
        "tags": [],
        "difficulty": null
    },
    "286": {
        "name": "walls-and-gates",
        "tags": [],
        "difficulty": null
    },
    "287": {
        "name": "find-the-duplicate-number",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "296": {
        "name": "best-meeting-point",
        "tags": [],
        "difficulty": null
    },
    "291": {
        "name": "word-pattern-ii",
        "tags": [],
        "difficulty": null
    },
    "292": {
        "name": "nim-game",
        "tags": [
            "Math",
            "Brainteaser",
            "Game Theory"
        ],
        "difficulty": "Easy"
    },
    "290": {
        "name": "word-pattern",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "293": {
        "name": "flip-game",
        "tags": [],
        "difficulty": null
    },
    "294": {
        "name": "flip-game-ii",
        "tags": [],
        "difficulty": null
    },
    "295": {
        "name": "find-median-from-data-stream",
        "tags": [
            "Two Pointers",
            "Design",
            "Sorting",
            "Heap (Priority Queue)",
            "Data Stream"
        ],
        "difficulty": "Hard"
    },
    "289": {
        "name": "game-of-life",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "298": {
        "name": "binary-tree-longest-consecutive-sequence",
        "tags": [],
        "difficulty": null
    },
    "301": {
        "name": "remove-invalid-parentheses",
        "tags": [
            "String",
            "Backtracking",
            "Breadth-First Search"
        ],
        "difficulty": "Hard"
    },
    "300": {
        "name": "longest-increasing-subsequence",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "299": {
        "name": "bulls-and-cows",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "297": {
        "name": "serialize-and-deserialize-binary-tree",
        "tags": [
            "String",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Design",
            "Binary Tree"
        ],
        "difficulty": "Hard"
    },
    "302": {
        "name": "smallest-rectangle-enclosing-black-pixels",
        "tags": [],
        "difficulty": null
    },
    "303": {
        "name": "range-sum-query---immutable",
        "tags": [],
        "difficulty": null
    },
    "304": {
        "name": "range-sum-query-2d---immutable",
        "tags": [],
        "difficulty": null
    },
    "306": {
        "name": "additive-number",
        "tags": [
            "String",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "305": {
        "name": "number-of-islands-ii",
        "tags": [],
        "difficulty": null
    },
    "307": {
        "name": "range-sum-query---mutable",
        "tags": [],
        "difficulty": null
    },
    "309": {
        "name": "best-time-to-buy-and-sell-stock-with-cooldown",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "308": {
        "name": "range-sum-query-2d---mutable",
        "tags": [],
        "difficulty": null
    },
    "311": {
        "name": "sparse-matrix-multiplication",
        "tags": [],
        "difficulty": null
    },
    "312": {
        "name": "burst-balloons",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "314": {
        "name": "binary-tree-vertical-order-traversal",
        "tags": [],
        "difficulty": null
    },
    "313": {
        "name": "super-ugly-number",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "310": {
        "name": "minimum-height-trees",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ],
        "difficulty": "Medium"
    },
    "315": {
        "name": "count-of-smaller-numbers-after-self",
        "tags": [
            "Array",
            "Binary Search",
            "Divide and Conquer",
            "Binary Indexed Tree",
            "Segment Tree",
            "Merge Sort",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "317": {
        "name": "shortest-distance-from-all-buildings",
        "tags": [],
        "difficulty": null
    },
    "316": {
        "name": "remove-duplicate-letters",
        "tags": [
            "String",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "319": {
        "name": "bulb-switcher",
        "tags": [
            "Math",
            "Brainteaser"
        ],
        "difficulty": "Medium"
    },
    "318": {
        "name": "maximum-product-of-word-lengths",
        "tags": [
            "Array",
            "String",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "322": {
        "name": "coin-change",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Breadth-First Search"
        ],
        "difficulty": "Medium"
    },
    "321": {
        "name": "create-maximum-number",
        "tags": [
            "Array",
            "Two Pointers",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ],
        "difficulty": "Hard"
    },
    "320": {
        "name": "generalized-abbreviation",
        "tags": [],
        "difficulty": null
    },
    "325": {
        "name": "maximum-size-subarray-sum-equals-k",
        "tags": [],
        "difficulty": null
    },
    "324": {
        "name": "wiggle-sort-ii",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Greedy",
            "Sorting",
            "Quickselect"
        ],
        "difficulty": "Medium"
    },
    "323": {
        "name": "number-of-connected-components-in-an-undirected-graph",
        "tags": [],
        "difficulty": null
    },
    "329": {
        "name": "longest-increasing-path-in-a-matrix",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort",
            "Memoization",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "328": {
        "name": "odd-even-linked-list",
        "tags": [
            "Linked List"
        ],
        "difficulty": "Medium"
    },
    "327": {
        "name": "count-of-range-sum",
        "tags": [
            "Array",
            "Binary Search",
            "Divide and Conquer",
            "Binary Indexed Tree",
            "Segment Tree",
            "Merge Sort",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "330": {
        "name": "patching-array",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Hard"
    },
    "333": {
        "name": "largest-bst-subtree",
        "tags": [],
        "difficulty": null
    },
    "331": {
        "name": "verify-preorder-serialization-of-a-binary-tree",
        "tags": [
            "String",
            "Stack",
            "Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "326": {
        "name": "power-of-three",
        "tags": [
            "Math",
            "Recursion"
        ],
        "difficulty": "Easy"
    },
    "332": {
        "name": "reconstruct-itinerary",
        "tags": [
            "Depth-First Search",
            "Graph",
            "Eulerian Circuit"
        ],
        "difficulty": "Hard"
    },
    "334": {
        "name": "increasing-triplet-subsequence",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "336": {
        "name": "palindrome-pairs",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Trie"
        ],
        "difficulty": "Hard"
    },
    "337": {
        "name": "house-robber-iii",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "335": {
        "name": "self-crossing",
        "tags": [
            "Array",
            "Math",
            "Geometry"
        ],
        "difficulty": "Hard"
    },
    "340": {
        "name": "longest-substring-with-at-most-k-distinct-characters",
        "tags": [],
        "difficulty": null
    },
    "338": {
        "name": "counting-bits",
        "tags": [
            "Dynamic Programming",
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "341": {
        "name": "flatten-nested-list-iterator",
        "tags": [
            "Stack",
            "Tree",
            "Depth-First Search",
            "Design",
            "Queue",
            "Iterator"
        ],
        "difficulty": "Medium"
    },
    "339": {
        "name": "nested-list-weight-sum",
        "tags": [],
        "difficulty": null
    },
    "345": {
        "name": "reverse-vowels-of-a-string",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Easy"
    },
    "343": {
        "name": "integer-break",
        "tags": [
            "Math",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "344": {
        "name": "reverse-string",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Easy"
    },
    "342": {
        "name": "power-of-four",
        "tags": [
            "Math",
            "Bit Manipulation",
            "Recursion"
        ],
        "difficulty": "Easy"
    },
    "348": {
        "name": "design-tic-tac-toe",
        "tags": [],
        "difficulty": null
    },
    "346": {
        "name": "moving-average-from-data-stream",
        "tags": [],
        "difficulty": null
    },
    "353": {
        "name": "design-snake-game",
        "tags": [],
        "difficulty": null
    },
    "351": {
        "name": "android-unlock-patterns",
        "tags": [],
        "difficulty": null
    },
    "347": {
        "name": "top-k-frequent-elements",
        "tags": [
            "Array",
            "Hash Table",
            "Divide and Conquer",
            "Sorting",
            "Heap (Priority Queue)",
            "Bucket Sort",
            "Counting",
            "Quickselect"
        ],
        "difficulty": "Medium"
    },
    "350": {
        "name": "intersection-of-two-arrays-ii",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "352": {
        "name": "data-stream-as-disjoint-intervals",
        "tags": [
            "Binary Search",
            "Design",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "349": {
        "name": "intersection-of-two-arrays",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "355": {
        "name": "design-twitter",
        "tags": [
            "Hash Table",
            "Linked List",
            "Design",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "356": {
        "name": "line-reflection",
        "tags": [],
        "difficulty": null
    },
    "361": {
        "name": "bomb-enemy",
        "tags": [],
        "difficulty": null
    },
    "360": {
        "name": "sort-transformed-array",
        "tags": [],
        "difficulty": null
    },
    "359": {
        "name": "logger-rate-limiter",
        "tags": [],
        "difficulty": null
    },
    "358": {
        "name": "rearrange-string-k-distance-apart",
        "tags": [],
        "difficulty": null
    },
    "354": {
        "name": "russian-doll-envelopes",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "357": {
        "name": "count-numbers-with-unique-digits",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "362": {
        "name": "design-hit-counter",
        "tags": [],
        "difficulty": null
    },
    "368": {
        "name": "largest-divisible-subset",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "367": {
        "name": "valid-perfect-square",
        "tags": [
            "Math",
            "Binary Search"
        ],
        "difficulty": "Easy"
    },
    "365": {
        "name": "water-and-jug-problem",
        "tags": [
            "Math",
            "Depth-First Search",
            "Breadth-First Search"
        ],
        "difficulty": "Medium"
    },
    "364": {
        "name": "nested-list-weight-sum-ii",
        "tags": [],
        "difficulty": null
    },
    "363": {
        "name": "max-sum-of-rectangle-no-larger-than-k",
        "tags": [
            "Array",
            "Binary Search",
            "Matrix",
            "Prefix Sum",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "369": {
        "name": "plus-one-linked-list",
        "tags": [],
        "difficulty": null
    },
    "366": {
        "name": "find-leaves-of-binary-tree",
        "tags": [],
        "difficulty": null
    },
    "370": {
        "name": "range-addition",
        "tags": [],
        "difficulty": null
    },
    "373": {
        "name": "find-k-pairs-with-smallest-sums",
        "tags": [
            "Array",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "371": {
        "name": "sum-of-two-integers",
        "tags": [
            "Math",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "372": {
        "name": "super-pow",
        "tags": [
            "Math",
            "Divide and Conquer"
        ],
        "difficulty": "Medium"
    },
    "377": {
        "name": "combination-sum-iv",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "378": {
        "name": "kth-smallest-element-in-a-sorted-matrix",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "375": {
        "name": "guess-number-higher-or-lower-ii",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Game Theory"
        ],
        "difficulty": "Medium"
    },
    "376": {
        "name": "wiggle-subsequence",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "374": {
        "name": "guess-number-higher-or-lower",
        "tags": [
            "Binary Search",
            "Interactive"
        ],
        "difficulty": "Easy"
    },
    "379": {
        "name": "design-phone-directory",
        "tags": [],
        "difficulty": null
    },
    "380": {
        "name": "insert-delete-getrandom-o(1)",
        "tags": [],
        "difficulty": null
    },
    "381": {
        "name": "insert-delete-getrandom-o(1)---duplicates-allowed",
        "tags": [],
        "difficulty": null
    },
    "385": {
        "name": "mini-parser",
        "tags": [
            "String",
            "Stack",
            "Depth-First Search"
        ],
        "difficulty": "Medium"
    },
    "386": {
        "name": "lexicographical-numbers",
        "tags": [
            "Depth-First Search",
            "Trie"
        ],
        "difficulty": "Medium"
    },
    "382": {
        "name": "linked-list-random-node",
        "tags": [
            "Linked List",
            "Math",
            "Reservoir Sampling",
            "Randomized"
        ],
        "difficulty": "Medium"
    },
    "383": {
        "name": "ransom-note",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "384": {
        "name": "shuffle-an-array",
        "tags": [
            "Array",
            "Math",
            "Design",
            "Randomized"
        ],
        "difficulty": "Medium"
    },
    "387": {
        "name": "first-unique-character-in-a-string",
        "tags": [
            "Hash Table",
            "String",
            "Queue",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "388": {
        "name": "longest-absolute-file-path",
        "tags": [
            "String",
            "Stack",
            "Depth-First Search"
        ],
        "difficulty": "Medium"
    },
    "389": {
        "name": "find-the-difference",
        "tags": [
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "391": {
        "name": "perfect-rectangle",
        "tags": [
            "Array",
            "Line Sweep"
        ],
        "difficulty": "Hard"
    },
    "394": {
        "name": "decode-string",
        "tags": [
            "String",
            "Stack",
            "Recursion"
        ],
        "difficulty": "Medium"
    },
    "393": {
        "name": "utf-8-validation",
        "tags": [
            "Array",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "390": {
        "name": "elimination-game",
        "tags": [
            "Math",
            "Recursion"
        ],
        "difficulty": "Medium"
    },
    "392": {
        "name": "is-subsequence",
        "tags": [
            "Two Pointers",
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Easy"
    },
    "396": {
        "name": "rotate-function",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "395": {
        "name": "longest-substring-with-at-least-k-repeating-characters",
        "tags": [
            "Hash Table",
            "String",
            "Divide and Conquer",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "398": {
        "name": "random-pick-index",
        "tags": [
            "Hash Table",
            "Math",
            "Reservoir Sampling",
            "Randomized"
        ],
        "difficulty": "Medium"
    },
    "399": {
        "name": "evaluate-division",
        "tags": [
            "Array",
            "String",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph",
            "Shortest Path"
        ],
        "difficulty": "Medium"
    },
    "397": {
        "name": "integer-replacement",
        "tags": [
            "Dynamic Programming",
            "Greedy",
            "Bit Manipulation",
            "Memoization"
        ],
        "difficulty": "Medium"
    },
    "400": {
        "name": "nth-digit",
        "tags": [
            "Math",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "402": {
        "name": "remove-k-digits",
        "tags": [
            "String",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "401": {
        "name": "binary-watch",
        "tags": [
            "Backtracking",
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "407": {
        "name": "trapping-rain-water-ii",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Heap (Priority Queue)",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "405": {
        "name": "convert-a-number-to-hexadecimal",
        "tags": [
            "Math",
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "403": {
        "name": "frog-jump",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "404": {
        "name": "sum-of-left-leaves",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "406": {
        "name": "queue-reconstruction-by-height",
        "tags": [
            "Array",
            "Binary Indexed Tree",
            "Segment Tree",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "408": {
        "name": "valid-word-abbreviation",
        "tags": [],
        "difficulty": null
    },
    "409": {
        "name": "longest-palindrome",
        "tags": [
            "Hash Table",
            "String",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "410": {
        "name": "split-array-largest-sum",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Greedy",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "411": {
        "name": "minimum-unique-word-abbreviation",
        "tags": [],
        "difficulty": null
    },
    "413": {
        "name": "arithmetic-slices",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "415": {
        "name": "add-strings",
        "tags": [
            "Math",
            "String",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "412": {
        "name": "fizz-buzz",
        "tags": [
            "Math",
            "String",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "416": {
        "name": "partition-equal-subset-sum",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "414": {
        "name": "third-maximum-number",
        "tags": [
            "Array",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "417": {
        "name": "pacific-atlantic-water-flow",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "418": {
        "name": "sentence-screen-fitting",
        "tags": [],
        "difficulty": null
    },
    "424": {
        "name": "longest-repeating-character-replacement",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "423": {
        "name": "reconstruct-original-digits-from-english",
        "tags": [
            "Hash Table",
            "Math",
            "String"
        ],
        "difficulty": "Medium"
    },
    "425": {
        "name": "word-squares",
        "tags": [],
        "difficulty": null
    },
    "420": {
        "name": "strong-password-checker",
        "tags": [
            "String",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "422": {
        "name": "valid-word-square",
        "tags": [],
        "difficulty": null
    },
    "421": {
        "name": "maximum-xor-of-two-numbers-in-an-array",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation",
            "Trie"
        ],
        "difficulty": "Medium"
    },
    "419": {
        "name": "battleships-in-a-board",
        "tags": [
            "Array",
            "Depth-First Search",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "427": {
        "name": "construct-quad-tree",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Tree",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "428": {
        "name": "serialize-and-deserialize-n-ary-tree",
        "tags": [],
        "difficulty": null
    },
    "426": {
        "name": "convert-binary-search-tree-to-sorted-doubly-linked-list",
        "tags": [],
        "difficulty": null
    },
    "431": {
        "name": "encode-n-ary-tree-to-binary-tree",
        "tags": [],
        "difficulty": null
    },
    "429": {
        "name": "n-ary-tree-level-order-traversal",
        "tags": [
            "Tree",
            "Breadth-First Search"
        ],
        "difficulty": "Medium"
    },
    "433": {
        "name": "minimum-genetic-mutation",
        "tags": [
            "Hash Table",
            "String",
            "Breadth-First Search"
        ],
        "difficulty": "Medium"
    },
    "432": {
        "name": "all-o`one-data-structure",
        "tags": [],
        "difficulty": null
    },
    "430": {
        "name": "flatten-a-multilevel-doubly-linked-list",
        "tags": [
            "Linked List",
            "Depth-First Search",
            "Doubly-Linked List"
        ],
        "difficulty": "Medium"
    },
    "436": {
        "name": "find-right-interval",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "435": {
        "name": "non-overlapping-intervals",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "434": {
        "name": "number-of-segments-in-a-string",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "440": {
        "name": "k-th-smallest-in-lexicographical-order",
        "tags": [
            "Trie"
        ],
        "difficulty": "Hard"
    },
    "439": {
        "name": "ternary-expression-parser",
        "tags": [],
        "difficulty": null
    },
    "437": {
        "name": "path-sum-iii",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "441": {
        "name": "arranging-coins",
        "tags": [
            "Math",
            "Binary Search"
        ],
        "difficulty": "Easy"
    },
    "438": {
        "name": "find-all-anagrams-in-a-string",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "444": {
        "name": "sequence-reconstruction",
        "tags": [],
        "difficulty": null
    },
    "443": {
        "name": "string-compression",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Medium"
    },
    "442": {
        "name": "find-all-duplicates-in-an-array",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Medium"
    },
    "446": {
        "name": "arithmetic-slices-ii---subsequence",
        "tags": [],
        "difficulty": null
    },
    "447": {
        "name": "number-of-boomerangs",
        "tags": [
            "Array",
            "Hash Table",
            "Math"
        ],
        "difficulty": "Medium"
    },
    "445": {
        "name": "add-two-numbers-ii",
        "tags": [
            "Linked List",
            "Math",
            "Stack"
        ],
        "difficulty": "Medium"
    },
    "449": {
        "name": "serialize-and-deserialize-bst",
        "tags": [
            "String",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Design",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "448": {
        "name": "find-all-numbers-disappeared-in-an-array",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Easy"
    },
    "450": {
        "name": "delete-node-in-a-bst",
        "tags": [
            "Tree",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "454": {
        "name": "4sum-ii",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Medium"
    },
    "452": {
        "name": "minimum-number-of-arrows-to-burst-balloons",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "453": {
        "name": "minimum-moves-to-equal-array-elements",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Medium"
    },
    "455": {
        "name": "assign-cookies",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "451": {
        "name": "sort-characters-by-frequency",
        "tags": [
            "Hash Table",
            "String",
            "Sorting",
            "Heap (Priority Queue)",
            "Bucket Sort",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "456": {
        "name": "132-pattern",
        "tags": [
            "Array",
            "Binary Search",
            "Stack",
            "Monotonic Stack",
            "Ordered Set"
        ],
        "difficulty": "Medium"
    },
    "457": {
        "name": "circular-array-loop",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers"
        ],
        "difficulty": "Medium"
    },
    "462": {
        "name": "minimum-moves-to-equal-array-elements-ii",
        "tags": [
            "Array",
            "Math",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "458": {
        "name": "poor-pigs",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "difficulty": "Hard"
    },
    "459": {
        "name": "repeated-substring-pattern",
        "tags": [
            "String",
            "String Matching"
        ],
        "difficulty": "Easy"
    },
    "461": {
        "name": "hamming-distance",
        "tags": [
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "463": {
        "name": "island-perimeter",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "460": {
        "name": "lfu-cache",
        "tags": [
            "Hash Table",
            "Linked List",
            "Design",
            "Doubly-Linked List"
        ],
        "difficulty": "Hard"
    },
    "464": {
        "name": "can-i-win",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Bit Manipulation",
            "Memoization",
            "Game Theory",
            "Bitmask"
        ],
        "difficulty": "Medium"
    },
    "465": {
        "name": "optimal-account-balancing",
        "tags": [],
        "difficulty": null
    },
    "471": {
        "name": "encode-string-with-shortest-length",
        "tags": [],
        "difficulty": null
    },
    "469": {
        "name": "convex-polygon",
        "tags": [],
        "difficulty": null
    },
    "467": {
        "name": "unique-substrings-in-wraparound-string",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "466": {
        "name": "count-the-repetitions",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "472": {
        "name": "concatenated-words",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming",
            "Depth-First Search",
            "Trie"
        ],
        "difficulty": "Hard"
    },
    "473": {
        "name": "matchsticks-to-square",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Medium"
    },
    "470": {
        "name": "implement-rand10()-using-rand7()",
        "tags": [],
        "difficulty": null
    },
    "468": {
        "name": "validate-ip-address",
        "tags": [
            "String"
        ],
        "difficulty": "Medium"
    },
    "479": {
        "name": "largest-palindrome-product",
        "tags": [
            "Math",
            "Enumeration"
        ],
        "difficulty": "Hard"
    },
    "474": {
        "name": "ones-and-zeroes",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "480": {
        "name": "sliding-window-median",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "477": {
        "name": "total-hamming-distance",
        "tags": [
            "Array",
            "Math",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "476": {
        "name": "number-complement",
        "tags": [
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "478": {
        "name": "generate-random-point-in-a-circle",
        "tags": [
            "Math",
            "Geometry",
            "Rejection Sampling",
            "Randomized"
        ],
        "difficulty": "Medium"
    },
    "475": {
        "name": "heaters",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "481": {
        "name": "magical-string",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Medium"
    },
    "483": {
        "name": "smallest-good-base",
        "tags": [
            "Math",
            "Binary Search"
        ],
        "difficulty": "Hard"
    },
    "485": {
        "name": "max-consecutive-ones",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "486": {
        "name": "predict-the-winner",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Recursion",
            "Game Theory"
        ],
        "difficulty": "Medium"
    },
    "489": {
        "name": "robot-room-cleaner",
        "tags": [],
        "difficulty": null
    },
    "482": {
        "name": "license-key-formatting",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "488": {
        "name": "zuma-game",
        "tags": [
            "String",
            "Dynamic Programming",
            "Stack",
            "Breadth-First Search",
            "Memoization"
        ],
        "difficulty": "Hard"
    },
    "487": {
        "name": "max-consecutive-ones-ii",
        "tags": [],
        "difficulty": null
    },
    "484": {
        "name": "find-permutation",
        "tags": [],
        "difficulty": null
    },
    "491": {
        "name": "non-decreasing-subsequences",
        "tags": [
            "Array",
            "Hash Table",
            "Backtracking",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "490": {
        "name": "the-maze",
        "tags": [],
        "difficulty": null
    },
    "492": {
        "name": "construct-the-rectangle",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "494": {
        "name": "target-sum",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "496": {
        "name": "next-greater-element-i",
        "tags": [
            "Array",
            "Hash Table",
            "Stack",
            "Monotonic Stack"
        ],
        "difficulty": "Easy"
    },
    "493": {
        "name": "reverse-pairs",
        "tags": [
            "Array",
            "Binary Search",
            "Divide and Conquer",
            "Binary Indexed Tree",
            "Segment Tree",
            "Merge Sort",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "495": {
        "name": "teemo-attacking",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "497": {
        "name": "random-point-in-non-overlapping-rectangles",
        "tags": [
            "Array",
            "Math",
            "Binary Search",
            "Reservoir Sampling",
            "Prefix Sum",
            "Ordered Set",
            "Randomized"
        ],
        "difficulty": "Medium"
    },
    "498": {
        "name": "diagonal-traverse",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "499": {
        "name": "the-maze-iii",
        "tags": [],
        "difficulty": null
    },
    "500": {
        "name": "keyboard-row",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "505": {
        "name": "the-maze-ii",
        "tags": [],
        "difficulty": null
    },
    "507": {
        "name": "perfect-number",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "504": {
        "name": "base-7",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "502": {
        "name": "ipo",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "503": {
        "name": "next-greater-element-ii",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "506": {
        "name": "relative-ranks",
        "tags": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Easy"
    },
    "501": {
        "name": "find-mode-in-binary-search-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "508": {
        "name": "most-frequent-subtree-sum",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "509": {
        "name": "fibonacci-number",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Recursion",
            "Memoization"
        ],
        "difficulty": "Easy"
    },
    "511": {
        "name": "game-play-analysis-i",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "510": {
        "name": "inorder-successor-in-bst-ii",
        "tags": [],
        "difficulty": null
    },
    "514": {
        "name": "freedom-trail",
        "tags": [
            "String",
            "Dynamic Programming",
            "Depth-First Search",
            "Breadth-First Search"
        ],
        "difficulty": "Hard"
    },
    "512": {
        "name": "game-play-analysis-ii",
        "tags": [],
        "difficulty": null
    },
    "515": {
        "name": "find-largest-value-in-each-tree-row",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "513": {
        "name": "find-bottom-left-tree-value",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "516": {
        "name": "longest-palindromic-subsequence",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "517": {
        "name": "super-washing-machines",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Hard"
    },
    "523": {
        "name": "continuous-subarray-sum",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "518": {
        "name": "coin-change-ii",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "519": {
        "name": "random-flip-matrix",
        "tags": [
            "Hash Table",
            "Math",
            "Reservoir Sampling",
            "Randomized"
        ],
        "difficulty": "Medium"
    },
    "522": {
        "name": "longest-uncommon-subsequence-ii",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "String",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "520": {
        "name": "detect-capital",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "524": {
        "name": "longest-word-in-dictionary-through-deleting",
        "tags": [
            "Array",
            "Two Pointers",
            "String",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "521": {
        "name": "longest-uncommon-subsequence-i",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "525": {
        "name": "contiguous-array",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "526": {
        "name": "beautiful-arrangement",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Medium"
    },
    "527": {
        "name": "word-abbreviation",
        "tags": [],
        "difficulty": null
    },
    "528": {
        "name": "random-pick-with-weight",
        "tags": [
            "Array",
            "Math",
            "Binary Search",
            "Prefix Sum",
            "Randomized"
        ],
        "difficulty": "Medium"
    },
    "531": {
        "name": "lonely-pixel-i",
        "tags": [],
        "difficulty": null
    },
    "532": {
        "name": "k-diff-pairs-in-an-array",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "529": {
        "name": "minesweeper",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "530": {
        "name": "minimum-absolute-difference-in-bst",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "533": {
        "name": "lonely-pixel-ii",
        "tags": [],
        "difficulty": null
    },
    "534": {
        "name": "game-play-analysis-iii",
        "tags": [],
        "difficulty": null
    },
    "536": {
        "name": "construct-binary-tree-from-string",
        "tags": [],
        "difficulty": null
    },
    "535": {
        "name": "encode-and-decode-tinyurl",
        "tags": [
            "Hash Table",
            "String",
            "Design",
            "Hash Function"
        ],
        "difficulty": "Medium"
    },
    "540": {
        "name": "single-element-in-a-sorted-array",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "537": {
        "name": "complex-number-multiplication",
        "tags": [
            "Math",
            "String",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "538": {
        "name": "convert-bst-to-greater-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "541": {
        "name": "reverse-string-ii",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Easy"
    },
    "539": {
        "name": "minimum-time-difference",
        "tags": [
            "Array",
            "Math",
            "String",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "542": {
        "name": "01-matrix",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "543": {
        "name": "diameter-of-binary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "544": {
        "name": "output-contest-matches",
        "tags": [],
        "difficulty": null
    },
    "545": {
        "name": "boundary-of-binary-tree",
        "tags": [],
        "difficulty": null
    },
    "546": {
        "name": "remove-boxes",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Memoization"
        ],
        "difficulty": "Hard"
    },
    "549": {
        "name": "binary-tree-longest-consecutive-sequence-ii",
        "tags": [],
        "difficulty": null
    },
    "548": {
        "name": "split-array-with-equal-sum",
        "tags": [],
        "difficulty": null
    },
    "547": {
        "name": "number-of-provinces",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "550": {
        "name": "game-play-analysis-iv",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "551": {
        "name": "student-attendance-record-i",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "552": {
        "name": "student-attendance-record-ii",
        "tags": [
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "553": {
        "name": "optimal-division",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "554": {
        "name": "brick-wall",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Medium"
    },
    "555": {
        "name": "split-concatenated-strings",
        "tags": [],
        "difficulty": null
    },
    "557": {
        "name": "reverse-words-in-a-string-iii",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Easy"
    },
    "556": {
        "name": "next-greater-element-iii",
        "tags": [
            "Math",
            "Two Pointers",
            "String"
        ],
        "difficulty": "Medium"
    },
    "558": {
        "name": "logical-or-of-two-binary-grids-represented-as-quad-trees",
        "tags": [
            "Divide and Conquer",
            "Tree"
        ],
        "difficulty": "Medium"
    },
    "559": {
        "name": "maximum-depth-of-n-ary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search"
        ],
        "difficulty": "Easy"
    },
    "560": {
        "name": "subarray-sum-equals-k",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "561": {
        "name": "array-partition",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Counting Sort"
        ],
        "difficulty": "Easy"
    },
    "563": {
        "name": "binary-tree-tilt",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "562": {
        "name": "longest-line-of-consecutive-one-in-matrix",
        "tags": [],
        "difficulty": null
    },
    "565": {
        "name": "array-nesting",
        "tags": [
            "Array",
            "Depth-First Search"
        ],
        "difficulty": "Medium"
    },
    "566": {
        "name": "reshape-the-matrix",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "568": {
        "name": "maximum-vacation-days",
        "tags": [],
        "difficulty": null
    },
    "564": {
        "name": "find-the-closest-palindrome",
        "tags": [
            "Math",
            "String"
        ],
        "difficulty": "Hard"
    },
    "567": {
        "name": "permutation-in-string",
        "tags": [
            "Hash Table",
            "Two Pointers",
            "String",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "571": {
        "name": "find-median-given-frequency-of-numbers",
        "tags": [],
        "difficulty": null
    },
    "572": {
        "name": "subtree-of-another-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "String Matching",
            "Binary Tree",
            "Hash Function"
        ],
        "difficulty": "Easy"
    },
    "570": {
        "name": "managers-with-at-least-5-direct-reports",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "574": {
        "name": "winning-candidate",
        "tags": [],
        "difficulty": null
    },
    "576": {
        "name": "out-of-boundary-paths",
        "tags": [
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "573": {
        "name": "squirrel-simulation",
        "tags": [],
        "difficulty": null
    },
    "575": {
        "name": "distribute-candies",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Easy"
    },
    "569": {
        "name": "median-employee-salary",
        "tags": [],
        "difficulty": null
    },
    "579": {
        "name": "find-cumulative-salary-of-an-employee",
        "tags": [],
        "difficulty": null
    },
    "577": {
        "name": "employee-bonus",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "578": {
        "name": "get-highest-answer-rate-question",
        "tags": [],
        "difficulty": null
    },
    "581": {
        "name": "shortest-unsorted-continuous-subarray",
        "tags": [
            "Array",
            "Two Pointers",
            "Stack",
            "Greedy",
            "Sorting",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "580": {
        "name": "count-student-number-in-departments",
        "tags": [],
        "difficulty": null
    },
    "582": {
        "name": "kill-process",
        "tags": [],
        "difficulty": null
    },
    "583": {
        "name": "delete-operation-for-two-strings",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "584": {
        "name": "find-customer-referee",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "588": {
        "name": "design-in-memory-file-system",
        "tags": [],
        "difficulty": null
    },
    "591": {
        "name": "tag-validator",
        "tags": [
            "String",
            "Stack"
        ],
        "difficulty": "Hard"
    },
    "592": {
        "name": "fraction-addition-and-subtraction",
        "tags": [
            "Math",
            "String",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "590": {
        "name": "n-ary-tree-postorder-traversal",
        "tags": [
            "Stack",
            "Tree",
            "Depth-First Search"
        ],
        "difficulty": "Easy"
    },
    "587": {
        "name": "erect-the-fence",
        "tags": [
            "Array",
            "Math",
            "Geometry"
        ],
        "difficulty": "Hard"
    },
    "586": {
        "name": "customer-placing-the-largest-number-of-orders",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "585": {
        "name": "investments-in-2016",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "589": {
        "name": "n-ary-tree-preorder-traversal",
        "tags": [
            "Stack",
            "Tree",
            "Depth-First Search"
        ],
        "difficulty": "Easy"
    },
    "593": {
        "name": "valid-square",
        "tags": [
            "Math",
            "Geometry"
        ],
        "difficulty": "Medium"
    },
    "596": {
        "name": "classes-more-than-5-students",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "595": {
        "name": "big-countries",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "594": {
        "name": "longest-harmonious-subsequence",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window",
            "Sorting",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "600": {
        "name": "non-negative-integers-without-consecutive-ones",
        "tags": [
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "598": {
        "name": "range-addition-ii",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Easy"
    },
    "599": {
        "name": "minimum-index-sum-of-two-lists",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "597": {
        "name": "friend-requests-i:-overall-acceptance-rate",
        "tags": [],
        "difficulty": null
    },
    "604": {
        "name": "design-compressed-string-iterator",
        "tags": [],
        "difficulty": null
    },
    "601": {
        "name": "human-traffic-of-stadium",
        "tags": [
            "Database"
        ],
        "difficulty": "Hard"
    },
    "607": {
        "name": "sales-person",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "603": {
        "name": "consecutive-available-seats",
        "tags": [],
        "difficulty": null
    },
    "602": {
        "name": "friend-requests-ii:-who-has-the-most-friends",
        "tags": [],
        "difficulty": null
    },
    "608": {
        "name": "tree-node",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "605": {
        "name": "can-place-flowers",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "606": {
        "name": "construct-string-from-binary-tree",
        "tags": [
            "String",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "610": {
        "name": "triangle-judgement",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "612": {
        "name": "shortest-distance-in-a-plane",
        "tags": [],
        "difficulty": null
    },
    "609": {
        "name": "find-duplicate-file-in-system",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ],
        "difficulty": "Medium"
    },
    "611": {
        "name": "valid-triangle-number",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "613": {
        "name": "shortest-distance-in-a-line",
        "tags": [],
        "difficulty": null
    },
    "614": {
        "name": "second-degree-follower",
        "tags": [],
        "difficulty": null
    },
    "616": {
        "name": "add-bold-tag-in-string",
        "tags": [],
        "difficulty": null
    },
    "615": {
        "name": "average-salary:-departments-vs-company",
        "tags": [],
        "difficulty": null
    },
    "620": {
        "name": "not-boring-movies",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "619": {
        "name": "biggest-single-number",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "617": {
        "name": "merge-two-binary-trees",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "618": {
        "name": "students-report-by-geography",
        "tags": [],
        "difficulty": null
    },
    "621": {
        "name": "task-scheduler",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "624": {
        "name": "maximum-distance-in-arrays",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "622": {
        "name": "design-circular-queue",
        "tags": [
            "Array",
            "Linked List",
            "Design",
            "Queue"
        ],
        "difficulty": "Medium"
    },
    "623": {
        "name": "add-one-row-to-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "627": {
        "name": "swap-salary",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "626": {
        "name": "exchange-seats",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "628": {
        "name": "maximum-product-of-three-numbers",
        "tags": [
            "Array",
            "Math",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "629": {
        "name": "k-inverse-pairs-array",
        "tags": [
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "630": {
        "name": "course-schedule-iii",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "625": {
        "name": "minimum-factorization",
        "tags": [],
        "difficulty": null
    },
    "631": {
        "name": "design-excel-sum-formula",
        "tags": [],
        "difficulty": null
    },
    "632": {
        "name": "smallest-range-covering-elements-from-k-lists",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sliding Window",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "634": {
        "name": "find-the-derangement-of-an-array",
        "tags": [],
        "difficulty": null
    },
    "635": {
        "name": "design-log-storage-system",
        "tags": [],
        "difficulty": null
    },
    "633": {
        "name": "sum-of-square-numbers",
        "tags": [
            "Math",
            "Two Pointers",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "636": {
        "name": "exclusive-time-of-functions",
        "tags": [
            "Array",
            "Stack"
        ],
        "difficulty": "Medium"
    },
    "638": {
        "name": "shopping-offers",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Memoization",
            "Bitmask"
        ],
        "difficulty": "Medium"
    },
    "637": {
        "name": "average-of-levels-in-binary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "640": {
        "name": "solve-the-equation",
        "tags": [
            "Math",
            "String",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "639": {
        "name": "decode-ways-ii",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "644": {
        "name": "maximum-average-subarray-ii",
        "tags": [],
        "difficulty": null
    },
    "641": {
        "name": "design-circular-deque",
        "tags": [
            "Array",
            "Linked List",
            "Design",
            "Queue"
        ],
        "difficulty": "Medium"
    },
    "643": {
        "name": "maximum-average-subarray-i",
        "tags": [
            "Array",
            "Sliding Window"
        ],
        "difficulty": "Easy"
    },
    "645": {
        "name": "set-mismatch",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "646": {
        "name": "maximum-length-of-pair-chain",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "642": {
        "name": "design-search-autocomplete-system",
        "tags": [],
        "difficulty": null
    },
    "647": {
        "name": "palindromic-substrings",
        "tags": [
            "Two Pointers",
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "648": {
        "name": "replace-words",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Trie"
        ],
        "difficulty": "Medium"
    },
    "649": {
        "name": "dota2-senate",
        "tags": [
            "String",
            "Greedy",
            "Queue"
        ],
        "difficulty": "Medium"
    },
    "651": {
        "name": "4-keys-keyboard",
        "tags": [],
        "difficulty": null
    },
    "650": {
        "name": "2-keys-keyboard",
        "tags": [
            "Math",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "652": {
        "name": "find-duplicate-subtrees",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "653": {
        "name": "two-sum-iv---input-is-a-bst",
        "tags": [],
        "difficulty": null
    },
    "654": {
        "name": "maximum-binary-tree",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Stack",
            "Tree",
            "Monotonic Stack",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "656": {
        "name": "coin-path",
        "tags": [],
        "difficulty": null
    },
    "655": {
        "name": "print-binary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "657": {
        "name": "robot-return-to-origin",
        "tags": [
            "String",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "658": {
        "name": "find-k-closest-elements",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sliding Window",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "659": {
        "name": "split-array-into-consecutive-subsequences",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "660": {
        "name": "remove-9",
        "tags": [],
        "difficulty": null
    },
    "661": {
        "name": "image-smoother",
        "tags": [
            "Array",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "662": {
        "name": "maximum-width-of-binary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "663": {
        "name": "equal-tree-partition",
        "tags": [],
        "difficulty": null
    },
    "664": {
        "name": "strange-printer",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "665": {
        "name": "non-decreasing-array",
        "tags": [
            "Array"
        ],
        "difficulty": "Medium"
    },
    "667": {
        "name": "beautiful-arrangement-ii",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Medium"
    },
    "668": {
        "name": "kth-smallest-number-in-multiplication-table",
        "tags": [
            "Math",
            "Binary Search"
        ],
        "difficulty": "Hard"
    },
    "669": {
        "name": "trim-a-binary-search-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "670": {
        "name": "maximum-swap",
        "tags": [
            "Math",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "666": {
        "name": "path-sum-iv",
        "tags": [],
        "difficulty": null
    },
    "671": {
        "name": "second-minimum-node-in-a-binary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "672": {
        "name": "bulb-switcher-ii",
        "tags": [
            "Math",
            "Bit Manipulation",
            "Depth-First Search",
            "Breadth-First Search"
        ],
        "difficulty": "Medium"
    },
    "677": {
        "name": "map-sum-pairs",
        "tags": [
            "Hash Table",
            "String",
            "Design",
            "Trie"
        ],
        "difficulty": "Medium"
    },
    "673": {
        "name": "number-of-longest-increasing-subsequence",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Binary Indexed Tree",
            "Segment Tree"
        ],
        "difficulty": "Medium"
    },
    "676": {
        "name": "implement-magic-dictionary",
        "tags": [
            "Hash Table",
            "String",
            "Depth-First Search",
            "Design",
            "Trie"
        ],
        "difficulty": "Medium"
    },
    "675": {
        "name": "cut-off-trees-for-golf-event",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Heap (Priority Queue)",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "678": {
        "name": "valid-parenthesis-string",
        "tags": [
            "String",
            "Dynamic Programming",
            "Stack",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "679": {
        "name": "24-game",
        "tags": [
            "Array",
            "Math",
            "Backtracking"
        ],
        "difficulty": "Hard"
    },
    "680": {
        "name": "valid-palindrome-ii",
        "tags": [
            "Two Pointers",
            "String",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "674": {
        "name": "longest-continuous-increasing-subsequence",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "681": {
        "name": "next-closest-time",
        "tags": [],
        "difficulty": null
    },
    "684": {
        "name": "redundant-connection",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "683": {
        "name": "k-empty-slots",
        "tags": [],
        "difficulty": null
    },
    "682": {
        "name": "baseball-game",
        "tags": [
            "Array",
            "Stack",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "685": {
        "name": "redundant-connection-ii",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "686": {
        "name": "repeated-string-match",
        "tags": [
            "String",
            "String Matching"
        ],
        "difficulty": "Medium"
    },
    "687": {
        "name": "longest-univalue-path",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "688": {
        "name": "knight-probability-in-chessboard",
        "tags": [
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "689": {
        "name": "maximum-sum-of-3-non-overlapping-subarrays",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "693": {
        "name": "binary-number-with-alternating-bits",
        "tags": [
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "691": {
        "name": "stickers-to-spell-word",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "690": {
        "name": "employee-importance",
        "tags": [
            "Array",
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search"
        ],
        "difficulty": "Medium"
    },
    "692": {
        "name": "top-k-frequent-words",
        "tags": [
            "Hash Table",
            "String",
            "Trie",
            "Sorting",
            "Heap (Priority Queue)",
            "Bucket Sort",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "696": {
        "name": "count-binary-substrings",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Easy"
    },
    "694": {
        "name": "number-of-distinct-islands",
        "tags": [],
        "difficulty": null
    },
    "699": {
        "name": "falling-squares",
        "tags": [
            "Array",
            "Segment Tree",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "697": {
        "name": "degree-of-an-array",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Easy"
    },
    "695": {
        "name": "max-area-of-island",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "698": {
        "name": "partition-to-k-equal-sum-subsets",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Memoization",
            "Bitmask"
        ],
        "difficulty": "Medium"
    },
    "700": {
        "name": "search-in-a-binary-search-tree",
        "tags": [
            "Tree",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "702": {
        "name": "search-in-a-sorted-array-of-unknown-size",
        "tags": [],
        "difficulty": null
    },
    "701": {
        "name": "insert-into-a-binary-search-tree",
        "tags": [
            "Tree",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "703": {
        "name": "kth-largest-element-in-a-stream",
        "tags": [
            "Tree",
            "Design",
            "Binary Search Tree",
            "Heap (Priority Queue)",
            "Binary Tree",
            "Data Stream"
        ],
        "difficulty": "Easy"
    },
    "705": {
        "name": "design-hashset",
        "tags": [
            "Array",
            "Hash Table",
            "Linked List",
            "Design",
            "Hash Function"
        ],
        "difficulty": "Easy"
    },
    "706": {
        "name": "design-hashmap",
        "tags": [
            "Array",
            "Hash Table",
            "Linked List",
            "Design",
            "Hash Function"
        ],
        "difficulty": "Easy"
    },
    "704": {
        "name": "binary-search",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Easy"
    },
    "707": {
        "name": "design-linked-list",
        "tags": [
            "Linked List",
            "Design"
        ],
        "difficulty": "Medium"
    },
    "708": {
        "name": "insert-into-a-sorted-circular-linked-list",
        "tags": [],
        "difficulty": null
    },
    "709": {
        "name": "to-lower-case",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "710": {
        "name": "random-pick-with-blacklist",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Binary Search",
            "Sorting",
            "Randomized"
        ],
        "difficulty": "Hard"
    },
    "711": {
        "name": "number-of-distinct-islands-ii",
        "tags": [],
        "difficulty": null
    },
    "712": {
        "name": "minimum-ascii-delete-sum-for-two-strings",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "714": {
        "name": "best-time-to-buy-and-sell-stock-with-transaction-fee",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "713": {
        "name": "subarray-product-less-than-k",
        "tags": [
            "Array",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "717": {
        "name": "1-bit-and-2-bit-characters",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "715": {
        "name": "range-module",
        "tags": [
            "Design",
            "Segment Tree",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "716": {
        "name": "max-stack",
        "tags": [],
        "difficulty": null
    },
    "718": {
        "name": "maximum-length-of-repeated-subarray",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Sliding Window",
            "Rolling Hash",
            "Hash Function"
        ],
        "difficulty": "Medium"
    },
    "722": {
        "name": "remove-comments",
        "tags": [
            "Array",
            "String"
        ],
        "difficulty": "Medium"
    },
    "720": {
        "name": "longest-word-in-dictionary",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Trie",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "719": {
        "name": "find-k-th-smallest-pair-distance",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "721": {
        "name": "accounts-merge",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "723": {
        "name": "candy-crush",
        "tags": [],
        "difficulty": null
    },
    "724": {
        "name": "find-pivot-index",
        "tags": [
            "Array",
            "Prefix Sum"
        ],
        "difficulty": "Easy"
    },
    "726": {
        "name": "number-of-atoms",
        "tags": [
            "Hash Table",
            "String",
            "Stack",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "725": {
        "name": "split-linked-list-in-parts",
        "tags": [
            "Linked List"
        ],
        "difficulty": "Medium"
    },
    "727": {
        "name": "minimum-window-subsequence",
        "tags": [],
        "difficulty": null
    },
    "728": {
        "name": "self-dividing-numbers",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "729": {
        "name": "my-calendar-i",
        "tags": [
            "Array",
            "Binary Search",
            "Design",
            "Segment Tree",
            "Ordered Set"
        ],
        "difficulty": "Medium"
    },
    "730": {
        "name": "count-different-palindromic-subsequences",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "731": {
        "name": "my-calendar-ii",
        "tags": [
            "Array",
            "Binary Search",
            "Design",
            "Segment Tree",
            "Prefix Sum",
            "Ordered Set"
        ],
        "difficulty": "Medium"
    },
    "733": {
        "name": "flood-fill",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "735": {
        "name": "asteroid-collision",
        "tags": [
            "Array",
            "Stack",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "734": {
        "name": "sentence-similarity",
        "tags": [],
        "difficulty": null
    },
    "737": {
        "name": "sentence-similarity-ii",
        "tags": [],
        "difficulty": null
    },
    "736": {
        "name": "parse-lisp-expression",
        "tags": [
            "Hash Table",
            "String",
            "Stack",
            "Recursion"
        ],
        "difficulty": "Hard"
    },
    "739": {
        "name": "daily-temperatures",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "732": {
        "name": "my-calendar-iii",
        "tags": [
            "Binary Search",
            "Design",
            "Segment Tree",
            "Prefix Sum",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "742": {
        "name": "closest-leaf-in-a-binary-tree",
        "tags": [],
        "difficulty": null
    },
    "738": {
        "name": "monotone-increasing-digits",
        "tags": [
            "Math",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "741": {
        "name": "cherry-pickup",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "740": {
        "name": "delete-and-earn",
        "tags": [
            "Array",
            "Hash Table",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "744": {
        "name": "find-smallest-letter-greater-than-target",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Easy"
    },
    "743": {
        "name": "network-delay-time",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Heap (Priority Queue)",
            "Shortest Path"
        ],
        "difficulty": "Medium"
    },
    "746": {
        "name": "min-cost-climbing-stairs",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Easy"
    },
    "745": {
        "name": "prefix-and-suffix-search",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Design",
            "Trie"
        ],
        "difficulty": "Hard"
    },
    "751": {
        "name": "ip-to-cidr",
        "tags": [],
        "difficulty": null
    },
    "750": {
        "name": "number-of-corner-rectangles",
        "tags": [],
        "difficulty": null
    },
    "747": {
        "name": "largest-number-at-least-twice-of-others",
        "tags": [
            "Array",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "752": {
        "name": "open-the-lock",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Breadth-First Search"
        ],
        "difficulty": "Medium"
    },
    "749": {
        "name": "contain-virus",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Hard"
    },
    "748": {
        "name": "shortest-completing-word",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "754": {
        "name": "reach-a-number",
        "tags": [
            "Math",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "755": {
        "name": "pour-water",
        "tags": [],
        "difficulty": null
    },
    "760": {
        "name": "find-anagram-mappings",
        "tags": [],
        "difficulty": null
    },
    "757": {
        "name": "set-intersection-size-at-least-two",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "756": {
        "name": "pyramid-transition-matrix",
        "tags": [
            "Bit Manipulation",
            "Depth-First Search",
            "Breadth-First Search"
        ],
        "difficulty": "Medium"
    },
    "758": {
        "name": "bold-words-in-string",
        "tags": [],
        "difficulty": null
    },
    "753": {
        "name": "cracking-the-safe",
        "tags": [
            "Depth-First Search",
            "Graph",
            "Eulerian Circuit"
        ],
        "difficulty": "Hard"
    },
    "759": {
        "name": "employee-free-time",
        "tags": [],
        "difficulty": null
    },
    "761": {
        "name": "special-binary-string",
        "tags": [
            "String",
            "Recursion"
        ],
        "difficulty": "Hard"
    },
    "766": {
        "name": "toeplitz-matrix",
        "tags": [
            "Array",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "764": {
        "name": "largest-plus-sign",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "763": {
        "name": "partition-labels",
        "tags": [
            "Hash Table",
            "Two Pointers",
            "String",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "765": {
        "name": "couples-holding-hands",
        "tags": [
            "Greedy",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "762": {
        "name": "prime-number-of-set-bits-in-binary-representation",
        "tags": [
            "Math",
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "767": {
        "name": "reorganize-string",
        "tags": [
            "Hash Table",
            "String",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "768": {
        "name": "max-chunks-to-make-sorted-ii",
        "tags": [
            "Array",
            "Stack",
            "Greedy",
            "Sorting",
            "Monotonic Stack"
        ],
        "difficulty": "Hard"
    },
    "772": {
        "name": "basic-calculator-iii",
        "tags": [],
        "difficulty": null
    },
    "774": {
        "name": "minimize-max-distance-to-gas-station",
        "tags": [],
        "difficulty": null
    },
    "771": {
        "name": "jewels-and-stones",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "776": {
        "name": "split-bst",
        "tags": [],
        "difficulty": null
    },
    "775": {
        "name": "global-and-local-inversions",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Medium"
    },
    "770": {
        "name": "basic-calculator-iv",
        "tags": [
            "Hash Table",
            "Math",
            "String",
            "Stack",
            "Recursion"
        ],
        "difficulty": "Hard"
    },
    "773": {
        "name": "sliding-puzzle",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Breadth-First Search",
            "Memoization",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "769": {
        "name": "max-chunks-to-make-sorted",
        "tags": [
            "Array",
            "Stack",
            "Greedy",
            "Sorting",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "780": {
        "name": "reaching-points",
        "tags": [
            "Math"
        ],
        "difficulty": "Hard"
    },
    "784": {
        "name": "letter-case-permutation",
        "tags": [
            "String",
            "Backtracking",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "781": {
        "name": "rabbits-in-forest",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "782": {
        "name": "transform-to-chessboard",
        "tags": [
            "Array",
            "Math",
            "Bit Manipulation",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "779": {
        "name": "k-th-symbol-in-grammar",
        "tags": [
            "Math",
            "Bit Manipulation",
            "Recursion"
        ],
        "difficulty": "Medium"
    },
    "778": {
        "name": "swim-in-rising-water",
        "tags": [
            "Array",
            "Binary Search",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Heap (Priority Queue)",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "783": {
        "name": "minimum-distance-between-bst-nodes",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "777": {
        "name": "swap-adjacent-in-lr-string",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Medium"
    },
    "786": {
        "name": "k-th-smallest-prime-fraction",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "790": {
        "name": "domino-and-tromino-tiling",
        "tags": [
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "792": {
        "name": "number-of-matching-subsequences",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Binary Search",
            "Dynamic Programming",
            "Trie",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "791": {
        "name": "custom-sort-string",
        "tags": [
            "Hash Table",
            "String",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "785": {
        "name": "is-graph-bipartite?",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "788": {
        "name": "rotated-digits",
        "tags": [
            "Math",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "795": {
        "name": "number-of-subarrays-with-bounded-maximum",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "difficulty": "Medium"
    },
    "793": {
        "name": "preimage-size-of-factorial-zeroes-function",
        "tags": [
            "Math",
            "Binary Search"
        ],
        "difficulty": "Hard"
    },
    "794": {
        "name": "valid-tic-tac-toe-state",
        "tags": [
            "Array",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "787": {
        "name": "cheapest-flights-within-k-stops",
        "tags": [
            "Dynamic Programming",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Heap (Priority Queue)",
            "Shortest Path"
        ],
        "difficulty": "Medium"
    },
    "798": {
        "name": "smallest-rotation-with-highest-score",
        "tags": [
            "Array",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "797": {
        "name": "all-paths-from-source-to-target",
        "tags": [
            "Backtracking",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "796": {
        "name": "rotate-string",
        "tags": [
            "String",
            "String Matching"
        ],
        "difficulty": "Easy"
    },
    "801": {
        "name": "minimum-swaps-to-make-sequences-increasing",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "799": {
        "name": "champagne-tower",
        "tags": [
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "802": {
        "name": "find-eventual-safe-states",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ],
        "difficulty": "Medium"
    },
    "800": {
        "name": "similar-rgb-color",
        "tags": [],
        "difficulty": null
    },
    "804": {
        "name": "unique-morse-code-words",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "803": {
        "name": "bricks-falling-when-hit",
        "tags": [
            "Array",
            "Union Find",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "805": {
        "name": "split-array-with-same-average",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "789": {
        "name": "escape-the-ghosts",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Medium"
    },
    "809": {
        "name": "expressive-words",
        "tags": [
            "Array",
            "Two Pointers",
            "String"
        ],
        "difficulty": "Medium"
    },
    "806": {
        "name": "number-of-lines-to-write-string",
        "tags": [
            "Array",
            "String"
        ],
        "difficulty": "Easy"
    },
    "808": {
        "name": "soup-servings",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Probability and Statistics"
        ],
        "difficulty": "Medium"
    },
    "807": {
        "name": "max-increase-to-keep-city-skyline",
        "tags": [
            "Array",
            "Greedy",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "811": {
        "name": "subdomain-visit-count",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "810": {
        "name": "chalkboard-xor-game",
        "tags": [
            "Array",
            "Math",
            "Bit Manipulation",
            "Brainteaser",
            "Game Theory"
        ],
        "difficulty": "Hard"
    },
    "812": {
        "name": "largest-triangle-area",
        "tags": [
            "Array",
            "Math",
            "Geometry"
        ],
        "difficulty": "Easy"
    },
    "815": {
        "name": "bus-routes",
        "tags": [
            "Array",
            "Hash Table",
            "Breadth-First Search"
        ],
        "difficulty": "Hard"
    },
    "817": {
        "name": "linked-list-components",
        "tags": [
            "Array",
            "Hash Table",
            "Linked List"
        ],
        "difficulty": "Medium"
    },
    "813": {
        "name": "largest-sum-of-averages",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "814": {
        "name": "binary-tree-pruning",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "816": {
        "name": "ambiguous-coordinates",
        "tags": [
            "String",
            "Backtracking",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "819": {
        "name": "most-common-word",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "818": {
        "name": "race-car",
        "tags": [
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "820": {
        "name": "short-encoding-of-words",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Trie"
        ],
        "difficulty": "Medium"
    },
    "822": {
        "name": "card-flipping-game",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Medium"
    },
    "824": {
        "name": "goat-latin",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "821": {
        "name": "shortest-distance-to-a-character",
        "tags": [
            "Array",
            "Two Pointers",
            "String"
        ],
        "difficulty": "Easy"
    },
    "825": {
        "name": "friends-of-appropriate-ages",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "823": {
        "name": "binary-trees-with-factors",
        "tags": [
            "Array",
            "Hash Table",
            "Dynamic Programming",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "826": {
        "name": "most-profit-assigning-work",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "827": {
        "name": "making-a-large-island",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "828": {
        "name": "count-unique-characters-of-all-substrings-of-a-given-string",
        "tags": [
            "Hash Table",
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "829": {
        "name": "consecutive-numbers-sum",
        "tags": [
            "Math",
            "Enumeration"
        ],
        "difficulty": "Hard"
    },
    "831": {
        "name": "masking-personal-information",
        "tags": [
            "String"
        ],
        "difficulty": "Medium"
    },
    "833": {
        "name": "find-and-replace-in-string",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "832": {
        "name": "flipping-an-image",
        "tags": [
            "Array",
            "Two Pointers",
            "Bit Manipulation",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "830": {
        "name": "positions-of-large-groups",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "834": {
        "name": "sum-of-distances-in-tree",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "835": {
        "name": "image-overlap",
        "tags": [
            "Array",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "840": {
        "name": "magic-squares-in-grid",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "836": {
        "name": "rectangle-overlap",
        "tags": [
            "Math",
            "Geometry"
        ],
        "difficulty": "Easy"
    },
    "841": {
        "name": "keys-and-rooms",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "843": {
        "name": "guess-the-word",
        "tags": [
            "Array",
            "Math",
            "String",
            "Interactive",
            "Game Theory"
        ],
        "difficulty": "Hard"
    },
    "842": {
        "name": "split-array-into-fibonacci-sequence",
        "tags": [
            "String",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "839": {
        "name": "similar-string-groups",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find"
        ],
        "difficulty": "Hard"
    },
    "837": {
        "name": "new-21-game",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Sliding Window",
            "Probability and Statistics"
        ],
        "difficulty": "Medium"
    },
    "838": {
        "name": "push-dominoes",
        "tags": [
            "Two Pointers",
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "845": {
        "name": "longest-mountain-in-array",
        "tags": [
            "Array",
            "Two Pointers",
            "Dynamic Programming",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "849": {
        "name": "maximize-distance-to-closest-person",
        "tags": [
            "Array"
        ],
        "difficulty": "Medium"
    },
    "848": {
        "name": "shifting-letters",
        "tags": [
            "Array",
            "String",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "850": {
        "name": "rectangle-area-ii",
        "tags": [
            "Array",
            "Segment Tree",
            "Line Sweep",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "847": {
        "name": "shortest-path-visiting-all-nodes",
        "tags": [
            "Dynamic Programming",
            "Bit Manipulation",
            "Breadth-First Search",
            "Graph",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "851": {
        "name": "loud-and-rich",
        "tags": [
            "Array",
            "Depth-First Search",
            "Graph",
            "Topological Sort"
        ],
        "difficulty": "Medium"
    },
    "844": {
        "name": "backspace-string-compare",
        "tags": [
            "Two Pointers",
            "String",
            "Stack",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "846": {
        "name": "hand-of-straights",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "852": {
        "name": "peak-index-in-a-mountain-array",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "854": {
        "name": "k-similar-strings",
        "tags": [
            "String",
            "Breadth-First Search"
        ],
        "difficulty": "Hard"
    },
    "856": {
        "name": "score-of-parentheses",
        "tags": [
            "String",
            "Stack"
        ],
        "difficulty": "Medium"
    },
    "858": {
        "name": "mirror-reflection",
        "tags": [
            "Math",
            "Geometry",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "857": {
        "name": "minimum-cost-to-hire-k-workers",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "855": {
        "name": "exam-room",
        "tags": [
            "Design",
            "Heap (Priority Queue)",
            "Ordered Set"
        ],
        "difficulty": "Medium"
    },
    "853": {
        "name": "car-fleet",
        "tags": [
            "Array",
            "Stack",
            "Sorting",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "859": {
        "name": "buddy-strings",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "860": {
        "name": "lemonade-change",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "866": {
        "name": "prime-palindrome",
        "tags": [
            "Math",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "867": {
        "name": "transpose-matrix",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "864": {
        "name": "shortest-path-to-get-all-keys",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "863": {
        "name": "all-nodes-distance-k-in-binary-tree",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "862": {
        "name": "shortest-subarray-with-sum-at-least-k",
        "tags": [
            "Array",
            "Binary Search",
            "Queue",
            "Sliding Window",
            "Heap (Priority Queue)",
            "Prefix Sum",
            "Monotonic Queue"
        ],
        "difficulty": "Hard"
    },
    "861": {
        "name": "score-after-flipping-matrix",
        "tags": [
            "Array",
            "Greedy",
            "Bit Manipulation",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "868": {
        "name": "binary-gap",
        "tags": [
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "869": {
        "name": "reordered-power-of-2",
        "tags": [
            "Hash Table",
            "Math",
            "Sorting",
            "Counting",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "870": {
        "name": "advantage-shuffle",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "871": {
        "name": "minimum-number-of-refueling-stops",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "872": {
        "name": "leaf-similar-trees",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "873": {
        "name": "length-of-longest-fibonacci-subsequence",
        "tags": [
            "Array",
            "Hash Table",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "874": {
        "name": "walking-robot-simulation",
        "tags": [
            "Array",
            "Hash Table",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "875": {
        "name": "koko-eating-bananas",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "865": {
        "name": "smallest-subtree-with-all-the-deepest-nodes",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "878": {
        "name": "nth-magical-number",
        "tags": [
            "Math",
            "Binary Search"
        ],
        "difficulty": "Hard"
    },
    "876": {
        "name": "middle-of-the-linked-list",
        "tags": [
            "Linked List",
            "Two Pointers"
        ],
        "difficulty": "Easy"
    },
    "877": {
        "name": "stone-game",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Game Theory"
        ],
        "difficulty": "Medium"
    },
    "879": {
        "name": "profitable-schemes",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "881": {
        "name": "boats-to-save-people",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "882": {
        "name": "reachable-nodes-in-subdivided-graph",
        "tags": [
            "Graph",
            "Heap (Priority Queue)",
            "Shortest Path"
        ],
        "difficulty": "Hard"
    },
    "880": {
        "name": "decoded-string-at-index",
        "tags": [
            "String",
            "Stack"
        ],
        "difficulty": "Medium"
    },
    "883": {
        "name": "projection-area-of-3d-shapes",
        "tags": [
            "Array",
            "Math",
            "Geometry",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "885": {
        "name": "spiral-matrix-iii",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "884": {
        "name": "uncommon-words-from-two-sentences",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "886": {
        "name": "possible-bipartition",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "887": {
        "name": "super-egg-drop",
        "tags": [
            "Math",
            "Binary Search",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "888": {
        "name": "fair-candy-swap",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "891": {
        "name": "sum-of-subsequence-widths",
        "tags": [
            "Array",
            "Math",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "890": {
        "name": "find-and-replace-pattern",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ],
        "difficulty": "Medium"
    },
    "889": {
        "name": "construct-binary-tree-from-preorder-and-postorder-traversal",
        "tags": [
            "Array",
            "Hash Table",
            "Divide and Conquer",
            "Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "894": {
        "name": "all-possible-full-binary-trees",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Recursion",
            "Memoization",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "896": {
        "name": "monotonic-array",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "893": {
        "name": "groups-of-special-equivalent-strings",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "895": {
        "name": "maximum-frequency-stack",
        "tags": [
            "Hash Table",
            "Stack",
            "Design",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "892": {
        "name": "surface-area-of-3d-shapes",
        "tags": [
            "Array",
            "Math",
            "Geometry",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "897": {
        "name": "increasing-order-search-tree",
        "tags": [
            "Stack",
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "898": {
        "name": "bitwise-ors-of-subarrays",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "899": {
        "name": "orderly-queue",
        "tags": [
            "Math",
            "String",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "900": {
        "name": "rle-iterator",
        "tags": [
            "Array",
            "Design",
            "Counting",
            "Iterator"
        ],
        "difficulty": "Medium"
    },
    "904": {
        "name": "fruit-into-baskets",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "901": {
        "name": "online-stock-span",
        "tags": [
            "Stack",
            "Design",
            "Monotonic Stack",
            "Data Stream"
        ],
        "difficulty": "Medium"
    },
    "902": {
        "name": "numbers-at-most-n-given-digit-set",
        "tags": [
            "Array",
            "Math",
            "String",
            "Binary Search",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "903": {
        "name": "valid-permutations-for-di-sequence",
        "tags": [
            "String",
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "905": {
        "name": "sort-array-by-parity",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "906": {
        "name": "super-palindromes",
        "tags": [
            "Math",
            "Enumeration"
        ],
        "difficulty": "Hard"
    },
    "907": {
        "name": "sum-of-subarray-minimums",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Stack",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "910": {
        "name": "smallest-range-ii",
        "tags": [
            "Array",
            "Math",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "911": {
        "name": "online-election",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Design"
        ],
        "difficulty": "Medium"
    },
    "908": {
        "name": "smallest-range-i",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Easy"
    },
    "912": {
        "name": "sort-an-array",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Sorting",
            "Heap (Priority Queue)",
            "Merge Sort",
            "Bucket Sort",
            "Radix Sort",
            "Counting Sort"
        ],
        "difficulty": "Medium"
    },
    "909": {
        "name": "snakes-and-ladders",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "913": {
        "name": "cat-and-mouse",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Graph",
            "Topological Sort",
            "Memoization",
            "Game Theory"
        ],
        "difficulty": "Hard"
    },
    "914": {
        "name": "x-of-a-kind-in-a-deck-of-cards",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Counting",
            "Number Theory"
        ],
        "difficulty": "Easy"
    },
    "915": {
        "name": "partition-array-into-disjoint-intervals",
        "tags": [
            "Array"
        ],
        "difficulty": "Medium"
    },
    "917": {
        "name": "reverse-only-letters",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Easy"
    },
    "916": {
        "name": "word-subsets",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ],
        "difficulty": "Medium"
    },
    "919": {
        "name": "complete-binary-tree-inserter",
        "tags": [
            "Tree",
            "Breadth-First Search",
            "Design",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "920": {
        "name": "number-of-music-playlists",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "difficulty": "Hard"
    },
    "921": {
        "name": "minimum-add-to-make-parentheses-valid",
        "tags": [
            "String",
            "Stack",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "922": {
        "name": "sort-array-by-parity-ii",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "918": {
        "name": "maximum-sum-circular-subarray",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Dynamic Programming",
            "Queue",
            "Monotonic Queue"
        ],
        "difficulty": "Medium"
    },
    "927": {
        "name": "three-equal-parts",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Hard"
    },
    "926": {
        "name": "flip-string-to-monotone-increasing",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "925": {
        "name": "long-pressed-name",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Easy"
    },
    "924": {
        "name": "minimize-malware-spread",
        "tags": [
            "Array",
            "Hash Table",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "923": {
        "name": "3sum-with-multiplicity",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Sorting",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "928": {
        "name": "minimize-malware-spread-ii",
        "tags": [
            "Array",
            "Hash Table",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "929": {
        "name": "unique-email-addresses",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "930": {
        "name": "binary-subarrays-with-sum",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "931": {
        "name": "minimum-falling-path-sum",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "933": {
        "name": "number-of-recent-calls",
        "tags": [
            "Design",
            "Queue",
            "Data Stream"
        ],
        "difficulty": "Easy"
    },
    "934": {
        "name": "shortest-bridge",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "932": {
        "name": "beautiful-array",
        "tags": [
            "Array",
            "Math",
            "Divide and Conquer"
        ],
        "difficulty": "Medium"
    },
    "935": {
        "name": "knight-dialer",
        "tags": [
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "936": {
        "name": "stamping-the-sequence",
        "tags": [
            "String",
            "Stack",
            "Greedy",
            "Queue"
        ],
        "difficulty": "Hard"
    },
    "937": {
        "name": "reorder-data-in-log-files",
        "tags": [
            "Array",
            "String",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "938": {
        "name": "range-sum-of-bst",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "942": {
        "name": "di-string-match",
        "tags": [
            "Array",
            "Two Pointers",
            "String",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "939": {
        "name": "minimum-area-rectangle",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Geometry",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "940": {
        "name": "distinct-subsequences-ii",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "943": {
        "name": "find-the-shortest-superstring",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "941": {
        "name": "valid-mountain-array",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "945": {
        "name": "minimum-increment-to-make-array-unique",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "946": {
        "name": "validate-stack-sequences",
        "tags": [
            "Array",
            "Stack",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "944": {
        "name": "delete-columns-to-make-sorted",
        "tags": [
            "Array",
            "String"
        ],
        "difficulty": "Easy"
    },
    "951": {
        "name": "flip-equivalent-binary-trees",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "947": {
        "name": "most-stones-removed-with-same-row-or-column",
        "tags": [
            "Hash Table",
            "Depth-First Search",
            "Union Find",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "948": {
        "name": "bag-of-tokens",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "950": {
        "name": "reveal-cards-in-increasing-order",
        "tags": [
            "Array",
            "Queue",
            "Sorting",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "949": {
        "name": "largest-time-for-given-digits",
        "tags": [
            "Array",
            "String",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "953": {
        "name": "verifying-an-alien-dictionary",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "952": {
        "name": "largest-component-size-by-common-factor",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Union Find",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "954": {
        "name": "array-of-doubled-pairs",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "956": {
        "name": "tallest-billboard",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "962": {
        "name": "maximum-width-ramp",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "957": {
        "name": "prison-cells-after-n-days",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "961": {
        "name": "n-repeated-element-in-size-2n-array",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Easy"
    },
    "960": {
        "name": "delete-columns-to-make-sorted-iii",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "958": {
        "name": "check-completeness-of-a-binary-tree",
        "tags": [
            "Tree",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "959": {
        "name": "regions-cut-by-slashes",
        "tags": [
            "Array",
            "Hash Table",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "955": {
        "name": "delete-columns-to-make-sorted-ii",
        "tags": [
            "Array",
            "String",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "964": {
        "name": "least-operators-to-express-number",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Memoization"
        ],
        "difficulty": "Hard"
    },
    "966": {
        "name": "vowel-spellchecker",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ],
        "difficulty": "Medium"
    },
    "968": {
        "name": "binary-tree-cameras",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Hard"
    },
    "965": {
        "name": "univalued-binary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "970": {
        "name": "powerful-integers",
        "tags": [
            "Hash Table",
            "Math",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "969": {
        "name": "pancake-sorting",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "967": {
        "name": "numbers-with-same-consecutive-differences",
        "tags": [
            "Backtracking",
            "Breadth-First Search"
        ],
        "difficulty": "Medium"
    },
    "963": {
        "name": "minimum-area-rectangle-ii",
        "tags": [
            "Array",
            "Math",
            "Geometry"
        ],
        "difficulty": "Medium"
    },
    "972": {
        "name": "equal-rational-numbers",
        "tags": [
            "Math",
            "String"
        ],
        "difficulty": "Hard"
    },
    "971": {
        "name": "flip-binary-tree-to-match-preorder-traversal",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "974": {
        "name": "subarray-sums-divisible-by-k",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "975": {
        "name": "odd-even-jump",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Stack",
            "Monotonic Stack",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "973": {
        "name": "k-closest-points-to-origin",
        "tags": [
            "Array",
            "Math",
            "Divide and Conquer",
            "Geometry",
            "Sorting",
            "Heap (Priority Queue)",
            "Quickselect"
        ],
        "difficulty": "Medium"
    },
    "978": {
        "name": "longest-turbulent-subarray",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "977": {
        "name": "squares-of-a-sorted-array",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "976": {
        "name": "largest-perimeter-triangle",
        "tags": [
            "Array",
            "Math",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "980": {
        "name": "unique-paths-iii",
        "tags": [
            "Array",
            "Backtracking",
            "Bit Manipulation",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "983": {
        "name": "minimum-cost-for-tickets",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "982": {
        "name": "triples-with-bitwise-and-equal-to-zero",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation"
        ],
        "difficulty": "Hard"
    },
    "981": {
        "name": "time-based-key-value-store",
        "tags": [
            "Hash Table",
            "String",
            "Binary Search",
            "Design"
        ],
        "difficulty": "Medium"
    },
    "979": {
        "name": "distribute-coins-in-binary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "985": {
        "name": "sum-of-even-numbers-after-queries",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "984": {
        "name": "string-without-aaa-or-bbb",
        "tags": [
            "String",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "991": {
        "name": "broken-calculator",
        "tags": [
            "Math",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "986": {
        "name": "interval-list-intersections",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "difficulty": "Medium"
    },
    "988": {
        "name": "smallest-string-starting-from-leaf",
        "tags": [
            "String",
            "Backtracking",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "987": {
        "name": "vertical-order-traversal-of-a-binary-tree",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Sorting",
            "Binary Tree"
        ],
        "difficulty": "Hard"
    },
    "989": {
        "name": "add-to-array-form-of-integer",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Easy"
    },
    "993": {
        "name": "cousins-in-binary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "990": {
        "name": "satisfiability-of-equality-equations",
        "tags": [
            "Array",
            "String",
            "Union Find",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "992": {
        "name": "subarrays-with-k-different-integers",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window",
            "Counting"
        ],
        "difficulty": "Hard"
    },
    "997": {
        "name": "find-the-town-judge",
        "tags": [
            "Array",
            "Hash Table",
            "Graph"
        ],
        "difficulty": "Easy"
    },
    "996": {
        "name": "number-of-squareful-arrays",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "994": {
        "name": "rotting-oranges",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "998": {
        "name": "maximum-binary-tree-ii",
        "tags": [
            "Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "995": {
        "name": "minimum-number-of-k-consecutive-bit-flips",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Queue",
            "Sliding Window",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "999": {
        "name": "available-captures-for-rook",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "1001": {
        "name": "grid-illumination",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Hard"
    },
    "1002": {
        "name": "find-common-characters",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1000": {
        "name": "minimum-cost-to-merge-stones",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "1003": {
        "name": "check-if-word-is-valid-after-substitutions",
        "tags": [
            "String",
            "Stack"
        ],
        "difficulty": "Medium"
    },
    "1006": {
        "name": "clumsy-factorial",
        "tags": [
            "Math",
            "Stack",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1004": {
        "name": "max-consecutive-ones-iii",
        "tags": [
            "Array",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1005": {
        "name": "maximize-sum-of-array-after-k-negations",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "1010": {
        "name": "pairs-of-songs-with-total-durations-divisible-by-60",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "1008": {
        "name": "construct-binary-search-tree-from-preorder-traversal",
        "tags": [
            "Array",
            "Stack",
            "Tree",
            "Binary Search Tree",
            "Monotonic Stack",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1007": {
        "name": "minimum-domino-rotations-for-equal-row",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1009": {
        "name": "complement-of-base-10-integer",
        "tags": [
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "1011": {
        "name": "capacity-to-ship-packages-within-d-days",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "1013": {
        "name": "partition-array-into-three-parts-with-equal-sum",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "1014": {
        "name": "best-sightseeing-pair",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "1012": {
        "name": "numbers-with-repeated-digits",
        "tags": [
            "Math",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1015": {
        "name": "smallest-integer-divisible-by-k",
        "tags": [
            "Hash Table",
            "Math"
        ],
        "difficulty": "Medium"
    },
    "1016": {
        "name": "binary-string-with-substrings-representing-1-to-n",
        "tags": [
            "String"
        ],
        "difficulty": "Medium"
    },
    "1018": {
        "name": "binary-prefix-divisible-by-5",
        "tags": [
            "Array",
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "1017": {
        "name": "convert-to-base--2",
        "tags": [],
        "difficulty": null
    },
    "1019": {
        "name": "next-greater-node-in-linked-list",
        "tags": [
            "Array",
            "Linked List",
            "Stack",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "1021": {
        "name": "remove-outermost-parentheses",
        "tags": [
            "String",
            "Stack"
        ],
        "difficulty": "Easy"
    },
    "1022": {
        "name": "sum-of-root-to-leaf-binary-numbers",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "1020": {
        "name": "number-of-enclaves",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1024": {
        "name": "video-stitching",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1023": {
        "name": "camelcase-matching",
        "tags": [
            "Array",
            "Two Pointers",
            "String",
            "Trie",
            "String Matching"
        ],
        "difficulty": "Medium"
    },
    "1028": {
        "name": "recover-a-tree-from-preorder-traversal",
        "tags": [
            "String",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Hard"
    },
    "1026": {
        "name": "maximum-difference-between-node-and-ancestor",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1029": {
        "name": "two-city-scheduling",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1027": {
        "name": "longest-arithmetic-subsequence",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "1030": {
        "name": "matrix-cells-in-distance-order",
        "tags": [
            "Array",
            "Math",
            "Geometry",
            "Sorting",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "1031": {
        "name": "maximum-sum-of-two-non-overlapping-subarrays",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "1032": {
        "name": "stream-of-characters",
        "tags": [
            "Array",
            "String",
            "Design",
            "Trie",
            "Data Stream"
        ],
        "difficulty": "Hard"
    },
    "1033": {
        "name": "moving-stones-until-consecutive",
        "tags": [
            "Math",
            "Brainteaser"
        ],
        "difficulty": "Medium"
    },
    "1035": {
        "name": "uncrossed-lines",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "1036": {
        "name": "escape-a-large-maze",
        "tags": [
            "Array",
            "Hash Table",
            "Depth-First Search",
            "Breadth-First Search"
        ],
        "difficulty": "Hard"
    },
    "1037": {
        "name": "valid-boomerang",
        "tags": [
            "Array",
            "Math",
            "Geometry"
        ],
        "difficulty": "Easy"
    },
    "1034": {
        "name": "coloring-a-border",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1039": {
        "name": "minimum-score-triangulation-of-polygon",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "1038": {
        "name": "binary-search-tree-to-greater-sum-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1041": {
        "name": "robot-bounded-in-circle",
        "tags": [
            "Math",
            "String",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1043": {
        "name": "partition-array-for-maximum-sum",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "1042": {
        "name": "flower-planting-with-no-adjacent",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "1040": {
        "name": "moving-stones-until-consecutive-ii",
        "tags": [
            "Array",
            "Math",
            "Two Pointers",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1044": {
        "name": "longest-duplicate-substring",
        "tags": [
            "String",
            "Binary Search",
            "Sliding Window",
            "Rolling Hash",
            "Suffix Array",
            "Hash Function"
        ],
        "difficulty": "Hard"
    },
    "1025": {
        "name": "divisor-game",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Brainteaser",
            "Game Theory"
        ],
        "difficulty": "Easy"
    },
    "1045": {
        "name": "customers-who-bought-all-products",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "1046": {
        "name": "last-stone-weight",
        "tags": [
            "Array",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Easy"
    },
    "1049": {
        "name": "last-stone-weight-ii",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "1051": {
        "name": "height-checker",
        "tags": [
            "Array",
            "Sorting",
            "Counting Sort"
        ],
        "difficulty": "Easy"
    },
    "1048": {
        "name": "longest-string-chain",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "String",
            "Dynamic Programming",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1050": {
        "name": "actors-and-directors-who-cooperated-at-least-three-times",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1047": {
        "name": "remove-all-adjacent-duplicates-in-string",
        "tags": [
            "String",
            "Stack"
        ],
        "difficulty": "Easy"
    },
    "1052": {
        "name": "grumpy-bookstore-owner",
        "tags": [
            "Array",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "1053": {
        "name": "previous-permutation-with-one-swap",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1054": {
        "name": "distant-barcodes",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "1056": {
        "name": "confusing-number",
        "tags": [],
        "difficulty": null
    },
    "1059": {
        "name": "all-paths-from-source-lead-to-destination",
        "tags": [],
        "difficulty": null
    },
    "1057": {
        "name": "campus-bikes",
        "tags": [],
        "difficulty": null
    },
    "1058": {
        "name": "minimize-rounding-error-to-meet-target",
        "tags": [],
        "difficulty": null
    },
    "1055": {
        "name": "shortest-way-to-form-string",
        "tags": [],
        "difficulty": null
    },
    "1060": {
        "name": "missing-element-in-sorted-array",
        "tags": [],
        "difficulty": null
    },
    "1062": {
        "name": "longest-repeating-substring",
        "tags": [],
        "difficulty": null
    },
    "1061": {
        "name": "lexicographically-smallest-equivalent-string",
        "tags": [
            "String",
            "Union Find"
        ],
        "difficulty": "Medium"
    },
    "1064": {
        "name": "fixed-point",
        "tags": [],
        "difficulty": null
    },
    "1067": {
        "name": "digit-count-in-range",
        "tags": [],
        "difficulty": null
    },
    "1066": {
        "name": "campus-bikes-ii",
        "tags": [],
        "difficulty": null
    },
    "1068": {
        "name": "product-sales-analysis-i",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1065": {
        "name": "index-pairs-of-a-string",
        "tags": [],
        "difficulty": null
    },
    "1063": {
        "name": "number-of-valid-subarrays",
        "tags": [],
        "difficulty": null
    },
    "1070": {
        "name": "product-sales-analysis-iii",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "1069": {
        "name": "product-sales-analysis-ii",
        "tags": [],
        "difficulty": null
    },
    "1072": {
        "name": "flip-columns-for-maximum-number-of-equal-rows",
        "tags": [
            "Array",
            "Hash Table",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1071": {
        "name": "greatest-common-divisor-of-strings",
        "tags": [
            "Math",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1075": {
        "name": "project-employees-i",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1073": {
        "name": "adding-two-negabinary-numbers",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Medium"
    },
    "1076": {
        "name": "project-employees-ii",
        "tags": [],
        "difficulty": null
    },
    "1074": {
        "name": "number-of-submatrices-that-sum-to-target",
        "tags": [
            "Array",
            "Hash Table",
            "Matrix",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "1080": {
        "name": "insufficient-nodes-in-root-to-leaf-paths",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1078": {
        "name": "occurrences-after-bigram",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "1077": {
        "name": "project-employees-iii",
        "tags": [],
        "difficulty": null
    },
    "1079": {
        "name": "letter-tile-possibilities",
        "tags": [
            "Hash Table",
            "String",
            "Backtracking",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "1083": {
        "name": "sales-analysis-ii",
        "tags": [],
        "difficulty": null
    },
    "1082": {
        "name": "sales-analysis-i",
        "tags": [],
        "difficulty": null
    },
    "1081": {
        "name": "smallest-subsequence-of-distinct-characters",
        "tags": [
            "String",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "1084": {
        "name": "sales-analysis-iii",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1085": {
        "name": "sum-of-digits-in-the-minimum-number",
        "tags": [],
        "difficulty": null
    },
    "1087": {
        "name": "brace-expansion",
        "tags": [],
        "difficulty": null
    },
    "1086": {
        "name": "high-five",
        "tags": [],
        "difficulty": null
    },
    "1088": {
        "name": "confusing-number-ii",
        "tags": [],
        "difficulty": null
    },
    "1089": {
        "name": "duplicate-zeros",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "difficulty": "Easy"
    },
    "1092": {
        "name": "shortest-common-supersequence",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1090": {
        "name": "largest-values-from-labels",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "1091": {
        "name": "shortest-path-in-binary-matrix",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1093": {
        "name": "statistics-from-a-large-sample",
        "tags": [
            "Array",
            "Math",
            "Probability and Statistics"
        ],
        "difficulty": "Medium"
    },
    "1094": {
        "name": "car-pooling",
        "tags": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)",
            "Simulation",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1096": {
        "name": "brace-expansion-ii",
        "tags": [
            "String",
            "Backtracking",
            "Stack",
            "Breadth-First Search"
        ],
        "difficulty": "Hard"
    },
    "1099": {
        "name": "two-sum-less-than-k",
        "tags": [],
        "difficulty": null
    },
    "1100": {
        "name": "find-k-length-substrings-with-no-repeated-characters",
        "tags": [],
        "difficulty": null
    },
    "1098": {
        "name": "unpopular-books",
        "tags": [],
        "difficulty": null
    },
    "1095": {
        "name": "find-in-mountain-array",
        "tags": [
            "Array",
            "Binary Search",
            "Interactive"
        ],
        "difficulty": "Hard"
    },
    "1097": {
        "name": "game-play-analysis-v",
        "tags": [],
        "difficulty": null
    },
    "1102": {
        "name": "path-with-maximum-minimum-value",
        "tags": [],
        "difficulty": null
    },
    "1101": {
        "name": "the-earliest-moment-when-everyone-become-friends",
        "tags": [],
        "difficulty": null
    },
    "1103": {
        "name": "distribute-candies-to-people",
        "tags": [
            "Math",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "1104": {
        "name": "path-in-zigzag-labelled-binary-tree",
        "tags": [
            "Math",
            "Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1105": {
        "name": "filling-bookcase-shelves",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "1106": {
        "name": "parsing-a-boolean-expression",
        "tags": [
            "String",
            "Stack",
            "Recursion"
        ],
        "difficulty": "Hard"
    },
    "1107": {
        "name": "new-users-daily-count",
        "tags": [],
        "difficulty": null
    },
    "1108": {
        "name": "defanging-an-ip-address",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "1111": {
        "name": "maximum-nesting-depth-of-two-valid-parentheses-strings",
        "tags": [
            "String",
            "Stack"
        ],
        "difficulty": "Medium"
    },
    "1109": {
        "name": "corporate-flight-bookings",
        "tags": [
            "Array",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1110": {
        "name": "delete-nodes-and-return-forest",
        "tags": [
            "Array",
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1113": {
        "name": "reported-posts",
        "tags": [],
        "difficulty": null
    },
    "1112": {
        "name": "highest-grade-for-each-student",
        "tags": [],
        "difficulty": null
    },
    "1114": {
        "name": "print-in-order",
        "tags": [
            "Concurrency"
        ],
        "difficulty": "Easy"
    },
    "1115": {
        "name": "print-foobar-alternately",
        "tags": [
            "Concurrency"
        ],
        "difficulty": "Medium"
    },
    "1116": {
        "name": "print-zero-even-odd",
        "tags": [
            "Concurrency"
        ],
        "difficulty": "Medium"
    },
    "1119": {
        "name": "remove-vowels-from-a-string",
        "tags": [],
        "difficulty": null
    },
    "1121": {
        "name": "divide-array-into-increasing-sequences",
        "tags": [],
        "difficulty": null
    },
    "1118": {
        "name": "number-of-days-in-a-month",
        "tags": [],
        "difficulty": null
    },
    "1117": {
        "name": "building-h2o",
        "tags": [
            "Concurrency"
        ],
        "difficulty": "Medium"
    },
    "1120": {
        "name": "maximum-average-subtree",
        "tags": [],
        "difficulty": null
    },
    "1124": {
        "name": "longest-well-performing-interval",
        "tags": [
            "Array",
            "Hash Table",
            "Stack",
            "Monotonic Stack",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1122": {
        "name": "relative-sort-array",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Counting Sort"
        ],
        "difficulty": "Easy"
    },
    "1123": {
        "name": "lowest-common-ancestor-of-deepest-leaves",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1127": {
        "name": "user-purchase-platform",
        "tags": [],
        "difficulty": null
    },
    "1128": {
        "name": "number-of-equivalent-domino-pairs",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "1125": {
        "name": "smallest-sufficient-team",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "1126": {
        "name": "active-businesses",
        "tags": [],
        "difficulty": null
    },
    "1129": {
        "name": "shortest-path-with-alternating-colors",
        "tags": [
            "Breadth-First Search",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "1130": {
        "name": "minimum-cost-tree-from-leaf-values",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "1134": {
        "name": "armstrong-number",
        "tags": [],
        "difficulty": null
    },
    "1133": {
        "name": "largest-unique-number",
        "tags": [],
        "difficulty": null
    },
    "1131": {
        "name": "maximum-of-absolute-value-expression",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Medium"
    },
    "1136": {
        "name": "parallel-courses",
        "tags": [],
        "difficulty": null
    },
    "1132": {
        "name": "reported-posts-ii",
        "tags": [],
        "difficulty": null
    },
    "1135": {
        "name": "connecting-cities-with-minimum-cost",
        "tags": [],
        "difficulty": null
    },
    "1137": {
        "name": "n-th-tribonacci-number",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Memoization"
        ],
        "difficulty": "Easy"
    },
    "1138": {
        "name": "alphabet-board-path",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Medium"
    },
    "1141": {
        "name": "user-activity-for-the-past-30-days-i",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1139": {
        "name": "largest-1-bordered-square",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1142": {
        "name": "user-activity-for-the-past-30-days-ii",
        "tags": [],
        "difficulty": null
    },
    "1143": {
        "name": "longest-common-subsequence",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "1140": {
        "name": "stone-game-ii",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Prefix Sum",
            "Game Theory"
        ],
        "difficulty": "Medium"
    },
    "1144": {
        "name": "decrease-elements-to-make-array-zigzag",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1148": {
        "name": "article-views-i",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1147": {
        "name": "longest-chunked-palindrome-decomposition",
        "tags": [
            "Two Pointers",
            "String",
            "Dynamic Programming",
            "Greedy",
            "Rolling Hash",
            "Hash Function"
        ],
        "difficulty": "Hard"
    },
    "1145": {
        "name": "binary-tree-coloring-game",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1146": {
        "name": "snapshot-array",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Design"
        ],
        "difficulty": "Medium"
    },
    "1149": {
        "name": "article-views-ii",
        "tags": [],
        "difficulty": null
    },
    "1150": {
        "name": "check-if-a-number-is-majority-element-in-a-sorted-array",
        "tags": [],
        "difficulty": null
    },
    "1151": {
        "name": "minimum-swaps-to-group-all-1's-together",
        "tags": [],
        "difficulty": null
    },
    "1152": {
        "name": "analyze-user-website-visit-pattern",
        "tags": [],
        "difficulty": null
    },
    "1157": {
        "name": "online-majority-element-in-subarray",
        "tags": [
            "Array",
            "Binary Search",
            "Design",
            "Binary Indexed Tree",
            "Segment Tree"
        ],
        "difficulty": "Hard"
    },
    "1154": {
        "name": "day-of-the-year",
        "tags": [
            "Math",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1156": {
        "name": "swap-for-longest-repeated-character-substring",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "1155": {
        "name": "number-of-dice-rolls-with-target-sum",
        "tags": [
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "1153": {
        "name": "string-transforms-into-another-string",
        "tags": [],
        "difficulty": null
    },
    "1159": {
        "name": "market-analysis-ii",
        "tags": [],
        "difficulty": null
    },
    "1160": {
        "name": "find-words-that-can-be-formed-by-characters",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "1158": {
        "name": "market-analysis-i",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "1162": {
        "name": "as-far-from-land-as-possible",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1161": {
        "name": "maximum-level-sum-of-a-binary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1163": {
        "name": "last-substring-in-lexicographical-order",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Hard"
    },
    "1164": {
        "name": "product-price-at-a-given-date",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "1166": {
        "name": "design-file-system",
        "tags": [],
        "difficulty": null
    },
    "1165": {
        "name": "single-row-keyboard",
        "tags": [],
        "difficulty": null
    },
    "1170": {
        "name": "compare-strings-by-frequency-of-the-smallest-character",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1169": {
        "name": "invalid-transactions",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1167": {
        "name": "minimum-cost-to-connect-sticks",
        "tags": [],
        "difficulty": null
    },
    "1168": {
        "name": "optimize-water-distribution-in-a-village",
        "tags": [],
        "difficulty": null
    },
    "1173": {
        "name": "immediate-food-delivery-i",
        "tags": [],
        "difficulty": null
    },
    "1171": {
        "name": "remove-zero-sum-consecutive-nodes-from-linked-list",
        "tags": [
            "Hash Table",
            "Linked List"
        ],
        "difficulty": "Medium"
    },
    "1174": {
        "name": "immediate-food-delivery-ii",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "1172": {
        "name": "dinner-plate-stacks",
        "tags": [
            "Hash Table",
            "Stack",
            "Design",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "1175": {
        "name": "prime-arrangements",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "1176": {
        "name": "diet-plan-performance",
        "tags": [],
        "difficulty": null
    },
    "1177": {
        "name": "can-make-palindrome-from-substring",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1178": {
        "name": "number-of-valid-words-for-each-puzzle",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Trie"
        ],
        "difficulty": "Hard"
    },
    "1179": {
        "name": "reformat-department-table",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1182": {
        "name": "shortest-distance-to-target-color",
        "tags": [],
        "difficulty": null
    },
    "1181": {
        "name": "before-and-after-puzzle",
        "tags": [],
        "difficulty": null
    },
    "1180": {
        "name": "count-substrings-with-only-one-distinct-letter",
        "tags": [],
        "difficulty": null
    },
    "1186": {
        "name": "maximum-subarray-sum-with-one-deletion",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "1187": {
        "name": "make-array-strictly-increasing",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "1185": {
        "name": "day-of-the-week",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "1183": {
        "name": "maximum-number-of-ones",
        "tags": [],
        "difficulty": null
    },
    "1184": {
        "name": "distance-between-bus-stops",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "1190": {
        "name": "reverse-substrings-between-each-pair-of-parentheses",
        "tags": [
            "String",
            "Stack"
        ],
        "difficulty": "Medium"
    },
    "1189": {
        "name": "maximum-number-of-balloons",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "1188": {
        "name": "design-bounded-blocking-queue",
        "tags": [],
        "difficulty": null
    },
    "1192": {
        "name": "critical-connections-in-a-network",
        "tags": [
            "Depth-First Search",
            "Graph",
            "Biconnected Component"
        ],
        "difficulty": "Hard"
    },
    "1195": {
        "name": "fizz-buzz-multithreaded",
        "tags": [
            "Concurrency"
        ],
        "difficulty": "Medium"
    },
    "1194": {
        "name": "tournament-winners",
        "tags": [],
        "difficulty": null
    },
    "1191": {
        "name": "k-concatenation-maximum-sum",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "1193": {
        "name": "monthly-transactions-i",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "1196": {
        "name": "how-many-apples-can-you-put-into-the-basket",
        "tags": [],
        "difficulty": null
    },
    "1197": {
        "name": "minimum-knight-moves",
        "tags": [],
        "difficulty": null
    },
    "1198": {
        "name": "find-smallest-common-element-in-all-rows",
        "tags": [],
        "difficulty": null
    },
    "1199": {
        "name": "minimum-time-to-build-blocks",
        "tags": [],
        "difficulty": null
    },
    "1203": {
        "name": "sort-items-by-groups-respecting-dependencies",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ],
        "difficulty": "Hard"
    },
    "1201": {
        "name": "ugly-number-iii",
        "tags": [
            "Math",
            "Binary Search",
            "Combinatorics",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "1200": {
        "name": "minimum-absolute-difference",
        "tags": [
            "Array",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "1202": {
        "name": "smallest-string-with-swaps",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1206": {
        "name": "design-skiplist",
        "tags": [
            "Linked List",
            "Design"
        ],
        "difficulty": "Hard"
    },
    "1205": {
        "name": "monthly-transactions-ii",
        "tags": [],
        "difficulty": null
    },
    "1204": {
        "name": "last-person-to-fit-in-the-bus",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "1207": {
        "name": "unique-number-of-occurrences",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Easy"
    },
    "1209": {
        "name": "remove-all-adjacent-duplicates-in-string-ii",
        "tags": [
            "String",
            "Stack"
        ],
        "difficulty": "Medium"
    },
    "1208": {
        "name": "get-equal-substrings-within-budget",
        "tags": [
            "String",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1211": {
        "name": "queries-quality-and-percentage",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1212": {
        "name": "team-scores-in-football-tournament",
        "tags": [],
        "difficulty": null
    },
    "1214": {
        "name": "two-sum-bsts",
        "tags": [],
        "difficulty": null
    },
    "1210": {
        "name": "minimum-moves-to-reach-target-with-rotations",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "1213": {
        "name": "intersection-of-three-sorted-arrays",
        "tags": [],
        "difficulty": null
    },
    "1215": {
        "name": "stepping-numbers",
        "tags": [],
        "difficulty": null
    },
    "1217": {
        "name": "minimum-cost-to-move-chips-to-the-same-position",
        "tags": [
            "Array",
            "Math",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "1218": {
        "name": "longest-arithmetic-subsequence-of-given-difference",
        "tags": [
            "Array",
            "Hash Table",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "1216": {
        "name": "valid-palindrome-iii",
        "tags": [],
        "difficulty": null
    },
    "1219": {
        "name": "path-with-maximum-gold",
        "tags": [
            "Array",
            "Backtracking",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1220": {
        "name": "count-vowels-permutation",
        "tags": [
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1221": {
        "name": "split-a-string-in-balanced-strings",
        "tags": [
            "String",
            "Greedy",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "1223": {
        "name": "dice-roll-simulation",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1225": {
        "name": "report-contiguous-dates",
        "tags": [],
        "difficulty": null
    },
    "1222": {
        "name": "queens-that-can-attack-the-king",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1224": {
        "name": "maximum-equal-frequency",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Hard"
    },
    "1226": {
        "name": "the-dining-philosophers",
        "tags": [
            "Concurrency"
        ],
        "difficulty": "Medium"
    },
    "1227": {
        "name": "airplane-seat-assignment-probability",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Brainteaser",
            "Probability and Statistics"
        ],
        "difficulty": "Medium"
    },
    "1228": {
        "name": "missing-number-in-arithmetic-progression",
        "tags": [],
        "difficulty": null
    },
    "1229": {
        "name": "meeting-scheduler",
        "tags": [],
        "difficulty": null
    },
    "1231": {
        "name": "divide-chocolate",
        "tags": [],
        "difficulty": null
    },
    "1230": {
        "name": "toss-strange-coins",
        "tags": [],
        "difficulty": null
    },
    "1232": {
        "name": "check-if-it-is-a-straight-line",
        "tags": [
            "Array",
            "Math",
            "Geometry"
        ],
        "difficulty": "Easy"
    },
    "1233": {
        "name": "remove-sub-folders-from-the-filesystem",
        "tags": [
            "Array",
            "String",
            "Depth-First Search",
            "Trie"
        ],
        "difficulty": "Medium"
    },
    "1234": {
        "name": "replace-the-substring-for-balanced-string",
        "tags": [
            "String",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "1235": {
        "name": "maximum-profit-in-job-scheduling",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "1236": {
        "name": "web-crawler",
        "tags": [],
        "difficulty": null
    },
    "1237": {
        "name": "find-positive-integer-solution-for-a-given-equation",
        "tags": [
            "Math",
            "Two Pointers",
            "Binary Search",
            "Interactive"
        ],
        "difficulty": "Medium"
    },
    "1241": {
        "name": "number-of-comments-per-post",
        "tags": [],
        "difficulty": null
    },
    "1242": {
        "name": "web-crawler-multithreaded",
        "tags": [],
        "difficulty": null
    },
    "1238": {
        "name": "circular-permutation-in-binary-representation",
        "tags": [
            "Math",
            "Backtracking",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "1243": {
        "name": "array-transformation",
        "tags": [],
        "difficulty": null
    },
    "1240": {
        "name": "tiling-a-rectangle-with-the-fewest-squares",
        "tags": [
            "Backtracking"
        ],
        "difficulty": "Hard"
    },
    "1245": {
        "name": "tree-diameter",
        "tags": [],
        "difficulty": null
    },
    "1239": {
        "name": "maximum-length-of-a-concatenated-string-with-unique-characters",
        "tags": [
            "Array",
            "String",
            "Backtracking",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "1244": {
        "name": "design-a-leaderboard",
        "tags": [],
        "difficulty": null
    },
    "1247": {
        "name": "minimum-swaps-to-make-strings-equal",
        "tags": [
            "Math",
            "String",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1248": {
        "name": "count-number-of-nice-subarrays",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Sliding Window",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1246": {
        "name": "palindrome-removal",
        "tags": [],
        "difficulty": null
    },
    "1253": {
        "name": "reconstruct-a-2-row-binary-matrix",
        "tags": [
            "Array",
            "Greedy",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1251": {
        "name": "average-selling-price",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1252": {
        "name": "cells-with-odd-values-in-a-matrix",
        "tags": [
            "Array",
            "Math",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "1249": {
        "name": "minimum-remove-to-make-valid-parentheses",
        "tags": [
            "String",
            "Stack"
        ],
        "difficulty": "Medium"
    },
    "1256": {
        "name": "encode-number",
        "tags": [],
        "difficulty": null
    },
    "1250": {
        "name": "check-if-it-is-a-good-array",
        "tags": [
            "Array",
            "Math",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "1255": {
        "name": "maximum-score-words-formed-by-letters",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "1254": {
        "name": "number-of-closed-islands",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1257": {
        "name": "smallest-common-region",
        "tags": [],
        "difficulty": null
    },
    "1260": {
        "name": "shift-2d-grid",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "1259": {
        "name": "handshakes-that-don't-cross",
        "tags": [],
        "difficulty": null
    },
    "1258": {
        "name": "synonymous-sentences",
        "tags": [],
        "difficulty": null
    },
    "1261": {
        "name": "find-elements-in-a-contaminated-binary-tree",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Design",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1262": {
        "name": "greatest-sum-divisible-by-three",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1263": {
        "name": "minimum-moves-to-move-a-box-to-their-target-location",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Heap (Priority Queue)",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "1264": {
        "name": "page-recommendations",
        "tags": [],
        "difficulty": null
    },
    "1265": {
        "name": "print-immutable-linked-list-in-reverse",
        "tags": [],
        "difficulty": null
    },
    "1269": {
        "name": "number-of-ways-to-stay-in-the-same-place-after-some-steps",
        "tags": [
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1270": {
        "name": "all-people-report-to-the-given-manager",
        "tags": [],
        "difficulty": null
    },
    "1268": {
        "name": "search-suggestions-system",
        "tags": [
            "Array",
            "String",
            "Binary Search",
            "Trie",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "1267": {
        "name": "count-servers-that-communicate",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "1266": {
        "name": "minimum-time-visiting-all-points",
        "tags": [
            "Array",
            "Math",
            "Geometry"
        ],
        "difficulty": "Easy"
    },
    "1271": {
        "name": "hexspeak",
        "tags": [],
        "difficulty": null
    },
    "1272": {
        "name": "remove-interval",
        "tags": [],
        "difficulty": null
    },
    "1273": {
        "name": "delete-tree-nodes",
        "tags": [],
        "difficulty": null
    },
    "1279": {
        "name": "traffic-light-controlled-intersection",
        "tags": [],
        "difficulty": null
    },
    "1274": {
        "name": "number-of-ships-in-a-rectangle",
        "tags": [],
        "difficulty": null
    },
    "1276": {
        "name": "number-of-burgers-with-no-waste-of-ingredients",
        "tags": [
            "Math"
        ],
        "difficulty": "Medium"
    },
    "1278": {
        "name": "palindrome-partitioning-iii",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1275": {
        "name": "find-winner-on-a-tic-tac-toe-game",
        "tags": [
            "Array",
            "Hash Table",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "1277": {
        "name": "count-square-submatrices-with-all-ones",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1285": {
        "name": "find-the-start-and-end-number-of-continuous-ranges",
        "tags": [],
        "difficulty": null
    },
    "1281": {
        "name": "subtract-the-product-and-sum-of-digits-of-an-integer",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "1280": {
        "name": "students-and-examinations",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1284": {
        "name": "minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "1286": {
        "name": "iterator-for-combination",
        "tags": [
            "String",
            "Backtracking",
            "Design",
            "Iterator"
        ],
        "difficulty": "Medium"
    },
    "1282": {
        "name": "group-the-people-given-the-group-size-they-belong-to",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1287": {
        "name": "element-appearing-more-than-25%-in-sorted-array",
        "tags": [],
        "difficulty": null
    },
    "1283": {
        "name": "find-the-smallest-divisor-given-a-threshold",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "1290": {
        "name": "convert-binary-number-in-a-linked-list-to-integer",
        "tags": [
            "Linked List",
            "Math"
        ],
        "difficulty": "Easy"
    },
    "1289": {
        "name": "minimum-falling-path-sum-ii",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "1291": {
        "name": "sequential-digits",
        "tags": [
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "1292": {
        "name": "maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold",
        "tags": [
            "Array",
            "Binary Search",
            "Matrix",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1288": {
        "name": "remove-covered-intervals",
        "tags": [
            "Array",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1293": {
        "name": "shortest-path-in-a-grid-with-obstacles-elimination",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "1295": {
        "name": "find-numbers-with-even-number-of-digits",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Easy"
    },
    "1294": {
        "name": "weather-type-in-each-country",
        "tags": [],
        "difficulty": null
    },
    "1300": {
        "name": "sum-of-mutated-array-closest-to-target",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1297": {
        "name": "maximum-number-of-occurrences-of-a-substring",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "1301": {
        "name": "number-of-paths-with-max-score",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "1296": {
        "name": "divide-array-in-sets-of-k-consecutive-numbers",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1302": {
        "name": "deepest-leaves-sum",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1299": {
        "name": "replace-elements-with-greatest-element-on-right-side",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "1303": {
        "name": "find-the-team-size",
        "tags": [],
        "difficulty": null
    },
    "1298": {
        "name": "maximum-candies-you-can-get-from-boxes",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "1304": {
        "name": "find-n-unique-integers-sum-up-to-zero",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Easy"
    },
    "1305": {
        "name": "all-elements-in-two-binary-search-trees",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Sorting",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1306": {
        "name": "jump-game-iii",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search"
        ],
        "difficulty": "Medium"
    },
    "1308": {
        "name": "running-total-for-different-genders",
        "tags": [],
        "difficulty": null
    },
    "1310": {
        "name": "xor-queries-of-a-subarray",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1309": {
        "name": "decrypt-string-from-alphabet-to-integer-mapping",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "1307": {
        "name": "verbal-arithmetic-puzzle",
        "tags": [
            "Array",
            "Math",
            "String",
            "Backtracking"
        ],
        "difficulty": "Hard"
    },
    "1312": {
        "name": "minimum-insertion-steps-to-make-a-string-palindrome",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1313": {
        "name": "decompress-run-length-encoded-list",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "1311": {
        "name": "get-watched-videos-by-your-friends",
        "tags": [
            "Array",
            "Hash Table",
            "Breadth-First Search",
            "Graph",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1318": {
        "name": "minimum-flips-to-make-a-or-b-equal-to-c",
        "tags": [
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "1315": {
        "name": "sum-of-nodes-with-even-valued-grandparent",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1317": {
        "name": "convert-integer-to-the-sum-of-two-no-zero-integers",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "1321": {
        "name": "restaurant-growth",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "1320": {
        "name": "minimum-distance-to-type-a-word-using-two-fingers",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1316": {
        "name": "distinct-echo-substrings",
        "tags": [
            "String",
            "Trie",
            "Rolling Hash",
            "Hash Function"
        ],
        "difficulty": "Hard"
    },
    "1319": {
        "name": "number-of-operations-to-make-network-connected",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "1314": {
        "name": "matrix-block-sum",
        "tags": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1322": {
        "name": "ads-performance",
        "tags": [],
        "difficulty": null
    },
    "1323": {
        "name": "maximum-69-number",
        "tags": [
            "Math",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "1324": {
        "name": "print-words-vertically",
        "tags": [
            "Array",
            "String",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1325": {
        "name": "delete-leaves-with-a-given-value",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1326": {
        "name": "minimum-number-of-taps-to-open-to-water-a-garden",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Hard"
    },
    "1328": {
        "name": "break-a-palindrome",
        "tags": [
            "String",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1327": {
        "name": "list-the-products-ordered-in-a-period",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1329": {
        "name": "sort-the-matrix-diagonally",
        "tags": [
            "Array",
            "Sorting",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1331": {
        "name": "rank-transform-of-an-array",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "1330": {
        "name": "reverse-subarray-to-maximize-array-value",
        "tags": [
            "Array",
            "Math",
            "Greedy"
        ],
        "difficulty": "Hard"
    },
    "1333": {
        "name": "filter-restaurants-by-vegan-friendly,-price-and-distance",
        "tags": [],
        "difficulty": null
    },
    "1332": {
        "name": "remove-palindromic-subsequences",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1334": {
        "name": "find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",
        "tags": [
            "Dynamic Programming",
            "Graph",
            "Shortest Path"
        ],
        "difficulty": "Medium"
    },
    "1336": {
        "name": "number-of-transactions-per-visit",
        "tags": [],
        "difficulty": null
    },
    "1335": {
        "name": "minimum-difficulty-of-a-job-schedule",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1337": {
        "name": "the-k-weakest-rows-in-a-matrix",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "1338": {
        "name": "reduce-array-size-to-the-half",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "1339": {
        "name": "maximum-product-of-splitted-binary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1340": {
        "name": "jump-game-v",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "1341": {
        "name": "movie-rating",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "1342": {
        "name": "number-of-steps-to-reduce-a-number-to-zero",
        "tags": [
            "Math",
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "1343": {
        "name": "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold",
        "tags": [
            "Array",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "1344": {
        "name": "angle-between-hands-of-a-clock",
        "tags": [
            "Math"
        ],
        "difficulty": "Medium"
    },
    "1345": {
        "name": "jump-game-iv",
        "tags": [
            "Array",
            "Hash Table",
            "Breadth-First Search"
        ],
        "difficulty": "Hard"
    },
    "1346": {
        "name": "check-if-n-and-its-double-exist",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "1347": {
        "name": "minimum-number-of-steps-to-make-two-strings-anagram",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "1348": {
        "name": "tweet-counts-per-frequency",
        "tags": [
            "Hash Table",
            "Binary Search",
            "Design",
            "Sorting",
            "Ordered Set"
        ],
        "difficulty": "Medium"
    },
    "1350": {
        "name": "students-with-invalid-departments",
        "tags": [],
        "difficulty": null
    },
    "1349": {
        "name": "maximum-students-taking-exam",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Matrix",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "1352": {
        "name": "product-of-the-last-k-numbers",
        "tags": [
            "Array",
            "Math",
            "Design",
            "Queue",
            "Data Stream"
        ],
        "difficulty": "Medium"
    },
    "1351": {
        "name": "count-negative-numbers-in-a-sorted-matrix",
        "tags": [
            "Array",
            "Binary Search",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "1355": {
        "name": "activity-participants",
        "tags": [],
        "difficulty": null
    },
    "1354": {
        "name": "construct-target-array-with-multiple-sums",
        "tags": [
            "Array",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "1353": {
        "name": "maximum-number-of-events-that-can-be-attended",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "1356": {
        "name": "sort-integers-by-the-number-of-1-bits",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Sorting",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "1360": {
        "name": "number-of-days-between-two-dates",
        "tags": [
            "Math",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1358": {
        "name": "number-of-substrings-containing-all-three-characters",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "1359": {
        "name": "count-all-valid-pickup-and-delivery-options",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "difficulty": "Hard"
    },
    "1362": {
        "name": "closest-divisors",
        "tags": [
            "Math"
        ],
        "difficulty": "Medium"
    },
    "1363": {
        "name": "largest-multiple-of-three",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Hard"
    },
    "1357": {
        "name": "apply-discount-every-n-orders",
        "tags": [
            "Array",
            "Hash Table",
            "Design"
        ],
        "difficulty": "Medium"
    },
    "1361": {
        "name": "validate-binary-tree-nodes",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1364": {
        "name": "number-of-trusted-contacts-of-a-customer",
        "tags": [],
        "difficulty": null
    },
    "1366": {
        "name": "rank-teams-by-votes",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "1367": {
        "name": "linked-list-in-binary-tree",
        "tags": [
            "Linked List",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1365": {
        "name": "how-many-numbers-are-smaller-than-the-current-number",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "1370": {
        "name": "increasing-decreasing-string",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "1369": {
        "name": "get-the-second-most-recent-activity",
        "tags": [],
        "difficulty": null
    },
    "1368": {
        "name": "minimum-cost-to-make-at-least-one-valid-path-in-a-grid",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Graph",
            "Heap (Priority Queue)",
            "Matrix",
            "Shortest Path"
        ],
        "difficulty": "Hard"
    },
    "1374": {
        "name": "generate-a-string-with-characters-that-have-odd-counts",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "1375": {
        "name": "number-of-times-binary-string-is-prefix-aligned",
        "tags": [
            "Array"
        ],
        "difficulty": "Medium"
    },
    "1372": {
        "name": "longest-zigzag-path-in-a-binary-tree",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1373": {
        "name": "maximum-sum-bst-in-binary-tree",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Hard"
    },
    "1371": {
        "name": "find-the-longest-substring-containing-vowels-in-even-counts",
        "tags": [
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1377": {
        "name": "frog-position-after-t-seconds",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "1378": {
        "name": "replace-employee-id-with-the-unique-identifier",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1376": {
        "name": "time-needed-to-inform-all-employees",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search"
        ],
        "difficulty": "Medium"
    },
    "1384": {
        "name": "total-sales-amount-by-year",
        "tags": [],
        "difficulty": null
    },
    "1380": {
        "name": "lucky-numbers-in-a-matrix",
        "tags": [
            "Array",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "1383": {
        "name": "maximum-performance-of-a-team",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "1382": {
        "name": "balance-a-binary-search-tree",
        "tags": [
            "Divide and Conquer",
            "Greedy",
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1379": {
        "name": "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "1385": {
        "name": "find-the-distance-value-between-two-arrays",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "1381": {
        "name": "design-a-stack-with-increment-operation",
        "tags": [
            "Array",
            "Stack",
            "Design"
        ],
        "difficulty": "Medium"
    },
    "1387": {
        "name": "sort-integers-by-the-power-value",
        "tags": [
            "Dynamic Programming",
            "Memoization",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1388": {
        "name": "pizza-with-3n-slices",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "1386": {
        "name": "cinema-seat-allocation",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "1389": {
        "name": "create-target-array-in-the-given-order",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "1391": {
        "name": "check-if-there-is-a-valid-path-in-a-grid",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1390": {
        "name": "four-divisors",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Medium"
    },
    "1394": {
        "name": "find-lucky-integer-in-an-array",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "1395": {
        "name": "count-number-of-teams",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Binary Indexed Tree",
            "Segment Tree"
        ],
        "difficulty": "Medium"
    },
    "1392": {
        "name": "longest-happy-prefix",
        "tags": [
            "String",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ],
        "difficulty": "Hard"
    },
    "1393": {
        "name": "capital-gain/loss",
        "tags": [],
        "difficulty": null
    },
    "1396": {
        "name": "design-underground-system",
        "tags": [
            "Hash Table",
            "String",
            "Design"
        ],
        "difficulty": "Medium"
    },
    "1397": {
        "name": "find-all-good-strings",
        "tags": [
            "String",
            "Dynamic Programming",
            "String Matching"
        ],
        "difficulty": "Hard"
    },
    "1398": {
        "name": "customers-who-bought-products-a-and-b-but-not-c",
        "tags": [],
        "difficulty": null
    },
    "1399": {
        "name": "count-largest-group",
        "tags": [
            "Hash Table",
            "Math"
        ],
        "difficulty": "Easy"
    },
    "1403": {
        "name": "minimum-subsequence-in-non-increasing-order",
        "tags": [],
        "difficulty": null
    },
    "1401": {
        "name": "circle-and-rectangle-overlapping",
        "tags": [
            "Math",
            "Geometry"
        ],
        "difficulty": "Medium"
    },
    "1400": {
        "name": "construct-k-palindrome-strings",
        "tags": [
            "Hash Table",
            "String",
            "Greedy",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "1402": {
        "name": "reducing-dishes",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "1404": {
        "name": "number-of-steps-to-reduce-a-number-in-binary-representation-to-one",
        "tags": [
            "String",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "1405": {
        "name": "longest-happy-string",
        "tags": [
            "String",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "1407": {
        "name": "top-travellers",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1408": {
        "name": "string-matching-in-an-array",
        "tags": [
            "Array",
            "String",
            "String Matching"
        ],
        "difficulty": "Easy"
    },
    "1406": {
        "name": "stone-game-iii",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Game Theory"
        ],
        "difficulty": "Hard"
    },
    "1412": {
        "name": "find-the-quiet-students-in-all-exams",
        "tags": [],
        "difficulty": null
    },
    "1411": {
        "name": "number-of-ways-to-paint-n-\u00d7-3-grid",
        "tags": [],
        "difficulty": null
    },
    "1413": {
        "name": "minimum-value-to-get-positive-step-by-step-sum",
        "tags": [
            "Array",
            "Prefix Sum"
        ],
        "difficulty": "Easy"
    },
    "1409": {
        "name": "queries-on-a-permutation-with-key",
        "tags": [
            "Array",
            "Binary Indexed Tree",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1410": {
        "name": "html-entity-parser",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Medium"
    },
    "1414": {
        "name": "find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k",
        "tags": [
            "Math",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1416": {
        "name": "restore-the-array",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1415": {
        "name": "the-k-th-lexicographical-string-of-all-happy-strings-of-length-n",
        "tags": [
            "String",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "1421": {
        "name": "npv-queries",
        "tags": [],
        "difficulty": null
    },
    "1420": {
        "name": "build-array-where-you-can-find-the-maximum-exactly-k-comparisons",
        "tags": [
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "1418": {
        "name": "display-table-of-food-orders-in-a-restaurant",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting",
            "Ordered Set"
        ],
        "difficulty": "Medium"
    },
    "1417": {
        "name": "reformat-the-string",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "1419": {
        "name": "minimum-number-of-frogs-croaking",
        "tags": [
            "String",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "1422": {
        "name": "maximum-score-after-splitting-a-string",
        "tags": [
            "String",
            "Prefix Sum"
        ],
        "difficulty": "Easy"
    },
    "1423": {
        "name": "maximum-points-you-can-obtain-from-cards",
        "tags": [
            "Array",
            "Sliding Window",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1424": {
        "name": "diagonal-traverse-ii",
        "tags": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "1426": {
        "name": "counting-elements",
        "tags": [],
        "difficulty": null
    },
    "1428": {
        "name": "leftmost-column-with-at-least-a-one",
        "tags": [],
        "difficulty": null
    },
    "1430": {
        "name": "check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",
        "tags": [],
        "difficulty": null
    },
    "1429": {
        "name": "first-unique-number",
        "tags": [],
        "difficulty": null
    },
    "1427": {
        "name": "perform-string-shifts",
        "tags": [],
        "difficulty": null
    },
    "1425": {
        "name": "constrained-subsequence-sum",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Queue",
            "Sliding Window",
            "Heap (Priority Queue)",
            "Monotonic Queue"
        ],
        "difficulty": "Hard"
    },
    "1435": {
        "name": "create-a-session-bar-chart",
        "tags": [],
        "difficulty": null
    },
    "1432": {
        "name": "max-difference-you-can-get-from-changing-an-integer",
        "tags": [
            "Math",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1433": {
        "name": "check-if-a-string-can-break-another-string",
        "tags": [
            "String",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1434": {
        "name": "number-of-ways-to-wear-different-hats-to-each-other",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "1431": {
        "name": "kids-with-the-greatest-number-of-candies",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "1436": {
        "name": "destination-city",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1438": {
        "name": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
        "tags": [
            "Array",
            "Queue",
            "Sliding Window",
            "Heap (Priority Queue)",
            "Ordered Set",
            "Monotonic Queue"
        ],
        "difficulty": "Medium"
    },
    "1437": {
        "name": "check-if-all-1's-are-at-least-length-k-places-away",
        "tags": [],
        "difficulty": null
    },
    "1442": {
        "name": "count-triplets-that-can-form-two-arrays-of-equal-xor",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1445": {
        "name": "apples-&-oranges",
        "tags": [],
        "difficulty": null
    },
    "1440": {
        "name": "evaluate-boolean-expression",
        "tags": [],
        "difficulty": null
    },
    "1439": {
        "name": "find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows",
        "tags": [
            "Array",
            "Binary Search",
            "Heap (Priority Queue)",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "1443": {
        "name": "minimum-time-to-collect-all-apples-in-a-tree",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search"
        ],
        "difficulty": "Medium"
    },
    "1446": {
        "name": "consecutive-characters",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "1444": {
        "name": "number-of-ways-of-cutting-a-pizza",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Memoization",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "1441": {
        "name": "build-an-array-with-stack-operations",
        "tags": [
            "Array",
            "Stack",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1449": {
        "name": "form-largest-integer-with-digits-that-add-up-to-target",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1451": {
        "name": "rearrange-words-in-a-sentence",
        "tags": [
            "String",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1452": {
        "name": "people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ],
        "difficulty": "Medium"
    },
    "1453": {
        "name": "maximum-number-of-darts-inside-of-a-circular-dartboard",
        "tags": [
            "Array",
            "Math",
            "Geometry"
        ],
        "difficulty": "Hard"
    },
    "1447": {
        "name": "simplified-fractions",
        "tags": [
            "Math",
            "String",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "1448": {
        "name": "count-good-nodes-in-binary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1450": {
        "name": "number-of-students-doing-homework-at-a-given-time",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "1454": {
        "name": "active-users",
        "tags": [],
        "difficulty": null
    },
    "1459": {
        "name": "rectangles-area",
        "tags": [],
        "difficulty": null
    },
    "1458": {
        "name": "max-dot-product-of-two-subsequences",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1456": {
        "name": "maximum-number-of-vowels-in-a-substring-of-given-length",
        "tags": [
            "String",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "1455": {
        "name": "check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence",
        "tags": [
            "Two Pointers",
            "String",
            "String Matching"
        ],
        "difficulty": "Easy"
    },
    "1460": {
        "name": "make-two-arrays-equal-by-reversing-subarrays",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "1457": {
        "name": "pseudo-palindromic-paths-in-a-binary-tree",
        "tags": [
            "Bit Manipulation",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1461": {
        "name": "check-if-a-string-contains-all-binary-codes-of-size-k",
        "tags": [
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Rolling Hash",
            "Hash Function"
        ],
        "difficulty": "Medium"
    },
    "1462": {
        "name": "course-schedule-iv",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ],
        "difficulty": "Medium"
    },
    "1463": {
        "name": "cherry-pickup-ii",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "1468": {
        "name": "calculate-salaries",
        "tags": [],
        "difficulty": null
    },
    "1469": {
        "name": "find-all-the-lonely-nodes",
        "tags": [],
        "difficulty": null
    },
    "1464": {
        "name": "maximum-product-of-two-elements-in-an-array",
        "tags": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Easy"
    },
    "1466": {
        "name": "reorder-routes-to-make-all-paths-lead-to-the-city-zero",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "1467": {
        "name": "probability-of-a-two-boxes-having-the-same-number-of-distinct-balls",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Backtracking",
            "Combinatorics",
            "Probability and Statistics"
        ],
        "difficulty": "Hard"
    },
    "1465": {
        "name": "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1470": {
        "name": "shuffle-the-array",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "1471": {
        "name": "the-k-strongest-values-in-an-array",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1472": {
        "name": "design-browser-history",
        "tags": [
            "Array",
            "Linked List",
            "Stack",
            "Design",
            "Doubly-Linked List",
            "Data Stream"
        ],
        "difficulty": "Medium"
    },
    "1474": {
        "name": "delete-n-nodes-after-m-nodes-of-a-linked-list",
        "tags": [],
        "difficulty": null
    },
    "1473": {
        "name": "paint-house-iii",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1475": {
        "name": "final-prices-with-a-special-discount-in-a-shop",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ],
        "difficulty": "Easy"
    },
    "1476": {
        "name": "subrectangle-queries",
        "tags": [
            "Array",
            "Design",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1477": {
        "name": "find-two-non-overlapping-sub-arrays-each-with-target-sum",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Dynamic Programming",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "1478": {
        "name": "allocate-mailboxes",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "1479": {
        "name": "sales-by-day-of-the-week",
        "tags": [],
        "difficulty": null
    },
    "1480": {
        "name": "running-sum-of-1d-array",
        "tags": [
            "Array",
            "Prefix Sum"
        ],
        "difficulty": "Easy"
    },
    "1482": {
        "name": "minimum-number-of-days-to-make-m-bouquets",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "1481": {
        "name": "least-number-of-unique-integers-after-k-removals",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "1483": {
        "name": "kth-ancestor-of-a-tree-node",
        "tags": [
            "Binary Search",
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Design"
        ],
        "difficulty": "Hard"
    },
    "1485": {
        "name": "clone-binary-tree-with-random-pointer",
        "tags": [],
        "difficulty": null
    },
    "1486": {
        "name": "xor-operation-in-an-array",
        "tags": [
            "Math",
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "1487": {
        "name": "making-file-names-unique",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ],
        "difficulty": "Medium"
    },
    "1484": {
        "name": "group-sold-products-by-the-date",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1489": {
        "name": "find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",
        "tags": [
            "Union Find",
            "Graph",
            "Sorting",
            "Minimum Spanning Tree",
            "Strongly Connected Component"
        ],
        "difficulty": "Hard"
    },
    "1488": {
        "name": "avoid-flood-in-the-city",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "1490": {
        "name": "clone-n-ary-tree",
        "tags": [],
        "difficulty": null
    },
    "1491": {
        "name": "average-salary-excluding-the-minimum-and-maximum-salary",
        "tags": [
            "Array",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "1494": {
        "name": "parallel-courses-ii",
        "tags": [
            "Dynamic Programming",
            "Bit Manipulation",
            "Graph",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "1495": {
        "name": "friendly-movies-streamed-last-month",
        "tags": [],
        "difficulty": null
    },
    "1497": {
        "name": "check-if-array-pairs-are-divisible-by-k",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "1492": {
        "name": "the-kth-factor-of-n",
        "tags": [
            "Math",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "1496": {
        "name": "path-crossing",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1493": {
        "name": "longest-subarray-of-1's-after-deleting-one-element",
        "tags": [],
        "difficulty": null
    },
    "1498": {
        "name": "number-of-subsequences-that-satisfy-the-given-sum-condition",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1500": {
        "name": "design-a-file-sharing-system",
        "tags": [],
        "difficulty": null
    },
    "1499": {
        "name": "max-value-of-equation",
        "tags": [
            "Array",
            "Queue",
            "Sliding Window",
            "Heap (Priority Queue)",
            "Monotonic Queue"
        ],
        "difficulty": "Hard"
    },
    "1501": {
        "name": "countries-you-can-safely-invest-in",
        "tags": [],
        "difficulty": null
    },
    "1504": {
        "name": "count-submatrices-with-all-ones",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Stack",
            "Matrix",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "1502": {
        "name": "can-make-arithmetic-progression-from-sequence",
        "tags": [
            "Array",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "1503": {
        "name": "last-moment-before-all-ants-fall-out-of-a-plank",
        "tags": [
            "Array",
            "Brainteaser",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1505": {
        "name": "minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits",
        "tags": [
            "String",
            "Greedy",
            "Binary Indexed Tree",
            "Segment Tree"
        ],
        "difficulty": "Hard"
    },
    "1513": {
        "name": "number-of-substrings-with-only-1s",
        "tags": [
            "Math",
            "String"
        ],
        "difficulty": "Medium"
    },
    "1510": {
        "name": "stone-game-iv",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Game Theory"
        ],
        "difficulty": "Hard"
    },
    "1506": {
        "name": "find-root-of-n-ary-tree",
        "tags": [],
        "difficulty": null
    },
    "1508": {
        "name": "range-sum-of-sorted-subarray-sums",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1511": {
        "name": "customer-order-frequency",
        "tags": [],
        "difficulty": null
    },
    "1507": {
        "name": "reformat-date",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "1509": {
        "name": "minimum-difference-between-largest-and-smallest-value-in-three-moves",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1512": {
        "name": "number-of-good-pairs",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "1514": {
        "name": "path-with-maximum-probability",
        "tags": [
            "Array",
            "Graph",
            "Heap (Priority Queue)",
            "Shortest Path"
        ],
        "difficulty": "Medium"
    },
    "1515": {
        "name": "best-position-for-a-service-centre",
        "tags": [
            "Array",
            "Math",
            "Geometry",
            "Randomized"
        ],
        "difficulty": "Hard"
    },
    "1517": {
        "name": "find-users-with-valid-e-mails",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1516": {
        "name": "move-sub-tree-of-n-ary-tree",
        "tags": [],
        "difficulty": null
    },
    "1519": {
        "name": "number-of-nodes-in-the-sub-tree-with-the-same-label",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "1518": {
        "name": "water-bottles",
        "tags": [
            "Math",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "1520": {
        "name": "maximum-number-of-non-overlapping-substrings",
        "tags": [
            "String",
            "Greedy"
        ],
        "difficulty": "Hard"
    },
    "1521": {
        "name": "find-a-value-of-a-mysterious-function-closest-to-target",
        "tags": [
            "Array",
            "Binary Search",
            "Bit Manipulation",
            "Segment Tree"
        ],
        "difficulty": "Hard"
    },
    "1522": {
        "name": "diameter-of-n-ary-tree",
        "tags": [],
        "difficulty": null
    },
    "1523": {
        "name": "count-odd-numbers-in-an-interval-range",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "1524": {
        "name": "number-of-sub-arrays-with-odd-sum",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1525": {
        "name": "number-of-good-ways-to-split-a-string",
        "tags": [
            "Hash Table",
            "String",
            "Dynamic Programming",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "1526": {
        "name": "minimum-number-of-increments-on-subarrays-to-form-a-target-array",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ],
        "difficulty": "Hard"
    },
    "1528": {
        "name": "shuffle-string",
        "tags": [
            "Array",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1527": {
        "name": "patients-with-a-condition",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1529": {
        "name": "minimum-suffix-flips",
        "tags": [
            "String",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1530": {
        "name": "number-of-good-leaf-nodes-pairs",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1531": {
        "name": "string-compression-ii",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1533": {
        "name": "find-the-index-of-the-large-integer",
        "tags": [],
        "difficulty": null
    },
    "1532": {
        "name": "the-most-recent-three-orders",
        "tags": [],
        "difficulty": null
    },
    "1535": {
        "name": "find-the-winner-of-an-array-game",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1536": {
        "name": "minimum-swaps-to-arrange-a-binary-grid",
        "tags": [
            "Array",
            "Greedy",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1537": {
        "name": "get-the-maximum-score",
        "tags": [
            "Array",
            "Two Pointers",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Hard"
    },
    "1538": {
        "name": "guess-the-majority-in-a-hidden-array",
        "tags": [],
        "difficulty": null
    },
    "1534": {
        "name": "count-good-triplets",
        "tags": [
            "Array",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "1539": {
        "name": "kth-missing-positive-number",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Easy"
    },
    "1540": {
        "name": "can-convert-string-in-k-moves",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Medium"
    },
    "1541": {
        "name": "minimum-insertions-to-balance-a-parentheses-string",
        "tags": [
            "String",
            "Stack",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1542": {
        "name": "find-longest-awesome-substring",
        "tags": [
            "Hash Table",
            "String",
            "Bit Manipulation"
        ],
        "difficulty": "Hard"
    },
    "1543": {
        "name": "fix-product-name-format",
        "tags": [],
        "difficulty": null
    },
    "1544": {
        "name": "make-the-string-great",
        "tags": [
            "String",
            "Stack"
        ],
        "difficulty": "Easy"
    },
    "1548": {
        "name": "the-most-similar-path-in-a-graph",
        "tags": [],
        "difficulty": null
    },
    "1545": {
        "name": "find-kth-bit-in-nth-binary-string",
        "tags": [
            "String",
            "Recursion",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1547": {
        "name": "minimum-cost-to-cut-a-stick",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "1546": {
        "name": "maximum-number-of-non-overlapping-subarrays-with-sum-equals-target",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1552": {
        "name": "magnetic-force-between-two-balls",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1549": {
        "name": "the-most-recent-orders-for-each-product",
        "tags": [],
        "difficulty": null
    },
    "1550": {
        "name": "three-consecutive-odds",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "1551": {
        "name": "minimum-operations-to-make-array-equal",
        "tags": [
            "Math"
        ],
        "difficulty": "Medium"
    },
    "1555": {
        "name": "bank-account-summary",
        "tags": [],
        "difficulty": null
    },
    "1553": {
        "name": "minimum-number-of-days-to-eat-n-oranges",
        "tags": [
            "Dynamic Programming",
            "Memoization"
        ],
        "difficulty": "Hard"
    },
    "1556": {
        "name": "thousand-separator",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "1554": {
        "name": "strings-differ-by-one-character",
        "tags": [],
        "difficulty": null
    },
    "1560": {
        "name": "most-visited-sector-in-a-circular-track",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "1558": {
        "name": "minimum-numbers-of-function-calls-to-make-target-array",
        "tags": [
            "Array",
            "Greedy",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "1559": {
        "name": "detect-cycles-in-2d-grid",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1561": {
        "name": "maximum-number-of-coins-you-can-get",
        "tags": [
            "Array",
            "Math",
            "Greedy",
            "Sorting",
            "Game Theory"
        ],
        "difficulty": "Medium"
    },
    "1562": {
        "name": "find-latest-group-of-size-m",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1563": {
        "name": "stone-game-v",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Game Theory"
        ],
        "difficulty": "Hard"
    },
    "1557": {
        "name": "minimum-number-of-vertices-to-reach-all-nodes",
        "tags": [
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "1564": {
        "name": "put-boxes-into-the-warehouse-i",
        "tags": [],
        "difficulty": null
    },
    "1567": {
        "name": "maximum-length-of-subarray-with-positive-product",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1566": {
        "name": "detect-pattern-of-length-m-repeated-k-or-more-times",
        "tags": [
            "Array",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "1565": {
        "name": "unique-orders-and-customers-per-month",
        "tags": [],
        "difficulty": null
    },
    "1568": {
        "name": "minimum-number-of-days-to-disconnect-island",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix",
            "Strongly Connected Component"
        ],
        "difficulty": "Hard"
    },
    "1570": {
        "name": "dot-product-of-two-sparse-vectors",
        "tags": [],
        "difficulty": null
    },
    "1571": {
        "name": "warehouse-manager",
        "tags": [],
        "difficulty": null
    },
    "1569": {
        "name": "number-of-ways-to-reorder-array-to-get-same-bst",
        "tags": [
            "Array",
            "Math",
            "Divide and Conquer",
            "Dynamic Programming",
            "Tree",
            "Union Find",
            "Binary Search Tree",
            "Memoization",
            "Combinatorics",
            "Binary Tree"
        ],
        "difficulty": "Hard"
    },
    "1574": {
        "name": "shortest-subarray-to-be-removed-to-make-array-sorted",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Stack",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "1575": {
        "name": "count-all-possible-routes",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Memoization"
        ],
        "difficulty": "Hard"
    },
    "1573": {
        "name": "number-of-ways-to-split-a-string",
        "tags": [
            "Math",
            "String"
        ],
        "difficulty": "Medium"
    },
    "1572": {
        "name": "matrix-diagonal-sum",
        "tags": [
            "Array",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "1576": {
        "name": "replace-all-?'s-to-avoid-consecutive-repeating-characters",
        "tags": [],
        "difficulty": null
    },
    "1579": {
        "name": "remove-max-number-of-edges-to-keep-graph-fully-traversable",
        "tags": [
            "Union Find",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "1577": {
        "name": "number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Two Pointers"
        ],
        "difficulty": "Medium"
    },
    "1578": {
        "name": "minimum-time-to-make-rope-colorful",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1582": {
        "name": "special-positions-in-a-binary-matrix",
        "tags": [
            "Array",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "1581": {
        "name": "customer-who-visited-but-did-not-make-any-transactions",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1580": {
        "name": "put-boxes-into-the-warehouse-ii",
        "tags": [],
        "difficulty": null
    },
    "1586": {
        "name": "binary-search-tree-iterator-ii",
        "tags": [],
        "difficulty": null
    },
    "1583": {
        "name": "count-unhappy-friends",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1584": {
        "name": "min-cost-to-connect-all-points",
        "tags": [
            "Array",
            "Union Find",
            "Graph",
            "Minimum Spanning Tree"
        ],
        "difficulty": "Medium"
    },
    "1585": {
        "name": "check-if-string-is-transformable-with-substring-sort-operations",
        "tags": [
            "String",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "1587": {
        "name": "bank-account-summary-ii",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1589": {
        "name": "maximum-sum-obtained-of-any-permutation",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1588": {
        "name": "sum-of-all-odd-length-subarrays",
        "tags": [
            "Array",
            "Math",
            "Prefix Sum"
        ],
        "difficulty": "Easy"
    },
    "1590": {
        "name": "make-sum-divisible-by-p",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1591": {
        "name": "strange-printer-ii",
        "tags": [
            "Array",
            "Graph",
            "Topological Sort",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "1592": {
        "name": "rearrange-spaces-between-words",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "1593": {
        "name": "split-a-string-into-the-max-number-of-unique-substrings",
        "tags": [
            "Hash Table",
            "String",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "1594": {
        "name": "maximum-non-negative-product-in-a-matrix",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1595": {
        "name": "minimum-cost-to-connect-two-groups-of-points",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Matrix",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "1597": {
        "name": "build-binary-expression-tree-from-infix-expression",
        "tags": [],
        "difficulty": null
    },
    "1598": {
        "name": "crawler-log-folder",
        "tags": [
            "Array",
            "String",
            "Stack"
        ],
        "difficulty": "Easy"
    },
    "1600": {
        "name": "throne-inheritance",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Design"
        ],
        "difficulty": "Medium"
    },
    "1601": {
        "name": "maximum-number-of-achievable-transfer-requests",
        "tags": [
            "Array",
            "Backtracking",
            "Bit Manipulation",
            "Enumeration"
        ],
        "difficulty": "Hard"
    },
    "1596": {
        "name": "the-most-frequently-ordered-products-for-each-customer",
        "tags": [],
        "difficulty": null
    },
    "1602": {
        "name": "find-nearest-right-node-in-binary-tree",
        "tags": [],
        "difficulty": null
    },
    "1603": {
        "name": "design-parking-system",
        "tags": [
            "Design",
            "Simulation",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "1599": {
        "name": "maximum-profit-of-operating-a-centennial-wheel",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1604": {
        "name": "alert-using-same-key-card-three-or-more-times-in-a-one-hour-period",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1606": {
        "name": "find-servers-that-handled-most-number-of-requests",
        "tags": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "1605": {
        "name": "find-valid-matrix-given-row-and-column-sums",
        "tags": [
            "Array",
            "Greedy",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1607": {
        "name": "sellers-with-no-sales",
        "tags": [],
        "difficulty": null
    },
    "1608": {
        "name": "special-array-with-x-elements-greater-than-or-equal-x",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "1611": {
        "name": "minimum-one-bit-operations-to-make-integers-zero",
        "tags": [
            "Dynamic Programming",
            "Bit Manipulation",
            "Memoization"
        ],
        "difficulty": "Hard"
    },
    "1610": {
        "name": "maximum-number-of-visible-points",
        "tags": [
            "Array",
            "Math",
            "Geometry",
            "Sliding Window",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "1609": {
        "name": "even-odd-tree",
        "tags": [
            "Tree",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "1612": {
        "name": "check-if-two-expression-trees-are-equivalent",
        "tags": [],
        "difficulty": null
    },
    "1614": {
        "name": "maximum-nesting-depth-of-the-parentheses",
        "tags": [
            "String",
            "Stack"
        ],
        "difficulty": "Easy"
    },
    "1613": {
        "name": "find-the-missing-ids",
        "tags": [],
        "difficulty": null
    },
    "1618": {
        "name": "maximum-font-to-fit-a-sentence-in-a-screen",
        "tags": [],
        "difficulty": null
    },
    "1619": {
        "name": "mean-of-array-after-removing-some-elements",
        "tags": [
            "Array",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "1615": {
        "name": "maximal-network-rank",
        "tags": [
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "1617": {
        "name": "count-subtrees-with-max-distance-between-cities",
        "tags": [
            "Dynamic Programming",
            "Bit Manipulation",
            "Tree",
            "Enumeration",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "1616": {
        "name": "split-two-strings-to-make-palindrome",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Medium"
    },
    "1620": {
        "name": "coordinate-with-maximum-network-quality",
        "tags": [
            "Array",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "1621": {
        "name": "number-of-sets-of-k-non-overlapping-line-segments",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "difficulty": "Medium"
    },
    "1622": {
        "name": "fancy-sequence",
        "tags": [
            "Math",
            "Design",
            "Segment Tree"
        ],
        "difficulty": "Hard"
    },
    "1623": {
        "name": "all-valid-triplets-that-can-represent-a-country",
        "tags": [],
        "difficulty": null
    },
    "1624": {
        "name": "largest-substring-between-two-equal-characters",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1625": {
        "name": "lexicographically-smallest-string-after-applying-operations",
        "tags": [
            "String",
            "Depth-First Search",
            "Breadth-First Search",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "1628": {
        "name": "design-an-expression-tree-with-evaluate-function",
        "tags": [],
        "difficulty": null
    },
    "1626": {
        "name": "best-team-with-no-conflicts",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1629": {
        "name": "slowest-key",
        "tags": [
            "Array",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1627": {
        "name": "graph-connectivity-with-threshold",
        "tags": [
            "Array",
            "Math",
            "Union Find",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "1630": {
        "name": "arithmetic-subarrays",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1631": {
        "name": "path-with-minimum-effort",
        "tags": [
            "Array",
            "Binary Search",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Heap (Priority Queue)",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1633": {
        "name": "percentage-of-users-attended-a-contest",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1632": {
        "name": "rank-transform-of-a-matrix",
        "tags": [
            "Array",
            "Union Find",
            "Graph",
            "Topological Sort",
            "Sorting",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "1635": {
        "name": "hopper-company-queries-i",
        "tags": [],
        "difficulty": null
    },
    "1634": {
        "name": "add-two-polynomials-represented-as-linked-lists",
        "tags": [],
        "difficulty": null
    },
    "1636": {
        "name": "sort-array-by-increasing-frequency",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "1639": {
        "name": "number-of-ways-to-form-a-target-string-given-a-dictionary",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1640": {
        "name": "check-array-formation-through-concatenation",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Easy"
    },
    "1637": {
        "name": "widest-vertical-area-between-two-points-containing-no-points",
        "tags": [
            "Array",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "1641": {
        "name": "count-sorted-vowel-strings",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "difficulty": "Medium"
    },
    "1642": {
        "name": "furthest-building-you-can-reach",
        "tags": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "1643": {
        "name": "kth-smallest-instructions",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "difficulty": "Hard"
    },
    "1638": {
        "name": "count-substrings-that-differ-by-one-character",
        "tags": [
            "Hash Table",
            "String",
            "Dynamic Programming",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "1644": {
        "name": "lowest-common-ancestor-of-a-binary-tree-ii",
        "tags": [],
        "difficulty": null
    },
    "1645": {
        "name": "hopper-company-queries-ii",
        "tags": [],
        "difficulty": null
    },
    "1646": {
        "name": "get-maximum-in-generated-array",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "1648": {
        "name": "sell-diminishing-valued-colored-balls",
        "tags": [
            "Array",
            "Math",
            "Binary Search",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "1647": {
        "name": "minimum-deletions-to-make-character-frequencies-unique",
        "tags": [
            "Hash Table",
            "String",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1649": {
        "name": "create-sorted-array-through-instructions",
        "tags": [
            "Array",
            "Binary Search",
            "Divide and Conquer",
            "Binary Indexed Tree",
            "Segment Tree",
            "Merge Sort",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "1650": {
        "name": "lowest-common-ancestor-of-a-binary-tree-iii",
        "tags": [],
        "difficulty": null
    },
    "1651": {
        "name": "hopper-company-queries-iii",
        "tags": [],
        "difficulty": null
    },
    "1652": {
        "name": "defuse-the-bomb",
        "tags": [
            "Array",
            "Sliding Window"
        ],
        "difficulty": "Easy"
    },
    "1653": {
        "name": "minimum-deletions-to-make-string-balanced",
        "tags": [
            "String",
            "Dynamic Programming",
            "Stack"
        ],
        "difficulty": "Medium"
    },
    "1654": {
        "name": "minimum-jumps-to-reach-home",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Breadth-First Search"
        ],
        "difficulty": "Medium"
    },
    "1656": {
        "name": "design-an-ordered-stream",
        "tags": [
            "Array",
            "Hash Table",
            "Design",
            "Data Stream"
        ],
        "difficulty": "Easy"
    },
    "1655": {
        "name": "distribute-repeating-integers",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "1657": {
        "name": "determine-if-two-strings-are-close",
        "tags": [
            "Hash Table",
            "String",
            "Sorting",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "1658": {
        "name": "minimum-operations-to-reduce-x-to-zero",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1660": {
        "name": "correct-a-binary-tree",
        "tags": [],
        "difficulty": null
    },
    "1661": {
        "name": "average-time-of-process-per-machine",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1663": {
        "name": "smallest-string-with-a-given-numeric-value",
        "tags": [
            "String",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1662": {
        "name": "check-if-two-string-arrays-are-equivalent",
        "tags": [
            "Array",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1664": {
        "name": "ways-to-make-a-fair-array",
        "tags": [
            "Array",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1659": {
        "name": "maximize-grid-happiness",
        "tags": [
            "Dynamic Programming",
            "Bit Manipulation",
            "Memoization",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "1666": {
        "name": "change-the-root-of-a-binary-tree",
        "tags": [],
        "difficulty": null
    },
    "1665": {
        "name": "minimum-initial-energy-to-finish-tasks",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "1667": {
        "name": "fix-names-in-a-table",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1668": {
        "name": "maximum-repeating-substring",
        "tags": [
            "String",
            "Dynamic Programming",
            "String Matching"
        ],
        "difficulty": "Easy"
    },
    "1669": {
        "name": "merge-in-between-linked-lists",
        "tags": [
            "Linked List"
        ],
        "difficulty": "Medium"
    },
    "1671": {
        "name": "minimum-number-of-removals-to-make-mountain-array",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Hard"
    },
    "1670": {
        "name": "design-front-middle-back-queue",
        "tags": [
            "Array",
            "Linked List",
            "Design",
            "Queue",
            "Data Stream"
        ],
        "difficulty": "Medium"
    },
    "1676": {
        "name": "lowest-common-ancestor-of-a-binary-tree-iv",
        "tags": [],
        "difficulty": null
    },
    "1675": {
        "name": "minimize-deviation-in-array",
        "tags": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "1673": {
        "name": "find-the-most-competitive-subsequence",
        "tags": [
            "Array",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "1672": {
        "name": "richest-customer-wealth",
        "tags": [
            "Array",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "1674": {
        "name": "minimum-moves-to-make-array-complementary",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1677": {
        "name": "product's-worth-over-invoices",
        "tags": [],
        "difficulty": null
    },
    "1679": {
        "name": "max-number-of-k-sum-pairs",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1683": {
        "name": "invalid-tweets",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1678": {
        "name": "goal-parser-interpretation",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "1682": {
        "name": "longest-palindromic-subsequence-ii",
        "tags": [],
        "difficulty": null
    },
    "1681": {
        "name": "minimum-incompatibility",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "1680": {
        "name": "concatenation-of-consecutive-binary-numbers",
        "tags": [
            "Math",
            "Bit Manipulation",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1685": {
        "name": "sum-of-absolute-differences-in-a-sorted-array",
        "tags": [
            "Array",
            "Math",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1684": {
        "name": "count-the-number-of-consistent-strings",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "1688": {
        "name": "count-of-matches-in-tournament",
        "tags": [
            "Math",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "1686": {
        "name": "stone-game-vi",
        "tags": [
            "Array",
            "Math",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Game Theory"
        ],
        "difficulty": "Medium"
    },
    "1687": {
        "name": "delivering-boxes-from-storage-to-ports",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Segment Tree",
            "Queue",
            "Heap (Priority Queue)",
            "Prefix Sum",
            "Monotonic Queue"
        ],
        "difficulty": "Hard"
    },
    "1692": {
        "name": "count-ways-to-distribute-candies",
        "tags": [],
        "difficulty": null
    },
    "1689": {
        "name": "partitioning-into-minimum-number-of-deci-binary-numbers",
        "tags": [
            "String",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1691": {
        "name": "maximum-height-by-stacking-cuboids",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "1690": {
        "name": "stone-game-vii",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Game Theory"
        ],
        "difficulty": "Medium"
    },
    "1694": {
        "name": "reformat-phone-number",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "1696": {
        "name": "jump-game-vi",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Queue",
            "Heap (Priority Queue)",
            "Monotonic Queue"
        ],
        "difficulty": "Medium"
    },
    "1698": {
        "name": "number-of-distinct-substrings-in-a-string",
        "tags": [],
        "difficulty": null
    },
    "1695": {
        "name": "maximum-erasure-value",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "1699": {
        "name": "number-of-calls-between-two-persons",
        "tags": [],
        "difficulty": null
    },
    "1693": {
        "name": "daily-leads-and-partners",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1697": {
        "name": "checking-existence-of-edge-length-limited-paths",
        "tags": [
            "Array",
            "Two Pointers",
            "Union Find",
            "Graph",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "1700": {
        "name": "number-of-students-unable-to-eat-lunch",
        "tags": [
            "Array",
            "Stack",
            "Queue",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "1701": {
        "name": "average-waiting-time",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1708": {
        "name": "largest-subarray-length-k",
        "tags": [],
        "difficulty": null
    },
    "1707": {
        "name": "maximum-xor-with-an-element-from-array",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Trie"
        ],
        "difficulty": "Hard"
    },
    "1704": {
        "name": "determine-if-string-halves-are-alike",
        "tags": [
            "String",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "1702": {
        "name": "maximum-binary-string-after-change",
        "tags": [
            "String",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1706": {
        "name": "where-will-the-ball-fall",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1703": {
        "name": "minimum-adjacent-swaps-for-k-consecutive-ones",
        "tags": [
            "Array",
            "Greedy",
            "Sliding Window",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "1705": {
        "name": "maximum-number-of-eaten-apples",
        "tags": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "1714": {
        "name": "sum-of-special-evenly-spaced-elements-in-array",
        "tags": [],
        "difficulty": null
    },
    "1713": {
        "name": "minimum-operations-to-make-a-subsequence",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Greedy"
        ],
        "difficulty": "Hard"
    },
    "1711": {
        "name": "count-good-meals",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Medium"
    },
    "1712": {
        "name": "ways-to-split-array-into-three-subarrays",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1710": {
        "name": "maximum-units-on-a-truck",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "1709": {
        "name": "biggest-window-between-visits",
        "tags": [],
        "difficulty": null
    },
    "1715": {
        "name": "count-apples-and-oranges",
        "tags": [],
        "difficulty": null
    },
    "1716": {
        "name": "calculate-money-in-leetcode-bank",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "1718": {
        "name": "construct-the-lexicographically-largest-valid-sequence",
        "tags": [
            "Array",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "1717": {
        "name": "maximum-score-from-removing-substrings",
        "tags": [
            "String",
            "Stack",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1721": {
        "name": "swapping-nodes-in-a-linked-list",
        "tags": [
            "Linked List",
            "Two Pointers"
        ],
        "difficulty": "Medium"
    },
    "1719": {
        "name": "number-of-ways-to-reconstruct-a-tree",
        "tags": [
            "Tree",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "1722": {
        "name": "minimize-hamming-distance-after-swap-operations",
        "tags": [
            "Array",
            "Depth-First Search",
            "Union Find"
        ],
        "difficulty": "Medium"
    },
    "1720": {
        "name": "decode-xored-array",
        "tags": [
            "Array",
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "1723": {
        "name": "find-minimum-time-to-finish-all-jobs",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "1724": {
        "name": "checking-existence-of-edge-length-limited-paths-ii",
        "tags": [],
        "difficulty": null
    },
    "1727": {
        "name": "largest-submatrix-with-rearrangements",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1730": {
        "name": "shortest-path-to-get-food",
        "tags": [],
        "difficulty": null
    },
    "1725": {
        "name": "number-of-rectangles-that-can-form-the-largest-square",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "1726": {
        "name": "tuple-with-same-product",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "1729": {
        "name": "find-followers-count",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1728": {
        "name": "cat-and-mouse-ii",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Graph",
            "Topological Sort",
            "Memoization",
            "Matrix",
            "Game Theory"
        ],
        "difficulty": "Hard"
    },
    "1731": {
        "name": "the-number-of-employees-which-report-to-each-employee",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1732": {
        "name": "find-the-highest-altitude",
        "tags": [
            "Array",
            "Prefix Sum"
        ],
        "difficulty": "Easy"
    },
    "1734": {
        "name": "decode-xored-permutation",
        "tags": [
            "Array",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "1736": {
        "name": "latest-time-by-replacing-hidden-digits",
        "tags": [
            "String",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "1733": {
        "name": "minimum-number-of-people-to-teach",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1735": {
        "name": "count-ways-to-make-array-with-product",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Combinatorics",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "1738": {
        "name": "find-kth-largest-xor-coordinate-value",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Bit Manipulation",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix",
            "Prefix Sum",
            "Quickselect"
        ],
        "difficulty": "Medium"
    },
    "1737": {
        "name": "change-minimum-characters-to-satisfy-one-of-three-conditions",
        "tags": [
            "Hash Table",
            "String",
            "Counting",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1740": {
        "name": "find-distance-in-a-binary-tree",
        "tags": [],
        "difficulty": null
    },
    "1739": {
        "name": "building-boxes",
        "tags": [
            "Math",
            "Binary Search",
            "Greedy"
        ],
        "difficulty": "Hard"
    },
    "1744": {
        "name": "can-you-eat-your-favorite-candy-on-your-favorite-day?",
        "tags": [
            "Array",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1746": {
        "name": "maximum-subarray-sum-after-one-operation",
        "tags": [],
        "difficulty": null
    },
    "1745": {
        "name": "palindrome-partitioning-iv",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1741": {
        "name": "find-total-time-spent-by-each-employee",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1743": {
        "name": "restore-the-array-from-adjacent-pairs",
        "tags": [
            "Array",
            "Hash Table",
            "Depth-First Search"
        ],
        "difficulty": "Medium"
    },
    "1742": {
        "name": "maximum-number-of-balls-in-a-box",
        "tags": [
            "Hash Table",
            "Math",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "1748": {
        "name": "sum-of-unique-elements",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "1747": {
        "name": "leetflex-banned-accounts",
        "tags": [],
        "difficulty": null
    },
    "1749": {
        "name": "maximum-absolute-sum-of-any-subarray",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "1750": {
        "name": "minimum-length-of-string-after-deleting-similar-ends",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Medium"
    },
    "1751": {
        "name": "maximum-number-of-events-that-can-be-attended-ii",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "1753": {
        "name": "maximum-score-from-removing-stones",
        "tags": [
            "Math",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "1754": {
        "name": "largest-merge-of-two-strings",
        "tags": [
            "Two Pointers",
            "String",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1752": {
        "name": "check-if-array-is-sorted-and-rotated",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "1756": {
        "name": "design-most-recently-used-queue",
        "tags": [],
        "difficulty": null
    },
    "1762": {
        "name": "buildings-with-an-ocean-view",
        "tags": [],
        "difficulty": null
    },
    "1760": {
        "name": "minimum-limit-of-balls-in-a-bag",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "1758": {
        "name": "minimum-changes-to-make-alternating-binary-string",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "1757": {
        "name": "recyclable-and-low-fat-products",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1759": {
        "name": "count-number-of-homogenous-substrings",
        "tags": [
            "Math",
            "String"
        ],
        "difficulty": "Medium"
    },
    "1755": {
        "name": "closest-subsequence-sum",
        "tags": [
            "Array",
            "Two Pointers",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "1761": {
        "name": "minimum-degree-of-a-connected-trio-in-a-graph",
        "tags": [
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "1770": {
        "name": "maximum-score-from-performing-multiplication-operations",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1763": {
        "name": "longest-nice-substring",
        "tags": [
            "Hash Table",
            "String",
            "Divide and Conquer",
            "Bit Manipulation",
            "Sliding Window"
        ],
        "difficulty": "Easy"
    },
    "1765": {
        "name": "map-of-highest-peak",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1769": {
        "name": "minimum-number-of-operations-to-move-all-balls-to-each-box",
        "tags": [
            "Array",
            "String",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1768": {
        "name": "merge-strings-alternately",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1766": {
        "name": "tree-of-coprimes",
        "tags": [
            "Array",
            "Math",
            "Tree",
            "Depth-First Search",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "1764": {
        "name": "form-array-by-concatenating-subarrays-of-another-array",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy",
            "String Matching"
        ],
        "difficulty": "Medium"
    },
    "1767": {
        "name": "find-the-subtasks-that-did-not-execute",
        "tags": [],
        "difficulty": null
    },
    "1771": {
        "name": "maximize-palindrome-length-from-subsequences",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1772": {
        "name": "sort-features-by-popularity",
        "tags": [],
        "difficulty": null
    },
    "1773": {
        "name": "count-items-matching-a-rule",
        "tags": [
            "Array",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1775": {
        "name": "equal-sum-arrays-with-minimum-number-of-operations",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "1774": {
        "name": "closest-dessert-cost",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "1776": {
        "name": "car-fleet-ii",
        "tags": [
            "Array",
            "Math",
            "Stack",
            "Heap (Priority Queue)",
            "Monotonic Stack"
        ],
        "difficulty": "Hard"
    },
    "1777": {
        "name": "product's-price-for-each-store",
        "tags": [],
        "difficulty": null
    },
    "1778": {
        "name": "shortest-path-in-a-hidden-grid",
        "tags": [],
        "difficulty": null
    },
    "1779": {
        "name": "find-nearest-point-that-has-the-same-x-or-y-coordinate",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "1783": {
        "name": "grand-slam-titles",
        "tags": [],
        "difficulty": null
    },
    "1785": {
        "name": "minimum-elements-to-add-to-form-a-given-sum",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1780": {
        "name": "check-if-number-is-a-sum-of-powers-of-three",
        "tags": [
            "Math"
        ],
        "difficulty": "Medium"
    },
    "1782": {
        "name": "count-pairs-of-nodes",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Graph",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "1784": {
        "name": "check-if-binary-string-has-at-most-one-segment-of-ones",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "1781": {
        "name": "sum-of-beauty-of-all-substrings",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "1786": {
        "name": "number-of-restricted-paths-from-first-to-last-node",
        "tags": [
            "Dynamic Programming",
            "Graph",
            "Topological Sort",
            "Heap (Priority Queue)",
            "Shortest Path"
        ],
        "difficulty": "Medium"
    },
    "1788": {
        "name": "maximize-the-beauty-of-the-garden",
        "tags": [],
        "difficulty": null
    },
    "1790": {
        "name": "check-if-one-string-swap-can-make-strings-equal",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "1787": {
        "name": "make-the-xor-of-all-segments-equal-to-zero",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation"
        ],
        "difficulty": "Hard"
    },
    "1789": {
        "name": "primary-department-for-each-employee",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1791": {
        "name": "find-center-of-star-graph",
        "tags": [
            "Graph"
        ],
        "difficulty": "Easy"
    },
    "1792": {
        "name": "maximum-average-pass-ratio",
        "tags": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "1793": {
        "name": "maximum-score-of-a-good-subarray",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Stack",
            "Monotonic Stack"
        ],
        "difficulty": "Hard"
    },
    "1794": {
        "name": "count-pairs-of-equal-substrings-with-minimum-difference",
        "tags": [],
        "difficulty": null
    },
    "1800": {
        "name": "maximum-ascending-subarray-sum",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "1797": {
        "name": "design-authentication-manager",
        "tags": [
            "Hash Table",
            "Linked List",
            "Design",
            "Doubly-Linked List"
        ],
        "difficulty": "Medium"
    },
    "1801": {
        "name": "number-of-orders-in-the-backlog",
        "tags": [
            "Array",
            "Heap (Priority Queue)",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1799": {
        "name": "maximize-score-after-n-operations",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Number Theory",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "1795": {
        "name": "rearrange-products-table",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1796": {
        "name": "second-largest-digit-in-a-string",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1798": {
        "name": "maximum-number-of-consecutive-values-you-can-make",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1803": {
        "name": "count-pairs-with-xor-in-a-range",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Trie"
        ],
        "difficulty": "Hard"
    },
    "1804": {
        "name": "implement-trie-ii-(prefix-tree)",
        "tags": [],
        "difficulty": null
    },
    "1802": {
        "name": "maximum-value-at-a-given-index-in-a-bounded-array",
        "tags": [
            "Binary Search",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1806": {
        "name": "minimum-number-of-operations-to-reinitialize-a-permutation",
        "tags": [
            "Array",
            "Math",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1808": {
        "name": "maximize-number-of-nice-divisors",
        "tags": [
            "Math",
            "Recursion",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "1807": {
        "name": "evaluate-the-bracket-pairs-of-a-string",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ],
        "difficulty": "Medium"
    },
    "1805": {
        "name": "number-of-different-integers-in-a-string",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1811": {
        "name": "find-interview-candidates",
        "tags": [],
        "difficulty": null
    },
    "1810": {
        "name": "minimum-path-cost-in-a-hidden-grid",
        "tags": [],
        "difficulty": null
    },
    "1809": {
        "name": "ad-free-sessions",
        "tags": [],
        "difficulty": null
    },
    "1814": {
        "name": "count-nice-pairs-in-an-array",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "1812": {
        "name": "determine-color-of-a-chessboard-square",
        "tags": [
            "Math",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1813": {
        "name": "sentence-similarity-iii",
        "tags": [
            "Array",
            "Two Pointers",
            "String"
        ],
        "difficulty": "Medium"
    },
    "1816": {
        "name": "truncate-sentence",
        "tags": [
            "Array",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1815": {
        "name": "maximum-number-of-groups-getting-fresh-donuts",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Memoization",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "1817": {
        "name": "finding-the-users-active-minutes",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Medium"
    },
    "1820": {
        "name": "maximum-number-of-accepted-invitations",
        "tags": [],
        "difficulty": null
    },
    "1821": {
        "name": "find-customers-with-positive-revenue-this-year",
        "tags": [],
        "difficulty": null
    },
    "1819": {
        "name": "number-of-different-subsequences-gcds",
        "tags": [
            "Array",
            "Math",
            "Counting",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "1822": {
        "name": "sign-of-the-product-of-an-array",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Easy"
    },
    "1824": {
        "name": "minimum-sideway-jumps",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1818": {
        "name": "minimum-absolute-sum-difference",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting",
            "Ordered Set"
        ],
        "difficulty": "Medium"
    },
    "1823": {
        "name": "find-the-winner-of-the-circular-game",
        "tags": [
            "Array",
            "Math",
            "Recursion",
            "Queue",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1828": {
        "name": "queries-on-number-of-points-inside-a-circle",
        "tags": [
            "Array",
            "Math",
            "Geometry"
        ],
        "difficulty": "Medium"
    },
    "1825": {
        "name": "finding-mk-average",
        "tags": [
            "Design",
            "Queue",
            "Heap (Priority Queue)",
            "Data Stream",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "1832": {
        "name": "check-if-the-sentence-is-pangram",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1830": {
        "name": "minimum-number-of-operations-to-make-string-sorted",
        "tags": [
            "Math",
            "String",
            "Combinatorics"
        ],
        "difficulty": "Hard"
    },
    "1826": {
        "name": "faulty-sensor",
        "tags": [],
        "difficulty": null
    },
    "1827": {
        "name": "minimum-operations-to-make-the-array-increasing",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "1829": {
        "name": "maximum-xor-for-each-query",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1831": {
        "name": "maximum-transaction-each-day",
        "tags": [],
        "difficulty": null
    },
    "1833": {
        "name": "maximum-ice-cream-bars",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Counting Sort"
        ],
        "difficulty": "Medium"
    },
    "1835": {
        "name": "find-xor-sum-of-all-pairs-bitwise-and",
        "tags": [
            "Array",
            "Math",
            "Bit Manipulation"
        ],
        "difficulty": "Hard"
    },
    "1836": {
        "name": "remove-duplicates-from-an-unsorted-linked-list",
        "tags": [],
        "difficulty": null
    },
    "1834": {
        "name": "single-threaded-cpu",
        "tags": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "1839": {
        "name": "longest-substring-of-all-vowels-in-order",
        "tags": [
            "String",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "1837": {
        "name": "sum-of-digits-in-base-k",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "1838": {
        "name": "frequency-of-the-most-frequent-element",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Sliding Window",
            "Sorting",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1840": {
        "name": "maximum-building-height",
        "tags": [
            "Array",
            "Math",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "1842": {
        "name": "next-palindrome-using-same-digits",
        "tags": [],
        "difficulty": null
    },
    "1845": {
        "name": "seat-reservation-manager",
        "tags": [
            "Design",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "1841": {
        "name": "league-statistics",
        "tags": [],
        "difficulty": null
    },
    "1844": {
        "name": "replace-all-digits-with-characters",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "1843": {
        "name": "suspicious-bank-accounts",
        "tags": [],
        "difficulty": null
    },
    "1847": {
        "name": "closest-room",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "1846": {
        "name": "maximum-element-after-decreasing-and-rearranging",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1848": {
        "name": "minimum-distance-to-the-target-element",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "1850": {
        "name": "minimum-adjacent-swaps-to-reach-the-kth-smallest-number",
        "tags": [
            "Two Pointers",
            "String",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1853": {
        "name": "convert-date-format",
        "tags": [],
        "difficulty": null
    },
    "1852": {
        "name": "distinct-numbers-in-each-subarray",
        "tags": [],
        "difficulty": null
    },
    "1849": {
        "name": "splitting-a-string-into-descending-consecutive-values",
        "tags": [
            "String",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "1854": {
        "name": "maximum-population-year",
        "tags": [
            "Array",
            "Counting",
            "Prefix Sum"
        ],
        "difficulty": "Easy"
    },
    "1851": {
        "name": "minimum-interval-to-include-each-query",
        "tags": [
            "Array",
            "Binary Search",
            "Line Sweep",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "1855": {
        "name": "maximum-distance-between-a-pair-of-values",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "1856": {
        "name": "maximum-subarray-min-product",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1857": {
        "name": "largest-color-value-in-a-directed-graph",
        "tags": [
            "Hash Table",
            "Dynamic Programming",
            "Graph",
            "Topological Sort",
            "Memoization",
            "Counting"
        ],
        "difficulty": "Hard"
    },
    "1858": {
        "name": "longest-word-with-all-prefixes",
        "tags": [],
        "difficulty": null
    },
    "1860": {
        "name": "incremental-memory-leak",
        "tags": [
            "Math",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1861": {
        "name": "rotating-the-box",
        "tags": [
            "Array",
            "Two Pointers",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1859": {
        "name": "sorting-the-sentence",
        "tags": [
            "String",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "1864": {
        "name": "minimum-number-of-swaps-to-make-the-binary-string-alternating",
        "tags": [
            "String",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1862": {
        "name": "sum-of-floored-pairs",
        "tags": [
            "Array",
            "Math",
            "Binary Search",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "1865": {
        "name": "finding-pairs-with-a-certain-sum",
        "tags": [
            "Array",
            "Hash Table",
            "Design"
        ],
        "difficulty": "Medium"
    },
    "1863": {
        "name": "sum-of-all-subset-xor-totals",
        "tags": [
            "Array",
            "Math",
            "Backtracking",
            "Bit Manipulation",
            "Combinatorics",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "1867": {
        "name": "orders-with-maximum-quantity-above-average",
        "tags": [],
        "difficulty": null
    },
    "1869": {
        "name": "longer-contiguous-segments-of-ones-than-zeros",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "1866": {
        "name": "number-of-ways-to-rearrange-sticks-with-k-sticks-visible",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "difficulty": "Hard"
    },
    "1868": {
        "name": "product-of-two-run-length-encoded-arrays",
        "tags": [],
        "difficulty": null
    },
    "1871": {
        "name": "jump-game-vii",
        "tags": [
            "String",
            "Dynamic Programming",
            "Sliding Window",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1872": {
        "name": "stone-game-viii",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Prefix Sum",
            "Game Theory"
        ],
        "difficulty": "Hard"
    },
    "1870": {
        "name": "minimum-speed-to-arrive-on-time",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "1873": {
        "name": "calculate-special-bonus",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1874": {
        "name": "minimize-product-sum-of-two-arrays",
        "tags": [],
        "difficulty": null
    },
    "1877": {
        "name": "minimize-maximum-pair-sum-in-array",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1876": {
        "name": "substrings-of-size-three-with-distinct-characters",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "1875": {
        "name": "group-employees-of-the-same-salary",
        "tags": [],
        "difficulty": null
    },
    "1880": {
        "name": "check-if-word-equals-summation-of-two-words",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "1878": {
        "name": "get-biggest-three-rhombus-sums-in-a-grid",
        "tags": [
            "Array",
            "Math",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1881": {
        "name": "maximum-value-after-insertion",
        "tags": [
            "String",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1879": {
        "name": "minimum-xor-sum-of-two-arrays",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "1884": {
        "name": "egg-drop-with-2-eggs-and-n-floors",
        "tags": [
            "Math",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "1882": {
        "name": "process-tasks-using-servers",
        "tags": [
            "Array",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "1883": {
        "name": "minimum-skips-to-arrive-at-meeting-on-time",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1887": {
        "name": "reduction-operations-to-make-the-array-elements-equal",
        "tags": [
            "Array",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1886": {
        "name": "determine-whether-matrix-can-be-obtained-by-rotation",
        "tags": [
            "Array",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "1889": {
        "name": "minimum-space-wasted-from-packaging",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "1888": {
        "name": "minimum-number-of-flips-to-make-the-binary-string-alternating",
        "tags": [
            "String",
            "Dynamic Programming",
            "Greedy",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "1892": {
        "name": "page-recommendations-ii",
        "tags": [],
        "difficulty": null
    },
    "1891": {
        "name": "cutting-ribbons",
        "tags": [],
        "difficulty": null
    },
    "1890": {
        "name": "the-latest-login-in-2020",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1893": {
        "name": "check-if-all-the-integers-in-a-range-are-covered",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "difficulty": "Easy"
    },
    "1895": {
        "name": "largest-magic-square",
        "tags": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1896": {
        "name": "minimum-cost-to-change-the-final-value-of-expression",
        "tags": [
            "Math",
            "String",
            "Dynamic Programming",
            "Stack"
        ],
        "difficulty": "Hard"
    },
    "1885": {
        "name": "count-pairs-in-two-arrays",
        "tags": [],
        "difficulty": null
    },
    "1897": {
        "name": "redistribute-characters-to-make-all-strings-equal",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "1898": {
        "name": "maximum-number-of-removable-characters",
        "tags": [
            "Array",
            "Two Pointers",
            "String",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "1899": {
        "name": "merge-triplets-to-form-target-triplet",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1902": {
        "name": "depth-of-bst-given-insertion-order",
        "tags": [],
        "difficulty": null
    },
    "1900": {
        "name": "the-earliest-and-latest-rounds-where-players-compete",
        "tags": [
            "Dynamic Programming",
            "Memoization"
        ],
        "difficulty": "Hard"
    },
    "1903": {
        "name": "largest-odd-number-in-string",
        "tags": [
            "Math",
            "String",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "1901": {
        "name": "find-a-peak-element-ii",
        "tags": [
            "Array",
            "Binary Search",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1894": {
        "name": "find-the-student-that-will-replace-the-chalk",
        "tags": [
            "Array",
            "Binary Search",
            "Simulation",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1904": {
        "name": "the-number-of-full-rounds-you-have-played",
        "tags": [
            "Math",
            "String"
        ],
        "difficulty": "Medium"
    },
    "1905": {
        "name": "count-sub-islands",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1906": {
        "name": "minimum-absolute-difference-queries",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Medium"
    },
    "1908": {
        "name": "game-of-nim",
        "tags": [],
        "difficulty": null
    },
    "1909": {
        "name": "remove-one-element-to-make-the-array-strictly-increasing",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "1907": {
        "name": "count-salary-categories",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "1913": {
        "name": "maximum-product-difference-between-two-pairs",
        "tags": [
            "Array",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "1914": {
        "name": "cyclically-rotating-a-grid",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1910": {
        "name": "remove-all-occurrences-of-a-substring",
        "tags": [
            "String",
            "Stack",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "1912": {
        "name": "design-movie-rental-system",
        "tags": [
            "Array",
            "Hash Table",
            "Design",
            "Heap (Priority Queue)",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "1911": {
        "name": "maximum-alternating-subsequence-sum",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "1915": {
        "name": "number-of-wonderful-substrings",
        "tags": [
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1918": {
        "name": "kth-smallest-subarray-sum",
        "tags": [],
        "difficulty": null
    },
    "1917": {
        "name": "leetcodify-friends-recommendations",
        "tags": [],
        "difficulty": null
    },
    "1919": {
        "name": "leetcodify-similar-friends",
        "tags": [],
        "difficulty": null
    },
    "1922": {
        "name": "count-good-numbers",
        "tags": [
            "Math",
            "Recursion"
        ],
        "difficulty": "Medium"
    },
    "1921": {
        "name": "eliminate-maximum-number-of-monsters",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1920": {
        "name": "build-array-from-permutation",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "1923": {
        "name": "longest-common-subpath",
        "tags": [
            "Array",
            "Binary Search",
            "Rolling Hash",
            "Suffix Array",
            "Hash Function"
        ],
        "difficulty": "Hard"
    },
    "1924": {
        "name": "erect-the-fence-ii",
        "tags": [],
        "difficulty": null
    },
    "1925": {
        "name": "count-square-sum-triples",
        "tags": [
            "Math",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "1916": {
        "name": "count-ways-to-build-rooms-in-an-ant-colony",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Tree",
            "Graph",
            "Topological Sort",
            "Combinatorics"
        ],
        "difficulty": "Hard"
    },
    "1927": {
        "name": "sum-game",
        "tags": [
            "Math",
            "String",
            "Greedy",
            "Game Theory"
        ],
        "difficulty": "Medium"
    },
    "1928": {
        "name": "minimum-cost-to-reach-destination-in-time",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "1926": {
        "name": "nearest-exit-from-entrance-in-maze",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1929": {
        "name": "concatenation-of-array",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "1930": {
        "name": "unique-length-3-palindromic-subsequences",
        "tags": [
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1932": {
        "name": "merge-bsts-to-create-single-bst",
        "tags": [
            "Hash Table",
            "Binary Search",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Hard"
    },
    "1931": {
        "name": "painting-a-grid-with-three-different-colors",
        "tags": [
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1933": {
        "name": "check-if-string-is-decomposable-into-value-equal-substrings",
        "tags": [],
        "difficulty": null
    },
    "1936": {
        "name": "add-minimum-number-of-rungs",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1937": {
        "name": "maximum-number-of-points-with-cost",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1938": {
        "name": "maximum-genetic-difference-query",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation",
            "Depth-First Search",
            "Trie"
        ],
        "difficulty": "Hard"
    },
    "1934": {
        "name": "confirmation-rate",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "1935": {
        "name": "maximum-number-of-words-you-can-type",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1939": {
        "name": "users-that-actively-request-confirmation-messages",
        "tags": [],
        "difficulty": null
    },
    "1940": {
        "name": "longest-common-subsequence-between-sorted-arrays",
        "tags": [],
        "difficulty": null
    },
    "1941": {
        "name": "check-if-all-characters-have-equal-number-of-occurrences",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "1942": {
        "name": "the-number-of-the-smallest-unoccupied-chair",
        "tags": [
            "Array",
            "Hash Table",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "1944": {
        "name": "number-of-visible-people-in-a-queue",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ],
        "difficulty": "Hard"
    },
    "1943": {
        "name": "describe-the-painting",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "1945": {
        "name": "sum-of-digits-of-string-after-convert",
        "tags": [
            "String",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "1947": {
        "name": "maximum-compatibility-score-sum",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Medium"
    },
    "1946": {
        "name": "largest-number-after-mutating-substring",
        "tags": [
            "Array",
            "String",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1948": {
        "name": "delete-duplicate-folders-in-system",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Trie",
            "Hash Function"
        ],
        "difficulty": "Hard"
    },
    "1949": {
        "name": "strong-friendship",
        "tags": [],
        "difficulty": null
    },
    "1950": {
        "name": "maximum-of-minimum-values-in-all-subarrays",
        "tags": [],
        "difficulty": null
    },
    "1951": {
        "name": "all-the-pairs-with-the-maximum-number-of-common-followers",
        "tags": [],
        "difficulty": null
    },
    "1953": {
        "name": "maximum-number-of-weeks-for-which-you-can-work",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1952": {
        "name": "three-divisors",
        "tags": [
            "Math",
            "Enumeration",
            "Number Theory"
        ],
        "difficulty": "Easy"
    },
    "1956": {
        "name": "minimum-time-for-k-virus-variants-to-spread",
        "tags": [],
        "difficulty": null
    },
    "1955": {
        "name": "count-number-of-special-subsequences",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1957": {
        "name": "delete-characters-to-make-fancy-string",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "1954": {
        "name": "minimum-garden-perimeter-to-collect-enough-apples",
        "tags": [
            "Math",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "1958": {
        "name": "check-if-move-is-legal",
        "tags": [
            "Array",
            "Matrix",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "1962": {
        "name": "remove-stones-to-minimize-the-total",
        "tags": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "1959": {
        "name": "minimum-total-space-wasted-with-k-resizing-operations",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "1961": {
        "name": "check-if-string-is-a-prefix-of-array",
        "tags": [
            "Array",
            "Two Pointers",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1960": {
        "name": "maximum-product-of-the-length-of-two-palindromic-substrings",
        "tags": [
            "String",
            "Rolling Hash",
            "Hash Function"
        ],
        "difficulty": "Hard"
    },
    "1966": {
        "name": "binary-searchable-numbers-in-an-unsorted-array",
        "tags": [],
        "difficulty": null
    },
    "1964": {
        "name": "find-the-longest-valid-obstacle-course-at-each-position",
        "tags": [
            "Array",
            "Binary Search",
            "Binary Indexed Tree"
        ],
        "difficulty": "Hard"
    },
    "1965": {
        "name": "employees-with-missing-information",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1963": {
        "name": "minimum-number-of-swaps-to-make-the-string-balanced",
        "tags": [
            "Two Pointers",
            "String",
            "Stack",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "1967": {
        "name": "number-of-strings-that-appear-as-substrings-in-word",
        "tags": [
            "Array",
            "String"
        ],
        "difficulty": "Easy"
    },
    "1969": {
        "name": "minimum-non-zero-product-of-the-array-elements",
        "tags": [
            "Math",
            "Greedy",
            "Recursion"
        ],
        "difficulty": "Medium"
    },
    "1968": {
        "name": "array-with-elements-not-equal-to-average-of-neighbors",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "1970": {
        "name": "last-day-where-you-can-still-cross",
        "tags": [
            "Array",
            "Binary Search",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "1971": {
        "name": "find-if-path-exists-in-graph",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "difficulty": "Easy"
    },
    "1972": {
        "name": "first-and-last-call-on-the-same-day",
        "tags": [],
        "difficulty": null
    },
    "1973": {
        "name": "count-nodes-equal-to-sum-of-descendants",
        "tags": [],
        "difficulty": null
    },
    "1974": {
        "name": "minimum-time-to-type-word-using-special-typewriter",
        "tags": [
            "String",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "1975": {
        "name": "maximum-matrix-sum",
        "tags": [
            "Array",
            "Greedy",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1976": {
        "name": "number-of-ways-to-arrive-at-destination",
        "tags": [
            "Dynamic Programming",
            "Graph",
            "Topological Sort",
            "Shortest Path"
        ],
        "difficulty": "Medium"
    },
    "1977": {
        "name": "number-of-ways-to-separate-numbers",
        "tags": [
            "String",
            "Dynamic Programming",
            "Suffix Array"
        ],
        "difficulty": "Hard"
    },
    "1978": {
        "name": "employees-whose-manager-left-the-company",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "1979": {
        "name": "find-greatest-common-divisor-of-array",
        "tags": [
            "Array",
            "Math",
            "Number Theory"
        ],
        "difficulty": "Easy"
    },
    "1980": {
        "name": "find-unique-binary-string",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "1982": {
        "name": "find-array-given-subset-sums",
        "tags": [
            "Array",
            "Divide and Conquer"
        ],
        "difficulty": "Hard"
    },
    "1981": {
        "name": "minimize-the-difference-between-target-and-chosen-elements",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1983": {
        "name": "widest-pair-of-indices-with-equal-range-sum",
        "tags": [],
        "difficulty": null
    },
    "1984": {
        "name": "minimum-difference-between-highest-and-lowest-of-k-scores",
        "tags": [
            "Array",
            "Sliding Window",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "1986": {
        "name": "minimum-number-of-work-sessions-to-finish-the-tasks",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Medium"
    },
    "1987": {
        "name": "number-of-unique-good-subsequences",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "1989": {
        "name": "maximum-number-of-people-that-can-be-caught-in-tag",
        "tags": [],
        "difficulty": null
    },
    "1988": {
        "name": "find-cutoff-score-for-each-school",
        "tags": [],
        "difficulty": null
    },
    "1985": {
        "name": "find-the-kth-largest-integer-in-the-array",
        "tags": [
            "Array",
            "String",
            "Divide and Conquer",
            "Sorting",
            "Heap (Priority Queue)",
            "Quickselect"
        ],
        "difficulty": "Medium"
    },
    "1990": {
        "name": "count-the-number-of-experiments",
        "tags": [],
        "difficulty": null
    },
    "1991": {
        "name": "find-the-middle-index-in-array",
        "tags": [
            "Array",
            "Prefix Sum"
        ],
        "difficulty": "Easy"
    },
    "1992": {
        "name": "find-all-groups-of-farmland",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "1999": {
        "name": "smallest-greater-multiple-made-of-two-digits",
        "tags": [],
        "difficulty": null
    },
    "1996": {
        "name": "the-number-of-weak-characters-in-the-game",
        "tags": [
            "Array",
            "Stack",
            "Greedy",
            "Sorting",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "1998": {
        "name": "gcd-sort-of-an-array",
        "tags": [
            "Array",
            "Math",
            "Union Find",
            "Sorting",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "1995": {
        "name": "count-special-quadruplets",
        "tags": [
            "Array",
            "Hash Table",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "1997": {
        "name": "first-day-where-you-have-been-in-all-the-rooms",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "1994": {
        "name": "the-number-of-good-subsets",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "1993": {
        "name": "operations-on-tree",
        "tags": [
            "Array",
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Design"
        ],
        "difficulty": "Medium"
    },
    "2000": {
        "name": "reverse-prefix-of-word",
        "tags": [
            "Two Pointers",
            "String",
            "Stack"
        ],
        "difficulty": "Easy"
    },
    "2005": {
        "name": "subtree-removal-game-with-fibonacci-tree",
        "tags": [],
        "difficulty": null
    },
    "2004": {
        "name": "the-number-of-seniors-and-juniors-to-join-the-company",
        "tags": [],
        "difficulty": null
    },
    "2007": {
        "name": "find-original-array-from-doubled-array",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2002": {
        "name": "maximum-product-of-the-length-of-two-palindromic-subsequences",
        "tags": [
            "String",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Medium"
    },
    "2003": {
        "name": "smallest-missing-genetic-value-in-each-subtree",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Union Find"
        ],
        "difficulty": "Hard"
    },
    "2001": {
        "name": "number-of-pairs-of-interchangeable-rectangles",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Counting",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "2006": {
        "name": "count-number-of-pairs-with-absolute-difference-k",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2008": {
        "name": "maximum-earnings-from-taxi",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Dynamic Programming",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2013": {
        "name": "detect-squares",
        "tags": [
            "Array",
            "Hash Table",
            "Design",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2012": {
        "name": "sum-of-beauty-in-the-array",
        "tags": [
            "Array"
        ],
        "difficulty": "Medium"
    },
    "2011": {
        "name": "final-value-of-variable-after-performing-operations",
        "tags": [
            "Array",
            "String",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2010": {
        "name": "the-number-of-seniors-and-juniors-to-join-the-company-ii",
        "tags": [],
        "difficulty": null
    },
    "2009": {
        "name": "minimum-number-of-operations-to-make-array-continuous",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Sliding Window"
        ],
        "difficulty": "Hard"
    },
    "2014": {
        "name": "longest-subsequence-repeated-k-times",
        "tags": [
            "String",
            "Backtracking",
            "Greedy",
            "Counting",
            "Enumeration"
        ],
        "difficulty": "Hard"
    },
    "2015": {
        "name": "average-height-of-buildings-in-each-segment",
        "tags": [],
        "difficulty": null
    },
    "2017": {
        "name": "grid-game",
        "tags": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2019": {
        "name": "the-score-of-students-solving-math-expression",
        "tags": [
            "Array",
            "Math",
            "String",
            "Dynamic Programming",
            "Stack",
            "Memoization"
        ],
        "difficulty": "Hard"
    },
    "2016": {
        "name": "maximum-difference-between-increasing-elements",
        "tags": [],
        "difficulty": "Easy"
    },
    "2018": {
        "name": "check-if-word-can-be-placed-in-crossword",
        "tags": [
            "Array",
            "Matrix",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2020": {
        "name": "number-of-accounts-that-did-not-stream",
        "tags": [],
        "difficulty": null
    },
    "2021": {
        "name": "brightest-position-on-street",
        "tags": [],
        "difficulty": null
    },
    "2023": {
        "name": "number-of-pairs-of-strings-with-concatenation-equal-to-target",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2022": {
        "name": "convert-1d-array-into-2d-array",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2025": {
        "name": "maximum-number-of-ways-to-partition-an-array",
        "tags": [
            "Array",
            "Hash Table",
            "Counting",
            "Enumeration",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "2024": {
        "name": "maximize-the-confusion-of-an-exam",
        "tags": [
            "String",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2026": {
        "name": "low-quality-problems",
        "tags": [],
        "difficulty": null
    },
    "2031": {
        "name": "count-subarrays-with-more-ones-than-zeros",
        "tags": [],
        "difficulty": null
    },
    "2030": {
        "name": "smallest-k-length-subsequence-with-occurrences-of-a-letter",
        "tags": [
            "String",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ],
        "difficulty": "Hard"
    },
    "2027": {
        "name": "minimum-moves-to-convert-string",
        "tags": [
            "String",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "2028": {
        "name": "find-missing-observations",
        "tags": [
            "Array",
            "Math",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2029": {
        "name": "stone-game-ix",
        "tags": [
            "Array",
            "Math",
            "Greedy",
            "Counting",
            "Game Theory"
        ],
        "difficulty": "Medium"
    },
    "2033": {
        "name": "minimum-operations-to-make-a-uni-value-grid",
        "tags": [
            "Array",
            "Math",
            "Sorting",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "2036": {
        "name": "maximum-alternating-subarray-sum",
        "tags": [],
        "difficulty": null
    },
    "2034": {
        "name": "stock-price-fluctuation",
        "tags": [
            "Hash Table",
            "Design",
            "Heap (Priority Queue)",
            "Data Stream",
            "Ordered Set"
        ],
        "difficulty": "Medium"
    },
    "2032": {
        "name": "two-out-of-three",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "2035": {
        "name": "partition-array-into-two-arrays-to-minimize-sum-difference",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Dynamic Programming",
            "Bit Manipulation",
            "Ordered Set",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "2037": {
        "name": "minimum-number-of-moves-to-seat-everyone",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Counting Sort"
        ],
        "difficulty": "Easy"
    },
    "2038": {
        "name": "remove-colored-pieces-if-both-neighbors-are-the-same-color",
        "tags": [
            "Math",
            "String",
            "Greedy",
            "Game Theory"
        ],
        "difficulty": "Medium"
    },
    "2039": {
        "name": "the-time-when-the-network-becomes-idle",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "2040": {
        "name": "kth-smallest-product-of-two-sorted-arrays",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Hard"
    },
    "2041": {
        "name": "accepted-candidates-from-the-interviews",
        "tags": [],
        "difficulty": null
    },
    "2045": {
        "name": "second-minimum-time-to-reach-destination",
        "tags": [
            "Breadth-First Search",
            "Graph",
            "Shortest Path"
        ],
        "difficulty": "Hard"
    },
    "2043": {
        "name": "simple-bank-system",
        "tags": [
            "Array",
            "Hash Table",
            "Design",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2044": {
        "name": "count-number-of-maximum-bitwise-or-subsets",
        "tags": [
            "Array",
            "Backtracking",
            "Bit Manipulation",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2046": {
        "name": "sort-linked-list-already-sorted-using-absolute-values",
        "tags": [],
        "difficulty": null
    },
    "2042": {
        "name": "check-if-numbers-are-ascending-in-a-sentence",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "2047": {
        "name": "number-of-valid-words-in-a-sentence",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "2048": {
        "name": "next-greater-numerically-balanced-number",
        "tags": [
            "Math",
            "Backtracking",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2049": {
        "name": "count-nodes-with-the-highest-score",
        "tags": [
            "Array",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "2052": {
        "name": "minimum-cost-to-separate-sentence-into-rows",
        "tags": [],
        "difficulty": null
    },
    "2051": {
        "name": "the-category-of-each-member-in-the-store",
        "tags": [],
        "difficulty": null
    },
    "2054": {
        "name": "two-best-non-overlapping-events",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "2053": {
        "name": "kth-distinct-string-in-an-array",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2050": {
        "name": "parallel-courses-iii",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Graph",
            "Topological Sort"
        ],
        "difficulty": "Hard"
    },
    "2055": {
        "name": "plates-between-candles",
        "tags": [
            "Array",
            "String",
            "Binary Search",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2058": {
        "name": "find-the-minimum-and-maximum-number-of-nodes-between-critical-points",
        "tags": [
            "Linked List"
        ],
        "difficulty": "Medium"
    },
    "2057": {
        "name": "smallest-index-with-equal-value",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "2059": {
        "name": "minimum-operations-to-convert-number",
        "tags": [
            "Array",
            "Breadth-First Search"
        ],
        "difficulty": "Medium"
    },
    "2061": {
        "name": "number-of-spaces-cleaning-robot-cleaned",
        "tags": [],
        "difficulty": null
    },
    "2056": {
        "name": "number-of-valid-move-combinations-on-chessboard",
        "tags": [
            "Array",
            "String",
            "Backtracking",
            "Simulation"
        ],
        "difficulty": "Hard"
    },
    "2060": {
        "name": "check-if-an-original-string-exists-given-two-encoded-strings",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "2062": {
        "name": "count-vowel-substrings-of-a-string",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "2063": {
        "name": "vowels-of-all-substrings",
        "tags": [
            "Math",
            "String",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "difficulty": "Medium"
    },
    "2066": {
        "name": "account-balance",
        "tags": [],
        "difficulty": null
    },
    "2065": {
        "name": "maximum-path-quality-of-a-graph",
        "tags": [
            "Array",
            "Backtracking",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "2068": {
        "name": "check-whether-two-strings-are-almost-equivalent",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2064": {
        "name": "minimized-maximum-of-products-distributed-to-any-store",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2070": {
        "name": "most-beautiful-item-for-each-query",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2067": {
        "name": "number-of-equal-count-substrings",
        "tags": [],
        "difficulty": null
    },
    "2069": {
        "name": "walking-robot-simulation-ii",
        "tags": [
            "Design",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2071": {
        "name": "maximum-number-of-tasks-you-can-assign",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Queue",
            "Sorting",
            "Monotonic Queue"
        ],
        "difficulty": "Hard"
    },
    "2075": {
        "name": "decode-the-slanted-ciphertext",
        "tags": [
            "String",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2072": {
        "name": "the-winner-university",
        "tags": [],
        "difficulty": null
    },
    "2077": {
        "name": "paths-in-maze-that-lead-to-same-room",
        "tags": [],
        "difficulty": null
    },
    "2076": {
        "name": "process-restricted-friend-requests",
        "tags": [
            "Union Find",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "2073": {
        "name": "time-needed-to-buy-tickets",
        "tags": [
            "Array",
            "Queue",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2074": {
        "name": "reverse-nodes-in-even-length-groups",
        "tags": [
            "Linked List"
        ],
        "difficulty": "Medium"
    },
    "2078": {
        "name": "two-furthest-houses-with-different-colors",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "2079": {
        "name": "watering-plants",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2082": {
        "name": "the-number-of-rich-customers",
        "tags": [],
        "difficulty": null
    },
    "2081": {
        "name": "sum-of-k-mirror-numbers",
        "tags": [
            "Math",
            "Enumeration"
        ],
        "difficulty": "Hard"
    },
    "2080": {
        "name": "range-frequency-queries",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Design",
            "Segment Tree"
        ],
        "difficulty": "Medium"
    },
    "2084": {
        "name": "drop-type-1-orders-for-customers-with-type-0-orders",
        "tags": [],
        "difficulty": null
    },
    "2083": {
        "name": "substrings-that-begin-and-end-with-the-same-letter",
        "tags": [],
        "difficulty": null
    },
    "2085": {
        "name": "count-common-words-with-one-occurrence",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2087": {
        "name": "minimum-cost-homecoming-of-a-robot-in-a-grid",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2086": {
        "name": "minimum-number-of-food-buckets-to-feed-the-hamsters",
        "tags": [
            "String",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2088": {
        "name": "count-fertile-pyramids-in-a-land",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "2089": {
        "name": "find-target-indices-after-sorting-array",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "2090": {
        "name": "k-radius-subarray-averages",
        "tags": [
            "Array",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "2091": {
        "name": "removing-minimum-and-maximum-from-array",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2092": {
        "name": "find-all-people-with-secret",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "2093": {
        "name": "minimum-cost-to-reach-city-with-discounts",
        "tags": [],
        "difficulty": null
    },
    "2094": {
        "name": "finding-3-digit-even-numbers",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "2095": {
        "name": "delete-the-middle-node-of-a-linked-list",
        "tags": [
            "Linked List",
            "Two Pointers"
        ],
        "difficulty": "Medium"
    },
    "2096": {
        "name": "step-by-step-directions-from-a-binary-tree-node-to-another",
        "tags": [
            "String",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "2097": {
        "name": "valid-arrangement-of-pairs",
        "tags": [
            "Depth-First Search",
            "Graph",
            "Eulerian Circuit"
        ],
        "difficulty": "Hard"
    },
    "2098": {
        "name": "subsequence-of-size-k-with-the-largest-even-sum",
        "tags": [],
        "difficulty": null
    },
    "2100": {
        "name": "find-good-days-to-rob-the-bank",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2099": {
        "name": "find-subsequence-of-length-k-with-the-largest-sum",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Easy"
    },
    "2101": {
        "name": "detonate-the-maximum-bombs",
        "tags": [
            "Array",
            "Math",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Geometry"
        ],
        "difficulty": "Medium"
    },
    "2102": {
        "name": "sequentially-ordinal-rank-tracker",
        "tags": [
            "Design",
            "Heap (Priority Queue)",
            "Data Stream",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "2103": {
        "name": "rings-and-rods",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "2106": {
        "name": "maximum-fruits-harvested-after-at-most-k-steps",
        "tags": [
            "Array",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "2105": {
        "name": "watering-plants-ii",
        "tags": [
            "Array",
            "Two Pointers",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2104": {
        "name": "sum-of-subarray-ranges",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "2108": {
        "name": "find-first-palindromic-string-in-the-array",
        "tags": [
            "Array",
            "Two Pointers",
            "String"
        ],
        "difficulty": "Easy"
    },
    "2109": {
        "name": "adding-spaces-to-a-string",
        "tags": [
            "Array",
            "Two Pointers",
            "String",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2107": {
        "name": "number-of-unique-flavors-after-sharing-k-candies",
        "tags": [],
        "difficulty": null
    },
    "2110": {
        "name": "number-of-smooth-descent-periods-of-a-stock",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "2112": {
        "name": "the-airport-with-the-most-traffic",
        "tags": [],
        "difficulty": null
    },
    "2116": {
        "name": "check-if-a-parentheses-string-can-be-valid",
        "tags": [
            "String",
            "Stack",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2115": {
        "name": "find-all-possible-recipes-from-given-supplies",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Graph",
            "Topological Sort"
        ],
        "difficulty": "Medium"
    },
    "2113": {
        "name": "elements-in-array-after-removing-and-replacing-elements",
        "tags": [],
        "difficulty": null
    },
    "2111": {
        "name": "minimum-operations-to-make-the-array-k-increasing",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Hard"
    },
    "2114": {
        "name": "maximum-number-of-words-found-in-sentences",
        "tags": [
            "Array",
            "String"
        ],
        "difficulty": "Easy"
    },
    "2118": {
        "name": "build-the-equation",
        "tags": [],
        "difficulty": null
    },
    "2117": {
        "name": "abbreviating-the-product-of-a-range",
        "tags": [
            "Math"
        ],
        "difficulty": "Hard"
    },
    "2119": {
        "name": "a-number-after-a-double-reversal",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "2121": {
        "name": "intervals-between-identical-elements",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2120": {
        "name": "execution-of-all-suffix-instructions-staying-in-a-grid",
        "tags": [
            "String",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2122": {
        "name": "recover-the-original-array",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Sorting",
            "Enumeration"
        ],
        "difficulty": "Hard"
    },
    "2124": {
        "name": "check-if-all-a's-appears-before-all-b's",
        "tags": [],
        "difficulty": null
    },
    "2123": {
        "name": "minimum-operations-to-remove-adjacent-ones-in-matrix",
        "tags": [],
        "difficulty": null
    },
    "2128": {
        "name": "remove-all-ones-with-row-and-column-flips",
        "tags": [],
        "difficulty": null
    },
    "2129": {
        "name": "capitalize-the-title",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "2127": {
        "name": "maximum-employees-to-be-invited-to-a-meeting",
        "tags": [
            "Depth-First Search",
            "Graph",
            "Topological Sort"
        ],
        "difficulty": "Hard"
    },
    "2126": {
        "name": "destroying-asteroids",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2125": {
        "name": "number-of-laser-beams-in-a-bank",
        "tags": [
            "Array",
            "Math",
            "String",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "2137": {
        "name": "pour-water-between-buckets-to-make-water-levels-equal",
        "tags": [],
        "difficulty": null
    },
    "2132": {
        "name": "stamping-the-grid",
        "tags": [
            "Array",
            "Greedy",
            "Matrix",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "2136": {
        "name": "earliest-possible-day-of-full-bloom",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "2134": {
        "name": "minimum-swaps-to-group-all-1's-together-ii",
        "tags": [],
        "difficulty": null
    },
    "2131": {
        "name": "longest-palindrome-by-concatenating-two-letter-words",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Greedy",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2135": {
        "name": "count-words-obtained-after-adding-a-letter",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2133": {
        "name": "check-if-every-row-and-column-contains-all-numbers",
        "tags": [
            "Array",
            "Hash Table",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "2139": {
        "name": "minimum-moves-to-reach-target-score",
        "tags": [
            "Math",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2142": {
        "name": "the-number-of-passengers-in-each-bus-i",
        "tags": [],
        "difficulty": null
    },
    "2141": {
        "name": "maximum-running-time-of-n-computers",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "2140": {
        "name": "solving-questions-with-brainpower",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "2143": {
        "name": "choose-numbers-from-two-arrays-in-range",
        "tags": [],
        "difficulty": null
    },
    "2144": {
        "name": "minimum-cost-of-buying-candies-with-discount",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "2138": {
        "name": "divide-a-string-into-groups-of-size-k",
        "tags": [
            "String",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2145": {
        "name": "count-the-hidden-sequences",
        "tags": [
            "Array",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2147": {
        "name": "number-of-ways-to-divide-a-long-corridor",
        "tags": [
            "Math",
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "2149": {
        "name": "rearrange-array-elements-by-sign",
        "tags": [
            "Array",
            "Two Pointers",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2146": {
        "name": "k-highest-ranked-items-within-a-price-range",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "2148": {
        "name": "count-elements-with-strictly-smaller-and-greater-elements",
        "tags": [
            "Array",
            "Sorting",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2130": {
        "name": "maximum-twin-sum-of-a-linked-list",
        "tags": [
            "Linked List",
            "Two Pointers",
            "Stack"
        ],
        "difficulty": "Medium"
    },
    "2151": {
        "name": "maximum-good-people-based-on-statements",
        "tags": [
            "Array",
            "Backtracking",
            "Bit Manipulation",
            "Enumeration"
        ],
        "difficulty": "Hard"
    },
    "2150": {
        "name": "find-all-lonely-numbers-in-the-array",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2153": {
        "name": "the-number-of-passengers-in-each-bus-ii",
        "tags": [],
        "difficulty": null
    },
    "2152": {
        "name": "minimum-number-of-lines-to-cover-points",
        "tags": [],
        "difficulty": null
    },
    "2155": {
        "name": "all-divisions-with-the-highest-score-of-a-binary-array",
        "tags": [
            "Array"
        ],
        "difficulty": "Medium"
    },
    "2156": {
        "name": "find-substring-with-given-hash-value",
        "tags": [
            "String",
            "Sliding Window",
            "Rolling Hash",
            "Hash Function"
        ],
        "difficulty": "Hard"
    },
    "2154": {
        "name": "keep-multiplying-found-values-by-two",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2157": {
        "name": "groups-of-strings",
        "tags": [
            "String",
            "Bit Manipulation",
            "Union Find"
        ],
        "difficulty": "Hard"
    },
    "2160": {
        "name": "minimum-sum-of-four-digit-number-after-splitting-digits",
        "tags": [
            "Math",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "2158": {
        "name": "amount-of-new-area-painted-each-day",
        "tags": [],
        "difficulty": null
    },
    "2159": {
        "name": "order-two-columns-independently",
        "tags": [],
        "difficulty": null
    },
    "2162": {
        "name": "minimum-cost-to-set-cooking-time",
        "tags": [
            "Math",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2163": {
        "name": "minimum-difference-in-sums-after-removal-of-elements",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "2161": {
        "name": "partition-array-according-to-given-pivot",
        "tags": [
            "Array",
            "Two Pointers",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2164": {
        "name": "sort-even-and-odd-indices-independently",
        "tags": [
            "Array",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "2168": {
        "name": "unique-substrings-with-equal-digit-frequency",
        "tags": [],
        "difficulty": null
    },
    "2165": {
        "name": "smallest-value-of-the-rearranged-number",
        "tags": [
            "Math",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2167": {
        "name": "minimum-time-to-remove-all-cars-containing-illegal-goods",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "2172": {
        "name": "maximum-and-sum-of-array",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "2166": {
        "name": "design-bitset",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Design"
        ],
        "difficulty": "Medium"
    },
    "2169": {
        "name": "count-operations-to-obtain-zero",
        "tags": [
            "Math",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2170": {
        "name": "minimum-operations-to-make-the-array-alternating",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2171": {
        "name": "removing-minimum-number-of-magic-beans",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Enumeration",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2173": {
        "name": "longest-winning-streak",
        "tags": [],
        "difficulty": null
    },
    "2176": {
        "name": "count-equal-and-divisible-pairs-in-an-array",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "2178": {
        "name": "maximum-split-of-positive-even-integers",
        "tags": [
            "Math",
            "Backtracking",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2175": {
        "name": "the-change-in-global-rankings",
        "tags": [],
        "difficulty": null
    },
    "2174": {
        "name": "remove-all-ones-with-row-and-column-flips-ii",
        "tags": [],
        "difficulty": null
    },
    "2180": {
        "name": "count-integers-with-even-digit-sum",
        "tags": [
            "Math",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2179": {
        "name": "count-good-triplets-in-an-array",
        "tags": [
            "Array",
            "Binary Search",
            "Divide and Conquer",
            "Binary Indexed Tree",
            "Segment Tree",
            "Merge Sort",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "2177": {
        "name": "find-three-consecutive-integers-that-sum-to-a-given-number",
        "tags": [
            "Math",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2181": {
        "name": "merge-nodes-in-between-zeros",
        "tags": [
            "Linked List",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2183": {
        "name": "count-array-pairs-divisible-by-k",
        "tags": [
            "Array",
            "Math",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "2184": {
        "name": "number-of-ways-to-build-sturdy-brick-wall",
        "tags": [],
        "difficulty": null
    },
    "2182": {
        "name": "construct-string-with-repeat-limit",
        "tags": [
            "Hash Table",
            "String",
            "Greedy",
            "Heap (Priority Queue)",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2187": {
        "name": "minimum-time-to-complete-trips",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "2186": {
        "name": "minimum-number-of-steps-to-make-two-strings-anagram-ii",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2188": {
        "name": "minimum-time-to-finish-the-race",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "2185": {
        "name": "counting-words-with-a-given-prefix",
        "tags": [
            "Array",
            "String",
            "String Matching"
        ],
        "difficulty": "Easy"
    },
    "2189": {
        "name": "number-of-ways-to-build-house-of-cards",
        "tags": [],
        "difficulty": null
    },
    "2193": {
        "name": "minimum-number-of-moves-to-make-palindrome",
        "tags": [
            "Two Pointers",
            "String",
            "Greedy",
            "Binary Indexed Tree"
        ],
        "difficulty": "Hard"
    },
    "2190": {
        "name": "most-frequent-number-following-key-in-an-array",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2192": {
        "name": "all-ancestors-of-a-node-in-a-directed-acyclic-graph",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ],
        "difficulty": "Medium"
    },
    "2195": {
        "name": "append-k-integers-with-minimal-sum",
        "tags": [
            "Array",
            "Math",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2191": {
        "name": "sort-the-jumbled-numbers",
        "tags": [
            "Array",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2196": {
        "name": "create-binary-tree-from-descriptions",
        "tags": [
            "Array",
            "Hash Table",
            "Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "2197": {
        "name": "replace-non-coprime-numbers-in-array",
        "tags": [
            "Array",
            "Math",
            "Stack",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "2194": {
        "name": "cells-in-a-range-on-an-excel-sheet",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "2200": {
        "name": "find-all-k-distant-indices-in-an-array",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "difficulty": "Easy"
    },
    "2201": {
        "name": "count-artifacts-that-can-be-extracted",
        "tags": [
            "Array",
            "Hash Table",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2199": {
        "name": "finding-the-topic-of-each-post",
        "tags": [],
        "difficulty": null
    },
    "2204": {
        "name": "distance-to-a-cycle-in-undirected-graph",
        "tags": [],
        "difficulty": null
    },
    "2202": {
        "name": "maximize-the-topmost-element-after-k-moves",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2198": {
        "name": "number-of-single-divisor-triplets",
        "tags": [],
        "difficulty": null
    },
    "2203": {
        "name": "minimum-weighted-subgraph-with-the-required-paths",
        "tags": [
            "Graph",
            "Shortest Path"
        ],
        "difficulty": "Hard"
    },
    "2205": {
        "name": "the-number-of-users-that-are-eligible-for-discount",
        "tags": [],
        "difficulty": null
    },
    "2209": {
        "name": "minimum-white-tiles-after-covering-with-carpets",
        "tags": [
            "String",
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "2208": {
        "name": "minimum-operations-to-halve-array-sum",
        "tags": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "2210": {
        "name": "count-hills-and-valleys-in-an-array",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "2211": {
        "name": "count-collisions-on-a-road",
        "tags": [
            "String",
            "Stack",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2212": {
        "name": "maximum-points-in-an-archery-competition",
        "tags": [
            "Array",
            "Backtracking",
            "Bit Manipulation",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2206": {
        "name": "divide-array-into-equal-pairs",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2207": {
        "name": "maximize-number-of-subsequences-in-a-string",
        "tags": [
            "String",
            "Greedy",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2213": {
        "name": "longest-substring-of-one-repeating-character",
        "tags": [
            "Array",
            "String",
            "Segment Tree",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "2214": {
        "name": "minimum-health-to-beat-game",
        "tags": [],
        "difficulty": null
    },
    "2219": {
        "name": "maximum-sum-score-of-array",
        "tags": [],
        "difficulty": null
    },
    "2220": {
        "name": "minimum-bit-flips-to-convert-number",
        "tags": [
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "2217": {
        "name": "find-palindrome-with-fixed-length",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Medium"
    },
    "2215": {
        "name": "find-the-difference-of-two-arrays",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Easy"
    },
    "2216": {
        "name": "minimum-deletions-to-make-array-beautiful",
        "tags": [
            "Array",
            "Stack",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2221": {
        "name": "find-triangular-sum-of-an-array",
        "tags": [
            "Array",
            "Math",
            "Simulation",
            "Combinatorics"
        ],
        "difficulty": "Medium"
    },
    "2218": {
        "name": "maximum-value-of-k-coins-from-piles",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "2222": {
        "name": "number-of-ways-to-select-buildings",
        "tags": [
            "String",
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2223": {
        "name": "sum-of-scores-of-built-strings",
        "tags": [
            "String",
            "Binary Search",
            "Rolling Hash",
            "Suffix Array",
            "String Matching",
            "Hash Function"
        ],
        "difficulty": "Hard"
    },
    "2224": {
        "name": "minimum-number-of-operations-to-convert-time",
        "tags": [
            "String",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "2225": {
        "name": "find-players-with-zero-or-one-losses",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2226": {
        "name": "maximum-candies-allocated-to-k-children",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "2227": {
        "name": "encrypt-and-decrypt-strings",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Design",
            "Trie"
        ],
        "difficulty": "Hard"
    },
    "2228": {
        "name": "users-with-two-purchases-within-seven-days",
        "tags": [],
        "difficulty": null
    },
    "2229": {
        "name": "check-if-an-array-is-consecutive",
        "tags": [],
        "difficulty": null
    },
    "2231": {
        "name": "largest-number-after-digit-swaps-by-parity",
        "tags": [
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Easy"
    },
    "2230": {
        "name": "the-users-that-are-eligible-for-discount",
        "tags": [],
        "difficulty": null
    },
    "2232": {
        "name": "minimize-result-by-adding-parentheses-to-expression",
        "tags": [
            "String",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2234": {
        "name": "maximum-total-beauty-of-the-gardens",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "2235": {
        "name": "add-two-integers",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "2233": {
        "name": "maximum-product-after-k-increments",
        "tags": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "2236": {
        "name": "root-equals-sum-of-children",
        "tags": [
            "Tree",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "2237": {
        "name": "count-positions-on-street-with-required-brightness",
        "tags": [],
        "difficulty": null
    },
    "2238": {
        "name": "number-of-times-a-driver-was-a-passenger",
        "tags": [],
        "difficulty": null
    },
    "2239": {
        "name": "find-closest-number-to-zero",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "2241": {
        "name": "design-an-atm-machine",
        "tags": [
            "Array",
            "Greedy",
            "Design"
        ],
        "difficulty": "Medium"
    },
    "2243": {
        "name": "calculate-digit-sum-of-a-string",
        "tags": [
            "String",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2240": {
        "name": "number-of-ways-to-buy-pens-and-pencils",
        "tags": [
            "Math",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2242": {
        "name": "maximum-score-of-a-node-sequence",
        "tags": [
            "Array",
            "Graph",
            "Sorting",
            "Enumeration"
        ],
        "difficulty": "Hard"
    },
    "2244": {
        "name": "minimum-rounds-to-complete-all-tasks",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2245": {
        "name": "maximum-trailing-zeros-in-a-cornered-path",
        "tags": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2250": {
        "name": "count-number-of-rectangles-containing-each-point",
        "tags": [
            "Array",
            "Binary Search",
            "Binary Indexed Tree",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2246": {
        "name": "longest-path-with-different-adjacent-characters",
        "tags": [
            "Array",
            "String",
            "Tree",
            "Depth-First Search",
            "Graph",
            "Topological Sort"
        ],
        "difficulty": "Hard"
    },
    "2249": {
        "name": "count-lattice-points-inside-a-circle",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Geometry",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2247": {
        "name": "maximum-cost-of-trip-with-k-highways",
        "tags": [],
        "difficulty": null
    },
    "2248": {
        "name": "intersection-of-multiple-arrays",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2251": {
        "name": "number-of-flowers-in-full-bloom",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Sorting",
            "Prefix Sum",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "2253": {
        "name": "dynamic-unpivoting-of-a-table",
        "tags": [],
        "difficulty": null
    },
    "2252": {
        "name": "dynamic-pivoting-of-a-table",
        "tags": [],
        "difficulty": null
    },
    "2254": {
        "name": "design-video-sharing-platform",
        "tags": [],
        "difficulty": null
    },
    "2259": {
        "name": "remove-digit-from-number-to-maximize-result",
        "tags": [
            "String",
            "Greedy",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "2260": {
        "name": "minimum-consecutive-cards-to-pick-up",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "2256": {
        "name": "minimum-average-difference",
        "tags": [
            "Array",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2255": {
        "name": "count-prefixes-of-a-given-string",
        "tags": [
            "Array",
            "String"
        ],
        "difficulty": "Easy"
    },
    "2257": {
        "name": "count-unguarded-cells-in-the-grid",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2258": {
        "name": "escape-the-spreading-fire",
        "tags": [
            "Array",
            "Binary Search",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "2261": {
        "name": "k-divisible-elements-subarrays",
        "tags": [
            "Array",
            "Hash Table",
            "Trie",
            "Rolling Hash",
            "Hash Function",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2263": {
        "name": "make-array-non-decreasing-or-non-increasing",
        "tags": [],
        "difficulty": null
    },
    "2262": {
        "name": "total-appeal-of-a-string",
        "tags": [
            "Hash Table",
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "2264": {
        "name": "largest-3-same-digit-number-in-string",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "2266": {
        "name": "count-number-of-texts",
        "tags": [
            "Hash Table",
            "Math",
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "2265": {
        "name": "count-nodes-equal-to-average-of-subtree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "2268": {
        "name": "minimum-number-of-keypresses",
        "tags": [],
        "difficulty": null
    },
    "2267": {
        "name": "check-if-there-is-a-valid-parentheses-string-path",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "2274": {
        "name": "maximum-consecutive-floors-without-special-floors",
        "tags": [
            "Array",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2270": {
        "name": "number-of-ways-to-split-array",
        "tags": [
            "Array",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2269": {
        "name": "find-the-k-beauty-of-a-number",
        "tags": [
            "Math",
            "String",
            "Sliding Window"
        ],
        "difficulty": "Easy"
    },
    "2272": {
        "name": "substring-with-largest-variance",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "2273": {
        "name": "find-resultant-array-after-removing-anagrams",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "2271": {
        "name": "maximum-white-tiles-covered-by-a-carpet",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Sorting",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2275": {
        "name": "largest-combination-with-bitwise-and-greater-than-zero",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2276": {
        "name": "count-integers-in-intervals",
        "tags": [
            "Design",
            "Segment Tree",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "2282": {
        "name": "number-of-people-that-can-be-seen-in-a-grid",
        "tags": [],
        "difficulty": null
    },
    "2280": {
        "name": "minimum-lines-to-represent-a-line-chart",
        "tags": [
            "Array",
            "Math",
            "Geometry",
            "Sorting",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "2279": {
        "name": "maximum-bags-with-full-capacity-of-rocks",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2277": {
        "name": "closest-node-to-path-in-tree",
        "tags": [],
        "difficulty": null
    },
    "2278": {
        "name": "percentage-of-letter-in-string",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "2281": {
        "name": "sum-of-total-strength-of-wizards",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "2283": {
        "name": "check-if-number-has-equal-digit-count-and-digit-value",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2284": {
        "name": "sender-with-largest-word-count",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2291": {
        "name": "maximum-profit-from-trading-stocks",
        "tags": [],
        "difficulty": null
    },
    "2286": {
        "name": "booking-concert-tickets-in-groups",
        "tags": [
            "Binary Search",
            "Design",
            "Binary Indexed Tree",
            "Segment Tree"
        ],
        "difficulty": "Hard"
    },
    "2287": {
        "name": "rearrange-characters-to-make-target-string",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2285": {
        "name": "maximum-total-importance-of-roads",
        "tags": [
            "Greedy",
            "Graph",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "2289": {
        "name": "steps-to-make-array-non-decreasing",
        "tags": [
            "Array",
            "Linked List",
            "Stack",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "2290": {
        "name": "minimum-obstacle-removal-to-reach-corner",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Graph",
            "Heap (Priority Queue)",
            "Matrix",
            "Shortest Path"
        ],
        "difficulty": "Hard"
    },
    "2288": {
        "name": "apply-discount-to-prices",
        "tags": [
            "String"
        ],
        "difficulty": "Medium"
    },
    "2292": {
        "name": "products-with-three-or-more-orders-in-two-consecutive-years",
        "tags": [],
        "difficulty": null
    },
    "2296": {
        "name": "design-a-text-editor",
        "tags": [
            "Linked List",
            "String",
            "Stack",
            "Design",
            "Simulation",
            "Doubly-Linked List"
        ],
        "difficulty": "Hard"
    },
    "2294": {
        "name": "partition-array-such-that-maximum-difference-is-k",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2297": {
        "name": "jump-game-viii",
        "tags": [],
        "difficulty": null
    },
    "2295": {
        "name": "replace-elements-in-an-array",
        "tags": [
            "Array",
            "Hash Table",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2298": {
        "name": "tasks-count-in-the-weekend",
        "tags": [],
        "difficulty": null
    },
    "2299": {
        "name": "strong-password-checker-ii",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "2293": {
        "name": "min-max-game",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2303": {
        "name": "calculate-amount-paid-in-taxes",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2301": {
        "name": "match-substring-after-replacement",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "String Matching"
        ],
        "difficulty": "Hard"
    },
    "2302": {
        "name": "count-subarrays-with-score-less-than-k",
        "tags": [
            "Array",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "2305": {
        "name": "fair-distribution-of-cookies",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Medium"
    },
    "2300": {
        "name": "successful-pairs-of-spells-and-potions",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2304": {
        "name": "minimum-path-cost-in-a-grid",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "2306": {
        "name": "naming-a-company",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Enumeration"
        ],
        "difficulty": "Hard"
    },
    "2307": {
        "name": "check-for-contradictions-in-equations",
        "tags": [],
        "difficulty": null
    },
    "2314": {
        "name": "the-first-day-of-the-maximum-recorded-degree-in-each-city",
        "tags": [],
        "difficulty": null
    },
    "2308": {
        "name": "arrange-table-by-gender",
        "tags": [],
        "difficulty": null
    },
    "2312": {
        "name": "selling-pieces-of-wood",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Memoization"
        ],
        "difficulty": "Hard"
    },
    "2310": {
        "name": "sum-of-numbers-with-units-digit-k",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Greedy",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2311": {
        "name": "longest-binary-subsequence-less-than-or-equal-to-k",
        "tags": [
            "String",
            "Dynamic Programming",
            "Greedy",
            "Memoization"
        ],
        "difficulty": "Medium"
    },
    "2313": {
        "name": "minimum-flips-in-binary-tree-to-get-result",
        "tags": [],
        "difficulty": null
    },
    "2309": {
        "name": "greatest-english-letter-in-upper-and-lower-case",
        "tags": [
            "Hash Table",
            "String",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "2315": {
        "name": "count-asterisks",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "2318": {
        "name": "number-of-distinct-roll-sequences",
        "tags": [
            "Dynamic Programming",
            "Memoization"
        ],
        "difficulty": "Hard"
    },
    "2317": {
        "name": "maximum-xor-after-operations",
        "tags": [
            "Array",
            "Math",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "2319": {
        "name": "check-if-matrix-is-x-matrix",
        "tags": [
            "Array",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "2321": {
        "name": "maximum-score-of-spliced-array",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "2323": {
        "name": "find-minimum-time-to-finish-all-jobs-ii",
        "tags": [],
        "difficulty": null
    },
    "2320": {
        "name": "count-number-of-ways-to-place-houses",
        "tags": [
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "2316": {
        "name": "count-unreachable-pairs-of-nodes-in-an-undirected-graph",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "2322": {
        "name": "minimum-score-after-removals-on-a-tree",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Tree",
            "Depth-First Search"
        ],
        "difficulty": "Hard"
    },
    "2324": {
        "name": "product-sales-analysis-iv",
        "tags": [],
        "difficulty": null
    },
    "2326": {
        "name": "spiral-matrix-iv",
        "tags": [
            "Array",
            "Linked List",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2325": {
        "name": "decode-the-message",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "2329": {
        "name": "product-sales-analysis-v",
        "tags": [],
        "difficulty": null
    },
    "2330": {
        "name": "valid-palindrome-iv",
        "tags": [],
        "difficulty": null
    },
    "2327": {
        "name": "number-of-people-aware-of-a-secret",
        "tags": [
            "Dynamic Programming",
            "Queue",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2331": {
        "name": "evaluate-boolean-binary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Easy"
    },
    "2328": {
        "name": "number-of-increasing-paths-in-a-grid",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort",
            "Memoization",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "2334": {
        "name": "subarray-with-elements-greater-than-varying-threshold",
        "tags": [
            "Array",
            "Stack",
            "Union Find",
            "Monotonic Stack"
        ],
        "difficulty": "Hard"
    },
    "2333": {
        "name": "minimum-sum-of-squared-difference",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "2332": {
        "name": "the-latest-time-to-catch-a-bus",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2335": {
        "name": "minimum-amount-of-time-to-fill-cups",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Easy"
    },
    "2336": {
        "name": "smallest-number-in-infinite-set",
        "tags": [
            "Hash Table",
            "Design",
            "Heap (Priority Queue)",
            "Ordered Set"
        ],
        "difficulty": "Medium"
    },
    "2338": {
        "name": "count-the-number-of-ideal-arrays",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Combinatorics",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "2340": {
        "name": "minimum-adjacent-swaps-to-make-a-valid-array",
        "tags": [],
        "difficulty": null
    },
    "2337": {
        "name": "move-pieces-to-obtain-a-string",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Medium"
    },
    "2339": {
        "name": "all-the-matches-of-the-league",
        "tags": [],
        "difficulty": null
    },
    "2341": {
        "name": "maximum-number-of-pairs-in-array",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2342": {
        "name": "max-sum-of-a-pair-with-equal-sum-of-digits",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "2346": {
        "name": "compute-the-rank-as-a-percentage",
        "tags": [],
        "difficulty": null
    },
    "2345": {
        "name": "finding-the-number-of-visible-mountains",
        "tags": [],
        "difficulty": null
    },
    "2348": {
        "name": "number-of-zero-filled-subarrays",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Medium"
    },
    "2349": {
        "name": "design-a-number-container-system",
        "tags": [
            "Hash Table",
            "Design",
            "Heap (Priority Queue)",
            "Ordered Set"
        ],
        "difficulty": "Medium"
    },
    "2347": {
        "name": "best-poker-hand",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2344": {
        "name": "minimum-deletions-to-make-array-divisible",
        "tags": [
            "Array",
            "Math",
            "Sorting",
            "Heap (Priority Queue)",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "2343": {
        "name": "query-kth-smallest-trimmed-number",
        "tags": [
            "Array",
            "String",
            "Divide and Conquer",
            "Sorting",
            "Heap (Priority Queue)",
            "Radix Sort",
            "Quickselect"
        ],
        "difficulty": "Medium"
    },
    "2350": {
        "name": "shortest-impossible-sequence-of-rolls",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy"
        ],
        "difficulty": "Hard"
    },
    "2352": {
        "name": "equal-row-and-column-pairs",
        "tags": [
            "Array",
            "Hash Table",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2351": {
        "name": "first-letter-to-appear-twice",
        "tags": [
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2355": {
        "name": "maximum-number-of-books-you-can-take",
        "tags": [],
        "difficulty": null
    },
    "2353": {
        "name": "design-a-food-rating-system",
        "tags": [
            "Hash Table",
            "Design",
            "Heap (Priority Queue)",
            "Ordered Set"
        ],
        "difficulty": "Medium"
    },
    "2357": {
        "name": "make-array-zero-by-subtracting-equal-amounts",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2354": {
        "name": "number-of-excellent-pairs",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Bit Manipulation"
        ],
        "difficulty": "Hard"
    },
    "2356": {
        "name": "number-of-unique-subjects-taught-by-each-teacher",
        "tags": [
            "Database"
        ],
        "difficulty": "Easy"
    },
    "2360": {
        "name": "longest-cycle-in-a-graph",
        "tags": [
            "Depth-First Search",
            "Graph",
            "Topological Sort"
        ],
        "difficulty": "Hard"
    },
    "2358": {
        "name": "maximum-number-of-groups-entering-a-competition",
        "tags": [
            "Array",
            "Math",
            "Binary Search",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2359": {
        "name": "find-closest-node-to-given-two-nodes",
        "tags": [
            "Depth-First Search",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "2361": {
        "name": "minimum-costs-using-the-train-line",
        "tags": [],
        "difficulty": null
    },
    "2362": {
        "name": "generate-the-invoice",
        "tags": [],
        "difficulty": null
    },
    "2365": {
        "name": "task-scheduler-ii",
        "tags": [
            "Array",
            "Hash Table",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2364": {
        "name": "count-number-of-bad-pairs",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2363": {
        "name": "merge-similar-items",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Ordered Set"
        ],
        "difficulty": "Easy"
    },
    "2367": {
        "name": "number-of-arithmetic-triplets",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "2369": {
        "name": "check-if-there-is-a-valid-partition-for-the-array",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "2370": {
        "name": "longest-ideal-subsequence",
        "tags": [
            "Hash Table",
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "2366": {
        "name": "minimum-replacements-to-sort-the-array",
        "tags": [
            "Array",
            "Math",
            "Greedy"
        ],
        "difficulty": "Hard"
    },
    "2368": {
        "name": "reachable-nodes-with-restrictions",
        "tags": [
            "Array",
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "2371": {
        "name": "minimize-maximum-value-in-a-grid",
        "tags": [],
        "difficulty": null
    },
    "2373": {
        "name": "largest-local-values-in-a-matrix",
        "tags": [
            "Array",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "2374": {
        "name": "node-with-highest-edge-score",
        "tags": [
            "Hash Table",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "2372": {
        "name": "calculate-the-influence-of-each-salesperson",
        "tags": [],
        "difficulty": null
    },
    "2375": {
        "name": "construct-smallest-number-from-di-string",
        "tags": [
            "String",
            "Backtracking",
            "Stack",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2376": {
        "name": "count-special-integers",
        "tags": [
            "Math",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "2378": {
        "name": "choose-edges-to-maximize-score-in-a-tree",
        "tags": [],
        "difficulty": null
    },
    "2379": {
        "name": "minimum-recolors-to-get-k-consecutive-black-blocks",
        "tags": [
            "String",
            "Sliding Window"
        ],
        "difficulty": "Easy"
    },
    "2377": {
        "name": "sort-the-olympic-table",
        "tags": [],
        "difficulty": null
    },
    "2381": {
        "name": "shifting-letters-ii",
        "tags": [
            "Array",
            "String",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2380": {
        "name": "time-needed-to-rearrange-a-binary-string",
        "tags": [
            "String",
            "Dynamic Programming",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2386": {
        "name": "find-the-k-sum-of-an-array",
        "tags": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "2382": {
        "name": "maximum-segment-sum-after-removals",
        "tags": [
            "Array",
            "Union Find",
            "Prefix Sum",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "2385": {
        "name": "amount-of-time-for-binary-tree-to-be-infected",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "2384": {
        "name": "largest-palindromic-number",
        "tags": [
            "Hash Table",
            "String",
            "Greedy",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2383": {
        "name": "minimum-hours-of-training-to-win-a-competition",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "2387": {
        "name": "median-of-a-row-wise-sorted-matrix",
        "tags": [],
        "difficulty": null
    },
    "2388": {
        "name": "change-null-values-in-a-table-to-the-previous-value",
        "tags": [],
        "difficulty": null
    },
    "2389": {
        "name": "longest-subsequence-with-limited-sum",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Sorting",
            "Prefix Sum"
        ],
        "difficulty": "Easy"
    },
    "2390": {
        "name": "removing-stars-from-a-string",
        "tags": [
            "String",
            "Stack",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2392": {
        "name": "build-a-matrix-with-conditions",
        "tags": [
            "Array",
            "Graph",
            "Topological Sort",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "2395": {
        "name": "find-subarrays-with-equal-sum",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Easy"
    },
    "2396": {
        "name": "strictly-palindromic-number",
        "tags": [
            "Math",
            "Two Pointers",
            "Brainteaser"
        ],
        "difficulty": "Medium"
    },
    "2393": {
        "name": "count-strictly-increasing-subarrays",
        "tags": [],
        "difficulty": null
    },
    "2397": {
        "name": "maximum-rows-covered-by-columns",
        "tags": [
            "Array",
            "Backtracking",
            "Bit Manipulation",
            "Matrix",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2394": {
        "name": "employees-with-deductions",
        "tags": [],
        "difficulty": null
    },
    "2391": {
        "name": "minimum-amount-of-time-to-collect-garbage",
        "tags": [
            "Array",
            "String",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2400": {
        "name": "number-of-ways-to-reach-a-position-after-exactly-k-steps",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "difficulty": "Medium"
    },
    "2399": {
        "name": "check-distances-between-same-letters",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "2398": {
        "name": "maximum-number-of-robots-within-budget",
        "tags": [
            "Array",
            "Binary Search",
            "Queue",
            "Sliding Window",
            "Heap (Priority Queue)",
            "Prefix Sum",
            "Monotonic Queue"
        ],
        "difficulty": "Hard"
    },
    "2401": {
        "name": "longest-nice-subarray",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "2402": {
        "name": "meeting-rooms-iii",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Heap (Priority Queue)",
            "Simulation"
        ],
        "difficulty": "Hard"
    },
    "2405": {
        "name": "optimal-partition-of-string",
        "tags": [
            "Hash Table",
            "String",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2404": {
        "name": "most-frequent-even-element",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2403": {
        "name": "minimum-time-to-kill-all-monsters",
        "tags": [],
        "difficulty": null
    },
    "2406": {
        "name": "divide-intervals-into-minimum-number-of-groups",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2407": {
        "name": "longest-increasing-subsequence-ii",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Dynamic Programming",
            "Binary Indexed Tree",
            "Segment Tree",
            "Queue",
            "Monotonic Queue"
        ],
        "difficulty": "Hard"
    },
    "2408": {
        "name": "design-sql",
        "tags": [],
        "difficulty": null
    },
    "2411": {
        "name": "smallest-subarrays-with-maximum-bitwise-or",
        "tags": [
            "Array",
            "Binary Search",
            "Bit Manipulation",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "2413": {
        "name": "smallest-even-multiple",
        "tags": [
            "Math",
            "Number Theory"
        ],
        "difficulty": "Easy"
    },
    "2410": {
        "name": "maximum-matching-of-players-with-trainers",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2415": {
        "name": "reverse-odd-levels-of-binary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "2414": {
        "name": "length-of-the-longest-alphabetical-continuous-substring",
        "tags": [
            "String"
        ],
        "difficulty": "Medium"
    },
    "2412": {
        "name": "minimum-money-required-before-transactions",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "2416": {
        "name": "sum-of-prefix-scores-of-strings",
        "tags": [
            "Array",
            "String",
            "Trie",
            "Counting"
        ],
        "difficulty": "Hard"
    },
    "2417": {
        "name": "closest-fair-integer",
        "tags": [],
        "difficulty": null
    },
    "2418": {
        "name": "sort-the-people",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "2419": {
        "name": "longest-subarray-with-maximum-bitwise-and",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Brainteaser"
        ],
        "difficulty": "Medium"
    },
    "2409": {
        "name": "count-days-spent-together",
        "tags": [
            "Math",
            "String"
        ],
        "difficulty": "Easy"
    },
    "2422": {
        "name": "merge-operations-to-turn-array-into-a-palindrome",
        "tags": [],
        "difficulty": null
    },
    "2420": {
        "name": "find-all-good-indices",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2421": {
        "name": "number-of-good-paths",
        "tags": [
            "Array",
            "Hash Table",
            "Tree",
            "Union Find",
            "Graph",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "2423": {
        "name": "remove-letter-to-equalize-frequency",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2427": {
        "name": "number-of-common-factors",
        "tags": [
            "Math",
            "Enumeration",
            "Number Theory"
        ],
        "difficulty": "Easy"
    },
    "2425": {
        "name": "bitwise-xor-of-all-pairings",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Brainteaser"
        ],
        "difficulty": "Medium"
    },
    "2424": {
        "name": "longest-uploaded-prefix",
        "tags": [
            "Binary Search",
            "Union Find",
            "Design",
            "Binary Indexed Tree",
            "Segment Tree",
            "Heap (Priority Queue)",
            "Ordered Set"
        ],
        "difficulty": "Medium"
    },
    "2426": {
        "name": "number-of-pairs-satisfying-inequality",
        "tags": [
            "Array",
            "Binary Search",
            "Divide and Conquer",
            "Binary Indexed Tree",
            "Segment Tree",
            "Merge Sort",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "2429": {
        "name": "minimize-xor",
        "tags": [
            "Greedy",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "2428": {
        "name": "maximum-sum-of-an-hourglass",
        "tags": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2430": {
        "name": "maximum-deletions-on-a-string",
        "tags": [
            "String",
            "Dynamic Programming",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ],
        "difficulty": "Hard"
    },
    "2433": {
        "name": "find-the-original-array-of-prefix-xor",
        "tags": [
            "Array",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "2434": {
        "name": "using-a-robot-to-print-the-lexicographically-smallest-string",
        "tags": [
            "Hash Table",
            "String",
            "Stack",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2431": {
        "name": "maximize-total-tastiness-of-purchased-fruits",
        "tags": [],
        "difficulty": null
    },
    "2435": {
        "name": "paths-in-matrix-whose-sum-is-divisible-by-k",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "2432": {
        "name": "the-employee-that-worked-on-the-longest-task",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "2436": {
        "name": "minimum-split-into-subarrays-with-gcd-greater-than-one",
        "tags": [],
        "difficulty": null
    },
    "2438": {
        "name": "range-product-queries-of-powers",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2437": {
        "name": "number-of-valid-clock-times",
        "tags": [
            "String",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "2445": {
        "name": "number-of-nodes-with-value-one",
        "tags": [],
        "difficulty": null
    },
    "2443": {
        "name": "sum-of-number-and-its-reverse",
        "tags": [
            "Math",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2442": {
        "name": "count-number-of-distinct-integers-after-reverse-operations",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2439": {
        "name": "minimize-maximum-of-array",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Greedy",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2444": {
        "name": "count-subarrays-with-fixed-bounds",
        "tags": [
            "Array",
            "Queue",
            "Sliding Window",
            "Monotonic Queue"
        ],
        "difficulty": "Hard"
    },
    "2441": {
        "name": "largest-positive-integer-that-exists-with-its-negative",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "2440": {
        "name": "create-components-with-same-value",
        "tags": [
            "Array",
            "Math",
            "Tree",
            "Depth-First Search",
            "Enumeration"
        ],
        "difficulty": "Hard"
    },
    "2446": {
        "name": "determine-if-two-events-have-conflict",
        "tags": [
            "Array",
            "String"
        ],
        "difficulty": "Easy"
    },
    "2450": {
        "name": "number-of-distinct-binary-strings-after-applying-operations",
        "tags": [],
        "difficulty": null
    },
    "2447": {
        "name": "number-of-subarrays-with-gcd-equal-to-k",
        "tags": [
            "Array",
            "Math",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "2451": {
        "name": "odd-string-difference",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "2452": {
        "name": "words-within-two-edits-of-dictionary",
        "tags": [
            "Array",
            "String"
        ],
        "difficulty": "Medium"
    },
    "2454": {
        "name": "next-greater-element-iv",
        "tags": [
            "Array",
            "Binary Search",
            "Stack",
            "Sorting",
            "Heap (Priority Queue)",
            "Monotonic Stack"
        ],
        "difficulty": "Hard"
    },
    "2453": {
        "name": "destroy-sequential-targets",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2448": {
        "name": "minimum-cost-to-make-array-equal",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Sorting",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "2449": {
        "name": "minimum-number-of-operations-to-make-arrays-similar",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "2459": {
        "name": "sort-array-by-moving-items-to-empty-space",
        "tags": [],
        "difficulty": null
    },
    "2455": {
        "name": "average-value-of-even-numbers-that-are-divisible-by-three",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Easy"
    },
    "2460": {
        "name": "apply-operations-to-an-array",
        "tags": [
            "Array",
            "Two Pointers",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2457": {
        "name": "minimum-addition-to-make-integer-beautiful",
        "tags": [
            "Math",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2458": {
        "name": "height-of-binary-tree-after-subtree-removal-queries",
        "tags": [
            "Array",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Hard"
    },
    "2456": {
        "name": "most-popular-video-creator",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "2461": {
        "name": "maximum-sum-of-distinct-subarrays-with-length-k",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "2462": {
        "name": "total-cost-to-hire-k-workers",
        "tags": [
            "Array",
            "Two Pointers",
            "Heap (Priority Queue)",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2464": {
        "name": "minimum-subarrays-in-a-valid-split",
        "tags": [],
        "difficulty": null
    },
    "2466": {
        "name": "count-ways-to-build-good-strings",
        "tags": [
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "2468": {
        "name": "split-message-based-on-limit",
        "tags": [
            "String",
            "Binary Search"
        ],
        "difficulty": "Hard"
    },
    "2465": {
        "name": "number-of-distinct-averages",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "2467": {
        "name": "most-profitable-path-in-a-tree",
        "tags": [
            "Array",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "2463": {
        "name": "minimum-total-distance-traveled",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "2469": {
        "name": "convert-the-temperature",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "2470": {
        "name": "number-of-subarrays-with-lcm-equal-to-k",
        "tags": [
            "Array",
            "Math",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "2473": {
        "name": "minimum-cost-to-buy-apples",
        "tags": [],
        "difficulty": null
    },
    "2472": {
        "name": "maximum-number-of-non-overlapping-palindrome-substrings",
        "tags": [
            "Two Pointers",
            "String",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Hard"
    },
    "2471": {
        "name": "minimum-number-of-operations-to-sort-a-binary-tree-by-level",
        "tags": [
            "Tree",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "2474": {
        "name": "customers-with-strictly-increasing-purchases",
        "tags": [],
        "difficulty": null
    },
    "2475": {
        "name": "number-of-unequal-triplets-in-array",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "2476": {
        "name": "closest-nodes-queries-in-a-binary-search-tree",
        "tags": [
            "Array",
            "Binary Search",
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "2478": {
        "name": "number-of-beautiful-partitions",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "2481": {
        "name": "minimum-cuts-to-divide-a-circle",
        "tags": [
            "Math",
            "Geometry"
        ],
        "difficulty": "Easy"
    },
    "2477": {
        "name": "minimum-fuel-cost-to-report-to-the-capital",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "2480": {
        "name": "form-a-chemical-bond",
        "tags": [],
        "difficulty": null
    },
    "2479": {
        "name": "maximum-xor-of-two-non-overlapping-subtrees",
        "tags": [],
        "difficulty": null
    },
    "2484": {
        "name": "count-palindromic-subsequences",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "2482": {
        "name": "difference-between-ones-and-zeros-in-row-and-column",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2483": {
        "name": "minimum-penalty-for-a-shop",
        "tags": [
            "String",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2488": {
        "name": "count-subarrays-with-median-k",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "2487": {
        "name": "remove-nodes-from-linked-list",
        "tags": [
            "Linked List",
            "Stack",
            "Recursion",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "2486": {
        "name": "append-characters-to-string-to-make-subsequence",
        "tags": [
            "Two Pointers",
            "String",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2490": {
        "name": "circular-sentence",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "2489": {
        "name": "number-of-substrings-with-fixed-ratio",
        "tags": [],
        "difficulty": null
    },
    "2485": {
        "name": "find-the-pivot-integer",
        "tags": [
            "Math",
            "Prefix Sum"
        ],
        "difficulty": "Easy"
    },
    "2491": {
        "name": "divide-players-into-teams-of-equal-skill",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2492": {
        "name": "minimum-score-of-a-path-between-two-cities",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "2499": {
        "name": "minimum-total-cost-to-make-arrays-unequal",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Counting"
        ],
        "difficulty": "Hard"
    },
    "2495": {
        "name": "number-of-subarrays-having-even-product",
        "tags": [],
        "difficulty": null
    },
    "2494": {
        "name": "merge-overlapping-events-in-the-same-hall",
        "tags": [],
        "difficulty": null
    },
    "2493": {
        "name": "divide-nodes-into-the-maximum-number-of-groups",
        "tags": [
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "2498": {
        "name": "frog-jump-ii",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2496": {
        "name": "maximum-value-of-a-string-in-an-array",
        "tags": [
            "Array",
            "String"
        ],
        "difficulty": "Easy"
    },
    "2500": {
        "name": "delete-greatest-value-in-each-row",
        "tags": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2497": {
        "name": "maximum-star-sum-of-a-graph",
        "tags": [
            "Array",
            "Greedy",
            "Graph",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "2505": {
        "name": "bitwise-or-of-all-subsequence-sums",
        "tags": [],
        "difficulty": null
    },
    "2506": {
        "name": "count-pairs-of-similar-strings",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2508": {
        "name": "add-edges-to-make-degrees-of-all-nodes-even",
        "tags": [
            "Hash Table",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "2504": {
        "name": "concatenate-the-name-and-the-profession",
        "tags": [],
        "difficulty": null
    },
    "2507": {
        "name": "smallest-value-after-replacing-with-sum-of-prime-factors",
        "tags": [
            "Math",
            "Simulation",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "2501": {
        "name": "longest-square-streak-in-an-array",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Dynamic Programming",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2503": {
        "name": "maximum-number-of-points-from-grid-queries",
        "tags": [
            "Array",
            "Two Pointers",
            "Breadth-First Search",
            "Union Find",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "2502": {
        "name": "design-memory-allocator",
        "tags": [
            "Array",
            "Hash Table",
            "Design",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2511": {
        "name": "maximum-enemy-forts-that-can-be-captured",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "difficulty": "Easy"
    },
    "2509": {
        "name": "cycle-length-queries-in-a-tree",
        "tags": [
            "Array",
            "Tree",
            "Binary Tree"
        ],
        "difficulty": "Hard"
    },
    "2510": {
        "name": "check-if-there-is-a-path-with-equal-number-of-0's-and-1's",
        "tags": [],
        "difficulty": null
    },
    "2516": {
        "name": "take-k-of-each-character-from-left-and-right",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "2515": {
        "name": "shortest-distance-to-target-string-in-a-circular-array",
        "tags": [
            "Array",
            "String"
        ],
        "difficulty": "Easy"
    },
    "2513": {
        "name": "minimize-the-maximum-of-two-arrays",
        "tags": [
            "Math",
            "Binary Search",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "2518": {
        "name": "number-of-great-partitions",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "2519": {
        "name": "count-the-number-of-k-big-indices",
        "tags": [],
        "difficulty": null
    },
    "2517": {
        "name": "maximum-tastiness-of-candy-basket",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2512": {
        "name": "reward-top-k-students",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "2514": {
        "name": "count-anagrams",
        "tags": [
            "Hash Table",
            "Math",
            "String",
            "Combinatorics",
            "Counting"
        ],
        "difficulty": "Hard"
    },
    "2521": {
        "name": "distinct-prime-factors-of-product-of-array",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "2520": {
        "name": "count-the-digits-that-divide-a-number",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "2522": {
        "name": "partition-string-into-substrings-with-values-at-most-k",
        "tags": [
            "String",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2524": {
        "name": "maximum-frequency-score-of-a-subarray",
        "tags": [],
        "difficulty": null
    },
    "2526": {
        "name": "find-consecutive-integers-from-a-data-stream",
        "tags": [
            "Hash Table",
            "Design",
            "Queue",
            "Counting",
            "Data Stream"
        ],
        "difficulty": "Medium"
    },
    "2527": {
        "name": "find-xor-beauty-of-array",
        "tags": [
            "Array",
            "Math",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "2523": {
        "name": "closest-prime-numbers-in-range",
        "tags": [
            "Math",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "2525": {
        "name": "categorize-box-according-to-criteria",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "2528": {
        "name": "maximize-the-minimum-powered-city",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Queue",
            "Sliding Window",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "2529": {
        "name": "maximum-count-of-positive-integer-and-negative-integer",
        "tags": [
            "Array",
            "Binary Search",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2530": {
        "name": "maximal-score-after-applying-k-operations",
        "tags": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "2534": {
        "name": "time-taken-to-cross-the-door",
        "tags": [],
        "difficulty": null
    },
    "2531": {
        "name": "make-number-of-distinct-characters-equal",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2533": {
        "name": "number-of-good-binary-strings",
        "tags": [],
        "difficulty": null
    },
    "2532": {
        "name": "time-to-cross-a-bridge",
        "tags": [
            "Array",
            "Heap (Priority Queue)",
            "Simulation"
        ],
        "difficulty": "Hard"
    },
    "2536": {
        "name": "increment-submatrices-by-one",
        "tags": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2535": {
        "name": "difference-between-element-sum-and-digit-sum-of-an-array",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Easy"
    },
    "2537": {
        "name": "count-the-number-of-good-subarrays",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "2539": {
        "name": "count-the-number-of-good-subsequences",
        "tags": [],
        "difficulty": null
    },
    "2538": {
        "name": "difference-between-maximum-and-minimum-price-sum",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Tree",
            "Depth-First Search"
        ],
        "difficulty": "Hard"
    },
    "2540": {
        "name": "minimum-common-value",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Binary Search"
        ],
        "difficulty": "Easy"
    },
    "2545": {
        "name": "sort-the-students-by-their-kth-score",
        "tags": [
            "Array",
            "Sorting",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "2544": {
        "name": "alternating-digit-sum",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "2542": {
        "name": "maximum-subsequence-score",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "2541": {
        "name": "minimum-operations-to-make-array-equal-ii",
        "tags": [
            "Array",
            "Math",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2543": {
        "name": "check-if-point-is-reachable",
        "tags": [
            "Math",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "2546": {
        "name": "apply-bitwise-operations-to-make-strings-equal",
        "tags": [
            "String",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "2547": {
        "name": "minimum-cost-to-split-an-array",
        "tags": [
            "Array",
            "Hash Table",
            "Dynamic Programming",
            "Counting"
        ],
        "difficulty": "Hard"
    },
    "2551": {
        "name": "put-marbles-in-bags",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "2550": {
        "name": "count-collisions-of-monkeys-on-a-polygon",
        "tags": [
            "Math",
            "Recursion"
        ],
        "difficulty": "Medium"
    },
    "2549": {
        "name": "count-distinct-numbers-on-board",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2553": {
        "name": "separate-the-digits-in-an-array",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2548": {
        "name": "maximum-price-to-fill-a-bag",
        "tags": [],
        "difficulty": null
    },
    "2552": {
        "name": "count-increasing-quadruplets",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Binary Indexed Tree",
            "Enumeration",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "2555": {
        "name": "maximize-win-from-two-segments",
        "tags": [
            "Array",
            "Binary Search",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "2559": {
        "name": "count-vowel-strings-in-ranges",
        "tags": [
            "Array",
            "String",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2557": {
        "name": "maximum-number-of-integers-to-choose-from-a-range-ii",
        "tags": [],
        "difficulty": null
    },
    "2560": {
        "name": "house-robber-iv",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "2554": {
        "name": "maximum-number-of-integers-to-choose-from-a-range-i",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2561": {
        "name": "rearranging-fruits",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy"
        ],
        "difficulty": "Hard"
    },
    "2556": {
        "name": "disconnect-path-in-a-binary-matrix-by-at-most-one-flip",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "2558": {
        "name": "take-gifts-from-the-richest-pile",
        "tags": [
            "Array",
            "Heap (Priority Queue)",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2563": {
        "name": "count-the-number-of-fair-pairs",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2562": {
        "name": "find-the-array-concatenation-value",
        "tags": [
            "Array",
            "Two Pointers",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2564": {
        "name": "substring-xor-queries",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "2565": {
        "name": "subsequence-with-the-minimum-score",
        "tags": [
            "Two Pointers",
            "String",
            "Binary Search"
        ],
        "difficulty": "Hard"
    },
    "2566": {
        "name": "maximum-difference-by-remapping-a-digit",
        "tags": [
            "Math",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "2567": {
        "name": "minimum-score-by-changing-two-elements",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2568": {
        "name": "minimum-impossible-or",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Brainteaser"
        ],
        "difficulty": "Medium"
    },
    "2569": {
        "name": "handling-sum-queries-after-update",
        "tags": [
            "Array",
            "Segment Tree"
        ],
        "difficulty": "Hard"
    },
    "2574": {
        "name": "left-and-right-sum-differences",
        "tags": [
            "Array",
            "Prefix Sum"
        ],
        "difficulty": "Easy"
    },
    "2570": {
        "name": "merge-two-2d-arrays-by-summing-values",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers"
        ],
        "difficulty": "Easy"
    },
    "2571": {
        "name": "minimum-operations-to-reduce-an-integer-to-0",
        "tags": [
            "Dynamic Programming",
            "Greedy",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "2572": {
        "name": "count-the-number-of-square-free-subsets",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Medium"
    },
    "2573": {
        "name": "find-the-string-with-lcp",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming",
            "Greedy",
            "Union Find",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "2575": {
        "name": "find-the-divisibility-array-of-a-string",
        "tags": [
            "Array",
            "Math",
            "String"
        ],
        "difficulty": "Medium"
    },
    "2576": {
        "name": "find-the-maximum-number-of-marked-indices",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2581": {
        "name": "count-number-of-possible-root-nodes",
        "tags": [
            "Array",
            "Hash Table",
            "Dynamic Programming",
            "Tree",
            "Depth-First Search"
        ],
        "difficulty": "Hard"
    },
    "2580": {
        "name": "count-ways-to-group-overlapping-ranges",
        "tags": [
            "Array",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2579": {
        "name": "count-total-number-of-colored-cells",
        "tags": [
            "Math"
        ],
        "difficulty": "Medium"
    },
    "2577": {
        "name": "minimum-time-to-visit-a-cell-in-a-grid",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Graph",
            "Heap (Priority Queue)",
            "Matrix",
            "Shortest Path"
        ],
        "difficulty": "Hard"
    },
    "2578": {
        "name": "split-with-minimum-sum",
        "tags": [
            "Math",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "2583": {
        "name": "kth-largest-sum-in-a-binary-tree",
        "tags": [
            "Tree",
            "Breadth-First Search",
            "Sorting",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "2582": {
        "name": "pass-the-pillow",
        "tags": [
            "Math",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2585": {
        "name": "number-of-ways-to-earn-points",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "2591": {
        "name": "distribute-money-to-maximum-children",
        "tags": [
            "Math",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "2590": {
        "name": "design-a-todo-list",
        "tags": [],
        "difficulty": null
    },
    "2588": {
        "name": "count-the-number-of-beautiful-subarrays",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2589": {
        "name": "minimum-time-to-complete-all-tasks",
        "tags": [
            "Array",
            "Binary Search",
            "Stack",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "2587": {
        "name": "rearrange-array-to-maximize-prefix-score",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2584": {
        "name": "split-the-array-to-make-coprime-products",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "2594": {
        "name": "minimum-time-to-repair-cars",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "2595": {
        "name": "number-of-even-and-odd-bits",
        "tags": [
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "2596": {
        "name": "check-knight-tour-configuration",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2586": {
        "name": "count-the-number-of-vowel-strings-in-range",
        "tags": [
            "Array",
            "String",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2592": {
        "name": "maximize-greatness-of-an-array",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2593": {
        "name": "find-score-of-an-array-after-marking-all-elements",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Heap (Priority Queue)",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2597": {
        "name": "the-number-of-beautiful-subsets",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Dynamic Programming",
            "Backtracking",
            "Sorting",
            "Combinatorics"
        ],
        "difficulty": "Medium"
    },
    "2603": {
        "name": "collect-coins-in-a-tree",
        "tags": [
            "Array",
            "Tree",
            "Graph",
            "Topological Sort"
        ],
        "difficulty": "Hard"
    },
    "2602": {
        "name": "minimum-operations-to-make-all-array-elements-equal",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2605": {
        "name": "form-smallest-number-from-two-digit-arrays",
        "tags": [
            "Array",
            "Hash Table",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "2608": {
        "name": "shortest-cycle-in-a-graph",
        "tags": [
            "Breadth-First Search",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "2599": {
        "name": "make-the-prefix-sum-non-negative",
        "tags": [],
        "difficulty": null
    },
    "2607": {
        "name": "make-k-subarray-sums-equal",
        "tags": [
            "Array",
            "Math",
            "Sorting",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "2601": {
        "name": "prime-subtraction-operation",
        "tags": [
            "Array",
            "Math",
            "Binary Search",
            "Greedy",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "2598": {
        "name": "smallest-missing-non-negative-integer-after-operations",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2609": {
        "name": "find-the-longest-balanced-substring-of-a-binary-string",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "2600": {
        "name": "k-items-with-the-maximum-sum",
        "tags": [
            "Math",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "2611": {
        "name": "mice-and-cheese",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "2604": {
        "name": "minimum-time-to-eat-all-grains",
        "tags": [],
        "difficulty": null
    },
    "2610": {
        "name": "convert-an-array-into-a-2d-array-with-conditions",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Medium"
    },
    "2606": {
        "name": "find-the-substring-with-maximum-cost",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "2615": {
        "name": "sum-of-distances",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2613": {
        "name": "beautiful-pairs",
        "tags": [],
        "difficulty": null
    },
    "2618": {
        "name": "check-if-object-instance-of-class",
        "tags": [],
        "difficulty": "Medium"
    },
    "2616": {
        "name": "minimize-the-maximum-difference-of-pairs",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2619": {
        "name": "array-prototype-last",
        "tags": [],
        "difficulty": "Easy"
    },
    "2614": {
        "name": "prime-in-diagonal",
        "tags": [
            "Array",
            "Math",
            "Matrix",
            "Number Theory"
        ],
        "difficulty": "Easy"
    },
    "2612": {
        "name": "minimum-reverse-operations",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "2617": {
        "name": "minimum-number-of-visited-cells-in-a-grid",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Stack",
            "Breadth-First Search",
            "Union Find",
            "Heap (Priority Queue)",
            "Matrix",
            "Monotonic Stack"
        ],
        "difficulty": "Hard"
    },
    "2621": {
        "name": "sleep",
        "tags": [],
        "difficulty": "Easy"
    },
    "2623": {
        "name": "memoize",
        "tags": [],
        "difficulty": "Medium"
    },
    "2620": {
        "name": "counter",
        "tags": [],
        "difficulty": "Easy"
    },
    "2622": {
        "name": "cache-with-time-limit",
        "tags": [],
        "difficulty": "Medium"
    },
    "2625": {
        "name": "flatten-deeply-nested-array",
        "tags": [],
        "difficulty": "Medium"
    },
    "2624": {
        "name": "snail-traversal",
        "tags": [],
        "difficulty": "Medium"
    },
    "2627": {
        "name": "debounce",
        "tags": [],
        "difficulty": "Medium"
    },
    "2630": {
        "name": "memoize-ii",
        "tags": [],
        "difficulty": "Hard"
    },
    "2629": {
        "name": "function-composition",
        "tags": [],
        "difficulty": "Easy"
    },
    "2628": {
        "name": "json-deep-equal",
        "tags": [],
        "difficulty": null
    },
    "2631": {
        "name": "group-by",
        "tags": [],
        "difficulty": "Medium"
    },
    "2626": {
        "name": "array-reduce-transformation",
        "tags": [],
        "difficulty": "Easy"
    },
    "2632": {
        "name": "curry",
        "tags": [],
        "difficulty": null
    },
    "2634": {
        "name": "filter-elements-from-array",
        "tags": [],
        "difficulty": "Easy"
    },
    "2633": {
        "name": "convert-object-to-json-string",
        "tags": [],
        "difficulty": null
    },
    "2638": {
        "name": "count-the-number-of-k-free-subsets",
        "tags": [],
        "difficulty": null
    },
    "2639": {
        "name": "find-the-width-of-columns-of-a-grid",
        "tags": [
            "Array",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "2636": {
        "name": "promise-pool",
        "tags": [],
        "difficulty": null
    },
    "2635": {
        "name": "apply-transform-over-each-element-in-array",
        "tags": [],
        "difficulty": "Easy"
    },
    "2637": {
        "name": "promise-time-limit",
        "tags": [],
        "difficulty": "Medium"
    },
    "2640": {
        "name": "find-the-score-of-all-prefixes-of-an-array",
        "tags": [
            "Array",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2642": {
        "name": "design-graph-with-shortest-path-calculator",
        "tags": [
            "Graph",
            "Design",
            "Heap (Priority Queue)",
            "Shortest Path"
        ],
        "difficulty": "Hard"
    },
    "2641": {
        "name": "cousins-in-binary-tree-ii",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "2643": {
        "name": "row-with-maximum-ones",
        "tags": [
            "Array",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "2646": {
        "name": "minimize-the-total-price-of-the-trips",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "2645": {
        "name": "minimum-additions-to-make-valid-string",
        "tags": [
            "String",
            "Dynamic Programming",
            "Stack",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2647": {
        "name": "color-the-triangle-red",
        "tags": [],
        "difficulty": null
    },
    "2644": {
        "name": "find-the-maximum-divisibility-score",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "2648": {
        "name": "generate-fibonacci-sequence",
        "tags": [],
        "difficulty": "Easy"
    },
    "2651": {
        "name": "calculate-delayed-arrival-time",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "2649": {
        "name": "nested-array-generator",
        "tags": [],
        "difficulty": "Medium"
    },
    "2650": {
        "name": "design-cancellable-function",
        "tags": [],
        "difficulty": "Hard"
    },
    "2652": {
        "name": "sum-multiples",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "2653": {
        "name": "sliding-subarray-beauty",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "2654": {
        "name": "minimum-number-of-operations-to-make-all-array-elements-equal-to-1",
        "tags": [
            "Array",
            "Math",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "2656": {
        "name": "maximum-sum-with-exactly-k-elements",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "2655": {
        "name": "find-maximal-uncovered-ranges",
        "tags": [],
        "difficulty": null
    },
    "2657": {
        "name": "find-the-prefix-common-array-of-two-arrays",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "2658": {
        "name": "maximum-number-of-fish-in-a-grid",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "2659": {
        "name": "make-array-empty",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Binary Indexed Tree",
            "Segment Tree",
            "Sorting",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "2660": {
        "name": "determine-the-winner-of-a-bowling-game",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2661": {
        "name": "first-completely-painted-row-or-column",
        "tags": [
            "Array",
            "Hash Table",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "2662": {
        "name": "minimum-cost-of-a-path-with-special-roads",
        "tags": [
            "Array",
            "Graph",
            "Heap (Priority Queue)",
            "Shortest Path"
        ],
        "difficulty": "Medium"
    },
    "2663": {
        "name": "lexicographically-smallest-beautiful-string",
        "tags": [
            "String",
            "Greedy"
        ],
        "difficulty": "Hard"
    },
    "2664": {
        "name": "the-knight\u2019s-tour",
        "tags": [],
        "difficulty": null
    },
    "2665": {
        "name": "counter-ii",
        "tags": [],
        "difficulty": "Easy"
    },
    "2666": {
        "name": "allow-one-function-call",
        "tags": [],
        "difficulty": "Easy"
    },
    "2668": {
        "name": "find-latest-salaries",
        "tags": [],
        "difficulty": null
    },
    "2667": {
        "name": "create-hello-world-function",
        "tags": [],
        "difficulty": "Easy"
    },
    "2672": {
        "name": "number-of-adjacent-elements-with-the-same-color",
        "tags": [
            "Array"
        ],
        "difficulty": "Medium"
    },
    "2671": {
        "name": "frequency-tracker",
        "tags": [
            "Hash Table",
            "Design"
        ],
        "difficulty": "Medium"
    },
    "2669": {
        "name": "count-artist-occurrences-on-spotify-ranking-list",
        "tags": [],
        "difficulty": null
    },
    "2670": {
        "name": "find-the-distinct-difference-array",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Easy"
    },
    "2674": {
        "name": "split-a-circular-linked-list",
        "tags": [],
        "difficulty": null
    },
    "2673": {
        "name": "make-costs-of-paths-equal-in-a-binary-tree",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Tree",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "2675": {
        "name": "array-of-objects-to-matrix",
        "tags": [],
        "difficulty": null
    },
    "2676": {
        "name": "throttle",
        "tags": [],
        "difficulty": null
    },
    "2677": {
        "name": "chunk-array",
        "tags": [],
        "difficulty": "Easy"
    },
    "2679": {
        "name": "sum-in-a-matrix",
        "tags": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2678": {
        "name": "number-of-senior-citizens",
        "tags": [
            "Array",
            "String"
        ],
        "difficulty": "Easy"
    },
    "2680": {
        "name": "maximum-or",
        "tags": [
            "Array",
            "Greedy",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2681": {
        "name": "power-of-heroes",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Sorting",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "2682": {
        "name": "find-the-losers-of-the-circular-game",
        "tags": [
            "Array",
            "Hash Table",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2683": {
        "name": "neighboring-bitwise-xor",
        "tags": [
            "Array",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "2686": {
        "name": "immediate-food-delivery-iii",
        "tags": [],
        "difficulty": null
    },
    "2687": {
        "name": "bikes-last-time-used",
        "tags": [],
        "difficulty": null
    },
    "2684": {
        "name": "maximum-number-of-moves-in-a-grid",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "2685": {
        "name": "count-the-number-of-complete-components",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "2690": {
        "name": "infinite-method-object",
        "tags": [],
        "difficulty": null
    },
    "2691": {
        "name": "immutability-helper",
        "tags": [],
        "difficulty": null
    },
    "2688": {
        "name": "find-active-users",
        "tags": [],
        "difficulty": null
    },
    "2695": {
        "name": "array-wrapper",
        "tags": [],
        "difficulty": "Easy"
    },
    "2694": {
        "name": "event-emitter",
        "tags": [],
        "difficulty": "Medium"
    },
    "2692": {
        "name": "make-object-immutable",
        "tags": [],
        "difficulty": null
    },
    "2693": {
        "name": "call-function-with-custom-context",
        "tags": [],
        "difficulty": "Medium"
    },
    "2689": {
        "name": "extract-kth-character-from-the-rope-tree",
        "tags": [],
        "difficulty": null
    },
    "2696": {
        "name": "minimum-string-length-after-removing-substrings",
        "tags": [
            "String",
            "Stack",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2697": {
        "name": "lexicographically-smallest-palindrome",
        "tags": [
            "Two Pointers",
            "String",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "2700": {
        "name": "differences-between-two-objects",
        "tags": [],
        "difficulty": null
    },
    "2705": {
        "name": "compact-object",
        "tags": [],
        "difficulty": "Medium"
    },
    "2699": {
        "name": "modify-graph-edge-weights",
        "tags": [
            "Graph",
            "Heap (Priority Queue)",
            "Shortest Path"
        ],
        "difficulty": "Hard"
    },
    "2703": {
        "name": "return-length-of-arguments-passed",
        "tags": [],
        "difficulty": "Easy"
    },
    "2698": {
        "name": "find-the-punishment-number-of-an-integer",
        "tags": [
            "Math",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "2701": {
        "name": "consecutive-transactions-with-increasing-amounts",
        "tags": [],
        "difficulty": null
    },
    "2704": {
        "name": "to-be-or-not-to-be",
        "tags": [],
        "difficulty": "Easy"
    },
    "2702": {
        "name": "minimum-operations-to-make-numbers-non-positive",
        "tags": [],
        "difficulty": null
    },
    "2709": {
        "name": "greatest-common-divisor-traversal",
        "tags": [
            "Array",
            "Math",
            "Union Find",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "2706": {
        "name": "buy-two-chocolates",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "2707": {
        "name": "extra-characters-in-a-string",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Dynamic Programming",
            "Trie"
        ],
        "difficulty": "Medium"
    },
    "2710": {
        "name": "remove-trailing-zeros-from-a-string",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "2708": {
        "name": "maximum-strength-of-a-group",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Greedy",
            "Bit Manipulation",
            "Sorting",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2711": {
        "name": "difference-of-number-of-distinct-values-on-diagonals",
        "tags": [
            "Array",
            "Hash Table",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "2712": {
        "name": "minimum-cost-to-make-all-characters-equal",
        "tags": [
            "String",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2713": {
        "name": "maximum-strictly-increasing-cells-in-a-matrix",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Dynamic Programming",
            "Memoization",
            "Sorting",
            "Matrix",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "2716": {
        "name": "minimize-string-length",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "2717": {
        "name": "semi-ordered-permutation",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2714": {
        "name": "find-shortest-path-with-k-hops",
        "tags": [],
        "difficulty": null
    },
    "2718": {
        "name": "sum-of-matrix-after-queries",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Medium"
    },
    "2715": {
        "name": "timeout-cancellation",
        "tags": [],
        "difficulty": "Easy"
    },
    "2719": {
        "name": "count-of-integers",
        "tags": [
            "Math",
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "2720": {
        "name": "popularity-percentage",
        "tags": [],
        "difficulty": null
    },
    "2722": {
        "name": "join-two-arrays-by-id",
        "tags": [],
        "difficulty": "Medium"
    },
    "2721": {
        "name": "execute-asynchronous-functions-in-parallel",
        "tags": [],
        "difficulty": "Medium"
    },
    "2725": {
        "name": "interval-cancellation",
        "tags": [],
        "difficulty": "Easy"
    },
    "2726": {
        "name": "calculator-with-method-chaining",
        "tags": [],
        "difficulty": "Easy"
    },
    "2723": {
        "name": "add-two-promises",
        "tags": [],
        "difficulty": "Easy"
    },
    "2727": {
        "name": "is-object-empty",
        "tags": [],
        "difficulty": "Easy"
    },
    "2724": {
        "name": "sort-by",
        "tags": [],
        "difficulty": "Easy"
    },
    "2728": {
        "name": "count-houses-in-a-circular-street",
        "tags": [],
        "difficulty": null
    },
    "2729": {
        "name": "check-if-the-number-is-fascinating",
        "tags": [
            "Hash Table",
            "Math"
        ],
        "difficulty": "Easy"
    },
    "2730": {
        "name": "find-the-longest-semi-repetitive-substring",
        "tags": [
            "String",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "2731": {
        "name": "movement-of-robots",
        "tags": [
            "Array",
            "Brainteaser",
            "Sorting",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2734": {
        "name": "lexicographically-smallest-string-after-substring-operation",
        "tags": [
            "String",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2733": {
        "name": "neither-minimum-nor-maximum",
        "tags": [
            "Array",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "2732": {
        "name": "find-a-good-subset-of-the-matrix",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "2737": {
        "name": "find-the-closest-marked-node",
        "tags": [],
        "difficulty": null
    },
    "2735": {
        "name": "collecting-chocolates",
        "tags": [
            "Array",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2738": {
        "name": "count-occurrences-in-text",
        "tags": [],
        "difficulty": null
    },
    "2736": {
        "name": "maximum-sum-queries",
        "tags": [
            "Array",
            "Binary Search",
            "Stack",
            "Binary Indexed Tree",
            "Segment Tree",
            "Sorting",
            "Monotonic Stack"
        ],
        "difficulty": "Hard"
    },
    "2739": {
        "name": "total-distance-traveled",
        "tags": [
            "Math",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2741": {
        "name": "special-permutations",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Medium"
    },
    "2740": {
        "name": "find-the-value-of-the-partition",
        "tags": [
            "Array",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2742": {
        "name": "painting-the-walls",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "2745": {
        "name": "construct-the-longest-new-string",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Greedy",
            "Brainteaser"
        ],
        "difficulty": "Medium"
    },
    "2744": {
        "name": "find-maximum-number-of-string-pairs",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2743": {
        "name": "count-substrings-without-repeating-character",
        "tags": [],
        "difficulty": null
    },
    "2746": {
        "name": "decremental-string-concatenation",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "2747": {
        "name": "count-zero-request-servers",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2749": {
        "name": "minimum-operations-to-make-the-integer-zero",
        "tags": [
            "Bit Manipulation",
            "Brainteaser"
        ],
        "difficulty": "Medium"
    },
    "2750": {
        "name": "ways-to-split-array-into-good-subarrays",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "2748": {
        "name": "number-of-beautiful-pairs",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Counting",
            "Number Theory"
        ],
        "difficulty": "Easy"
    },
    "2752": {
        "name": "customers-with-maximum-number-of-transactions-on-consecutive-days",
        "tags": [],
        "difficulty": null
    },
    "2754": {
        "name": "bind-function-to-context",
        "tags": [],
        "difficulty": null
    },
    "2753": {
        "name": "count-houses-in-a-circular-street-ii",
        "tags": [],
        "difficulty": null
    },
    "2751": {
        "name": "robot-collisions",
        "tags": [
            "Array",
            "Stack",
            "Sorting",
            "Simulation"
        ],
        "difficulty": "Hard"
    },
    "2755": {
        "name": "deep-merge-of-two-objects",
        "tags": [],
        "difficulty": null
    },
    "2757": {
        "name": "generate-circular-array-values",
        "tags": [],
        "difficulty": null
    },
    "2756": {
        "name": "query-batching",
        "tags": [],
        "difficulty": null
    },
    "2758": {
        "name": "next-day",
        "tags": [],
        "difficulty": null
    },
    "2761": {
        "name": "prime-pairs-with-target-sum",
        "tags": [
            "Array",
            "Math",
            "Enumeration",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "2759": {
        "name": "convert-json-string-to-object",
        "tags": [],
        "difficulty": null
    },
    "2762": {
        "name": "continuous-subarrays",
        "tags": [
            "Array",
            "Queue",
            "Sliding Window",
            "Heap (Priority Queue)",
            "Ordered Set",
            "Monotonic Queue"
        ],
        "difficulty": "Medium"
    },
    "2760": {
        "name": "longest-even-odd-subarray-with-threshold",
        "tags": [
            "Array",
            "Sliding Window"
        ],
        "difficulty": "Easy"
    },
    "2765": {
        "name": "longest-alternating-subarray",
        "tags": [
            "Array",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "2766": {
        "name": "relocate-marbles",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2764": {
        "name": "is-array-a-preorder-of-some-\u200cbinary-tree",
        "tags": [],
        "difficulty": null
    },
    "2763": {
        "name": "sum-of-imbalance-numbers-of-all-subarrays",
        "tags": [
            "Array",
            "Hash Table",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "2767": {
        "name": "partition-string-into-minimum-beautiful-substrings",
        "tags": [
            "Hash Table",
            "String",
            "Dynamic Programming",
            "Backtracking"
        ],
        "difficulty": "Medium"
    },
    "2768": {
        "name": "number-of-black-blocks",
        "tags": [
            "Array",
            "Hash Table",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2770": {
        "name": "maximum-number-of-jumps-to-reach-the-last-index",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "2769": {
        "name": "find-the-maximum-achievable-number",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "2772": {
        "name": "apply-operations-to-make-all-array-elements-equal-to-zero",
        "tags": [
            "Array",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2773": {
        "name": "height-of-special-binary-tree",
        "tags": [],
        "difficulty": null
    },
    "2771": {
        "name": "longest-non-decreasing-subarray-from-two-arrays",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "2776": {
        "name": "convert-callback-based-function-to-promise-based-function",
        "tags": [],
        "difficulty": null
    },
    "2777": {
        "name": "date-range-generator",
        "tags": [],
        "difficulty": null
    },
    "2778": {
        "name": "sum-of-squares-of-special-elements",
        "tags": [
            "Array",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "2775": {
        "name": "undefined-to-null",
        "tags": [],
        "difficulty": null
    },
    "2774": {
        "name": "array-upper-bound",
        "tags": [],
        "difficulty": null
    },
    "2782": {
        "name": "number-of-unique-categories",
        "tags": [],
        "difficulty": null
    },
    "2779": {
        "name": "maximum-beauty-of-an-array-after-applying-operation",
        "tags": [
            "Array",
            "Binary Search",
            "Sliding Window",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2781": {
        "name": "length-of-the-longest-valid-substring",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "difficulty": "Hard"
    },
    "2780": {
        "name": "minimum-index-of-a-valid-split",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2783": {
        "name": "flight-occupancy-and-waitlist-analysis",
        "tags": [],
        "difficulty": null
    },
    "2785": {
        "name": "sort-vowels-in-a-string",
        "tags": [
            "String",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2784": {
        "name": "check-if-array-is-good",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "2786": {
        "name": "visit-array-positions-to-maximize-score",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "2787": {
        "name": "ways-to-express-an-integer-as-sum-of-powers",
        "tags": [
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "2792": {
        "name": "count-nodes-that-are-great-enough",
        "tags": [],
        "difficulty": null
    },
    "2791": {
        "name": "count-paths-that-can-form-a-palindrome-in-a-tree",
        "tags": [
            "Dynamic Programming",
            "Bit Manipulation",
            "Tree",
            "Depth-First Search",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "2789": {
        "name": "largest-element-in-an-array-after-merge-operations",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2790": {
        "name": "maximum-number-of-groups-with-increasing-length",
        "tags": [
            "Array",
            "Math",
            "Binary Search",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "2788": {
        "name": "split-strings-by-separator",
        "tags": [
            "Array",
            "String"
        ],
        "difficulty": "Easy"
    },
    "2793": {
        "name": "status-of-flight-tickets",
        "tags": [],
        "difficulty": null
    },
    "2794": {
        "name": "create-object-from-two-arrays",
        "tags": [],
        "difficulty": null
    },
    "2795": {
        "name": "parallel-execution-of-promises-for-individual-results-retrieval",
        "tags": [],
        "difficulty": null
    },
    "2796": {
        "name": "repeat-string",
        "tags": [],
        "difficulty": null
    },
    "2797": {
        "name": "partial-function-with-placeholders",
        "tags": [],
        "difficulty": null
    },
    "2801": {
        "name": "count-stepping-numbers-in-range",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "2802": {
        "name": "find-the-k-th-lucky-number",
        "tags": [],
        "difficulty": null
    },
    "2799": {
        "name": "count-complete-subarrays-in-an-array",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "2798": {
        "name": "number-of-employees-who-met-the-target",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "2800": {
        "name": "shortest-string-that-contains-three-strings",
        "tags": [
            "String",
            "Greedy",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2803": {
        "name": "factorial-generator",
        "tags": [],
        "difficulty": null
    },
    "2805": {
        "name": "custom-interval",
        "tags": [],
        "difficulty": null
    },
    "2804": {
        "name": "array-prototype-foreach",
        "tags": [],
        "difficulty": null
    },
    "2810": {
        "name": "faulty-keyboard",
        "tags": [
            "String",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2808": {
        "name": "minimum-seconds-to-equalize-a-circular-array",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Medium"
    },
    "2807": {
        "name": "insert-greatest-common-divisors-in-linked-list",
        "tags": [
            "Linked List",
            "Math",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "2809": {
        "name": "minimum-time-to-make-array-sum-at-most-x",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "2806": {
        "name": "account-balance-after-rounded-purchase",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "2811": {
        "name": "check-if-it-is-possible-to-split-array",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2813": {
        "name": "maximum-elegance-of-a-k-length-subsequence",
        "tags": [
            "Array",
            "Hash Table",
            "Stack",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "2812": {
        "name": "find-the-safest-path-in-a-grid",
        "tags": [
            "Array",
            "Binary Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "2819": {
        "name": "minimum-relative-loss-after-buying-chocolates",
        "tags": [],
        "difficulty": null
    },
    "2814": {
        "name": "minimum-time-takes-to-reach-destination-without-drowning",
        "tags": [],
        "difficulty": null
    },
    "2815": {
        "name": "max-pair-sum-in-an-array",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Easy"
    },
    "2818": {
        "name": "apply-operations-to-maximize-score",
        "tags": [
            "Array",
            "Math",
            "Stack",
            "Greedy",
            "Monotonic Stack",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "2816": {
        "name": "double-a-number-represented-as-a-linked-list",
        "tags": [
            "Linked List",
            "Math",
            "Stack"
        ],
        "difficulty": "Medium"
    },
    "2817": {
        "name": "minimum-absolute-difference-between-elements-with-constraint",
        "tags": [
            "Array",
            "Binary Search",
            "Ordered Set"
        ],
        "difficulty": "Medium"
    },
    "2821": {
        "name": "delay-the-resolution-of-each-promise",
        "tags": [],
        "difficulty": null
    },
    "2820": {
        "name": "election-results",
        "tags": [],
        "difficulty": null
    },
    "2822": {
        "name": "inversion-of-object",
        "tags": [],
        "difficulty": null
    },
    "2823": {
        "name": "deep-object-filter",
        "tags": [],
        "difficulty": null
    },
    "2827": {
        "name": "number-of-beautiful-integers-in-the-range",
        "tags": [
            "Math",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "2825": {
        "name": "make-string-a-subsequence-using-cyclic-increments",
        "tags": [
            "Two Pointers",
            "String"
        ],
        "difficulty": "Medium"
    },
    "2826": {
        "name": "sorting-three-groups",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "2824": {
        "name": "count-pairs-whose-sum-is-less-than-target",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "2828": {
        "name": "check-if-a-string-is-an-acronym-of-words",
        "tags": [
            "Array",
            "String"
        ],
        "difficulty": "Easy"
    },
    "2829": {
        "name": "determine-the-minimum-sum-of-a-k-avoiding-array",
        "tags": [
            "Math",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2830": {
        "name": "maximize-the-profit-as-the-salesman",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Dynamic Programming",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2832": {
        "name": "maximal-range-that-each-element-is-maximum-in-it",
        "tags": [],
        "difficulty": null
    },
    "2831": {
        "name": "find-the-longest-equal-subarray",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "2835": {
        "name": "minimum-operations-to-form-subsequence-with-target-sum",
        "tags": [
            "Array",
            "Greedy",
            "Bit Manipulation"
        ],
        "difficulty": "Hard"
    },
    "2833": {
        "name": "furthest-point-from-origin",
        "tags": [
            "String",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2836": {
        "name": "maximize-value-of-function-in-a-ball-passing-game",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation"
        ],
        "difficulty": "Hard"
    },
    "2834": {
        "name": "find-the-minimum-possible-sum-of-a-beautiful-array",
        "tags": [
            "Math",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2837": {
        "name": "total-traveled-distance",
        "tags": [],
        "difficulty": null
    },
    "2838": {
        "name": "maximum-coins-heroes-can-collect",
        "tags": [],
        "difficulty": null
    },
    "2840": {
        "name": "check-if-strings-can-be-made-equal-with-operations-ii",
        "tags": [
            "Hash Table",
            "String",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2839": {
        "name": "check-if-strings-can-be-made-equal-with-operations-i",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "2841": {
        "name": "maximum-sum-of-almost-unique-subarray",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "2842": {
        "name": "count-k-subsequences-of-a-string-with-maximum-beauty",
        "tags": [
            "Hash Table",
            "Math",
            "String",
            "Greedy",
            "Combinatorics"
        ],
        "difficulty": "Hard"
    },
    "2843": {
        "name": "count-symmetric-integers",
        "tags": [
            "Math",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "2844": {
        "name": "minimum-operations-to-make-a-special-number",
        "tags": [
            "Math",
            "String",
            "Greedy",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2845": {
        "name": "count-of-interesting-subarrays",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2847": {
        "name": "smallest-number-with-given-digit-product",
        "tags": [],
        "difficulty": null
    },
    "2846": {
        "name": "minimum-edge-weight-equilibrium-queries-in-a-tree",
        "tags": [
            "Array",
            "Tree",
            "Graph",
            "Strongly Connected Component"
        ],
        "difficulty": "Hard"
    },
    "2849": {
        "name": "determine-if-a-cell-is-reachable-at-a-given-time",
        "tags": [
            "Math"
        ],
        "difficulty": "Medium"
    },
    "2848": {
        "name": "points-that-intersect-with-cars",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "difficulty": "Easy"
    },
    "2850": {
        "name": "minimum-moves-to-spread-stones-over-grid",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Breadth-First Search",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "2851": {
        "name": "string-transformation",
        "tags": [
            "Math",
            "String",
            "Dynamic Programming",
            "String Matching"
        ],
        "difficulty": "Hard"
    },
    "2852": {
        "name": "sum-of-remoteness-of-all-cells",
        "tags": [],
        "difficulty": null
    },
    "2853": {
        "name": "highest-salaries-difference",
        "tags": [],
        "difficulty": null
    },
    "2855": {
        "name": "minimum-right-shifts-to-sort-the-array",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "2856": {
        "name": "minimum-array-length-after-pair-removals",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Binary Search",
            "Greedy",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2854": {
        "name": "rolling-average-steps",
        "tags": [],
        "difficulty": null
    },
    "2857": {
        "name": "count-pairs-of-points-with-distance-k",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "2858": {
        "name": "minimum-edge-reversals-so-every-node-is-reachable",
        "tags": [
            "Dynamic Programming",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "2859": {
        "name": "sum-of-values-at-indices-with-k-set-bits",
        "tags": [
            "Array",
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "2860": {
        "name": "happy-students",
        "tags": [
            "Array",
            "Sorting",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2861": {
        "name": "maximum-number-of-alloys",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "2862": {
        "name": "maximum-element-sum-of-a-complete-subset-of-indices",
        "tags": [
            "Array",
            "Math",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "2863": {
        "name": "maximum-length-of-semi-decreasing-subarrays",
        "tags": [],
        "difficulty": null
    },
    "2865": {
        "name": "beautiful-towers-i",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "2864": {
        "name": "maximum-odd-binary-number",
        "tags": [
            "Math",
            "String",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "2866": {
        "name": "beautiful-towers-ii",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ],
        "difficulty": "Medium"
    },
    "2867": {
        "name": "count-valid-paths-in-a-tree",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "2868": {
        "name": "the-wording-game",
        "tags": [],
        "difficulty": null
    },
    "2871": {
        "name": "split-array-into-maximum-number-of-subarrays",
        "tags": [
            "Array",
            "Greedy",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "2872": {
        "name": "maximum-number-of-k-divisible-components",
        "tags": [
            "Tree",
            "Depth-First Search"
        ],
        "difficulty": "Hard"
    },
    "2870": {
        "name": "minimum-number-of-operations-to-make-array-empty",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2869": {
        "name": "minimum-operations-to-collect-elements",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "2873": {
        "name": "maximum-value-of-an-ordered-triplet-i",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "2874": {
        "name": "maximum-value-of-an-ordered-triplet-ii",
        "tags": [
            "Array"
        ],
        "difficulty": "Medium"
    },
    "2875": {
        "name": "minimum-size-subarray-in-infinite-array",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2876": {
        "name": "count-visited-nodes-in-a-directed-graph",
        "tags": [
            "Dynamic Programming",
            "Graph",
            "Memoization"
        ],
        "difficulty": "Hard"
    },
    "2878": {
        "name": "get-the-size-of-a-dataframe",
        "tags": [],
        "difficulty": "Easy"
    },
    "2877": {
        "name": "create-a-dataframe-from-list",
        "tags": [],
        "difficulty": "Easy"
    },
    "2880": {
        "name": "select-data",
        "tags": [],
        "difficulty": "Easy"
    },
    "2879": {
        "name": "display-the-first-three-rows",
        "tags": [],
        "difficulty": "Easy"
    },
    "2881": {
        "name": "create-a-new-column",
        "tags": [],
        "difficulty": "Easy"
    },
    "2883": {
        "name": "drop-missing-data",
        "tags": [],
        "difficulty": "Easy"
    },
    "2882": {
        "name": "drop-duplicate-rows",
        "tags": [],
        "difficulty": "Easy"
    },
    "2886": {
        "name": "change-data-type",
        "tags": [],
        "difficulty": "Easy"
    },
    "2888": {
        "name": "reshape-data:-concatenate",
        "tags": [],
        "difficulty": null
    },
    "2889": {
        "name": "reshape-data:-pivot",
        "tags": [],
        "difficulty": null
    },
    "2884": {
        "name": "modify-columns",
        "tags": [],
        "difficulty": "Easy"
    },
    "2887": {
        "name": "fill-missing-data",
        "tags": [],
        "difficulty": "Easy"
    },
    "2890": {
        "name": "reshape-data:-melt",
        "tags": [],
        "difficulty": null
    },
    "2891": {
        "name": "method-chaining",
        "tags": [],
        "difficulty": "Easy"
    },
    "2885": {
        "name": "rename-columns",
        "tags": [],
        "difficulty": "Easy"
    },
    "2896": {
        "name": "apply-operations-to-make-two-strings-equal",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "2895": {
        "name": "minimum-processing-time",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2899": {
        "name": "last-visited-integers",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2901": {
        "name": "longest-unequal-adjacent-groups-subsequence-ii",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "2894": {
        "name": "divisible-and-non-divisible-sums-difference",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "2892": {
        "name": "minimizing-array-after-replacing-pairs-with-their-product",
        "tags": [],
        "difficulty": null
    },
    "2902": {
        "name": "count-of-sub-multisets-with-bounded-sum",
        "tags": [
            "Array",
            "Hash Table",
            "Dynamic Programming",
            "Sliding Window"
        ],
        "difficulty": "Hard"
    },
    "2900": {
        "name": "longest-unequal-adjacent-groups-subsequence-i",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "2898": {
        "name": "maximum-linear-stock-score",
        "tags": [],
        "difficulty": null
    },
    "2893": {
        "name": "calculate-orders-within-each-interval",
        "tags": [],
        "difficulty": null
    },
    "2897": {
        "name": "apply-operations-on-array-to-maximize-sum-of-squares",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Bit Manipulation"
        ],
        "difficulty": "Hard"
    },
    "2903": {
        "name": "find-indices-with-index-and-value-difference-i",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "difficulty": "Easy"
    },
    "2904": {
        "name": "shortest-and-lexicographically-smallest-beautiful-string",
        "tags": [
            "String",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "2905": {
        "name": "find-indices-with-index-and-value-difference-ii",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "difficulty": "Medium"
    },
    "2910": {
        "name": "minimum-number-of-groups-to-create-a-valid-assignment",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2908": {
        "name": "minimum-sum-of-mountain-triplets-i",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "2906": {
        "name": "construct-product-matrix",
        "tags": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2907": {
        "name": "maximum-profitable-triplets-with-increasing-prices-i",
        "tags": [],
        "difficulty": null
    },
    "2909": {
        "name": "minimum-sum-of-mountain-triplets-ii",
        "tags": [
            "Array"
        ],
        "difficulty": "Medium"
    },
    "2912": {
        "name": "number-of-ways-to-reach-destination-in-the-grid",
        "tags": [],
        "difficulty": null
    },
    "2913": {
        "name": "subarrays-distinct-element-sum-of-squares-i",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Easy"
    },
    "2911": {
        "name": "minimum-changes-to-make-k-semi-palindromes",
        "tags": [
            "Two Pointers",
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "2914": {
        "name": "minimum-number-of-changes-to-make-binary-string-beautiful",
        "tags": [
            "String"
        ],
        "difficulty": "Medium"
    },
    "2915": {
        "name": "length-of-the-longest-subsequence-that-sums-to-target",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "2916": {
        "name": "subarrays-distinct-element-sum-of-squares-ii",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Binary Indexed Tree",
            "Segment Tree"
        ],
        "difficulty": "Hard"
    },
    "2920": {
        "name": "maximum-points-after-collecting-coins-from-all-nodes",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Tree",
            "Depth-First Search"
        ],
        "difficulty": "Hard"
    },
    "2919": {
        "name": "minimum-increment-operations-to-make-array-beautiful",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "2921": {
        "name": "maximum-profitable-triplets-with-increasing-prices-ii",
        "tags": [],
        "difficulty": null
    },
    "2918": {
        "name": "minimum-equal-sum-of-two-arrays-after-replacing-zeros",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2923": {
        "name": "find-champion-i",
        "tags": [
            "Array",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "2922": {
        "name": "market-analysis-iii",
        "tags": [],
        "difficulty": null
    },
    "2926": {
        "name": "maximum-balanced-subsequence-sum",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Binary Indexed Tree",
            "Segment Tree"
        ],
        "difficulty": "Hard"
    },
    "2925": {
        "name": "maximum-score-after-applying-operations-on-a-tree",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search"
        ],
        "difficulty": "Medium"
    },
    "2924": {
        "name": "find-champion-ii",
        "tags": [
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "2929": {
        "name": "distribute-candies-among-children-ii",
        "tags": [
            "Math",
            "Combinatorics",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2931": {
        "name": "maximum-spending-after-buying-items",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "2927": {
        "name": "distribute-candies-among-children-iii",
        "tags": [],
        "difficulty": null
    },
    "2928": {
        "name": "distribute-candies-among-children-i",
        "tags": [
            "Math",
            "Combinatorics",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "2932": {
        "name": "maximum-strong-pair-xor-i",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation",
            "Trie",
            "Sliding Window"
        ],
        "difficulty": "Easy"
    },
    "2935": {
        "name": "maximum-strong-pair-xor-ii",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation",
            "Trie",
            "Sliding Window"
        ],
        "difficulty": "Hard"
    },
    "2936": {
        "name": "number-of-equal-numbers-blocks",
        "tags": [],
        "difficulty": null
    },
    "2933": {
        "name": "high-access-employees",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2934": {
        "name": "minimum-operations-to-maximize-last-elements-in-arrays",
        "tags": [
            "Array",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2917": {
        "name": "find-the-k-or-of-an-array",
        "tags": [
            "Array",
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "2930": {
        "name": "number-of-strings-which-can-be-rearranged-to-contain-substring",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "difficulty": "Medium"
    },
    "2937": {
        "name": "make-three-strings-equal",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "2938": {
        "name": "separate-black-and-white-balls",
        "tags": [
            "Two Pointers",
            "String",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2939": {
        "name": "maximum-xor-product",
        "tags": [
            "Math",
            "Greedy",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "2941": {
        "name": "maximum-gcd-sum-of-a-subarray",
        "tags": [],
        "difficulty": null
    },
    "2946": {
        "name": "matrix-similarity-after-cyclic-shifts",
        "tags": [
            "Array",
            "Math",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2945": {
        "name": "find-maximum-non-decreasing-array-length",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Stack",
            "Queue",
            "Monotonic Stack",
            "Monotonic Queue"
        ],
        "difficulty": "Hard"
    },
    "2944": {
        "name": "minimum-number-of-coins-for-fruits",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Queue",
            "Heap (Priority Queue)",
            "Monotonic Queue"
        ],
        "difficulty": "Medium"
    },
    "2947": {
        "name": "count-beautiful-substrings-i",
        "tags": [
            "Hash Table",
            "Math",
            "String",
            "Enumeration",
            "Number Theory",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2940": {
        "name": "find-building-where-alice-and-bob-can-meet",
        "tags": [
            "Array",
            "Binary Search",
            "Stack",
            "Binary Indexed Tree",
            "Segment Tree",
            "Heap (Priority Queue)",
            "Monotonic Stack"
        ],
        "difficulty": "Hard"
    },
    "2942": {
        "name": "find-words-containing-character",
        "tags": [
            "Array",
            "String"
        ],
        "difficulty": "Easy"
    },
    "2943": {
        "name": "maximize-area-of-square-hole-in-grid",
        "tags": [
            "Array",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2948": {
        "name": "make-lexicographically-smallest-array-by-swapping-elements",
        "tags": [
            "Array",
            "Union Find",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2949": {
        "name": "count-beautiful-substrings-ii",
        "tags": [
            "Hash Table",
            "Math",
            "String",
            "Number Theory",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "2950": {
        "name": "number-of-divisible-substrings",
        "tags": [],
        "difficulty": null
    },
    "2952": {
        "name": "minimum-number-of-coins-to-be-added",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2953": {
        "name": "count-complete-substrings",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "difficulty": "Hard"
    },
    "2954": {
        "name": "count-the-number-of-infection-sequences",
        "tags": [
            "Array",
            "Math",
            "Combinatorics"
        ],
        "difficulty": "Hard"
    },
    "2955": {
        "name": "number-of-same-end-substrings",
        "tags": [],
        "difficulty": null
    },
    "2951": {
        "name": "find-the-peaks",
        "tags": [
            "Array",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "2958": {
        "name": "length-of-longest-subarray-with-at-most-k-frequency",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "2956": {
        "name": "find-common-elements-between-two-arrays",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Easy"
    },
    "2960": {
        "name": "count-tested-devices-after-test-operations",
        "tags": [
            "Array",
            "Simulation",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "2959": {
        "name": "number-of-possible-sets-of-closing-branches",
        "tags": [
            "Bit Manipulation",
            "Graph",
            "Heap (Priority Queue)",
            "Enumeration",
            "Shortest Path"
        ],
        "difficulty": "Hard"
    },
    "2957": {
        "name": "remove-adjacent-almost-equal-characters",
        "tags": [
            "String",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "2961": {
        "name": "double-modular-exponentiation",
        "tags": [
            "Array",
            "Math",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "2962": {
        "name": "count-subarrays-where-max-element-appears-at-least-k-times",
        "tags": [
            "Array",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "2963": {
        "name": "count-the-number-of-good-partitions",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Combinatorics"
        ],
        "difficulty": "Hard"
    },
    "2965": {
        "name": "find-missing-and-repeated-values",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "2966": {
        "name": "divide-array-into-arrays-with-max-difference",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2964": {
        "name": "number-of-divisible-triplet-sums",
        "tags": [],
        "difficulty": null
    },
    "2967": {
        "name": "minimum-cost-to-make-array-equalindromic",
        "tags": [
            "Array",
            "Math",
            "Binary Search",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "2968": {
        "name": "apply-operations-to-maximize-frequency-score",
        "tags": [
            "Array",
            "Binary Search",
            "Sliding Window",
            "Sorting",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "2969": {
        "name": "minimum-number-of-coins-for-fruits-ii",
        "tags": [],
        "difficulty": null
    },
    "2970": {
        "name": "count-the-number-of-incremovable-subarrays-i",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "2971": {
        "name": "find-polygon-with-the-largest-perimeter",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "2979": {
        "name": "most-expensive-item-that-can-not-be-bought",
        "tags": [],
        "difficulty": null
    },
    "2978": {
        "name": "symmetric-coordinates",
        "tags": [],
        "difficulty": null
    },
    "2973": {
        "name": "find-number-of-coins-to-place-in-tree-nodes",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "2974": {
        "name": "minimum-number-game",
        "tags": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "2976": {
        "name": "minimum-cost-to-convert-string-i",
        "tags": [
            "Array",
            "String",
            "Graph",
            "Shortest Path"
        ],
        "difficulty": "Medium"
    },
    "2975": {
        "name": "maximum-square-area-by-removing-fences-from-a-field",
        "tags": [
            "Array",
            "Hash Table",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2977": {
        "name": "minimum-cost-to-convert-string-ii",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming",
            "Graph",
            "Trie",
            "Shortest Path"
        ],
        "difficulty": "Hard"
    },
    "2972": {
        "name": "count-the-number-of-incremovable-subarrays-ii",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search"
        ],
        "difficulty": "Hard"
    },
    "2984": {
        "name": "find-peak-calling-hours-for-each-city",
        "tags": [],
        "difficulty": null
    },
    "2986": {
        "name": "find-third-transaction",
        "tags": [],
        "difficulty": null
    },
    "2985": {
        "name": "calculate-compressed-mean",
        "tags": [],
        "difficulty": null
    },
    "2982": {
        "name": "find-longest-special-substring-that-occurs-thrice-ii",
        "tags": [
            "Hash Table",
            "String",
            "Binary Search",
            "Sliding Window",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2980": {
        "name": "check-if-bitwise-or-has-trailing-zeros",
        "tags": [
            "Array",
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "2981": {
        "name": "find-longest-special-substring-that-occurs-thrice-i",
        "tags": [
            "Hash Table",
            "String",
            "Binary Search",
            "Sliding Window",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "2987": {
        "name": "find-expensive-cities",
        "tags": [],
        "difficulty": null
    },
    "2988": {
        "name": "manager-of-the-largest-department",
        "tags": [],
        "difficulty": null
    },
    "2989": {
        "name": "class-performance",
        "tags": [],
        "difficulty": null
    },
    "2990": {
        "name": "loan-types",
        "tags": [],
        "difficulty": null
    },
    "2992": {
        "name": "number-of-self-divisible-permutations",
        "tags": [],
        "difficulty": null
    },
    "2993": {
        "name": "friday-purchases-i",
        "tags": [],
        "difficulty": null
    },
    "2991": {
        "name": "top-three-wineries",
        "tags": [],
        "difficulty": null
    },
    "2983": {
        "name": "palindrome-rearrangement-queries",
        "tags": [
            "Hash Table",
            "String",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "2995": {
        "name": "viewers-turned-streamers",
        "tags": [],
        "difficulty": null
    },
    "2994": {
        "name": "friday-purchases-ii",
        "tags": [],
        "difficulty": null
    },
    "3001": {
        "name": "minimum-moves-to-capture-the-queen",
        "tags": [
            "Array",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "2996": {
        "name": "smallest-missing-integer-greater-than-sequential-prefix-sum",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "2998": {
        "name": "minimum-number-of-operations-to-make-x-and-y-equal",
        "tags": [
            "Dynamic Programming",
            "Breadth-First Search",
            "Memoization"
        ],
        "difficulty": "Medium"
    },
    "2999": {
        "name": "count-the-number-of-powerful-integers",
        "tags": [
            "Math",
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "2997": {
        "name": "minimum-number-of-operations-to-make-array-xor-equal-to-k",
        "tags": [
            "Array",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "3000": {
        "name": "maximum-area-of-longest-diagonal-rectangle",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "3002": {
        "name": "maximum-size-of-a-set-after-removals",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "3003": {
        "name": "maximize-the-number-of-partitions-after-operations",
        "tags": [
            "String",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "3007": {
        "name": "maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k",
        "tags": [
            "Binary Search",
            "Dynamic Programming",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "3004": {
        "name": "maximum-subtree-of-the-same-color",
        "tags": [],
        "difficulty": null
    },
    "3005": {
        "name": "count-elements-with-maximum-frequency",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "3006": {
        "name": "find-beautiful-indices-in-the-given-array-i",
        "tags": [
            "Two Pointers",
            "String",
            "Binary Search",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ],
        "difficulty": "Medium"
    },
    "3008": {
        "name": "find-beautiful-indices-in-the-given-array-ii",
        "tags": [
            "Two Pointers",
            "String",
            "Binary Search",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ],
        "difficulty": "Hard"
    },
    "3009": {
        "name": "maximum-number-of-intersections-on-the-chart",
        "tags": [],
        "difficulty": null
    },
    "3015": {
        "name": "count-the-number-of-houses-at-a-certain-distance-i",
        "tags": [
            "Breadth-First Search",
            "Graph",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "3013": {
        "name": "divide-an-array-into-subarrays-with-minimum-cost-ii",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "3011": {
        "name": "find-if-array-can-be-sorted",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "3014": {
        "name": "minimum-number-of-pushes-to-type-word-i",
        "tags": [
            "Math",
            "String",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "3010": {
        "name": "divide-an-array-into-subarrays-with-minimum-cost-i",
        "tags": [
            "Array",
            "Sorting",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "3012": {
        "name": "minimize-length-of-array-using-operations",
        "tags": [
            "Array",
            "Math",
            "Greedy",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "3016": {
        "name": "minimum-number-of-pushes-to-type-word-ii",
        "tags": [
            "Hash Table",
            "String",
            "Greedy",
            "Sorting",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "3017": {
        "name": "count-the-number-of-houses-at-a-certain-distance-ii",
        "tags": [
            "Graph",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "3018": {
        "name": "maximum-number-of-removal-queries-that-can-be-processed-i",
        "tags": [],
        "difficulty": null
    },
    "3022": {
        "name": "minimize-or-of-remaining-elements-using-operations",
        "tags": [
            "Array",
            "Greedy",
            "Bit Manipulation"
        ],
        "difficulty": "Hard"
    },
    "3019": {
        "name": "number-of-changing-keys",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "3024": {
        "name": "type-of-triangle",
        "tags": [
            "Array",
            "Math",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "3021": {
        "name": "alice-and-bob-playing-flower-game",
        "tags": [
            "Math"
        ],
        "difficulty": "Medium"
    },
    "3023": {
        "name": "find-pattern-in-infinite-stream-i",
        "tags": [],
        "difficulty": null
    },
    "3025": {
        "name": "find-the-number-of-ways-to-place-people-i",
        "tags": [
            "Array",
            "Math",
            "Geometry",
            "Sorting",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "3020": {
        "name": "find-the-maximum-number-of-elements-in-subset",
        "tags": [
            "Array",
            "Hash Table",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "3026": {
        "name": "maximum-good-subarray-sum",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "3027": {
        "name": "find-the-number-of-ways-to-place-people-ii",
        "tags": [
            "Array",
            "Math",
            "Geometry",
            "Sorting",
            "Enumeration"
        ],
        "difficulty": "Hard"
    },
    "3029": {
        "name": "minimum-time-to-revert-word-to-initial-state-i",
        "tags": [
            "String",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ],
        "difficulty": "Medium"
    },
    "3028": {
        "name": "ant-on-the-boundary",
        "tags": [
            "Array",
            "Simulation",
            "Prefix Sum"
        ],
        "difficulty": "Easy"
    },
    "3030": {
        "name": "find-the-grid-of-region-average",
        "tags": [
            "Array",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "3031": {
        "name": "minimum-time-to-revert-word-to-initial-state-ii",
        "tags": [
            "String",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ],
        "difficulty": "Hard"
    },
    "3032": {
        "name": "count-numbers-with-unique-digits-ii",
        "tags": [],
        "difficulty": null
    },
    "3037": {
        "name": "find-pattern-in-infinite-stream-ii",
        "tags": [],
        "difficulty": null
    },
    "3039": {
        "name": "apply-operations-to-make-string-empty",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "3035": {
        "name": "maximum-palindromes-after-operations",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Greedy",
            "Sorting",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "3038": {
        "name": "maximum-number-of-operations-with-the-same-score-i",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "3033": {
        "name": "modify-the-matrix",
        "tags": [
            "Array",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "3036": {
        "name": "number-of-subarrays-that-match-a-pattern-ii",
        "tags": [
            "Array",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ],
        "difficulty": "Hard"
    },
    "3034": {
        "name": "number-of-subarrays-that-match-a-pattern-i",
        "tags": [
            "Array",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ],
        "difficulty": "Medium"
    },
    "3040": {
        "name": "maximum-number-of-operations-with-the-same-score-ii",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Memoization"
        ],
        "difficulty": "Medium"
    },
    "3041": {
        "name": "maximize-consecutive-elements-in-an-array-after-modification",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "3043": {
        "name": "find-the-length-of-the-longest-common-prefix",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Trie"
        ],
        "difficulty": "Medium"
    },
    "3046": {
        "name": "split-the-array",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "3045": {
        "name": "count-prefix-and-suffix-pairs-ii",
        "tags": [
            "Array",
            "String",
            "Trie",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ],
        "difficulty": "Hard"
    },
    "3044": {
        "name": "most-frequent-prime",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Matrix",
            "Counting",
            "Enumeration",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "3042": {
        "name": "count-prefix-and-suffix-pairs-i",
        "tags": [
            "Array",
            "String",
            "Trie",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ],
        "difficulty": "Easy"
    },
    "3054": {
        "name": "binary-tree-nodes",
        "tags": [],
        "difficulty": null
    },
    "3052": {
        "name": "maximize-items",
        "tags": [],
        "difficulty": null
    },
    "3053": {
        "name": "classifying-triangles-by-lengths",
        "tags": [],
        "difficulty": null
    },
    "3050": {
        "name": "pizza-toppings-cost-analysis",
        "tags": [],
        "difficulty": null
    },
    "3051": {
        "name": "find-candidates-for-data-scientist-position",
        "tags": [],
        "difficulty": null
    },
    "3048": {
        "name": "earliest-second-to-mark-indices-i",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "3047": {
        "name": "find-the-largest-area-of-square-inside-two-rectangles",
        "tags": [
            "Array",
            "Math",
            "Geometry"
        ],
        "difficulty": "Medium"
    },
    "3049": {
        "name": "earliest-second-to-mark-indices-ii",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "3056": {
        "name": "snaps-analysis",
        "tags": [],
        "difficulty": null
    },
    "3057": {
        "name": "employees-project-allocation",
        "tags": [],
        "difficulty": null
    },
    "3059": {
        "name": "find-all-unique-email-domains",
        "tags": [],
        "difficulty": null
    },
    "3060": {
        "name": "user-activities-within-time-bounds",
        "tags": [],
        "difficulty": null
    },
    "3062": {
        "name": "winner-of-the-linked-list-game",
        "tags": [],
        "difficulty": null
    },
    "3055": {
        "name": "top-percentile-fraud",
        "tags": [],
        "difficulty": null
    },
    "3058": {
        "name": "friends-with-no-mutual-friends",
        "tags": [],
        "difficulty": null
    },
    "3061": {
        "name": "calculate-trapping-rain-water",
        "tags": [],
        "difficulty": null
    },
    "3065": {
        "name": "minimum-operations-to-exceed-threshold-value-i",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "3064": {
        "name": "guess-the-number-using-bitwise-questions-i",
        "tags": [],
        "difficulty": null
    },
    "3063": {
        "name": "linked-list-frequency",
        "tags": [],
        "difficulty": null
    },
    "3066": {
        "name": "minimum-operations-to-exceed-threshold-value-ii",
        "tags": [
            "Array",
            "Heap (Priority Queue)",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "3067": {
        "name": "count-pairs-of-connectable-servers-in-a-weighted-tree-network",
        "tags": [
            "Array",
            "Tree",
            "Depth-First Search"
        ],
        "difficulty": "Medium"
    },
    "3068": {
        "name": "find-the-maximum-sum-of-node-values",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Bit Manipulation",
            "Tree",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "3069": {
        "name": "distribute-elements-into-two-arrays-i",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "3072": {
        "name": "distribute-elements-into-two-arrays-ii",
        "tags": [
            "Array",
            "Binary Indexed Tree",
            "Segment Tree",
            "Simulation"
        ],
        "difficulty": "Hard"
    },
    "3071": {
        "name": "minimum-operations-to-write-the-letter-y-on-a-grid",
        "tags": [
            "Array",
            "Hash Table",
            "Matrix",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "3073": {
        "name": "maximum-increasing-triplet-value",
        "tags": [],
        "difficulty": null
    },
    "3075": {
        "name": "maximize-happiness-of-selected-children",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "3076": {
        "name": "shortest-uncommon-substring-in-an-array",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Trie"
        ],
        "difficulty": "Medium"
    },
    "3074": {
        "name": "apple-redistribution-into-boxes",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "3070": {
        "name": "count-submatrices-with-top-left-element-and-sum-less-than-k",
        "tags": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "3079": {
        "name": "find-the-sum-of-encrypted-integers",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Easy"
    },
    "3080": {
        "name": "mark-elements-on-array-by-performing-queries",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Heap (Priority Queue)",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "3077": {
        "name": "maximum-strength-of-k-disjoint-subarrays",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "3078": {
        "name": "match-alphanumerical-pattern-in-matrix-i",
        "tags": [],
        "difficulty": null
    },
    "3084": {
        "name": "count-substrings-starting-and-ending-with-given-character",
        "tags": [
            "Math",
            "String",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "3082": {
        "name": "find-the-sum-of-the-power-of-all-subsequences",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "3081": {
        "name": "replace-question-marks-in-string-to-minimize-its-value",
        "tags": [
            "Hash Table",
            "String",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "3083": {
        "name": "existence-of-a-substring-in-a-string-and-its-reverse",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "3085": {
        "name": "minimum-deletions-to-make-string-k-special",
        "tags": [
            "Hash Table",
            "String",
            "Greedy",
            "Sorting",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "3087": {
        "name": "find-trending-hashtags",
        "tags": [],
        "difficulty": null
    },
    "3086": {
        "name": "minimum-moves-to-pick-k-ones",
        "tags": [
            "Array",
            "Greedy",
            "Sliding Window",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "3088": {
        "name": "make-string-anti-palindrome",
        "tags": [],
        "difficulty": null
    },
    "3089": {
        "name": "find-bursty-behavior",
        "tags": [],
        "difficulty": null
    },
    "3091": {
        "name": "apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k",
        "tags": [
            "Math",
            "Greedy",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "3090": {
        "name": "maximum-length-substring-with-two-occurrences",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "difficulty": "Easy"
    },
    "3093": {
        "name": "longest-common-suffix-queries",
        "tags": [
            "Array",
            "String",
            "Trie"
        ],
        "difficulty": "Hard"
    },
    "3092": {
        "name": "most-frequent-ids",
        "tags": [
            "Array",
            "Hash Table",
            "Heap (Priority Queue)",
            "Ordered Set"
        ],
        "difficulty": "Medium"
    },
    "3095": {
        "name": "shortest-subarray-with-or-at-least-k-i",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Sliding Window"
        ],
        "difficulty": "Easy"
    },
    "3094": {
        "name": "guess-the-number-using-bitwise-questions-ii",
        "tags": [],
        "difficulty": null
    },
    "3099": {
        "name": "harshad-number",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "3098": {
        "name": "find-the-sum-of-subsequence-powers",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "3097": {
        "name": "shortest-subarray-with-or-at-least-k-ii",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "3096": {
        "name": "minimum-levels-to-gain-more-points",
        "tags": [
            "Array",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "3102": {
        "name": "minimize-manhattan-distances",
        "tags": [
            "Array",
            "Math",
            "Geometry",
            "Sorting",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "3100": {
        "name": "water-bottles-ii",
        "tags": [
            "Math",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "3101": {
        "name": "count-alternating-subarrays",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Medium"
    },
    "3103": {
        "name": "find-trending-hashtags-ii",
        "tags": [],
        "difficulty": null
    },
    "3104": {
        "name": "find-longest-self-contained-substring",
        "tags": [],
        "difficulty": null
    },
    "3105": {
        "name": "longest-strictly-increasing-or-strictly-decreasing-subarray",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "3106": {
        "name": "lexicographically-smallest-string-after-operations-with-constraint",
        "tags": [
            "String",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "3107": {
        "name": "minimum-operations-to-make-median-of-array-equal-to-k",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "3108": {
        "name": "minimum-cost-walk-in-weighted-graph",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Union Find",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "3111": {
        "name": "minimum-rectangles-to-cover-points",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "3110": {
        "name": "score-of-a-string",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "3109": {
        "name": "find-the-index-of-permutation",
        "tags": [],
        "difficulty": null
    },
    "3113": {
        "name": "find-the-number-of-subarrays-where-boundary-elements-are-maximum",
        "tags": [
            "Array",
            "Binary Search",
            "Stack",
            "Monotonic Stack"
        ],
        "difficulty": "Hard"
    },
    "3115": {
        "name": "maximum-prime-difference",
        "tags": [
            "Array",
            "Math",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "3114": {
        "name": "latest-time-you-can-obtain-after-replacing-characters",
        "tags": [
            "String",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "3112": {
        "name": "minimum-time-to-visit-disappearing-nodes",
        "tags": [
            "Array",
            "Graph",
            "Heap (Priority Queue)",
            "Shortest Path"
        ],
        "difficulty": "Medium"
    },
    "3119": {
        "name": "maximum-number-of-potholes-that-can-be-fixed",
        "tags": [],
        "difficulty": null
    },
    "3117": {
        "name": "minimum-sum-of-values-by-dividing-array",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Bit Manipulation",
            "Segment Tree",
            "Queue"
        ],
        "difficulty": "Hard"
    },
    "3118": {
        "name": "friday-purchase-iii",
        "tags": [],
        "difficulty": null
    },
    "3116": {
        "name": "kth-smallest-amount-with-single-denomination-combination",
        "tags": [
            "Array",
            "Math",
            "Binary Search",
            "Bit Manipulation",
            "Combinatorics",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "3120": {
        "name": "count-the-number-of-special-characters-i",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "3123": {
        "name": "find-edges-in-shortest-paths",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Heap (Priority Queue)",
            "Shortest Path"
        ],
        "difficulty": "Hard"
    },
    "3122": {
        "name": "minimum-number-of-operations-to-satisfy-conditions",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "3121": {
        "name": "count-the-number-of-special-characters-ii",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Medium"
    },
    "3124": {
        "name": "find-longest-calls",
        "tags": [],
        "difficulty": null
    },
    "3125": {
        "name": "maximum-number-that-makes-result-of-bitwise-and-zero",
        "tags": [],
        "difficulty": null
    },
    "3126": {
        "name": "server-utilization-time",
        "tags": [],
        "difficulty": null
    },
    "3127": {
        "name": "make-a-square-with-the-same-color",
        "tags": [
            "Array",
            "Matrix",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "3129": {
        "name": "find-all-possible-stable-binary-arrays-i",
        "tags": [
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "3130": {
        "name": "find-all-possible-stable-binary-arrays-ii",
        "tags": [
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "3128": {
        "name": "right-triangles",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Combinatorics",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "3132": {
        "name": "find-the-integer-added-to-array-ii",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "3133": {
        "name": "minimum-array-end",
        "tags": [
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "3131": {
        "name": "find-the-integer-added-to-array-i",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "3135": {
        "name": "equalize-strings-by-adding-or-removing-characters-at-ends",
        "tags": [],
        "difficulty": null
    },
    "3134": {
        "name": "find-the-median-of-the-uniqueness-array",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Sliding Window"
        ],
        "difficulty": "Hard"
    },
    "3141": {
        "name": "maximum-hamming-distances",
        "tags": [],
        "difficulty": null
    },
    "3137": {
        "name": "minimum-number-of-operations-to-make-word-k-periodic",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "3138": {
        "name": "minimum-length-of-anagram-concatenation",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "3139": {
        "name": "minimum-cost-to-equalize-array",
        "tags": [
            "Array",
            "Greedy",
            "Enumeration"
        ],
        "difficulty": "Hard"
    },
    "3140": {
        "name": "consecutive-available-seats-ii",
        "tags": [],
        "difficulty": null
    },
    "3142": {
        "name": "check-if-grid-satisfies-conditions",
        "tags": [
            "Array",
            "Matrix"
        ],
        "difficulty": "Easy"
    },
    "3136": {
        "name": "valid-word",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "3145": {
        "name": "find-products-of-elements-of-big-array",
        "tags": [
            "Array",
            "Binary Search",
            "Bit Manipulation"
        ],
        "difficulty": "Hard"
    },
    "3148": {
        "name": "maximum-difference-score-in-a-grid",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "3144": {
        "name": "minimum-substring-partition-of-equal-character-frequency",
        "tags": [
            "Hash Table",
            "String",
            "Dynamic Programming",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "3147": {
        "name": "taking-maximum-energy-from-the-mystic-dungeon",
        "tags": [
            "Array",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "3146": {
        "name": "permutation-difference-between-two-strings",
        "tags": [
            "Hash Table",
            "String"
        ],
        "difficulty": "Easy"
    },
    "3143": {
        "name": "maximum-points-inside-the-square",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "3150": {
        "name": "invalid-tweets-ii",
        "tags": [],
        "difficulty": null
    },
    "3149": {
        "name": "find-the-minimum-cost-array-permutation",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "3154": {
        "name": "find-number-of-ways-to-reach-the-k-th-stair",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Bit Manipulation",
            "Memoization",
            "Combinatorics"
        ],
        "difficulty": "Hard"
    },
    "3155": {
        "name": "maximum-number-of-upgradable-servers",
        "tags": [],
        "difficulty": null
    },
    "3151": {
        "name": "special-array-i",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "3152": {
        "name": "special-array-ii",
        "tags": [
            "Array",
            "Binary Search",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "3156": {
        "name": "employee-task-duration-and-concurrent-tasks",
        "tags": [],
        "difficulty": null
    },
    "3153": {
        "name": "sum-of-digit-differences-of-all-pairs",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "3159": {
        "name": "find-occurrences-of-an-element-in-an-array",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Medium"
    },
    "3158": {
        "name": "find-the-xor-of-numbers-which-appear-twice",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "3160": {
        "name": "find-the-number-of-distinct-colors-among-the-balls",
        "tags": [
            "Array",
            "Hash Table",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "3157": {
        "name": "find-the-level-of-tree-with-minimum-sum",
        "tags": [],
        "difficulty": null
    },
    "3163": {
        "name": "string-compression-iii",
        "tags": [
            "String"
        ],
        "difficulty": "Medium"
    },
    "3162": {
        "name": "find-the-number-of-good-pairs-i",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Easy"
    },
    "3164": {
        "name": "find-the-number-of-good-pairs-ii",
        "tags": [
            "Array",
            "Hash Table"
        ],
        "difficulty": "Medium"
    },
    "3161": {
        "name": "block-placement-queries",
        "tags": [
            "Array",
            "Binary Search",
            "Binary Indexed Tree",
            "Segment Tree"
        ],
        "difficulty": "Hard"
    },
    "3166": {
        "name": "calculate-parking-fees-and-duration",
        "tags": [],
        "difficulty": null
    },
    "3165": {
        "name": "maximum-sum-of-subsequence-with-non-adjacent-elements",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Dynamic Programming",
            "Segment Tree"
        ],
        "difficulty": "Hard"
    },
    "3168": {
        "name": "minimum-number-of-chairs-in-a-waiting-room",
        "tags": [
            "String",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "3169": {
        "name": "count-days-without-meetings",
        "tags": [
            "Array",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "3167": {
        "name": "better-compression-of-string",
        "tags": [],
        "difficulty": null
    },
    "3171": {
        "name": "find-subarray-with-bitwise-or-closest-to-k",
        "tags": [
            "Array",
            "Binary Search",
            "Bit Manipulation",
            "Segment Tree"
        ],
        "difficulty": "Hard"
    },
    "3172": {
        "name": "second-day-verification",
        "tags": [],
        "difficulty": null
    },
    "3170": {
        "name": "lexicographically-minimum-string-after-removing-stars",
        "tags": [
            "Hash Table",
            "String",
            "Stack",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "3178": {
        "name": "find-the-child-who-has-the-ball-after-k-seconds",
        "tags": [
            "Math",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "3177": {
        "name": "find-the-maximum-length-of-a-good-subsequence-ii",
        "tags": [
            "Array",
            "Hash Table",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "3174": {
        "name": "clear-digits",
        "tags": [
            "String",
            "Stack",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "3175": {
        "name": "find-the-first-player-to-win-k-games-in-a-row",
        "tags": [
            "Array",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "3173": {
        "name": "bitwise-or-of-adjacent-elements",
        "tags": [],
        "difficulty": null
    },
    "3176": {
        "name": "find-the-maximum-length-of-a-good-subsequence-i",
        "tags": [
            "Array",
            "Hash Table",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "3179": {
        "name": "find-the-n-th-value-after-k-seconds",
        "tags": [
            "Array",
            "Math",
            "Simulation",
            "Combinatorics",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "3180": {
        "name": "maximum-total-reward-using-operations-i",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "3185": {
        "name": "count-pairs-that-form-a-complete-day-ii",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "3183": {
        "name": "the-number-of-ways-to-make-the-sum",
        "tags": [],
        "difficulty": null
    },
    "3188": {
        "name": "find-top-scoring-students-ii",
        "tags": [],
        "difficulty": null
    },
    "3182": {
        "name": "find-top-scoring-students",
        "tags": [],
        "difficulty": null
    },
    "3187": {
        "name": "peaks-in-array",
        "tags": [
            "Array",
            "Binary Indexed Tree",
            "Segment Tree"
        ],
        "difficulty": "Hard"
    },
    "3186": {
        "name": "maximum-total-damage-with-spell-casting",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Binary Search",
            "Dynamic Programming",
            "Sorting",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "3184": {
        "name": "count-pairs-that-form-a-complete-day-i",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "3181": {
        "name": "maximum-total-reward-using-operations-ii",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation"
        ],
        "difficulty": "Hard"
    },
    "3192": {
        "name": "minimum-operations-to-make-binary-array-elements-equal-to-one-ii",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "3189": {
        "name": "minimum-moves-to-get-a-peaceful-board",
        "tags": [],
        "difficulty": null
    },
    "3191": {
        "name": "minimum-operations-to-make-binary-array-elements-equal-to-one-i",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Queue",
            "Sliding Window",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "3194": {
        "name": "minimum-average-of-smallest-and-largest-elements",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ],
        "difficulty": "Easy"
    },
    "3193": {
        "name": "count-the-number-of-inversions",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "3196": {
        "name": "maximize-total-cost-of-alternating-subarrays",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "3195": {
        "name": "find-the-minimum-area-to-cover-all-ones-i",
        "tags": [
            "Array",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "3190": {
        "name": "find-minimum-operations-to-make-all-elements-divisible-by-three",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Easy"
    },
    "3198": {
        "name": "find-cities-in-each-state",
        "tags": [],
        "difficulty": null
    },
    "3199": {
        "name": "count-triplets-with-even-xor-set-bits-i",
        "tags": [],
        "difficulty": null
    },
    "3200": {
        "name": "maximum-height-of-a-triangle",
        "tags": [
            "Array",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "3197": {
        "name": "find-the-minimum-area-to-cover-all-ones-ii",
        "tags": [
            "Array",
            "Matrix",
            "Enumeration"
        ],
        "difficulty": "Hard"
    },
    "3201": {
        "name": "find-the-maximum-length-of-valid-subsequence-i",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "3203": {
        "name": "find-minimum-diameter-after-merging-two-trees",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "3204": {
        "name": "bitwise-user-permissions-analysis",
        "tags": [],
        "difficulty": null
    },
    "3206": {
        "name": "alternating-groups-i",
        "tags": [
            "Array",
            "Sliding Window"
        ],
        "difficulty": "Easy"
    },
    "3202": {
        "name": "find-the-maximum-length-of-valid-subsequence-ii",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "3205": {
        "name": "maximum-array-hopping-score-i",
        "tags": [],
        "difficulty": null
    },
    "3210": {
        "name": "find-the-encrypted-string",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "3207": {
        "name": "maximum-points-after-enemy-battles",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "3209": {
        "name": "number-of-subarrays-with-and-value-of-k",
        "tags": [
            "Array",
            "Binary Search",
            "Bit Manipulation",
            "Segment Tree"
        ],
        "difficulty": "Hard"
    },
    "3208": {
        "name": "alternating-groups-ii",
        "tags": [
            "Array",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "3211": {
        "name": "generate-binary-strings-without-adjacent-zeros",
        "tags": [
            "String",
            "Backtracking",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "3213": {
        "name": "construct-string-with-minimum-cost",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming",
            "Suffix Array"
        ],
        "difficulty": "Hard"
    },
    "3212": {
        "name": "count-submatrices-with-equal-frequency-of-x-and-y",
        "tags": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "3216": {
        "name": "lexicographically-smallest-string-after-a-swap",
        "tags": [
            "String",
            "Greedy"
        ],
        "difficulty": "Easy"
    },
    "3215": {
        "name": "count-triplets-with-even-xor-set-bits-ii",
        "tags": [],
        "difficulty": null
    },
    "3214": {
        "name": "year-on-year-growth-rate",
        "tags": [],
        "difficulty": null
    },
    "3218": {
        "name": "minimum-cost-for-cutting-cake-i",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "3217": {
        "name": "delete-nodes-from-linked-list-present-in-array",
        "tags": [
            "Array",
            "Hash Table",
            "Linked List"
        ],
        "difficulty": "Medium"
    },
    "3221": {
        "name": "maximum-array-hopping-score-ii",
        "tags": [],
        "difficulty": null
    },
    "3220": {
        "name": "odd-and-even-transactions",
        "tags": [
            "Database"
        ],
        "difficulty": "Medium"
    },
    "3222": {
        "name": "find-the-winning-player-in-coin-game",
        "tags": [
            "Math",
            "Simulation",
            "Game Theory"
        ],
        "difficulty": "Easy"
    },
    "3223": {
        "name": "minimum-length-of-string-after-operations",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "3219": {
        "name": "minimum-cost-for-cutting-cake-ii",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "3224": {
        "name": "minimum-array-changes-to-make-differences-equal",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "3225": {
        "name": "maximum-score-from-grid-operations",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "3227": {
        "name": "vowels-game-in-a-string",
        "tags": [
            "Math",
            "String",
            "Brainteaser",
            "Game Theory"
        ],
        "difficulty": "Medium"
    },
    "3229": {
        "name": "minimum-operations-to-make-array-equal-to-target",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ],
        "difficulty": "Hard"
    },
    "3228": {
        "name": "maximum-number-of-operations-to-move-ones-to-the-end",
        "tags": [
            "String",
            "Greedy",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "3231": {
        "name": "minimum-number-of-increasing-subsequence-to-be-removed",
        "tags": [],
        "difficulty": null
    },
    "3230": {
        "name": "customer-purchasing-behavior-analysis",
        "tags": [],
        "difficulty": null
    },
    "3232": {
        "name": "find-if-digit-game-can-be-won",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Easy"
    },
    "3236": {
        "name": "ceo-subordinate-hierarchy",
        "tags": [],
        "difficulty": null
    },
    "3235": {
        "name": "check-if-the-rectangle-corner-is-reachable",
        "tags": [
            "Array",
            "Math",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Geometry"
        ],
        "difficulty": "Hard"
    },
    "3234": {
        "name": "count-the-number-of-substrings-with-dominant-ones",
        "tags": [
            "String",
            "Sliding Window",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "3226": {
        "name": "number-of-bit-changes-to-make-two-integers-equal",
        "tags": [
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "3233": {
        "name": "find-the-count-of-numbers-which-are-not-special",
        "tags": [
            "Array",
            "Math",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "3238": {
        "name": "find-the-number-of-winning-players",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "difficulty": "Easy"
    },
    "3237": {
        "name": "alt-and-tab-simulation",
        "tags": [],
        "difficulty": null
    },
    "3239": {
        "name": "minimum-number-of-flips-to-make-binary-grid-palindromic-i",
        "tags": [
            "Array",
            "Two Pointers",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "3240": {
        "name": "minimum-number-of-flips-to-make-binary-grid-palindromic-ii",
        "tags": [
            "Array",
            "Two Pointers",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "3244": {
        "name": "shortest-distance-after-road-addition-queries-ii",
        "tags": [
            "Array",
            "Greedy",
            "Graph",
            "Ordered Set"
        ],
        "difficulty": "Hard"
    },
    "3245": {
        "name": "alternating-groups-iii",
        "tags": [
            "Array",
            "Binary Indexed Tree"
        ],
        "difficulty": "Hard"
    },
    "3243": {
        "name": "shortest-distance-after-road-addition-queries-i",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "3241": {
        "name": "time-taken-to-mark-all-nodes",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Graph"
        ],
        "difficulty": "Hard"
    },
    "3242": {
        "name": "design-neighbor-sum-service",
        "tags": [
            "Array",
            "Hash Table",
            "Design",
            "Matrix",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "3246": {
        "name": "premier-league-table-ranking",
        "tags": [],
        "difficulty": null
    },
    "3247": {
        "name": "number-of-subsequences-with-odd-sum",
        "tags": [],
        "difficulty": null
    },
    "3249": {
        "name": "count-the-number-of-good-nodes",
        "tags": [
            "Tree",
            "Depth-First Search"
        ],
        "difficulty": "Medium"
    },
    "3248": {
        "name": "snake-in-matrix",
        "tags": [
            "Array",
            "String",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "3252": {
        "name": "premier-league-table-ranking-ii",
        "tags": [],
        "difficulty": null
    },
    "3253": {
        "name": "construct-string-with-minimum-cost-(easy)",
        "tags": [],
        "difficulty": null
    },
    "3251": {
        "name": "find-the-count-of-monotonic-pairs-ii",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Combinatorics",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "3254": {
        "name": "find-the-power-of-k-size-subarrays-i",
        "tags": [
            "Array",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "3250": {
        "name": "find-the-count-of-monotonic-pairs-i",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Combinatorics",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "3255": {
        "name": "find-the-power-of-k-size-subarrays-ii",
        "tags": [
            "Array",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "3257": {
        "name": "maximum-value-sum-by-placing-three-rooks-ii",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix",
            "Enumeration"
        ],
        "difficulty": "Hard"
    },
    "3256": {
        "name": "maximum-value-sum-by-placing-three-rooks-i",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix",
            "Enumeration"
        ],
        "difficulty": "Hard"
    },
    "3259": {
        "name": "maximum-energy-boost-from-two-drinks",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "3258": {
        "name": "count-substrings-that-satisfy-k-constraint-i",
        "tags": [
            "String",
            "Sliding Window"
        ],
        "difficulty": "Easy"
    },
    "3260": {
        "name": "find-the-largest-palindrome-divisible-by-k",
        "tags": [
            "Math",
            "String",
            "Dynamic Programming",
            "Greedy",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "3261": {
        "name": "count-substrings-that-satisfy-k-constraint-ii",
        "tags": [
            "Array",
            "String",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "3263": {
        "name": "convert-doubly-linked-list-to-array-i",
        "tags": [],
        "difficulty": null
    },
    "3262": {
        "name": "find-overlapping-shifts",
        "tags": [],
        "difficulty": null
    },
    "3264": {
        "name": "final-array-state-after-k-multiplication-operations-i",
        "tags": [
            "Array",
            "Math",
            "Heap (Priority Queue)",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "3265": {
        "name": "count-almost-equal-pairs-i",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Counting",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "3269": {
        "name": "constructing-two-increasing-arrays",
        "tags": [],
        "difficulty": null
    },
    "3268": {
        "name": "find-overlapping-shifts-ii",
        "tags": [],
        "difficulty": null
    },
    "3266": {
        "name": "final-array-state-after-k-multiplication-operations-ii",
        "tags": [
            "Array",
            "Heap (Priority Queue)",
            "Simulation"
        ],
        "difficulty": "Hard"
    },
    "3267": {
        "name": "count-almost-equal-pairs-ii",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Counting",
            "Enumeration"
        ],
        "difficulty": "Hard"
    },
    "3273": {
        "name": "minimum-amount-of-damage-dealt-to-bob",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "3270": {
        "name": "find-the-key-of-the-numbers",
        "tags": [
            "Math"
        ],
        "difficulty": "Easy"
    },
    "3272": {
        "name": "find-the-count-of-good-integers",
        "tags": [
            "Hash Table",
            "Math",
            "Combinatorics",
            "Enumeration"
        ],
        "difficulty": "Hard"
    },
    "3271": {
        "name": "hash-divided-string",
        "tags": [
            "String",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "3277": {
        "name": "maximum-xor-score-subarray-queries",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "3274": {
        "name": "check-if-two-chessboard-squares-have-the-same-color",
        "tags": [
            "Math",
            "String"
        ],
        "difficulty": "Easy"
    },
    "3275": {
        "name": "k-th-nearest-obstacle-queries",
        "tags": [
            "Array",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "3276": {
        "name": "select-cells-in-grid-with-maximum-score",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Matrix",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "3278": {
        "name": "find-candidates-for-data-scientist-position-ii",
        "tags": [],
        "difficulty": null
    },
    "3279": {
        "name": "maximum-total-area-occupied-by-pistons",
        "tags": [],
        "difficulty": null
    },
    "3280": {
        "name": "convert-date-to-binary",
        "tags": [
            "Math",
            "String"
        ],
        "difficulty": "Easy"
    },
    "3281": {
        "name": "maximize-score-of-numbers-in-ranges",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "3282": {
        "name": "reach-end-of-array-with-max-score",
        "tags": [
            "Array",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "3284": {
        "name": "sum-of-consecutive-subarrays",
        "tags": [],
        "difficulty": null
    },
    "3283": {
        "name": "maximum-number-of-moves-to-kill-all-pawns",
        "tags": [
            "Array",
            "Math",
            "Bit Manipulation",
            "Breadth-First Search",
            "Game Theory",
            "Bitmask"
        ],
        "difficulty": "Hard"
    },
    "3287": {
        "name": "find-the-maximum-sequence-value-of-array",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation"
        ],
        "difficulty": "Hard"
    },
    "3288": {
        "name": "length-of-the-longest-increasing-path",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting"
        ],
        "difficulty": "Hard"
    },
    "3289": {
        "name": "the-two-sneaky-numbers-of-digitville",
        "tags": [
            "Array",
            "Hash Table",
            "Math"
        ],
        "difficulty": "Easy"
    },
    "3286": {
        "name": "find-a-safe-walk-through-a-grid",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Graph",
            "Heap (Priority Queue)",
            "Matrix",
            "Shortest Path"
        ],
        "difficulty": "Medium"
    },
    "3285": {
        "name": "find-indices-of-stable-mountains",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "3291": {
        "name": "minimum-number-of-valid-strings-to-form-target-i",
        "tags": [
            "Array",
            "String",
            "Binary Search",
            "Dynamic Programming",
            "Trie",
            "Segment Tree",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ],
        "difficulty": "Medium"
    },
    "3292": {
        "name": "minimum-number-of-valid-strings-to-form-target-ii",
        "tags": [
            "Array",
            "String",
            "Binary Search",
            "Dynamic Programming",
            "Segment Tree",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ],
        "difficulty": "Hard"
    },
    "3290": {
        "name": "maximum-multiplication-score",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "3295": {
        "name": "report-spam-message",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ],
        "difficulty": "Medium"
    },
    "3296": {
        "name": "minimum-number-of-seconds-to-make-mountain-height-zero",
        "tags": [
            "Array",
            "Math",
            "Binary Search",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Medium"
    },
    "3293": {
        "name": "calculate-product-final-price",
        "tags": [],
        "difficulty": null
    },
    "3294": {
        "name": "convert-doubly-linked-list-to-array-ii",
        "tags": [],
        "difficulty": null
    },
    "3297": {
        "name": "count-substrings-that-can-be-rearranged-to-contain-a-string-i",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "3298": {
        "name": "count-substrings-that-can-be-rearranged-to-contain-a-string-ii",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "difficulty": "Hard"
    },
    "3300": {
        "name": "minimum-element-after-replacement-with-digit-sum",
        "tags": [
            "Array",
            "Math"
        ],
        "difficulty": "Easy"
    },
    "3299": {
        "name": "sum-of-consecutive-subsequences",
        "tags": [],
        "difficulty": null
    },
    "3305": {
        "name": "count-of-substrings-containing-every-vowel-and-k-consonants-i",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "3301": {
        "name": "maximize-the-total-height-of-unique-towers",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "difficulty": "Medium"
    },
    "3302": {
        "name": "find-the-lexicographically-smallest-valid-sequence",
        "tags": [
            "Two Pointers",
            "String",
            "Dynamic Programming",
            "Greedy"
        ],
        "difficulty": "Medium"
    },
    "3303": {
        "name": "find-the-occurrence-of-first-almost-equal-substring",
        "tags": [
            "String",
            "String Matching"
        ],
        "difficulty": "Hard"
    },
    "3304": {
        "name": "find-the-k-th-character-in-string-game-i",
        "tags": [
            "Math",
            "Bit Manipulation",
            "Recursion",
            "Simulation"
        ],
        "difficulty": "Easy"
    },
    "3306": {
        "name": "count-of-substrings-containing-every-vowel-and-k-consonants-ii",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "3307": {
        "name": "find-the-k-th-character-in-string-game-ii",
        "tags": [
            "Math",
            "Bit Manipulation",
            "Recursion"
        ],
        "difficulty": "Hard"
    },
    "3313": {
        "name": "find-the-last-marked-nodes-in-tree",
        "tags": [],
        "difficulty": null
    },
    "3311": {
        "name": "construct-2d-grid-matching-graph-layout",
        "tags": [
            "Array",
            "Hash Table",
            "Graph",
            "Matrix"
        ],
        "difficulty": "Hard"
    },
    "3310": {
        "name": "remove-methods-from-project",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "difficulty": "Medium"
    },
    "3308": {
        "name": "find-top-performing-driver",
        "tags": [],
        "difficulty": null
    },
    "3312": {
        "name": "sorted-gcd-pair-queries",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Binary Search",
            "Combinatorics",
            "Counting",
            "Number Theory",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "3309": {
        "name": "maximum-possible-number-by-binary-concatenation",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Enumeration"
        ],
        "difficulty": "Medium"
    },
    "3314": {
        "name": "construct-the-minimum-bitwise-array-i",
        "tags": [
            "Array",
            "Bit Manipulation"
        ],
        "difficulty": "Easy"
    },
    "3322": {
        "name": "premier-league-table-ranking-iii",
        "tags": [],
        "difficulty": null
    },
    "3315": {
        "name": "construct-the-minimum-bitwise-array-ii",
        "tags": [
            "Array",
            "Bit Manipulation"
        ],
        "difficulty": "Medium"
    },
    "3317": {
        "name": "find-the-number-of-possible-ways-for-an-event",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "difficulty": "Hard"
    },
    "3320": {
        "name": "count-the-number-of-winning-sequences",
        "tags": [
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "3316": {
        "name": "find-maximum-removals-from-source-string",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "String",
            "Dynamic Programming"
        ],
        "difficulty": "Medium"
    },
    "3321": {
        "name": "find-x-sum-of-all-k-long-subarrays-ii",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Hard"
    },
    "3319": {
        "name": "k-th-largest-perfect-subtree-size-in-binary-tree",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Sorting",
            "Binary Tree"
        ],
        "difficulty": "Medium"
    },
    "3318": {
        "name": "find-x-sum-of-all-k-long-subarrays-i",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window",
            "Heap (Priority Queue)"
        ],
        "difficulty": "Easy"
    },
    "3329": {
        "name": "count-substrings-with-k-frequency-characters-ii",
        "tags": [],
        "difficulty": null
    },
    "3327": {
        "name": "check-if-dfs-strings-are-palindromes",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Tree",
            "Depth-First Search",
            "Hash Function"
        ],
        "difficulty": "Hard"
    },
    "3325": {
        "name": "count-substrings-with-k-frequency-characters-i",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "difficulty": "Medium"
    },
    "3323": {
        "name": "minimize-connected-groups-by-inserting-interval",
        "tags": [],
        "difficulty": null
    },
    "3330": {
        "name": "find-the-original-typed-string-i",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "3326": {
        "name": "minimum-division-operations-to-make-array-non-decreasing",
        "tags": [
            "Array",
            "Math",
            "Greedy",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "3328": {
        "name": "find-cities-in-each-state-ii",
        "tags": [],
        "difficulty": null
    },
    "3324": {
        "name": "find-the-sequence-of-strings-appeared-on-the-screen",
        "tags": [
            "String",
            "Simulation"
        ],
        "difficulty": "Medium"
    },
    "3331": {
        "name": "find-subtree-sizes-after-changes",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Tree",
            "Depth-First Search"
        ],
        "difficulty": "Medium"
    },
    "3333": {
        "name": "find-the-original-typed-string-ii",
        "tags": [
            "String",
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "3334": {
        "name": "find-the-maximum-factor-score-of-array",
        "tags": [
            "Array",
            "Math",
            "Number Theory"
        ],
        "difficulty": "Medium"
    },
    "3332": {
        "name": "maximum-points-tourist-can-earn",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "difficulty": "Medium"
    },
    "3336": {
        "name": "find-the-number-of-subsequences-with-equal-gcd",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "3335": {
        "name": "total-characters-in-string-after-transformations-i",
        "tags": [
            "Hash Table",
            "Math",
            "String",
            "Dynamic Programming",
            "Counting"
        ],
        "difficulty": "Medium"
    },
    "3338": {
        "name": "second-highest-salary-ii",
        "tags": [],
        "difficulty": null
    },
    "3337": {
        "name": "total-characters-in-string-after-transformations-ii",
        "tags": [
            "Hash Table",
            "Math",
            "String",
            "Dynamic Programming",
            "Counting"
        ],
        "difficulty": "Hard"
    },
    "3339": {
        "name": "find-the-number-of-k-even-arrays",
        "tags": [],
        "difficulty": null
    },
    "3347": {
        "name": "maximum-frequency-of-an-element-after-performing-operations-ii",
        "tags": [
            "Array",
            "Binary Search",
            "Sliding Window",
            "Sorting",
            "Prefix Sum"
        ],
        "difficulty": "Hard"
    },
    "3346": {
        "name": "maximum-frequency-of-an-element-after-performing-operations-i",
        "tags": [
            "Array",
            "Binary Search",
            "Sliding Window",
            "Sorting",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "3340": {
        "name": "check-balanced-string",
        "tags": [
            "String"
        ],
        "difficulty": "Easy"
    },
    "3345": {
        "name": "smallest-divisible-digit-product-i",
        "tags": [
            "Math",
            "Enumeration"
        ],
        "difficulty": "Easy"
    },
    "3342": {
        "name": "find-minimum-time-to-reach-last-room-ii",
        "tags": [
            "Array",
            "Graph",
            "Heap (Priority Queue)",
            "Matrix",
            "Shortest Path"
        ],
        "difficulty": "Medium"
    },
    "3341": {
        "name": "find-minimum-time-to-reach-last-room-i",
        "tags": [
            "Array",
            "Graph",
            "Heap (Priority Queue)",
            "Matrix",
            "Shortest Path"
        ],
        "difficulty": "Medium"
    },
    "3344": {
        "name": "maximum-sized-array",
        "tags": [],
        "difficulty": null
    },
    "3343": {
        "name": "count-number-of-balanced-permutations",
        "tags": [
            "Math",
            "String",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "difficulty": "Hard"
    },
    "3348": {
        "name": "smallest-divisible-digit-product-ii",
        "tags": [
            "Math",
            "String",
            "Backtracking",
            "Greedy",
            "Number Theory"
        ],
        "difficulty": "Hard"
    },
    "3349": {
        "name": "adjacent-increasing-subarrays-detection-i",
        "tags": [
            "Array"
        ],
        "difficulty": "Easy"
    },
    "3350": {
        "name": "adjacent-increasing-subarrays-detection-ii",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "difficulty": "Medium"
    },
    "3351": {
        "name": "sum-of-good-subsequences",
        "tags": [
            "Array",
            "Hash Table",
            "Dynamic Programming"
        ],
        "difficulty": "Hard"
    },
    "3352": {
        "name": "count-k-reducible-numbers-less-than-n",
        "tags": [
            "Math",
            "String",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "difficulty": "Hard"
    },
    "3353": {
        "name": "minimum-total-operations",
        "tags": [],
        "difficulty": null
    },
    "3357": {
        "name": "minimize-the-maximum-adjacent-element-difference",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy"
        ],
        "difficulty": "Hard"
    },
    "3355": {
        "name": "zero-array-transformation-i",
        "tags": [
            "Array",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "3354": {
        "name": "make-array-elements-equal-to-zero",
        "tags": [
            "Array",
            "Simulation",
            "Prefix Sum"
        ],
        "difficulty": "Easy"
    },
    "3356": {
        "name": "zero-array-transformation-ii",
        "tags": [
            "Array",
            "Binary Search",
            "Prefix Sum"
        ],
        "difficulty": "Medium"
    },
    "3359": {
        "name": "find-sorted-submatrices-with-maximum-element-at-most-k",
        "tags": [],
        "difficulty": null
    },
    "3361": {
        "name": "shift-distance-between-two-strings",
        "tags": [],
        "difficulty": "Medium"
    },
    "3360": {
        "name": "stone-removal-game",
        "tags": [],
        "difficulty": "Easy"
    },
    "3358": {
        "name": "books-with-null-ratings",
        "tags": [],
        "difficulty": null
    },
    "3363": {
        "name": "find-the-maximum-number-of-fruits-collected",
        "tags": [],
        "difficulty": "Hard"
    },
    "3362": {
        "name": "zero-array-transformation-iii",
        "tags": [],
        "difficulty": "Medium"
    },
    "3365": {
        "name": "rearrange-k-substrings-to-form-target-string",
        "tags": [],
        "difficulty": "Medium"
    },
    "3364": {
        "name": "minimum-positive-sum-subarray",
        "tags": [],
        "difficulty": "Easy"
    },
    "3369": {
        "name": "design-an-array-statistics-tracker",
        "tags": [],
        "difficulty": null
    },
    "3368": {
        "name": "first-letter-capitalization",
        "tags": [],
        "difficulty": null
    },
    "3367": {
        "name": "maximize-sum-of-weights-after-edge-removals",
        "tags": [],
        "difficulty": "Hard"
    },
    "3366": {
        "name": "minimum-array-sum",
        "tags": [],
        "difficulty": "Medium"
    }
}