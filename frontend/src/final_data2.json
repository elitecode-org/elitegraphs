{
  "user": {
    "username": "your_username",
    "total_problems_completed": 3369,
    "easy_questions": 706,
    "medium_questions": 1339,
    "hard_questions": 604
  },
  "nodes": [
    {
      "id": "Problem 7",
      "name": "reverse-integer",
      "difficulty": "Medium",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 6",
      "name": "zigzag-conversion",
      "difficulty": "Medium",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 2",
      "name": "add-two-numbers",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Math",
        "Recursion"
      ]
    },
    {
      "id": "Problem 5",
      "name": "longest-palindromic-substring",
      "difficulty": "Medium",
      "categories": [
        "Two Pointers",
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 4",
      "name": "median-of-two-sorted-arrays",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Divide and Conquer"
      ]
    },
    {
      "id": "Problem 1",
      "name": "two-sum",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 8",
      "name": "string-to-integer",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3",
      "name": "longest-substring-without-repeating-characters",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 9",
      "name": "palindrome-number",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 13",
      "name": "roman-to-integer",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 11",
      "name": "container-with-most-water",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Greedy"
      ]
    },
    {
      "id": "Problem 12",
      "name": "integer-to-roman",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 10",
      "name": "regular-expression-matching",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming",
        "Recursion"
      ]
    },
    {
      "id": "Problem 14",
      "name": "longest-common-prefix",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Trie"
      ]
    },
    {
      "id": "Problem 15",
      "name": "3sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Sorting"
      ]
    },
    {
      "id": "Problem 16",
      "name": "3sum-closest",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Sorting"
      ]
    },
    {
      "id": "Problem 17",
      "name": "letter-combinations-of-a-phone-number",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 22",
      "name": "generate-parentheses",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 19",
      "name": "remove-nth-node-from-end-of-list",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 20",
      "name": "valid-parentheses",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Stack"
      ]
    },
    {
      "id": "Problem 18",
      "name": "4sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Sorting"
      ]
    },
    {
      "id": "Problem 23",
      "name": "merge-k-sorted-lists",
      "difficulty": "Hard",
      "categories": [
        "Linked List",
        "Divide and Conquer",
        "Heap (Priority Queue)",
        "Merge Sort"
      ]
    },
    {
      "id": "Problem 21",
      "name": "merge-two-sorted-lists",
      "difficulty": "Easy",
      "categories": [
        "Linked List",
        "Recursion"
      ]
    },
    {
      "id": "Problem 26",
      "name": "remove-duplicates-from-sorted-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 28",
      "name": "find-the-index-of-the-first-occurrence-in-a-string",
      "difficulty": "Easy",
      "categories": [
        "Two Pointers",
        "String",
        "String Matching"
      ]
    },
    {
      "id": "Problem 25",
      "name": "reverse-nodes-in-k-group",
      "difficulty": "Hard",
      "categories": [
        "Linked List",
        "Recursion"
      ]
    },
    {
      "id": "Problem 24",
      "name": "swap-nodes-in-pairs",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Recursion"
      ]
    },
    {
      "id": "Problem 30",
      "name": "substring-with-concatenation-of-all-words",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 27",
      "name": "remove-element",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 29",
      "name": "divide-two-integers",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 31",
      "name": "next-permutation",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 38",
      "name": "count-and-say",
      "difficulty": "Medium",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 35",
      "name": "search-insert-position",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 37",
      "name": "sudoku-solver",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Backtracking",
        "Matrix"
      ]
    },
    {
      "id": "Problem 32",
      "name": "longest-valid-parentheses",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming",
        "Stack"
      ]
    },
    {
      "id": "Problem 34",
      "name": "find-first-and-last-position-of-element-in-sorted-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 39",
      "name": "combination-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 33",
      "name": "search-in-rotated-sorted-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 36",
      "name": "valid-sudoku",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Matrix"
      ]
    },
    {
      "id": "Problem 41",
      "name": "first-missing-positive",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 43",
      "name": "multiply-strings",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 44",
      "name": "wildcard-matching",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming",
        "Greedy",
        "Recursion"
      ]
    },
    {
      "id": "Problem 42",
      "name": "trapping-rain-water",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Two Pointers",
        "Dynamic Programming",
        "Stack",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 40",
      "name": "combination-sum-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 46",
      "name": "permutations",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 47",
      "name": "permutations-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 45",
      "name": "jump-game-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 49",
      "name": "group-anagrams",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Sorting"
      ]
    },
    {
      "id": "Problem 48",
      "name": "rotate-image",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Matrix"
      ]
    },
    {
      "id": "Problem 51",
      "name": "n-queens",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 50",
      "name": "pow(x,-n)",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 52",
      "name": "n-queens-ii",
      "difficulty": "Hard",
      "categories": [
        "Backtracking"
      ]
    },
    {
      "id": "Problem 53",
      "name": "maximum-subarray",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Divide and Conquer",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 54",
      "name": "spiral-matrix",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 55",
      "name": "jump-game",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 56",
      "name": "merge-intervals",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sorting"
      ]
    },
    {
      "id": "Problem 57",
      "name": "insert-interval",
      "difficulty": "Medium",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 58",
      "name": "length-of-last-word",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 59",
      "name": "spiral-matrix-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 60",
      "name": "permutation-sequence",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Recursion"
      ]
    },
    {
      "id": "Problem 61",
      "name": "rotate-list",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 65",
      "name": "valid-number",
      "difficulty": "Hard",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 62",
      "name": "unique-paths",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 63",
      "name": "unique-paths-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 64",
      "name": "minimum-path-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 66",
      "name": "plus-one",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 67",
      "name": "add-binary",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "String",
        "Bit Manipulation",
        "Simulation"
      ]
    },
    {
      "id": "Problem 68",
      "name": "text-justification",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 69",
      "name": "sqrt(x)",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 73",
      "name": "set-matrix-zeroes",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Matrix"
      ]
    },
    {
      "id": "Problem 71",
      "name": "simplify-path",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack"
      ]
    },
    {
      "id": "Problem 70",
      "name": "climbing-stairs",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Memoization"
      ]
    },
    {
      "id": "Problem 72",
      "name": "edit-distance",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 74",
      "name": "search-a-2d-matrix",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 75",
      "name": "sort-colors",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Sorting"
      ]
    },
    {
      "id": "Problem 76",
      "name": "minimum-window-substring",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 78",
      "name": "subsets",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Backtracking",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 79",
      "name": "word-search",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Backtracking",
        "Matrix"
      ]
    },
    {
      "id": "Problem 77",
      "name": "combinations",
      "difficulty": "Medium",
      "categories": [
        "Backtracking"
      ]
    },
    {
      "id": "Problem 80",
      "name": "remove-duplicates-from-sorted-array-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 81",
      "name": "search-in-rotated-sorted-array-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 82",
      "name": "remove-duplicates-from-sorted-list-ii",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 87",
      "name": "scramble-string",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 86",
      "name": "partition-list",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 83",
      "name": "remove-duplicates-from-sorted-list",
      "difficulty": "Easy",
      "categories": [
        "Linked List"
      ]
    },
    {
      "id": "Problem 85",
      "name": "maximal-rectangle",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Stack",
        "Matrix",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 84",
      "name": "largest-rectangle-in-histogram",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Stack",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 89",
      "name": "gray-code",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Backtracking",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 90",
      "name": "subsets-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Backtracking",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 88",
      "name": "merge-sorted-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers",
        "Sorting"
      ]
    },
    {
      "id": "Problem 91",
      "name": "decode-ways",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 92",
      "name": "reverse-linked-list-ii",
      "difficulty": "Medium",
      "categories": [
        "Linked List"
      ]
    },
    {
      "id": "Problem 94",
      "name": "binary-tree-inorder-traversal",
      "difficulty": "Easy",
      "categories": [
        "Stack",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 93",
      "name": "restore-ip-addresses",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 95",
      "name": "unique-binary-search-trees-ii",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming",
        "Backtracking",
        "Tree",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 96",
      "name": "unique-binary-search-trees",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Tree",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 98",
      "name": "validate-binary-search-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 99",
      "name": "recover-binary-search-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 97",
      "name": "interleaving-string",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 100",
      "name": "same-tree",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 101",
      "name": "symmetric-tree",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 103",
      "name": "binary-tree-zigzag-level-order-traversal",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 104",
      "name": "maximum-depth-of-binary-tree",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 105",
      "name": "construct-binary-tree-from-preorder-and-inorder-traversal",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Divide and Conquer",
        "Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 107",
      "name": "binary-tree-level-order-traversal-ii",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 102",
      "name": "binary-tree-level-order-traversal",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 106",
      "name": "construct-binary-tree-from-inorder-and-postorder-traversal",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Divide and Conquer",
        "Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 108",
      "name": "convert-sorted-array-to-binary-search-tree",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Divide and Conquer",
        "Tree",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 109",
      "name": "convert-sorted-list-to-binary-search-tree",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Divide and Conquer",
        "Tree",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 110",
      "name": "balanced-binary-tree",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 115",
      "name": "distinct-subsequences",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 114",
      "name": "flatten-binary-tree-to-linked-list",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Stack",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 111",
      "name": "minimum-depth-of-binary-tree",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 112",
      "name": "path-sum",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 116",
      "name": "populating-next-right-pointers-in-each-node",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 113",
      "name": "path-sum-ii",
      "difficulty": "Medium",
      "categories": [
        "Backtracking",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 117",
      "name": "populating-next-right-pointers-in-each-node-ii",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 119",
      "name": "pascal's-triangle-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 118",
      "name": "pascal's-triangle",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 120",
      "name": "triangle",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 123",
      "name": "best-time-to-buy-and-sell-stock-iii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 121",
      "name": "best-time-to-buy-and-sell-stock",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 122",
      "name": "best-time-to-buy-and-sell-stock-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 124",
      "name": "binary-tree-maximum-path-sum",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 126",
      "name": "word-ladder-ii",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "String",
        "Backtracking",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 125",
      "name": "valid-palindrome",
      "difficulty": "Easy",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 127",
      "name": "word-ladder",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "String",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 128",
      "name": "longest-consecutive-sequence",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Union Find"
      ]
    },
    {
      "id": "Problem 130",
      "name": "surrounded-regions",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    },
    {
      "id": "Problem 129",
      "name": "sum-root-to-leaf-numbers",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 131",
      "name": "palindrome-partitioning",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 132",
      "name": "palindrome-partitioning-ii",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 133",
      "name": "clone-graph",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Depth-First Search",
        "Breadth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 134",
      "name": "gas-station",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 135",
      "name": "candy",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 138",
      "name": "copy-list-with-random-pointer",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Linked List"
      ]
    },
    {
      "id": "Problem 139",
      "name": "word-break",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Dynamic Programming",
        "Trie",
        "Memoization"
      ]
    },
    {
      "id": "Problem 136",
      "name": "single-number",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 140",
      "name": "word-break-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Dynamic Programming",
        "Backtracking",
        "Trie",
        "Memoization"
      ]
    },
    {
      "id": "Problem 137",
      "name": "single-number-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 141",
      "name": "linked-list-cycle",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "Linked List",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 142",
      "name": "linked-list-cycle-ii",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Linked List",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 143",
      "name": "reorder-list",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Two Pointers",
        "Stack",
        "Recursion"
      ]
    },
    {
      "id": "Problem 145",
      "name": "binary-tree-postorder-traversal",
      "difficulty": "Easy",
      "categories": [
        "Stack",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 144",
      "name": "binary-tree-preorder-traversal",
      "difficulty": "Easy",
      "categories": [
        "Stack",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 149",
      "name": "max-points-on-a-line",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Geometry"
      ]
    },
    {
      "id": "Problem 147",
      "name": "insertion-sort-list",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Sorting"
      ]
    },
    {
      "id": "Problem 146",
      "name": "lru-cache",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Linked List",
        "Design",
        "Doubly-Linked List"
      ]
    },
    {
      "id": "Problem 148",
      "name": "sort-list",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Two Pointers",
        "Divide and Conquer",
        "Sorting",
        "Merge Sort"
      ]
    },
    {
      "id": "Problem 150",
      "name": "evaluate-reverse-polish-notation",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Stack"
      ]
    },
    {
      "id": "Problem 153",
      "name": "find-minimum-in-rotated-sorted-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 151",
      "name": "reverse-words-in-a-string",
      "difficulty": "Medium",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 152",
      "name": "maximum-product-subarray",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 154",
      "name": "find-minimum-in-rotated-sorted-array-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 156",
      "name": "binary-tree-upside-down",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 155",
      "name": "min-stack",
      "difficulty": "Medium",
      "categories": [
        "Stack",
        "Design"
      ]
    },
    {
      "id": "Problem 158",
      "name": "read-n-characters-given-read4-ii---call-multiple-times",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 157",
      "name": "read-n-characters-given-read4",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 161",
      "name": "one-edit-distance",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 160",
      "name": "intersection-of-two-linked-lists",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "Linked List",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 159",
      "name": "longest-substring-with-at-most-two-distinct-characters",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 163",
      "name": "missing-ranges",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 162",
      "name": "find-peak-element",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 165",
      "name": "compare-version-numbers",
      "difficulty": "Medium",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 164",
      "name": "maximum-gap",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sorting",
        "Bucket Sort",
        "Radix Sort"
      ]
    },
    {
      "id": "Problem 166",
      "name": "fraction-to-recurring-decimal",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 167",
      "name": "two-sum-ii---input-array-is-sorted",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 168",
      "name": "excel-sheet-column-title",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 169",
      "name": "majority-element",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Divide and Conquer",
        "Sorting",
        "Counting"
      ]
    },
    {
      "id": "Problem 172",
      "name": "factorial-trailing-zeroes",
      "difficulty": "Medium",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 173",
      "name": "binary-search-tree-iterator",
      "difficulty": "Medium",
      "categories": [
        "Stack",
        "Tree",
        "Design",
        "Binary Search Tree",
        "Binary Tree",
        "Iterator"
      ]
    },
    {
      "id": "Problem 174",
      "name": "dungeon-game",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 170",
      "name": "two-sum-iii---data-structure-design",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 171",
      "name": "excel-sheet-column-number",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 177",
      "name": "nth-highest-salary",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 176",
      "name": "second-highest-salary",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 175",
      "name": "combine-two-tables",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 180",
      "name": "consecutive-numbers",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 182",
      "name": "duplicate-emails",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 181",
      "name": "employees-earning-more-than-their-managers",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 179",
      "name": "largest-number",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 178",
      "name": "rank-scores",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 183",
      "name": "customers-who-never-order",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 184",
      "name": "department-highest-salary",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 185",
      "name": "department-top-three-salaries",
      "difficulty": "Hard",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 187",
      "name": "repeated-dna-sequences",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Bit Manipulation",
        "Sliding Window",
        "Rolling Hash",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 189",
      "name": "rotate-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 188",
      "name": "best-time-to-buy-and-sell-stock-iv",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 190",
      "name": "reverse-bits",
      "difficulty": "Easy",
      "categories": [
        "Divide and Conquer",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 186",
      "name": "reverse-words-in-a-string-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 193",
      "name": "valid-phone-numbers",
      "difficulty": "Easy",
      "categories": [
        "Shell"
      ]
    },
    {
      "id": "Problem 191",
      "name": "number-of-1-bits",
      "difficulty": "Easy",
      "categories": [
        "Divide and Conquer",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 194",
      "name": "transpose-file",
      "difficulty": "Medium",
      "categories": [
        "Shell"
      ]
    },
    {
      "id": "Problem 192",
      "name": "word-frequency",
      "difficulty": "Medium",
      "categories": [
        "Shell"
      ]
    },
    {
      "id": "Problem 195",
      "name": "tenth-line",
      "difficulty": "Easy",
      "categories": [
        "Shell"
      ]
    },
    {
      "id": "Problem 196",
      "name": "delete-duplicate-emails",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 201",
      "name": "bitwise-and-of-numbers-range",
      "difficulty": "Medium",
      "categories": [
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 198",
      "name": "house-robber",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 197",
      "name": "rising-temperature",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 200",
      "name": "number-of-islands",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    },
    {
      "id": "Problem 203",
      "name": "remove-linked-list-elements",
      "difficulty": "Easy",
      "categories": [
        "Linked List",
        "Recursion"
      ]
    },
    {
      "id": "Problem 202",
      "name": "happy-number",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "Math",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 204",
      "name": "count-primes",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Enumeration",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 199",
      "name": "binary-tree-right-side-view",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 205",
      "name": "isomorphic-strings",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 209",
      "name": "minimum-size-subarray-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Sliding Window",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 207",
      "name": "course-schedule",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Topological Sort"
      ]
    },
    {
      "id": "Problem 208",
      "name": "implement-trie-(prefix-tree)",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 212",
      "name": "word-search-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Backtracking",
        "Trie",
        "Matrix"
      ]
    },
    {
      "id": "Problem 206",
      "name": "reverse-linked-list",
      "difficulty": "Easy",
      "categories": [
        "Linked List",
        "Recursion"
      ]
    },
    {
      "id": "Problem 213",
      "name": "house-robber-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 211",
      "name": "design-add-and-search-words-data-structure",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Depth-First Search",
        "Design",
        "Trie"
      ]
    },
    {
      "id": "Problem 210",
      "name": "course-schedule-ii",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Topological Sort"
      ]
    },
    {
      "id": "Problem 216",
      "name": "combination-sum-iii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 217",
      "name": "contains-duplicate",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting"
      ]
    },
    {
      "id": "Problem 219",
      "name": "contains-duplicate-ii",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 214",
      "name": "shortest-palindrome",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Rolling Hash",
        "String Matching",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 215",
      "name": "kth-largest-element-in-an-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Divide and Conquer",
        "Sorting",
        "Heap (Priority Queue)",
        "Quickselect"
      ]
    },
    {
      "id": "Problem 220",
      "name": "contains-duplicate-iii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Sliding Window",
        "Sorting",
        "Bucket Sort",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 218",
      "name": "the-skyline-problem",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Divide and Conquer",
        "Binary Indexed Tree",
        "Segment Tree",
        "Line Sweep",
        "Heap (Priority Queue)",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 227",
      "name": "basic-calculator-ii",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "String",
        "Stack"
      ]
    },
    {
      "id": "Problem 228",
      "name": "summary-ranges",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 225",
      "name": "implement-stack-using-queues",
      "difficulty": "Easy",
      "categories": [
        "Stack",
        "Design",
        "Queue"
      ]
    },
    {
      "id": "Problem 223",
      "name": "rectangle-area",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Geometry"
      ]
    },
    {
      "id": "Problem 221",
      "name": "maximal-square",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 226",
      "name": "invert-binary-tree",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 224",
      "name": "basic-calculator",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "String",
        "Stack",
        "Recursion"
      ]
    },
    {
      "id": "Problem 222",
      "name": "count-complete-tree-nodes",
      "difficulty": "Easy",
      "categories": [
        "Binary Search",
        "Bit Manipulation",
        "Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 233",
      "name": "number-of-digit-one",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Recursion"
      ]
    },
    {
      "id": "Problem 234",
      "name": "palindrome-linked-list",
      "difficulty": "Easy",
      "categories": [
        "Linked List",
        "Two Pointers",
        "Stack",
        "Recursion"
      ]
    },
    {
      "id": "Problem 231",
      "name": "power-of-two",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Bit Manipulation",
        "Recursion"
      ]
    },
    {
      "id": "Problem 236",
      "name": "lowest-common-ancestor-of-a-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 229",
      "name": "majority-element-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting",
        "Counting"
      ]
    },
    {
      "id": "Problem 235",
      "name": "lowest-common-ancestor-of-a-binary-search-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 230",
      "name": "kth-smallest-element-in-a-bst",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 232",
      "name": "implement-queue-using-stacks",
      "difficulty": "Easy",
      "categories": [
        "Stack",
        "Design",
        "Queue"
      ]
    },
    {
      "id": "Problem 237",
      "name": "delete-node-in-a-linked-list",
      "difficulty": "Medium",
      "categories": [
        "Linked List"
      ]
    },
    {
      "id": "Problem 244",
      "name": "shortest-word-distance-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 243",
      "name": "shortest-word-distance",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 242",
      "name": "valid-anagram",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Sorting"
      ]
    },
    {
      "id": "Problem 241",
      "name": "different-ways-to-add-parentheses",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "String",
        "Dynamic Programming",
        "Recursion",
        "Memoization"
      ]
    },
    {
      "id": "Problem 240",
      "name": "search-a-2d-matrix-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Divide and Conquer",
        "Matrix"
      ]
    },
    {
      "id": "Problem 238",
      "name": "product-of-array-except-self",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 239",
      "name": "sliding-window-maximum",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Queue",
        "Sliding Window",
        "Heap (Priority Queue)",
        "Monotonic Queue"
      ]
    },
    {
      "id": "Problem 245",
      "name": "shortest-word-distance-iii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 248",
      "name": "strobogrammatic-number-iii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 251",
      "name": "flatten-2d-vector",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 250",
      "name": "count-univalue-subtrees",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 249",
      "name": "group-shifted-strings",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 246",
      "name": "strobogrammatic-number",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 247",
      "name": "strobogrammatic-number-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 252",
      "name": "meeting-rooms",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 255",
      "name": "verify-preorder-sequence-in-binary-search-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 256",
      "name": "paint-house",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 258",
      "name": "add-digits",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Simulation",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 257",
      "name": "binary-tree-paths",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Backtracking",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 259",
      "name": "3sum-smaller",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 254",
      "name": "factor-combinations",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 253",
      "name": "meeting-rooms-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 261",
      "name": "graph-valid-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 262",
      "name": "trips-and-users",
      "difficulty": "Hard",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 260",
      "name": "single-number-iii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 264",
      "name": "ugly-number-ii",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Math",
        "Dynamic Programming",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 263",
      "name": "ugly-number",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 265",
      "name": "paint-house-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 267",
      "name": "palindrome-permutation-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 266",
      "name": "palindrome-permutation",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 269",
      "name": "alien-dictionary",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 272",
      "name": "closest-binary-search-tree-value-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 271",
      "name": "encode-and-decode-strings",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 268",
      "name": "missing-number",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Binary Search",
        "Bit Manipulation",
        "Sorting"
      ]
    },
    {
      "id": "Problem 270",
      "name": "closest-binary-search-tree-value",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 275",
      "name": "h-index-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 274",
      "name": "h-index",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sorting",
        "Counting Sort"
      ]
    },
    {
      "id": "Problem 273",
      "name": "integer-to-english-words",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "String",
        "Recursion"
      ]
    },
    {
      "id": "Problem 276",
      "name": "paint-fence",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 277",
      "name": "find-the-celebrity",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 279",
      "name": "perfect-squares",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 278",
      "name": "first-bad-version",
      "difficulty": "Easy",
      "categories": [
        "Binary Search",
        "Interactive"
      ]
    },
    {
      "id": "Problem 280",
      "name": "wiggle-sort",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 282",
      "name": "expression-add-operators",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "String",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 284",
      "name": "peeking-iterator",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Design",
        "Iterator"
      ]
    },
    {
      "id": "Problem 281",
      "name": "zigzag-iterator",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 283",
      "name": "move-zeroes",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 285",
      "name": "inorder-successor-in-bst",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 288",
      "name": "unique-word-abbreviation",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 286",
      "name": "walls-and-gates",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 287",
      "name": "find-the-duplicate-number",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 296",
      "name": "best-meeting-point",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 291",
      "name": "word-pattern-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 292",
      "name": "nim-game",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Brainteaser",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 290",
      "name": "word-pattern",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 293",
      "name": "flip-game",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 294",
      "name": "flip-game-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 295",
      "name": "find-median-from-data-stream",
      "difficulty": "Hard",
      "categories": [
        "Two Pointers",
        "Design",
        "Sorting",
        "Heap (Priority Queue)",
        "Data Stream"
      ]
    },
    {
      "id": "Problem 289",
      "name": "game-of-life",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 298",
      "name": "binary-tree-longest-consecutive-sequence",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 301",
      "name": "remove-invalid-parentheses",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Backtracking",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 300",
      "name": "longest-increasing-subsequence",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 299",
      "name": "bulls-and-cows",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 297",
      "name": "serialize-and-deserialize-binary-tree",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Design",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 302",
      "name": "smallest-rectangle-enclosing-black-pixels",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 303",
      "name": "range-sum-query---immutable",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 304",
      "name": "range-sum-query-2d---immutable",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 306",
      "name": "additive-number",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 305",
      "name": "number-of-islands-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 307",
      "name": "range-sum-query---mutable",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 309",
      "name": "best-time-to-buy-and-sell-stock-with-cooldown",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 308",
      "name": "range-sum-query-2d---mutable",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 311",
      "name": "sparse-matrix-multiplication",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 312",
      "name": "burst-balloons",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 314",
      "name": "binary-tree-vertical-order-traversal",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 313",
      "name": "super-ugly-number",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 310",
      "name": "minimum-height-trees",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Topological Sort"
      ]
    },
    {
      "id": "Problem 315",
      "name": "count-of-smaller-numbers-after-self",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Divide and Conquer",
        "Binary Indexed Tree",
        "Segment Tree",
        "Merge Sort",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 317",
      "name": "shortest-distance-from-all-buildings",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 316",
      "name": "remove-duplicate-letters",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack",
        "Greedy",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 319",
      "name": "bulb-switcher",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Brainteaser"
      ]
    },
    {
      "id": "Problem 318",
      "name": "maximum-product-of-word-lengths",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 322",
      "name": "coin-change",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 321",
      "name": "create-maximum-number",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Two Pointers",
        "Stack",
        "Greedy",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 320",
      "name": "generalized-abbreviation",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 325",
      "name": "maximum-size-subarray-sum-equals-k",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 324",
      "name": "wiggle-sort-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Divide and Conquer",
        "Greedy",
        "Sorting",
        "Quickselect"
      ]
    },
    {
      "id": "Problem 323",
      "name": "number-of-connected-components-in-an-undirected-graph",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 329",
      "name": "longest-increasing-path-in-a-matrix",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Topological Sort",
        "Memoization",
        "Matrix"
      ]
    },
    {
      "id": "Problem 328",
      "name": "odd-even-linked-list",
      "difficulty": "Medium",
      "categories": [
        "Linked List"
      ]
    },
    {
      "id": "Problem 327",
      "name": "count-of-range-sum",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Divide and Conquer",
        "Binary Indexed Tree",
        "Segment Tree",
        "Merge Sort",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 330",
      "name": "patching-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 333",
      "name": "largest-bst-subtree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 331",
      "name": "verify-preorder-serialization-of-a-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack",
        "Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 326",
      "name": "power-of-three",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Recursion"
      ]
    },
    {
      "id": "Problem 332",
      "name": "reconstruct-itinerary",
      "difficulty": "Hard",
      "categories": [
        "Depth-First Search",
        "Graph",
        "Eulerian Circuit"
      ]
    },
    {
      "id": "Problem 334",
      "name": "increasing-triplet-subsequence",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 336",
      "name": "palindrome-pairs",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Trie"
      ]
    },
    {
      "id": "Problem 337",
      "name": "house-robber-iii",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 335",
      "name": "self-crossing",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Geometry"
      ]
    },
    {
      "id": "Problem 340",
      "name": "longest-substring-with-at-most-k-distinct-characters",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 338",
      "name": "counting-bits",
      "difficulty": "Easy",
      "categories": [
        "Dynamic Programming",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 341",
      "name": "flatten-nested-list-iterator",
      "difficulty": "Medium",
      "categories": [
        "Stack",
        "Tree",
        "Depth-First Search",
        "Design",
        "Queue",
        "Iterator"
      ]
    },
    {
      "id": "Problem 339",
      "name": "nested-list-weight-sum",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 345",
      "name": "reverse-vowels-of-a-string",
      "difficulty": "Easy",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 343",
      "name": "integer-break",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 344",
      "name": "reverse-string",
      "difficulty": "Easy",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 342",
      "name": "power-of-four",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Bit Manipulation",
        "Recursion"
      ]
    },
    {
      "id": "Problem 348",
      "name": "design-tic-tac-toe",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 346",
      "name": "moving-average-from-data-stream",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 353",
      "name": "design-snake-game",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 351",
      "name": "android-unlock-patterns",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 347",
      "name": "top-k-frequent-elements",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Divide and Conquer",
        "Sorting",
        "Heap (Priority Queue)",
        "Bucket Sort",
        "Counting",
        "Quickselect"
      ]
    },
    {
      "id": "Problem 350",
      "name": "intersection-of-two-arrays-ii",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 352",
      "name": "data-stream-as-disjoint-intervals",
      "difficulty": "Hard",
      "categories": [
        "Binary Search",
        "Design",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 349",
      "name": "intersection-of-two-arrays",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 355",
      "name": "design-twitter",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Linked List",
        "Design",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 356",
      "name": "line-reflection",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 361",
      "name": "bomb-enemy",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 360",
      "name": "sort-transformed-array",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 359",
      "name": "logger-rate-limiter",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 358",
      "name": "rearrange-string-k-distance-apart",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 354",
      "name": "russian-doll-envelopes",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Dynamic Programming",
        "Sorting"
      ]
    },
    {
      "id": "Problem 357",
      "name": "count-numbers-with-unique-digits",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 362",
      "name": "design-hit-counter",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 368",
      "name": "largest-divisible-subset",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Sorting"
      ]
    },
    {
      "id": "Problem 367",
      "name": "valid-perfect-square",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 365",
      "name": "water-and-jug-problem",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Depth-First Search",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 364",
      "name": "nested-list-weight-sum-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 363",
      "name": "max-sum-of-rectangle-no-larger-than-k",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Matrix",
        "Prefix Sum",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 369",
      "name": "plus-one-linked-list",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 366",
      "name": "find-leaves-of-binary-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 370",
      "name": "range-addition",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 373",
      "name": "find-k-pairs-with-smallest-sums",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 371",
      "name": "sum-of-two-integers",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 372",
      "name": "super-pow",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Divide and Conquer"
      ]
    },
    {
      "id": "Problem 377",
      "name": "combination-sum-iv",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 378",
      "name": "kth-smallest-element-in-a-sorted-matrix",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Sorting",
        "Heap (Priority Queue)",
        "Matrix"
      ]
    },
    {
      "id": "Problem 375",
      "name": "guess-number-higher-or-lower-ii",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 376",
      "name": "wiggle-subsequence",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 374",
      "name": "guess-number-higher-or-lower",
      "difficulty": "Easy",
      "categories": [
        "Binary Search",
        "Interactive"
      ]
    },
    {
      "id": "Problem 379",
      "name": "design-phone-directory",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 380",
      "name": "insert-delete-getrandom-o(1)",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 381",
      "name": "insert-delete-getrandom-o(1)---duplicates-allowed",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 385",
      "name": "mini-parser",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack",
        "Depth-First Search"
      ]
    },
    {
      "id": "Problem 386",
      "name": "lexicographical-numbers",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Trie"
      ]
    },
    {
      "id": "Problem 382",
      "name": "linked-list-random-node",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Math",
        "Reservoir Sampling",
        "Randomized"
      ]
    },
    {
      "id": "Problem 383",
      "name": "ransom-note",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 384",
      "name": "shuffle-an-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Design",
        "Randomized"
      ]
    },
    {
      "id": "Problem 387",
      "name": "first-unique-character-in-a-string",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Queue",
        "Counting"
      ]
    },
    {
      "id": "Problem 388",
      "name": "longest-absolute-file-path",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack",
        "Depth-First Search"
      ]
    },
    {
      "id": "Problem 389",
      "name": "find-the-difference",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Bit Manipulation",
        "Sorting"
      ]
    },
    {
      "id": "Problem 391",
      "name": "perfect-rectangle",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Line Sweep"
      ]
    },
    {
      "id": "Problem 394",
      "name": "decode-string",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack",
        "Recursion"
      ]
    },
    {
      "id": "Problem 393",
      "name": "utf-8-validation",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 390",
      "name": "elimination-game",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Recursion"
      ]
    },
    {
      "id": "Problem 392",
      "name": "is-subsequence",
      "difficulty": "Easy",
      "categories": [
        "Two Pointers",
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 396",
      "name": "rotate-function",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 395",
      "name": "longest-substring-with-at-least-k-repeating-characters",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Divide and Conquer",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 398",
      "name": "random-pick-index",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Math",
        "Reservoir Sampling",
        "Randomized"
      ]
    },
    {
      "id": "Problem 399",
      "name": "evaluate-division",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 397",
      "name": "integer-replacement",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming",
        "Greedy",
        "Bit Manipulation",
        "Memoization"
      ]
    },
    {
      "id": "Problem 400",
      "name": "nth-digit",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 402",
      "name": "remove-k-digits",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack",
        "Greedy",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 401",
      "name": "binary-watch",
      "difficulty": "Easy",
      "categories": [
        "Backtracking",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 407",
      "name": "trapping-rain-water-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Breadth-First Search",
        "Heap (Priority Queue)",
        "Matrix"
      ]
    },
    {
      "id": "Problem 405",
      "name": "convert-a-number-to-hexadecimal",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 403",
      "name": "frog-jump",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 404",
      "name": "sum-of-left-leaves",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 406",
      "name": "queue-reconstruction-by-height",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Indexed Tree",
        "Segment Tree",
        "Sorting"
      ]
    },
    {
      "id": "Problem 408",
      "name": "valid-word-abbreviation",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 409",
      "name": "longest-palindrome",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 410",
      "name": "split-array-largest-sum",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Dynamic Programming",
        "Greedy",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 411",
      "name": "minimum-unique-word-abbreviation",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 413",
      "name": "arithmetic-slices",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 415",
      "name": "add-strings",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 412",
      "name": "fizz-buzz",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 416",
      "name": "partition-equal-subset-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 414",
      "name": "third-maximum-number",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sorting"
      ]
    },
    {
      "id": "Problem 417",
      "name": "pacific-atlantic-water-flow",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 418",
      "name": "sentence-screen-fitting",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 424",
      "name": "longest-repeating-character-replacement",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 423",
      "name": "reconstruct-original-digits-from-english",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 425",
      "name": "word-squares",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 420",
      "name": "strong-password-checker",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Greedy",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 422",
      "name": "valid-word-square",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 421",
      "name": "maximum-xor-of-two-numbers-in-an-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Bit Manipulation",
        "Trie"
      ]
    },
    {
      "id": "Problem 419",
      "name": "battleships-in-a-board",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 427",
      "name": "construct-quad-tree",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Divide and Conquer",
        "Tree",
        "Matrix"
      ]
    },
    {
      "id": "Problem 428",
      "name": "serialize-and-deserialize-n-ary-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 426",
      "name": "convert-binary-search-tree-to-sorted-doubly-linked-list",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 431",
      "name": "encode-n-ary-tree-to-binary-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 429",
      "name": "n-ary-tree-level-order-traversal",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 433",
      "name": "minimum-genetic-mutation",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 432",
      "name": "all-o`one-data-structure",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 430",
      "name": "flatten-a-multilevel-doubly-linked-list",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Depth-First Search",
        "Doubly-Linked List"
      ]
    },
    {
      "id": "Problem 436",
      "name": "find-right-interval",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 435",
      "name": "non-overlapping-intervals",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 434",
      "name": "number-of-segments-in-a-string",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 440",
      "name": "k-th-smallest-in-lexicographical-order",
      "difficulty": "Hard",
      "categories": [
        "Trie"
      ]
    },
    {
      "id": "Problem 439",
      "name": "ternary-expression-parser",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 437",
      "name": "path-sum-iii",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 441",
      "name": "arranging-coins",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 438",
      "name": "find-all-anagrams-in-a-string",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 444",
      "name": "sequence-reconstruction",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 443",
      "name": "string-compression",
      "difficulty": "Medium",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 442",
      "name": "find-all-duplicates-in-an-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 446",
      "name": "arithmetic-slices-ii---subsequence",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 447",
      "name": "number-of-boomerangs",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math"
      ]
    },
    {
      "id": "Problem 445",
      "name": "add-two-numbers-ii",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Math",
        "Stack"
      ]
    },
    {
      "id": "Problem 449",
      "name": "serialize-and-deserialize-bst",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Design",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 448",
      "name": "find-all-numbers-disappeared-in-an-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 450",
      "name": "delete-node-in-a-bst",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 454",
      "name": "4sum-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 452",
      "name": "minimum-number-of-arrows-to-burst-balloons",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 453",
      "name": "minimum-moves-to-equal-array-elements",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 455",
      "name": "assign-cookies",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 451",
      "name": "sort-characters-by-frequency",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Sorting",
        "Heap (Priority Queue)",
        "Bucket Sort",
        "Counting"
      ]
    },
    {
      "id": "Problem 456",
      "name": "132-pattern",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Stack",
        "Monotonic Stack",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 457",
      "name": "circular-array-loop",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 462",
      "name": "minimum-moves-to-equal-array-elements-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Sorting"
      ]
    },
    {
      "id": "Problem 458",
      "name": "poor-pigs",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 459",
      "name": "repeated-substring-pattern",
      "difficulty": "Easy",
      "categories": [
        "String",
        "String Matching"
      ]
    },
    {
      "id": "Problem 461",
      "name": "hamming-distance",
      "difficulty": "Easy",
      "categories": [
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 463",
      "name": "island-perimeter",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 460",
      "name": "lfu-cache",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "Linked List",
        "Design",
        "Doubly-Linked List"
      ]
    },
    {
      "id": "Problem 464",
      "name": "can-i-win",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Bit Manipulation",
        "Memoization",
        "Game Theory",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 465",
      "name": "optimal-account-balancing",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 471",
      "name": "encode-string-with-shortest-length",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 469",
      "name": "convex-polygon",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 467",
      "name": "unique-substrings-in-wraparound-string",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 466",
      "name": "count-the-repetitions",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 472",
      "name": "concatenated-words",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Dynamic Programming",
        "Depth-First Search",
        "Trie"
      ]
    },
    {
      "id": "Problem 473",
      "name": "matchsticks-to-square",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 470",
      "name": "implement-rand10()-using-rand7()",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 468",
      "name": "validate-ip-address",
      "difficulty": "Medium",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 479",
      "name": "largest-palindrome-product",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 474",
      "name": "ones-and-zeroes",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 480",
      "name": "sliding-window-median",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Sliding Window",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 477",
      "name": "total-hamming-distance",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 476",
      "name": "number-complement",
      "difficulty": "Easy",
      "categories": [
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 478",
      "name": "generate-random-point-in-a-circle",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Geometry",
        "Rejection Sampling",
        "Randomized"
      ]
    },
    {
      "id": "Problem 475",
      "name": "heaters",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 481",
      "name": "magical-string",
      "difficulty": "Medium",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 483",
      "name": "smallest-good-base",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 485",
      "name": "max-consecutive-ones",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 486",
      "name": "predict-the-winner",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Recursion",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 489",
      "name": "robot-room-cleaner",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 482",
      "name": "license-key-formatting",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 488",
      "name": "zuma-game",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming",
        "Stack",
        "Breadth-First Search",
        "Memoization"
      ]
    },
    {
      "id": "Problem 487",
      "name": "max-consecutive-ones-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 484",
      "name": "find-permutation",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 491",
      "name": "non-decreasing-subsequences",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Backtracking",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 490",
      "name": "the-maze",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 492",
      "name": "construct-the-rectangle",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 494",
      "name": "target-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 496",
      "name": "next-greater-element-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Stack",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 493",
      "name": "reverse-pairs",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Divide and Conquer",
        "Binary Indexed Tree",
        "Segment Tree",
        "Merge Sort",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 495",
      "name": "teemo-attacking",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 497",
      "name": "random-point-in-non-overlapping-rectangles",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Binary Search",
        "Reservoir Sampling",
        "Prefix Sum",
        "Ordered Set",
        "Randomized"
      ]
    },
    {
      "id": "Problem 498",
      "name": "diagonal-traverse",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 499",
      "name": "the-maze-iii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 500",
      "name": "keyboard-row",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 505",
      "name": "the-maze-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 507",
      "name": "perfect-number",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 504",
      "name": "base-7",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 502",
      "name": "ipo",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 503",
      "name": "next-greater-element-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Stack",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 506",
      "name": "relative-ranks",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 501",
      "name": "find-mode-in-binary-search-tree",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 508",
      "name": "most-frequent-subtree-sum",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 509",
      "name": "fibonacci-number",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Recursion",
        "Memoization"
      ]
    },
    {
      "id": "Problem 511",
      "name": "game-play-analysis-i",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 510",
      "name": "inorder-successor-in-bst-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 514",
      "name": "freedom-trail",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming",
        "Depth-First Search",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 512",
      "name": "game-play-analysis-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 515",
      "name": "find-largest-value-in-each-tree-row",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 513",
      "name": "find-bottom-left-tree-value",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 516",
      "name": "longest-palindromic-subsequence",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 517",
      "name": "super-washing-machines",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 523",
      "name": "continuous-subarray-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 518",
      "name": "coin-change-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 519",
      "name": "random-flip-matrix",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Math",
        "Reservoir Sampling",
        "Randomized"
      ]
    },
    {
      "id": "Problem 522",
      "name": "longest-uncommon-subsequence-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "String",
        "Sorting"
      ]
    },
    {
      "id": "Problem 520",
      "name": "detect-capital",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 524",
      "name": "longest-word-in-dictionary-through-deleting",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "String",
        "Sorting"
      ]
    },
    {
      "id": "Problem 521",
      "name": "longest-uncommon-subsequence-i",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 525",
      "name": "contiguous-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 526",
      "name": "beautiful-arrangement",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 527",
      "name": "word-abbreviation",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 528",
      "name": "random-pick-with-weight",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Binary Search",
        "Prefix Sum",
        "Randomized"
      ]
    },
    {
      "id": "Problem 531",
      "name": "lonely-pixel-i",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 532",
      "name": "k-diff-pairs-in-an-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 529",
      "name": "minesweeper",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 530",
      "name": "minimum-absolute-difference-in-bst",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 533",
      "name": "lonely-pixel-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 534",
      "name": "game-play-analysis-iii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 536",
      "name": "construct-binary-tree-from-string",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 535",
      "name": "encode-and-decode-tinyurl",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Design",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 540",
      "name": "single-element-in-a-sorted-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 537",
      "name": "complex-number-multiplication",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 538",
      "name": "convert-bst-to-greater-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 541",
      "name": "reverse-string-ii",
      "difficulty": "Easy",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 539",
      "name": "minimum-time-difference",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "String",
        "Sorting"
      ]
    },
    {
      "id": "Problem 542",
      "name": "01-matrix",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 543",
      "name": "diameter-of-binary-tree",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 544",
      "name": "output-contest-matches",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 545",
      "name": "boundary-of-binary-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 546",
      "name": "remove-boxes",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Memoization"
      ]
    },
    {
      "id": "Problem 549",
      "name": "binary-tree-longest-consecutive-sequence-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 548",
      "name": "split-array-with-equal-sum",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 547",
      "name": "number-of-provinces",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 550",
      "name": "game-play-analysis-iv",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 551",
      "name": "student-attendance-record-i",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 552",
      "name": "student-attendance-record-ii",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 553",
      "name": "optimal-division",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 554",
      "name": "brick-wall",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 555",
      "name": "split-concatenated-strings",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 557",
      "name": "reverse-words-in-a-string-iii",
      "difficulty": "Easy",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 556",
      "name": "next-greater-element-iii",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 558",
      "name": "logical-or-of-two-binary-grids-represented-as-quad-trees",
      "difficulty": "Medium",
      "categories": [
        "Divide and Conquer",
        "Tree"
      ]
    },
    {
      "id": "Problem 559",
      "name": "maximum-depth-of-n-ary-tree",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 560",
      "name": "subarray-sum-equals-k",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 561",
      "name": "array-partition",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Greedy",
        "Sorting",
        "Counting Sort"
      ]
    },
    {
      "id": "Problem 563",
      "name": "binary-tree-tilt",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 562",
      "name": "longest-line-of-consecutive-one-in-matrix",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 565",
      "name": "array-nesting",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search"
      ]
    },
    {
      "id": "Problem 566",
      "name": "reshape-the-matrix",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 568",
      "name": "maximum-vacation-days",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 564",
      "name": "find-the-closest-palindrome",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 567",
      "name": "permutation-in-string",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Two Pointers",
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 571",
      "name": "find-median-given-frequency-of-numbers",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 572",
      "name": "subtree-of-another-tree",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "String Matching",
        "Binary Tree",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 570",
      "name": "managers-with-at-least-5-direct-reports",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 574",
      "name": "winning-candidate",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 576",
      "name": "out-of-boundary-paths",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 573",
      "name": "squirrel-simulation",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 575",
      "name": "distribute-candies",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 569",
      "name": "median-employee-salary",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 579",
      "name": "find-cumulative-salary-of-an-employee",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 577",
      "name": "employee-bonus",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 578",
      "name": "get-highest-answer-rate-question",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 581",
      "name": "shortest-unsorted-continuous-subarray",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Stack",
        "Greedy",
        "Sorting",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 580",
      "name": "count-student-number-in-departments",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 582",
      "name": "kill-process",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 583",
      "name": "delete-operation-for-two-strings",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 584",
      "name": "find-customer-referee",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 588",
      "name": "design-in-memory-file-system",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 591",
      "name": "tag-validator",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Stack"
      ]
    },
    {
      "id": "Problem 592",
      "name": "fraction-addition-and-subtraction",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 590",
      "name": "n-ary-tree-postorder-traversal",
      "difficulty": "Easy",
      "categories": [
        "Stack",
        "Tree",
        "Depth-First Search"
      ]
    },
    {
      "id": "Problem 587",
      "name": "erect-the-fence",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Geometry"
      ]
    },
    {
      "id": "Problem 586",
      "name": "customer-placing-the-largest-number-of-orders",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 585",
      "name": "investments-in-2016",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 589",
      "name": "n-ary-tree-preorder-traversal",
      "difficulty": "Easy",
      "categories": [
        "Stack",
        "Tree",
        "Depth-First Search"
      ]
    },
    {
      "id": "Problem 593",
      "name": "valid-square",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Geometry"
      ]
    },
    {
      "id": "Problem 596",
      "name": "classes-more-than-5-students",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 595",
      "name": "big-countries",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 594",
      "name": "longest-harmonious-subsequence",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Sliding Window",
        "Sorting",
        "Counting"
      ]
    },
    {
      "id": "Problem 600",
      "name": "non-negative-integers-without-consecutive-ones",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 598",
      "name": "range-addition-ii",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 599",
      "name": "minimum-index-sum-of-two-lists",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 597",
      "name": "friend-requests-i:-overall-acceptance-rate",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 604",
      "name": "design-compressed-string-iterator",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 601",
      "name": "human-traffic-of-stadium",
      "difficulty": "Hard",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 607",
      "name": "sales-person",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 603",
      "name": "consecutive-available-seats",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 602",
      "name": "friend-requests-ii:-who-has-the-most-friends",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 608",
      "name": "tree-node",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 605",
      "name": "can-place-flowers",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 606",
      "name": "construct-string-from-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 610",
      "name": "triangle-judgement",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 612",
      "name": "shortest-distance-in-a-plane",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 609",
      "name": "find-duplicate-file-in-system",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 611",
      "name": "valid-triangle-number",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 613",
      "name": "shortest-distance-in-a-line",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 614",
      "name": "second-degree-follower",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 616",
      "name": "add-bold-tag-in-string",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 615",
      "name": "average-salary:-departments-vs-company",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 620",
      "name": "not-boring-movies",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 619",
      "name": "biggest-single-number",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 617",
      "name": "merge-two-binary-trees",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 618",
      "name": "students-report-by-geography",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 621",
      "name": "task-scheduler",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)",
        "Counting"
      ]
    },
    {
      "id": "Problem 624",
      "name": "maximum-distance-in-arrays",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 622",
      "name": "design-circular-queue",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Linked List",
        "Design",
        "Queue"
      ]
    },
    {
      "id": "Problem 623",
      "name": "add-one-row-to-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 627",
      "name": "swap-salary",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 626",
      "name": "exchange-seats",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 628",
      "name": "maximum-product-of-three-numbers",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math",
        "Sorting"
      ]
    },
    {
      "id": "Problem 629",
      "name": "k-inverse-pairs-array",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 630",
      "name": "course-schedule-iii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 625",
      "name": "minimum-factorization",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 631",
      "name": "design-excel-sum-formula",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 632",
      "name": "smallest-range-covering-elements-from-k-lists",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Sliding Window",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 634",
      "name": "find-the-derangement-of-an-array",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 635",
      "name": "design-log-storage-system",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 633",
      "name": "sum-of-square-numbers",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Two Pointers",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 636",
      "name": "exclusive-time-of-functions",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Stack"
      ]
    },
    {
      "id": "Problem 638",
      "name": "shopping-offers",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Memoization",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 637",
      "name": "average-of-levels-in-binary-tree",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 640",
      "name": "solve-the-equation",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 639",
      "name": "decode-ways-ii",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 644",
      "name": "maximum-average-subarray-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 641",
      "name": "design-circular-deque",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Linked List",
        "Design",
        "Queue"
      ]
    },
    {
      "id": "Problem 643",
      "name": "maximum-average-subarray-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 645",
      "name": "set-mismatch",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Bit Manipulation",
        "Sorting"
      ]
    },
    {
      "id": "Problem 646",
      "name": "maximum-length-of-pair-chain",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 642",
      "name": "design-search-autocomplete-system",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 647",
      "name": "palindromic-substrings",
      "difficulty": "Medium",
      "categories": [
        "Two Pointers",
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 648",
      "name": "replace-words",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Trie"
      ]
    },
    {
      "id": "Problem 649",
      "name": "dota2-senate",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Greedy",
        "Queue"
      ]
    },
    {
      "id": "Problem 651",
      "name": "4-keys-keyboard",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 650",
      "name": "2-keys-keyboard",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 652",
      "name": "find-duplicate-subtrees",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 653",
      "name": "two-sum-iv---input-is-a-bst",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 654",
      "name": "maximum-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Divide and Conquer",
        "Stack",
        "Tree",
        "Monotonic Stack",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 656",
      "name": "coin-path",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 655",
      "name": "print-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 657",
      "name": "robot-return-to-origin",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 658",
      "name": "find-k-closest-elements",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Sliding Window",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 659",
      "name": "split-array-into-consecutive-subsequences",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 660",
      "name": "remove-9",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 661",
      "name": "image-smoother",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix"
      ]
    },
    {
      "id": "Problem 662",
      "name": "maximum-width-of-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 663",
      "name": "equal-tree-partition",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 664",
      "name": "strange-printer",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 665",
      "name": "non-decreasing-array",
      "difficulty": "Medium",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 667",
      "name": "beautiful-arrangement-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 668",
      "name": "kth-smallest-number-in-multiplication-table",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 669",
      "name": "trim-a-binary-search-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 670",
      "name": "maximum-swap",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Greedy"
      ]
    },
    {
      "id": "Problem 666",
      "name": "path-sum-iv",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 671",
      "name": "second-minimum-node-in-a-binary-tree",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 672",
      "name": "bulb-switcher-ii",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Bit Manipulation",
        "Depth-First Search",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 677",
      "name": "map-sum-pairs",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Design",
        "Trie"
      ]
    },
    {
      "id": "Problem 673",
      "name": "number-of-longest-increasing-subsequence",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Binary Indexed Tree",
        "Segment Tree"
      ]
    },
    {
      "id": "Problem 676",
      "name": "implement-magic-dictionary",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Depth-First Search",
        "Design",
        "Trie"
      ]
    },
    {
      "id": "Problem 675",
      "name": "cut-off-trees-for-golf-event",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Breadth-First Search",
        "Heap (Priority Queue)",
        "Matrix"
      ]
    },
    {
      "id": "Problem 678",
      "name": "valid-parenthesis-string",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming",
        "Stack",
        "Greedy"
      ]
    },
    {
      "id": "Problem 679",
      "name": "24-game",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 680",
      "name": "valid-palindrome-ii",
      "difficulty": "Easy",
      "categories": [
        "Two Pointers",
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 674",
      "name": "longest-continuous-increasing-subsequence",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 681",
      "name": "next-closest-time",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 684",
      "name": "redundant-connection",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 683",
      "name": "k-empty-slots",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 682",
      "name": "baseball-game",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Stack",
        "Simulation"
      ]
    },
    {
      "id": "Problem 685",
      "name": "redundant-connection-ii",
      "difficulty": "Hard",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 686",
      "name": "repeated-string-match",
      "difficulty": "Medium",
      "categories": [
        "String",
        "String Matching"
      ]
    },
    {
      "id": "Problem 687",
      "name": "longest-univalue-path",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 688",
      "name": "knight-probability-in-chessboard",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 689",
      "name": "maximum-sum-of-3-non-overlapping-subarrays",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 693",
      "name": "binary-number-with-alternating-bits",
      "difficulty": "Easy",
      "categories": [
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 691",
      "name": "stickers-to-spell-word",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 690",
      "name": "employee-importance",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 692",
      "name": "top-k-frequent-words",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Trie",
        "Sorting",
        "Heap (Priority Queue)",
        "Bucket Sort",
        "Counting"
      ]
    },
    {
      "id": "Problem 696",
      "name": "count-binary-substrings",
      "difficulty": "Easy",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 694",
      "name": "number-of-distinct-islands",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 699",
      "name": "falling-squares",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Segment Tree",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 697",
      "name": "degree-of-an-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 695",
      "name": "max-area-of-island",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    },
    {
      "id": "Problem 698",
      "name": "partition-to-k-equal-sum-subsets",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Memoization",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 700",
      "name": "search-in-a-binary-search-tree",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 702",
      "name": "search-in-a-sorted-array-of-unknown-size",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 701",
      "name": "insert-into-a-binary-search-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 703",
      "name": "kth-largest-element-in-a-stream",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Design",
        "Binary Search Tree",
        "Heap (Priority Queue)",
        "Binary Tree",
        "Data Stream"
      ]
    },
    {
      "id": "Problem 705",
      "name": "design-hashset",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Linked List",
        "Design",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 706",
      "name": "design-hashmap",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Linked List",
        "Design",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 704",
      "name": "binary-search",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 707",
      "name": "design-linked-list",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Design"
      ]
    },
    {
      "id": "Problem 708",
      "name": "insert-into-a-sorted-circular-linked-list",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 709",
      "name": "to-lower-case",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 710",
      "name": "random-pick-with-blacklist",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Binary Search",
        "Sorting",
        "Randomized"
      ]
    },
    {
      "id": "Problem 711",
      "name": "number-of-distinct-islands-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 712",
      "name": "minimum-ascii-delete-sum-for-two-strings",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 714",
      "name": "best-time-to-buy-and-sell-stock-with-transaction-fee",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 713",
      "name": "subarray-product-less-than-k",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Sliding Window",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 717",
      "name": "1-bit-and-2-bit-characters",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 715",
      "name": "range-module",
      "difficulty": "Hard",
      "categories": [
        "Design",
        "Segment Tree",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 716",
      "name": "max-stack",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 718",
      "name": "maximum-length-of-repeated-subarray",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Dynamic Programming",
        "Sliding Window",
        "Rolling Hash",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 722",
      "name": "remove-comments",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String"
      ]
    },
    {
      "id": "Problem 720",
      "name": "longest-word-in-dictionary",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Trie",
        "Sorting"
      ]
    },
    {
      "id": "Problem 719",
      "name": "find-k-th-smallest-pair-distance",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 721",
      "name": "accounts-merge",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Sorting"
      ]
    },
    {
      "id": "Problem 723",
      "name": "candy-crush",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 724",
      "name": "find-pivot-index",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 726",
      "name": "number-of-atoms",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "String",
        "Stack",
        "Sorting"
      ]
    },
    {
      "id": "Problem 725",
      "name": "split-linked-list-in-parts",
      "difficulty": "Medium",
      "categories": [
        "Linked List"
      ]
    },
    {
      "id": "Problem 727",
      "name": "minimum-window-subsequence",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 728",
      "name": "self-dividing-numbers",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 729",
      "name": "my-calendar-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Design",
        "Segment Tree",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 730",
      "name": "count-different-palindromic-subsequences",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 731",
      "name": "my-calendar-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Design",
        "Segment Tree",
        "Prefix Sum",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 733",
      "name": "flood-fill",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 735",
      "name": "asteroid-collision",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Stack",
        "Simulation"
      ]
    },
    {
      "id": "Problem 734",
      "name": "sentence-similarity",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 737",
      "name": "sentence-similarity-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 736",
      "name": "parse-lisp-expression",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "String",
        "Stack",
        "Recursion"
      ]
    },
    {
      "id": "Problem 739",
      "name": "daily-temperatures",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Stack",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 732",
      "name": "my-calendar-iii",
      "difficulty": "Hard",
      "categories": [
        "Binary Search",
        "Design",
        "Segment Tree",
        "Prefix Sum",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 742",
      "name": "closest-leaf-in-a-binary-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 738",
      "name": "monotone-increasing-digits",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Greedy"
      ]
    },
    {
      "id": "Problem 741",
      "name": "cherry-pickup",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 740",
      "name": "delete-and-earn",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 744",
      "name": "find-smallest-letter-greater-than-target",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 743",
      "name": "network-delay-time",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Heap (Priority Queue)",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 746",
      "name": "min-cost-climbing-stairs",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 745",
      "name": "prefix-and-suffix-search",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Design",
        "Trie"
      ]
    },
    {
      "id": "Problem 751",
      "name": "ip-to-cidr",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 750",
      "name": "number-of-corner-rectangles",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 747",
      "name": "largest-number-at-least-twice-of-others",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sorting"
      ]
    },
    {
      "id": "Problem 752",
      "name": "open-the-lock",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 749",
      "name": "contain-virus",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 748",
      "name": "shortest-completing-word",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 754",
      "name": "reach-a-number",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 755",
      "name": "pour-water",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 760",
      "name": "find-anagram-mappings",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 757",
      "name": "set-intersection-size-at-least-two",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 756",
      "name": "pyramid-transition-matrix",
      "difficulty": "Medium",
      "categories": [
        "Bit Manipulation",
        "Depth-First Search",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 758",
      "name": "bold-words-in-string",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 753",
      "name": "cracking-the-safe",
      "difficulty": "Hard",
      "categories": [
        "Depth-First Search",
        "Graph",
        "Eulerian Circuit"
      ]
    },
    {
      "id": "Problem 759",
      "name": "employee-free-time",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 761",
      "name": "special-binary-string",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Recursion"
      ]
    },
    {
      "id": "Problem 766",
      "name": "toeplitz-matrix",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix"
      ]
    },
    {
      "id": "Problem 764",
      "name": "largest-plus-sign",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 763",
      "name": "partition-labels",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Two Pointers",
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 765",
      "name": "couples-holding-hands",
      "difficulty": "Hard",
      "categories": [
        "Greedy",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 762",
      "name": "prime-number-of-set-bits-in-binary-representation",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 767",
      "name": "reorganize-string",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)",
        "Counting"
      ]
    },
    {
      "id": "Problem 768",
      "name": "max-chunks-to-make-sorted-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Stack",
        "Greedy",
        "Sorting",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 772",
      "name": "basic-calculator-iii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 774",
      "name": "minimize-max-distance-to-gas-station",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 771",
      "name": "jewels-and-stones",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 776",
      "name": "split-bst",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 775",
      "name": "global-and-local-inversions",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 770",
      "name": "basic-calculator-iv",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "Math",
        "String",
        "Stack",
        "Recursion"
      ]
    },
    {
      "id": "Problem 773",
      "name": "sliding-puzzle",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Backtracking",
        "Breadth-First Search",
        "Memoization",
        "Matrix"
      ]
    },
    {
      "id": "Problem 769",
      "name": "max-chunks-to-make-sorted",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Stack",
        "Greedy",
        "Sorting",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 780",
      "name": "reaching-points",
      "difficulty": "Hard",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 784",
      "name": "letter-case-permutation",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Backtracking",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 781",
      "name": "rabbits-in-forest",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Greedy"
      ]
    },
    {
      "id": "Problem 782",
      "name": "transform-to-chessboard",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Bit Manipulation",
        "Matrix"
      ]
    },
    {
      "id": "Problem 779",
      "name": "k-th-symbol-in-grammar",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Bit Manipulation",
        "Recursion"
      ]
    },
    {
      "id": "Problem 778",
      "name": "swim-in-rising-water",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Heap (Priority Queue)",
        "Matrix"
      ]
    },
    {
      "id": "Problem 783",
      "name": "minimum-distance-between-bst-nodes",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 777",
      "name": "swap-adjacent-in-lr-string",
      "difficulty": "Medium",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 786",
      "name": "k-th-smallest-prime-fraction",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 790",
      "name": "domino-and-tromino-tiling",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 792",
      "name": "number-of-matching-subsequences",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Binary Search",
        "Dynamic Programming",
        "Trie",
        "Sorting"
      ]
    },
    {
      "id": "Problem 791",
      "name": "custom-sort-string",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Sorting"
      ]
    },
    {
      "id": "Problem 785",
      "name": "is-graph-bipartite?",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 788",
      "name": "rotated-digits",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 795",
      "name": "number-of-subarrays-with-bounded-maximum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 793",
      "name": "preimage-size-of-factorial-zeroes-function",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 794",
      "name": "valid-tic-tac-toe-state",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix"
      ]
    },
    {
      "id": "Problem 787",
      "name": "cheapest-flights-within-k-stops",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming",
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Heap (Priority Queue)",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 798",
      "name": "smallest-rotation-with-highest-score",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 797",
      "name": "all-paths-from-source-to-target",
      "difficulty": "Medium",
      "categories": [
        "Backtracking",
        "Depth-First Search",
        "Breadth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 796",
      "name": "rotate-string",
      "difficulty": "Easy",
      "categories": [
        "String",
        "String Matching"
      ]
    },
    {
      "id": "Problem 801",
      "name": "minimum-swaps-to-make-sequences-increasing",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 799",
      "name": "champagne-tower",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 802",
      "name": "find-eventual-safe-states",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Topological Sort"
      ]
    },
    {
      "id": "Problem 800",
      "name": "similar-rgb-color",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 804",
      "name": "unique-morse-code-words",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 803",
      "name": "bricks-falling-when-hit",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Union Find",
        "Matrix"
      ]
    },
    {
      "id": "Problem 805",
      "name": "split-array-with-same-average",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 789",
      "name": "escape-the-ghosts",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 809",
      "name": "expressive-words",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 806",
      "name": "number-of-lines-to-write-string",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String"
      ]
    },
    {
      "id": "Problem 808",
      "name": "soup-servings",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Probability and Statistics"
      ]
    },
    {
      "id": "Problem 807",
      "name": "max-increase-to-keep-city-skyline",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Matrix"
      ]
    },
    {
      "id": "Problem 811",
      "name": "subdomain-visit-count",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 810",
      "name": "chalkboard-xor-game",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Bit Manipulation",
        "Brainteaser",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 812",
      "name": "largest-triangle-area",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math",
        "Geometry"
      ]
    },
    {
      "id": "Problem 815",
      "name": "bus-routes",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 817",
      "name": "linked-list-components",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Linked List"
      ]
    },
    {
      "id": "Problem 813",
      "name": "largest-sum-of-averages",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 814",
      "name": "binary-tree-pruning",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 816",
      "name": "ambiguous-coordinates",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Backtracking",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 819",
      "name": "most-common-word",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 818",
      "name": "race-car",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 820",
      "name": "short-encoding-of-words",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Trie"
      ]
    },
    {
      "id": "Problem 822",
      "name": "card-flipping-game",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 824",
      "name": "goat-latin",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 821",
      "name": "shortest-distance-to-a-character",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 825",
      "name": "friends-of-appropriate-ages",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 823",
      "name": "binary-trees-with-factors",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Dynamic Programming",
        "Sorting"
      ]
    },
    {
      "id": "Problem 826",
      "name": "most-profit-assigning-work",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 827",
      "name": "making-a-large-island",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    },
    {
      "id": "Problem 828",
      "name": "count-unique-characters-of-all-substrings-of-a-given-string",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 829",
      "name": "consecutive-numbers-sum",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 831",
      "name": "masking-personal-information",
      "difficulty": "Medium",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 833",
      "name": "find-and-replace-in-string",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Sorting"
      ]
    },
    {
      "id": "Problem 832",
      "name": "flipping-an-image",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers",
        "Bit Manipulation",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 830",
      "name": "positions-of-large-groups",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 834",
      "name": "sum-of-distances-in-tree",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Tree",
        "Depth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 835",
      "name": "image-overlap",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix"
      ]
    },
    {
      "id": "Problem 840",
      "name": "magic-squares-in-grid",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Matrix"
      ]
    },
    {
      "id": "Problem 836",
      "name": "rectangle-overlap",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Geometry"
      ]
    },
    {
      "id": "Problem 841",
      "name": "keys-and-rooms",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 843",
      "name": "guess-the-word",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "String",
        "Interactive",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 842",
      "name": "split-array-into-fibonacci-sequence",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 839",
      "name": "similar-string-groups",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find"
      ]
    },
    {
      "id": "Problem 837",
      "name": "new-21-game",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Sliding Window",
        "Probability and Statistics"
      ]
    },
    {
      "id": "Problem 838",
      "name": "push-dominoes",
      "difficulty": "Medium",
      "categories": [
        "Two Pointers",
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 845",
      "name": "longest-mountain-in-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Dynamic Programming",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 849",
      "name": "maximize-distance-to-closest-person",
      "difficulty": "Medium",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 848",
      "name": "shifting-letters",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 850",
      "name": "rectangle-area-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Segment Tree",
        "Line Sweep",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 847",
      "name": "shortest-path-visiting-all-nodes",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Bit Manipulation",
        "Breadth-First Search",
        "Graph",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 851",
      "name": "loud-and-rich",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Graph",
        "Topological Sort"
      ]
    },
    {
      "id": "Problem 844",
      "name": "backspace-string-compare",
      "difficulty": "Easy",
      "categories": [
        "Two Pointers",
        "String",
        "Stack",
        "Simulation"
      ]
    },
    {
      "id": "Problem 846",
      "name": "hand-of-straights",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 852",
      "name": "peak-index-in-a-mountain-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 854",
      "name": "k-similar-strings",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 856",
      "name": "score-of-parentheses",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack"
      ]
    },
    {
      "id": "Problem 858",
      "name": "mirror-reflection",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Geometry",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 857",
      "name": "minimum-cost-to-hire-k-workers",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 855",
      "name": "exam-room",
      "difficulty": "Medium",
      "categories": [
        "Design",
        "Heap (Priority Queue)",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 853",
      "name": "car-fleet",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Stack",
        "Sorting",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 859",
      "name": "buddy-strings",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 860",
      "name": "lemonade-change",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 866",
      "name": "prime-palindrome",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 867",
      "name": "transpose-matrix",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 864",
      "name": "shortest-path-to-get-all-keys",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Bit Manipulation",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 863",
      "name": "all-nodes-distance-k-in-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 862",
      "name": "shortest-subarray-with-sum-at-least-k",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Queue",
        "Sliding Window",
        "Heap (Priority Queue)",
        "Prefix Sum",
        "Monotonic Queue"
      ]
    },
    {
      "id": "Problem 861",
      "name": "score-after-flipping-matrix",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Bit Manipulation",
        "Matrix"
      ]
    },
    {
      "id": "Problem 868",
      "name": "binary-gap",
      "difficulty": "Easy",
      "categories": [
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 869",
      "name": "reordered-power-of-2",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Math",
        "Sorting",
        "Counting",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 870",
      "name": "advantage-shuffle",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 871",
      "name": "minimum-number-of-refueling-stops",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 872",
      "name": "leaf-similar-trees",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 873",
      "name": "length-of-longest-fibonacci-subsequence",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 874",
      "name": "walking-robot-simulation",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Simulation"
      ]
    },
    {
      "id": "Problem 875",
      "name": "koko-eating-bananas",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 865",
      "name": "smallest-subtree-with-all-the-deepest-nodes",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 878",
      "name": "nth-magical-number",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 876",
      "name": "middle-of-the-linked-list",
      "difficulty": "Easy",
      "categories": [
        "Linked List",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 877",
      "name": "stone-game",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 879",
      "name": "profitable-schemes",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 881",
      "name": "boats-to-save-people",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 882",
      "name": "reachable-nodes-in-subdivided-graph",
      "difficulty": "Hard",
      "categories": [
        "Graph",
        "Heap (Priority Queue)",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 880",
      "name": "decoded-string-at-index",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack"
      ]
    },
    {
      "id": "Problem 883",
      "name": "projection-area-of-3d-shapes",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math",
        "Geometry",
        "Matrix"
      ]
    },
    {
      "id": "Problem 885",
      "name": "spiral-matrix-iii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 884",
      "name": "uncommon-words-from-two-sentences",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 886",
      "name": "possible-bipartition",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 887",
      "name": "super-egg-drop",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Binary Search",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 888",
      "name": "fair-candy-swap",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 891",
      "name": "sum-of-subsequence-widths",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Sorting"
      ]
    },
    {
      "id": "Problem 890",
      "name": "find-and-replace-pattern",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 889",
      "name": "construct-binary-tree-from-preorder-and-postorder-traversal",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Divide and Conquer",
        "Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 894",
      "name": "all-possible-full-binary-trees",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming",
        "Tree",
        "Recursion",
        "Memoization",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 896",
      "name": "monotonic-array",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 893",
      "name": "groups-of-special-equivalent-strings",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Sorting"
      ]
    },
    {
      "id": "Problem 895",
      "name": "maximum-frequency-stack",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "Stack",
        "Design",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 892",
      "name": "surface-area-of-3d-shapes",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math",
        "Geometry",
        "Matrix"
      ]
    },
    {
      "id": "Problem 897",
      "name": "increasing-order-search-tree",
      "difficulty": "Easy",
      "categories": [
        "Stack",
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 898",
      "name": "bitwise-ors-of-subarrays",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 899",
      "name": "orderly-queue",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "String",
        "Sorting"
      ]
    },
    {
      "id": "Problem 900",
      "name": "rle-iterator",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Design",
        "Counting",
        "Iterator"
      ]
    },
    {
      "id": "Problem 904",
      "name": "fruit-into-baskets",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 901",
      "name": "online-stock-span",
      "difficulty": "Medium",
      "categories": [
        "Stack",
        "Design",
        "Monotonic Stack",
        "Data Stream"
      ]
    },
    {
      "id": "Problem 902",
      "name": "numbers-at-most-n-given-digit-set",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "String",
        "Binary Search",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 903",
      "name": "valid-permutations-for-di-sequence",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 905",
      "name": "sort-array-by-parity",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers",
        "Sorting"
      ]
    },
    {
      "id": "Problem 906",
      "name": "super-palindromes",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 907",
      "name": "sum-of-subarray-minimums",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Stack",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 910",
      "name": "smallest-range-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 911",
      "name": "online-election",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Design"
      ]
    },
    {
      "id": "Problem 908",
      "name": "smallest-range-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 912",
      "name": "sort-an-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Divide and Conquer",
        "Sorting",
        "Heap (Priority Queue)",
        "Merge Sort",
        "Bucket Sort",
        "Radix Sort",
        "Counting Sort"
      ]
    },
    {
      "id": "Problem 909",
      "name": "snakes-and-ladders",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 913",
      "name": "cat-and-mouse",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Graph",
        "Topological Sort",
        "Memoization",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 914",
      "name": "x-of-a-kind-in-a-deck-of-cards",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Counting",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 915",
      "name": "partition-array-into-disjoint-intervals",
      "difficulty": "Medium",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 917",
      "name": "reverse-only-letters",
      "difficulty": "Easy",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 916",
      "name": "word-subsets",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 919",
      "name": "complete-binary-tree-inserter",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Breadth-First Search",
        "Design",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 920",
      "name": "number-of-music-playlists",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 921",
      "name": "minimum-add-to-make-parentheses-valid",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack",
        "Greedy"
      ]
    },
    {
      "id": "Problem 922",
      "name": "sort-array-by-parity-ii",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers",
        "Sorting"
      ]
    },
    {
      "id": "Problem 918",
      "name": "maximum-sum-circular-subarray",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Divide and Conquer",
        "Dynamic Programming",
        "Queue",
        "Monotonic Queue"
      ]
    },
    {
      "id": "Problem 927",
      "name": "three-equal-parts",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 926",
      "name": "flip-string-to-monotone-increasing",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 925",
      "name": "long-pressed-name",
      "difficulty": "Easy",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 924",
      "name": "minimize-malware-spread",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 923",
      "name": "3sum-with-multiplicity",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "Sorting",
        "Counting"
      ]
    },
    {
      "id": "Problem 928",
      "name": "minimize-malware-spread-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 929",
      "name": "unique-email-addresses",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 930",
      "name": "binary-subarrays-with-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sliding Window",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 931",
      "name": "minimum-falling-path-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 933",
      "name": "number-of-recent-calls",
      "difficulty": "Easy",
      "categories": [
        "Design",
        "Queue",
        "Data Stream"
      ]
    },
    {
      "id": "Problem 934",
      "name": "shortest-bridge",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 932",
      "name": "beautiful-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Divide and Conquer"
      ]
    },
    {
      "id": "Problem 935",
      "name": "knight-dialer",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 936",
      "name": "stamping-the-sequence",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Stack",
        "Greedy",
        "Queue"
      ]
    },
    {
      "id": "Problem 937",
      "name": "reorder-data-in-log-files",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Sorting"
      ]
    },
    {
      "id": "Problem 938",
      "name": "range-sum-of-bst",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 942",
      "name": "di-string-match",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers",
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 939",
      "name": "minimum-area-rectangle",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Geometry",
        "Sorting"
      ]
    },
    {
      "id": "Problem 940",
      "name": "distinct-subsequences-ii",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 943",
      "name": "find-the-shortest-superstring",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Dynamic Programming",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 941",
      "name": "valid-mountain-array",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 945",
      "name": "minimum-increment-to-make-array-unique",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting",
        "Counting"
      ]
    },
    {
      "id": "Problem 946",
      "name": "validate-stack-sequences",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Stack",
        "Simulation"
      ]
    },
    {
      "id": "Problem 944",
      "name": "delete-columns-to-make-sorted",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String"
      ]
    },
    {
      "id": "Problem 951",
      "name": "flip-equivalent-binary-trees",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 947",
      "name": "most-stones-removed-with-same-row-or-column",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Depth-First Search",
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 948",
      "name": "bag-of-tokens",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 950",
      "name": "reveal-cards-in-increasing-order",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Queue",
        "Sorting",
        "Simulation"
      ]
    },
    {
      "id": "Problem 949",
      "name": "largest-time-for-given-digits",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 953",
      "name": "verifying-an-alien-dictionary",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 952",
      "name": "largest-component-size-by-common-factor",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Union Find",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 954",
      "name": "array-of-doubled-pairs",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 956",
      "name": "tallest-billboard",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 962",
      "name": "maximum-width-ramp",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Stack",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 957",
      "name": "prison-cells-after-n-days",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 961",
      "name": "n-repeated-element-in-size-2n-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 960",
      "name": "delete-columns-to-make-sorted-iii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 958",
      "name": "check-completeness-of-a-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 959",
      "name": "regions-cut-by-slashes",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    },
    {
      "id": "Problem 955",
      "name": "delete-columns-to-make-sorted-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 964",
      "name": "least-operators-to-express-number",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Memoization"
      ]
    },
    {
      "id": "Problem 966",
      "name": "vowel-spellchecker",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 968",
      "name": "binary-tree-cameras",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 965",
      "name": "univalued-binary-tree",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 970",
      "name": "powerful-integers",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Math",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 969",
      "name": "pancake-sorting",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 967",
      "name": "numbers-with-same-consecutive-differences",
      "difficulty": "Medium",
      "categories": [
        "Backtracking",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 963",
      "name": "minimum-area-rectangle-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Geometry"
      ]
    },
    {
      "id": "Problem 972",
      "name": "equal-rational-numbers",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 971",
      "name": "flip-binary-tree-to-match-preorder-traversal",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 974",
      "name": "subarray-sums-divisible-by-k",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 975",
      "name": "odd-even-jump",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Stack",
        "Monotonic Stack",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 973",
      "name": "k-closest-points-to-origin",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Divide and Conquer",
        "Geometry",
        "Sorting",
        "Heap (Priority Queue)",
        "Quickselect"
      ]
    },
    {
      "id": "Problem 978",
      "name": "longest-turbulent-subarray",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 977",
      "name": "squares-of-a-sorted-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers",
        "Sorting"
      ]
    },
    {
      "id": "Problem 976",
      "name": "largest-perimeter-triangle",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 980",
      "name": "unique-paths-iii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Backtracking",
        "Bit Manipulation",
        "Matrix"
      ]
    },
    {
      "id": "Problem 983",
      "name": "minimum-cost-for-tickets",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 982",
      "name": "triples-with-bitwise-and-equal-to-zero",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 981",
      "name": "time-based-key-value-store",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Binary Search",
        "Design"
      ]
    },
    {
      "id": "Problem 979",
      "name": "distribute-coins-in-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 985",
      "name": "sum-of-even-numbers-after-queries",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 984",
      "name": "string-without-aaa-or-bbb",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 991",
      "name": "broken-calculator",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Greedy"
      ]
    },
    {
      "id": "Problem 986",
      "name": "interval-list-intersections",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 988",
      "name": "smallest-string-starting-from-leaf",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Backtracking",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 987",
      "name": "vertical-order-traversal-of-a-binary-tree",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Sorting",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 989",
      "name": "add-to-array-form-of-integer",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 993",
      "name": "cousins-in-binary-tree",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 990",
      "name": "satisfiability-of-equality-equations",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 992",
      "name": "subarrays-with-k-different-integers",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Sliding Window",
        "Counting"
      ]
    },
    {
      "id": "Problem 997",
      "name": "find-the-town-judge",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Graph"
      ]
    },
    {
      "id": "Problem 996",
      "name": "number-of-squareful-arrays",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 994",
      "name": "rotting-oranges",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 998",
      "name": "maximum-binary-tree-ii",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 995",
      "name": "minimum-number-of-k-consecutive-bit-flips",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Bit Manipulation",
        "Queue",
        "Sliding Window",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 999",
      "name": "available-captures-for-rook",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1001",
      "name": "grid-illumination",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 1002",
      "name": "find-common-characters",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 1000",
      "name": "minimum-cost-to-merge-stones",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1003",
      "name": "check-if-word-is-valid-after-substitutions",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack"
      ]
    },
    {
      "id": "Problem 1006",
      "name": "clumsy-factorial",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Stack",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1004",
      "name": "max-consecutive-ones-iii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Sliding Window",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1005",
      "name": "maximize-sum-of-array-after-k-negations",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1010",
      "name": "pairs-of-songs-with-total-durations-divisible-by-60",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Counting"
      ]
    },
    {
      "id": "Problem 1008",
      "name": "construct-binary-search-tree-from-preorder-traversal",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Stack",
        "Tree",
        "Binary Search Tree",
        "Monotonic Stack",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1007",
      "name": "minimum-domino-rotations-for-equal-row",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1009",
      "name": "complement-of-base-10-integer",
      "difficulty": "Easy",
      "categories": [
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 1011",
      "name": "capacity-to-ship-packages-within-d-days",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 1013",
      "name": "partition-array-into-three-parts-with-equal-sum",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1014",
      "name": "best-sightseeing-pair",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1012",
      "name": "numbers-with-repeated-digits",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1015",
      "name": "smallest-integer-divisible-by-k",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Math"
      ]
    },
    {
      "id": "Problem 1016",
      "name": "binary-string-with-substrings-representing-1-to-n",
      "difficulty": "Medium",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 1018",
      "name": "binary-prefix-divisible-by-5",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 1017",
      "name": "convert-to-base--2",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1019",
      "name": "next-greater-node-in-linked-list",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Linked List",
        "Stack",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 1021",
      "name": "remove-outermost-parentheses",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Stack"
      ]
    },
    {
      "id": "Problem 1022",
      "name": "sum-of-root-to-leaf-binary-numbers",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1020",
      "name": "number-of-enclaves",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1024",
      "name": "video-stitching",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1023",
      "name": "camelcase-matching",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "String",
        "Trie",
        "String Matching"
      ]
    },
    {
      "id": "Problem 1028",
      "name": "recover-a-tree-from-preorder-traversal",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1026",
      "name": "maximum-difference-between-node-and-ancestor",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1029",
      "name": "two-city-scheduling",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1027",
      "name": "longest-arithmetic-subsequence",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1030",
      "name": "matrix-cells-in-distance-order",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math",
        "Geometry",
        "Sorting",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1031",
      "name": "maximum-sum-of-two-non-overlapping-subarrays",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 1032",
      "name": "stream-of-characters",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Design",
        "Trie",
        "Data Stream"
      ]
    },
    {
      "id": "Problem 1033",
      "name": "moving-stones-until-consecutive",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Brainteaser"
      ]
    },
    {
      "id": "Problem 1035",
      "name": "uncrossed-lines",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1036",
      "name": "escape-a-large-maze",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Depth-First Search",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 1037",
      "name": "valid-boomerang",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math",
        "Geometry"
      ]
    },
    {
      "id": "Problem 1034",
      "name": "coloring-a-border",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1039",
      "name": "minimum-score-triangulation-of-polygon",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1038",
      "name": "binary-search-tree-to-greater-sum-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1041",
      "name": "robot-bounded-in-circle",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1043",
      "name": "partition-array-for-maximum-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1042",
      "name": "flower-planting-with-no-adjacent",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 1040",
      "name": "moving-stones-until-consecutive-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Two Pointers",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1044",
      "name": "longest-duplicate-substring",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Binary Search",
        "Sliding Window",
        "Rolling Hash",
        "Suffix Array",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 1025",
      "name": "divisor-game",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Brainteaser",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 1045",
      "name": "customers-who-bought-all-products",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1046",
      "name": "last-stone-weight",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1049",
      "name": "last-stone-weight-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1051",
      "name": "height-checker",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sorting",
        "Counting Sort"
      ]
    },
    {
      "id": "Problem 1048",
      "name": "longest-string-chain",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "String",
        "Dynamic Programming",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1050",
      "name": "actors-and-directors-who-cooperated-at-least-three-times",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1047",
      "name": "remove-all-adjacent-duplicates-in-string",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Stack"
      ]
    },
    {
      "id": "Problem 1052",
      "name": "grumpy-bookstore-owner",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 1053",
      "name": "previous-permutation-with-one-swap",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1054",
      "name": "distant-barcodes",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)",
        "Counting"
      ]
    },
    {
      "id": "Problem 1056",
      "name": "confusing-number",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1059",
      "name": "all-paths-from-source-lead-to-destination",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1057",
      "name": "campus-bikes",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1058",
      "name": "minimize-rounding-error-to-meet-target",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1055",
      "name": "shortest-way-to-form-string",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1060",
      "name": "missing-element-in-sorted-array",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1062",
      "name": "longest-repeating-substring",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1061",
      "name": "lexicographically-smallest-equivalent-string",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Union Find"
      ]
    },
    {
      "id": "Problem 1064",
      "name": "fixed-point",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1067",
      "name": "digit-count-in-range",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1066",
      "name": "campus-bikes-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1068",
      "name": "product-sales-analysis-i",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1065",
      "name": "index-pairs-of-a-string",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1063",
      "name": "number-of-valid-subarrays",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1070",
      "name": "product-sales-analysis-iii",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1069",
      "name": "product-sales-analysis-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1072",
      "name": "flip-columns-for-maximum-number-of-equal-rows",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1071",
      "name": "greatest-common-divisor-of-strings",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 1075",
      "name": "project-employees-i",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1073",
      "name": "adding-two-negabinary-numbers",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 1076",
      "name": "project-employees-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1074",
      "name": "number-of-submatrices-that-sum-to-target",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Matrix",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1080",
      "name": "insufficient-nodes-in-root-to-leaf-paths",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1078",
      "name": "occurrences-after-bigram",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 1077",
      "name": "project-employees-iii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1079",
      "name": "letter-tile-possibilities",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Backtracking",
        "Counting"
      ]
    },
    {
      "id": "Problem 1083",
      "name": "sales-analysis-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1082",
      "name": "sales-analysis-i",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1081",
      "name": "smallest-subsequence-of-distinct-characters",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack",
        "Greedy",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 1084",
      "name": "sales-analysis-iii",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1085",
      "name": "sum-of-digits-in-the-minimum-number",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1087",
      "name": "brace-expansion",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1086",
      "name": "high-five",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1088",
      "name": "confusing-number-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1089",
      "name": "duplicate-zeros",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 1092",
      "name": "shortest-common-supersequence",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1090",
      "name": "largest-values-from-labels",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Sorting",
        "Counting"
      ]
    },
    {
      "id": "Problem 1091",
      "name": "shortest-path-in-binary-matrix",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1093",
      "name": "statistics-from-a-large-sample",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Probability and Statistics"
      ]
    },
    {
      "id": "Problem 1094",
      "name": "car-pooling",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sorting",
        "Heap (Priority Queue)",
        "Simulation",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1096",
      "name": "brace-expansion-ii",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Backtracking",
        "Stack",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 1099",
      "name": "two-sum-less-than-k",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1100",
      "name": "find-k-length-substrings-with-no-repeated-characters",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1098",
      "name": "unpopular-books",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1095",
      "name": "find-in-mountain-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Interactive"
      ]
    },
    {
      "id": "Problem 1097",
      "name": "game-play-analysis-v",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1102",
      "name": "path-with-maximum-minimum-value",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1101",
      "name": "the-earliest-moment-when-everyone-become-friends",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1103",
      "name": "distribute-candies-to-people",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1104",
      "name": "path-in-zigzag-labelled-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1105",
      "name": "filling-bookcase-shelves",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1106",
      "name": "parsing-a-boolean-expression",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Stack",
        "Recursion"
      ]
    },
    {
      "id": "Problem 1107",
      "name": "new-users-daily-count",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1108",
      "name": "defanging-an-ip-address",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 1111",
      "name": "maximum-nesting-depth-of-two-valid-parentheses-strings",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack"
      ]
    },
    {
      "id": "Problem 1109",
      "name": "corporate-flight-bookings",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1110",
      "name": "delete-nodes-and-return-forest",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1113",
      "name": "reported-posts",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1112",
      "name": "highest-grade-for-each-student",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1114",
      "name": "print-in-order",
      "difficulty": "Easy",
      "categories": [
        "Concurrency"
      ]
    },
    {
      "id": "Problem 1115",
      "name": "print-foobar-alternately",
      "difficulty": "Medium",
      "categories": [
        "Concurrency"
      ]
    },
    {
      "id": "Problem 1116",
      "name": "print-zero-even-odd",
      "difficulty": "Medium",
      "categories": [
        "Concurrency"
      ]
    },
    {
      "id": "Problem 1119",
      "name": "remove-vowels-from-a-string",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1121",
      "name": "divide-array-into-increasing-sequences",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1118",
      "name": "number-of-days-in-a-month",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1117",
      "name": "building-h2o",
      "difficulty": "Medium",
      "categories": [
        "Concurrency"
      ]
    },
    {
      "id": "Problem 1120",
      "name": "maximum-average-subtree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1124",
      "name": "longest-well-performing-interval",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Stack",
        "Monotonic Stack",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1122",
      "name": "relative-sort-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting",
        "Counting Sort"
      ]
    },
    {
      "id": "Problem 1123",
      "name": "lowest-common-ancestor-of-deepest-leaves",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1127",
      "name": "user-purchase-platform",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1128",
      "name": "number-of-equivalent-domino-pairs",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Counting"
      ]
    },
    {
      "id": "Problem 1125",
      "name": "smallest-sufficient-team",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 1126",
      "name": "active-businesses",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1129",
      "name": "shortest-path-with-alternating-colors",
      "difficulty": "Medium",
      "categories": [
        "Breadth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 1130",
      "name": "minimum-cost-tree-from-leaf-values",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Stack",
        "Greedy",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 1134",
      "name": "armstrong-number",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1133",
      "name": "largest-unique-number",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1131",
      "name": "maximum-of-absolute-value-expression",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 1136",
      "name": "parallel-courses",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1132",
      "name": "reported-posts-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1135",
      "name": "connecting-cities-with-minimum-cost",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1137",
      "name": "n-th-tribonacci-number",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Memoization"
      ]
    },
    {
      "id": "Problem 1138",
      "name": "alphabet-board-path",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 1141",
      "name": "user-activity-for-the-past-30-days-i",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1139",
      "name": "largest-1-bordered-square",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1142",
      "name": "user-activity-for-the-past-30-days-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1143",
      "name": "longest-common-subsequence",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1140",
      "name": "stone-game-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Prefix Sum",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 1144",
      "name": "decrease-elements-to-make-array-zigzag",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1148",
      "name": "article-views-i",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1147",
      "name": "longest-chunked-palindrome-decomposition",
      "difficulty": "Hard",
      "categories": [
        "Two Pointers",
        "String",
        "Dynamic Programming",
        "Greedy",
        "Rolling Hash",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 1145",
      "name": "binary-tree-coloring-game",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1146",
      "name": "snapshot-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Design"
      ]
    },
    {
      "id": "Problem 1149",
      "name": "article-views-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1150",
      "name": "check-if-a-number-is-majority-element-in-a-sorted-array",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1151",
      "name": "minimum-swaps-to-group-all-1's-together",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1152",
      "name": "analyze-user-website-visit-pattern",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1157",
      "name": "online-majority-element-in-subarray",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Design",
        "Binary Indexed Tree",
        "Segment Tree"
      ]
    },
    {
      "id": "Problem 1154",
      "name": "day-of-the-year",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 1156",
      "name": "swap-for-longest-repeated-character-substring",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 1155",
      "name": "number-of-dice-rolls-with-target-sum",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1153",
      "name": "string-transforms-into-another-string",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1159",
      "name": "market-analysis-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1160",
      "name": "find-words-that-can-be-formed-by-characters",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 1158",
      "name": "market-analysis-i",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1162",
      "name": "as-far-from-land-as-possible",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1161",
      "name": "maximum-level-sum-of-a-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1163",
      "name": "last-substring-in-lexicographical-order",
      "difficulty": "Hard",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 1164",
      "name": "product-price-at-a-given-date",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1166",
      "name": "design-file-system",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1165",
      "name": "single-row-keyboard",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1170",
      "name": "compare-strings-by-frequency-of-the-smallest-character",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1169",
      "name": "invalid-transactions",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1167",
      "name": "minimum-cost-to-connect-sticks",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1168",
      "name": "optimize-water-distribution-in-a-village",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1173",
      "name": "immediate-food-delivery-i",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1171",
      "name": "remove-zero-sum-consecutive-nodes-from-linked-list",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Linked List"
      ]
    },
    {
      "id": "Problem 1174",
      "name": "immediate-food-delivery-ii",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1172",
      "name": "dinner-plate-stacks",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "Stack",
        "Design",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1175",
      "name": "prime-arrangements",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 1176",
      "name": "diet-plan-performance",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1177",
      "name": "can-make-palindrome-from-substring",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Bit Manipulation",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1178",
      "name": "number-of-valid-words-for-each-puzzle",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Bit Manipulation",
        "Trie"
      ]
    },
    {
      "id": "Problem 1179",
      "name": "reformat-department-table",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1182",
      "name": "shortest-distance-to-target-color",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1181",
      "name": "before-and-after-puzzle",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1180",
      "name": "count-substrings-with-only-one-distinct-letter",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1186",
      "name": "maximum-subarray-sum-with-one-deletion",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1187",
      "name": "make-array-strictly-increasing",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Dynamic Programming",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1185",
      "name": "day-of-the-week",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 1183",
      "name": "maximum-number-of-ones",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1184",
      "name": "distance-between-bus-stops",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 1190",
      "name": "reverse-substrings-between-each-pair-of-parentheses",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack"
      ]
    },
    {
      "id": "Problem 1189",
      "name": "maximum-number-of-balloons",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 1188",
      "name": "design-bounded-blocking-queue",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1192",
      "name": "critical-connections-in-a-network",
      "difficulty": "Hard",
      "categories": [
        "Depth-First Search",
        "Graph",
        "Biconnected Component"
      ]
    },
    {
      "id": "Problem 1195",
      "name": "fizz-buzz-multithreaded",
      "difficulty": "Medium",
      "categories": [
        "Concurrency"
      ]
    },
    {
      "id": "Problem 1194",
      "name": "tournament-winners",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1191",
      "name": "k-concatenation-maximum-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1193",
      "name": "monthly-transactions-i",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1196",
      "name": "how-many-apples-can-you-put-into-the-basket",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1197",
      "name": "minimum-knight-moves",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1198",
      "name": "find-smallest-common-element-in-all-rows",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1199",
      "name": "minimum-time-to-build-blocks",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1203",
      "name": "sort-items-by-groups-respecting-dependencies",
      "difficulty": "Hard",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Topological Sort"
      ]
    },
    {
      "id": "Problem 1201",
      "name": "ugly-number-iii",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Binary Search",
        "Combinatorics",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 1200",
      "name": "minimum-absolute-difference",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1202",
      "name": "smallest-string-with-swaps",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1206",
      "name": "design-skiplist",
      "difficulty": "Hard",
      "categories": [
        "Linked List",
        "Design"
      ]
    },
    {
      "id": "Problem 1205",
      "name": "monthly-transactions-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1204",
      "name": "last-person-to-fit-in-the-bus",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1207",
      "name": "unique-number-of-occurrences",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 1209",
      "name": "remove-all-adjacent-duplicates-in-string-ii",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack"
      ]
    },
    {
      "id": "Problem 1208",
      "name": "get-equal-substrings-within-budget",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Binary Search",
        "Sliding Window",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1211",
      "name": "queries-quality-and-percentage",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1212",
      "name": "team-scores-in-football-tournament",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1214",
      "name": "two-sum-bsts",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1210",
      "name": "minimum-moves-to-reach-target-with-rotations",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1213",
      "name": "intersection-of-three-sorted-arrays",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1215",
      "name": "stepping-numbers",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1217",
      "name": "minimum-cost-to-move-chips-to-the-same-position",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1218",
      "name": "longest-arithmetic-subsequence-of-given-difference",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1216",
      "name": "valid-palindrome-iii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1219",
      "name": "path-with-maximum-gold",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Backtracking",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1220",
      "name": "count-vowels-permutation",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1221",
      "name": "split-a-string-in-balanced-strings",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Greedy",
        "Counting"
      ]
    },
    {
      "id": "Problem 1223",
      "name": "dice-roll-simulation",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1225",
      "name": "report-contiguous-dates",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1222",
      "name": "queens-that-can-attack-the-king",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1224",
      "name": "maximum-equal-frequency",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 1226",
      "name": "the-dining-philosophers",
      "difficulty": "Medium",
      "categories": [
        "Concurrency"
      ]
    },
    {
      "id": "Problem 1227",
      "name": "airplane-seat-assignment-probability",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Brainteaser",
        "Probability and Statistics"
      ]
    },
    {
      "id": "Problem 1228",
      "name": "missing-number-in-arithmetic-progression",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1229",
      "name": "meeting-scheduler",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1231",
      "name": "divide-chocolate",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1230",
      "name": "toss-strange-coins",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1232",
      "name": "check-if-it-is-a-straight-line",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math",
        "Geometry"
      ]
    },
    {
      "id": "Problem 1233",
      "name": "remove-sub-folders-from-the-filesystem",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Depth-First Search",
        "Trie"
      ]
    },
    {
      "id": "Problem 1234",
      "name": "replace-the-substring-for-balanced-string",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 1235",
      "name": "maximum-profit-in-job-scheduling",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Dynamic Programming",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1236",
      "name": "web-crawler",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1237",
      "name": "find-positive-integer-solution-for-a-given-equation",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Two Pointers",
        "Binary Search",
        "Interactive"
      ]
    },
    {
      "id": "Problem 1241",
      "name": "number-of-comments-per-post",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1242",
      "name": "web-crawler-multithreaded",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1238",
      "name": "circular-permutation-in-binary-representation",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Backtracking",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 1243",
      "name": "array-transformation",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1240",
      "name": "tiling-a-rectangle-with-the-fewest-squares",
      "difficulty": "Hard",
      "categories": [
        "Backtracking"
      ]
    },
    {
      "id": "Problem 1245",
      "name": "tree-diameter",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1239",
      "name": "maximum-length-of-a-concatenated-string-with-unique-characters",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Backtracking",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 1244",
      "name": "design-a-leaderboard",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1247",
      "name": "minimum-swaps-to-make-strings-equal",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1248",
      "name": "count-number-of-nice-subarrays",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Sliding Window",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1246",
      "name": "palindrome-removal",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1253",
      "name": "reconstruct-a-2-row-binary-matrix",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1251",
      "name": "average-selling-price",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1252",
      "name": "cells-with-odd-values-in-a-matrix",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1249",
      "name": "minimum-remove-to-make-valid-parentheses",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack"
      ]
    },
    {
      "id": "Problem 1256",
      "name": "encode-number",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1250",
      "name": "check-if-it-is-a-good-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 1255",
      "name": "maximum-score-words-formed-by-letters",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 1254",
      "name": "number-of-closed-islands",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1257",
      "name": "smallest-common-region",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1260",
      "name": "shift-2d-grid",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1259",
      "name": "handshakes-that-don't-cross",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1258",
      "name": "synonymous-sentences",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1261",
      "name": "find-elements-in-a-contaminated-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Design",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1262",
      "name": "greatest-sum-divisible-by-three",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1263",
      "name": "minimum-moves-to-move-a-box-to-their-target-location",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Breadth-First Search",
        "Heap (Priority Queue)",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1264",
      "name": "page-recommendations",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1265",
      "name": "print-immutable-linked-list-in-reverse",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1269",
      "name": "number-of-ways-to-stay-in-the-same-place-after-some-steps",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1270",
      "name": "all-people-report-to-the-given-manager",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1268",
      "name": "search-suggestions-system",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Binary Search",
        "Trie",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1267",
      "name": "count-servers-that-communicate",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix",
        "Counting"
      ]
    },
    {
      "id": "Problem 1266",
      "name": "minimum-time-visiting-all-points",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math",
        "Geometry"
      ]
    },
    {
      "id": "Problem 1271",
      "name": "hexspeak",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1272",
      "name": "remove-interval",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1273",
      "name": "delete-tree-nodes",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1279",
      "name": "traffic-light-controlled-intersection",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1274",
      "name": "number-of-ships-in-a-rectangle",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1276",
      "name": "number-of-burgers-with-no-waste-of-ingredients",
      "difficulty": "Medium",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 1278",
      "name": "palindrome-partitioning-iii",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1275",
      "name": "find-winner-on-a-tic-tac-toe-game",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1277",
      "name": "count-square-submatrices-with-all-ones",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1285",
      "name": "find-the-start-and-end-number-of-continuous-ranges",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1281",
      "name": "subtract-the-product-and-sum-of-digits-of-an-integer",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 1280",
      "name": "students-and-examinations",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1284",
      "name": "minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Bit Manipulation",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1286",
      "name": "iterator-for-combination",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Backtracking",
        "Design",
        "Iterator"
      ]
    },
    {
      "id": "Problem 1282",
      "name": "group-the-people-given-the-group-size-they-belong-to",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1287",
      "name": "element-appearing-more-than-25%-in-sorted-array",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1283",
      "name": "find-the-smallest-divisor-given-a-threshold",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 1290",
      "name": "convert-binary-number-in-a-linked-list-to-integer",
      "difficulty": "Easy",
      "categories": [
        "Linked List",
        "Math"
      ]
    },
    {
      "id": "Problem 1289",
      "name": "minimum-falling-path-sum-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1291",
      "name": "sequential-digits",
      "difficulty": "Medium",
      "categories": [
        "Enumeration"
      ]
    },
    {
      "id": "Problem 1292",
      "name": "maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Matrix",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1288",
      "name": "remove-covered-intervals",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1293",
      "name": "shortest-path-in-a-grid-with-obstacles-elimination",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1295",
      "name": "find-numbers-with-even-number-of-digits",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 1294",
      "name": "weather-type-in-each-country",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1300",
      "name": "sum-of-mutated-array-closest-to-target",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1297",
      "name": "maximum-number-of-occurrences-of-a-substring",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 1301",
      "name": "number-of-paths-with-max-score",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1296",
      "name": "divide-array-in-sets-of-k-consecutive-numbers",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1302",
      "name": "deepest-leaves-sum",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1299",
      "name": "replace-elements-with-greatest-element-on-right-side",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 1303",
      "name": "find-the-team-size",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1298",
      "name": "maximum-candies-you-can-get-from-boxes",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Breadth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 1304",
      "name": "find-n-unique-integers-sum-up-to-zero",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 1305",
      "name": "all-elements-in-two-binary-search-trees",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Sorting",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1306",
      "name": "jump-game-iii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 1308",
      "name": "running-total-for-different-genders",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1310",
      "name": "xor-queries-of-a-subarray",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Bit Manipulation",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1309",
      "name": "decrypt-string-from-alphabet-to-integer-mapping",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 1307",
      "name": "verbal-arithmetic-puzzle",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "String",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 1312",
      "name": "minimum-insertion-steps-to-make-a-string-palindrome",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1313",
      "name": "decompress-run-length-encoded-list",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 1311",
      "name": "get-watched-videos-by-your-friends",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Breadth-First Search",
        "Graph",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1318",
      "name": "minimum-flips-to-make-a-or-b-equal-to-c",
      "difficulty": "Medium",
      "categories": [
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 1315",
      "name": "sum-of-nodes-with-even-valued-grandparent",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1317",
      "name": "convert-integer-to-the-sum-of-two-no-zero-integers",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 1321",
      "name": "restaurant-growth",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1320",
      "name": "minimum-distance-to-type-a-word-using-two-fingers",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1316",
      "name": "distinct-echo-substrings",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Trie",
        "Rolling Hash",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 1319",
      "name": "number-of-operations-to-make-network-connected",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 1314",
      "name": "matrix-block-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1322",
      "name": "ads-performance",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1323",
      "name": "maximum-69-number",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1324",
      "name": "print-words-vertically",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1325",
      "name": "delete-leaves-with-a-given-value",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1326",
      "name": "minimum-number-of-taps-to-open-to-water-a-garden",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1328",
      "name": "break-a-palindrome",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1327",
      "name": "list-the-products-ordered-in-a-period",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1329",
      "name": "sort-the-matrix-diagonally",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sorting",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1331",
      "name": "rank-transform-of-an-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1330",
      "name": "reverse-subarray-to-maximize-array-value",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1333",
      "name": "filter-restaurants-by-vegan-friendly,-price-and-distance",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1332",
      "name": "remove-palindromic-subsequences",
      "difficulty": "Easy",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 1334",
      "name": "find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming",
        "Graph",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 1336",
      "name": "number-of-transactions-per-visit",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1335",
      "name": "minimum-difficulty-of-a-job-schedule",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1337",
      "name": "the-k-weakest-rows-in-a-matrix",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Binary Search",
        "Sorting",
        "Heap (Priority Queue)",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1338",
      "name": "reduce-array-size-to-the-half",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1339",
      "name": "maximum-product-of-splitted-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1340",
      "name": "jump-game-v",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1341",
      "name": "movie-rating",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1342",
      "name": "number-of-steps-to-reduce-a-number-to-zero",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 1343",
      "name": "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 1344",
      "name": "angle-between-hands-of-a-clock",
      "difficulty": "Medium",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 1345",
      "name": "jump-game-iv",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 1346",
      "name": "check-if-n-and-its-double-exist",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1347",
      "name": "minimum-number-of-steps-to-make-two-strings-anagram",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 1348",
      "name": "tweet-counts-per-frequency",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Binary Search",
        "Design",
        "Sorting",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 1350",
      "name": "students-with-invalid-departments",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1349",
      "name": "maximum-students-taking-exam",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Bit Manipulation",
        "Matrix",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 1352",
      "name": "product-of-the-last-k-numbers",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Design",
        "Queue",
        "Data Stream"
      ]
    },
    {
      "id": "Problem 1351",
      "name": "count-negative-numbers-in-a-sorted-matrix",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Binary Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1355",
      "name": "activity-participants",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1354",
      "name": "construct-target-array-with-multiple-sums",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1353",
      "name": "maximum-number-of-events-that-can-be-attended",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1356",
      "name": "sort-integers-by-the-number-of-1-bits",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Bit Manipulation",
        "Sorting",
        "Counting"
      ]
    },
    {
      "id": "Problem 1360",
      "name": "number-of-days-between-two-dates",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 1358",
      "name": "number-of-substrings-containing-all-three-characters",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 1359",
      "name": "count-all-valid-pickup-and-delivery-options",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 1362",
      "name": "closest-divisors",
      "difficulty": "Medium",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 1363",
      "name": "largest-multiple-of-three",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1357",
      "name": "apply-discount-every-n-orders",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Design"
      ]
    },
    {
      "id": "Problem 1361",
      "name": "validate-binary-tree-nodes",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1364",
      "name": "number-of-trusted-contacts-of-a-customer",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1366",
      "name": "rank-teams-by-votes",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Sorting",
        "Counting"
      ]
    },
    {
      "id": "Problem 1367",
      "name": "linked-list-in-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1365",
      "name": "how-many-numbers-are-smaller-than-the-current-number",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting",
        "Counting"
      ]
    },
    {
      "id": "Problem 1370",
      "name": "increasing-decreasing-string",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 1369",
      "name": "get-the-second-most-recent-activity",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1368",
      "name": "minimum-cost-to-make-at-least-one-valid-path-in-a-grid",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Breadth-First Search",
        "Graph",
        "Heap (Priority Queue)",
        "Matrix",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 1374",
      "name": "generate-a-string-with-characters-that-have-odd-counts",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 1375",
      "name": "number-of-times-binary-string-is-prefix-aligned",
      "difficulty": "Medium",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 1372",
      "name": "longest-zigzag-path-in-a-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1373",
      "name": "maximum-sum-bst-in-binary-tree",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1371",
      "name": "find-the-longest-substring-containing-vowels-in-even-counts",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Bit Manipulation",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1377",
      "name": "frog-position-after-t-seconds",
      "difficulty": "Hard",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 1378",
      "name": "replace-employee-id-with-the-unique-identifier",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1376",
      "name": "time-needed-to-inform-all-employees",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 1384",
      "name": "total-sales-amount-by-year",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1380",
      "name": "lucky-numbers-in-a-matrix",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1383",
      "name": "maximum-performance-of-a-team",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1382",
      "name": "balance-a-binary-search-tree",
      "difficulty": "Medium",
      "categories": [
        "Divide and Conquer",
        "Greedy",
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1379",
      "name": "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1385",
      "name": "find-the-distance-value-between-two-arrays",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1381",
      "name": "design-a-stack-with-increment-operation",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Stack",
        "Design"
      ]
    },
    {
      "id": "Problem 1387",
      "name": "sort-integers-by-the-power-value",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming",
        "Memoization",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1388",
      "name": "pizza-with-3n-slices",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1386",
      "name": "cinema-seat-allocation",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 1389",
      "name": "create-target-array-in-the-given-order",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1391",
      "name": "check-if-there-is-a-valid-path-in-a-grid",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1390",
      "name": "four-divisors",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 1394",
      "name": "find-lucky-integer-in-an-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Counting"
      ]
    },
    {
      "id": "Problem 1395",
      "name": "count-number-of-teams",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Binary Indexed Tree",
        "Segment Tree"
      ]
    },
    {
      "id": "Problem 1392",
      "name": "longest-happy-prefix",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Rolling Hash",
        "String Matching",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 1393",
      "name": "capital-gain/loss",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1396",
      "name": "design-underground-system",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Design"
      ]
    },
    {
      "id": "Problem 1397",
      "name": "find-all-good-strings",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming",
        "String Matching"
      ]
    },
    {
      "id": "Problem 1398",
      "name": "customers-who-bought-products-a-and-b-but-not-c",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1399",
      "name": "count-largest-group",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "Math"
      ]
    },
    {
      "id": "Problem 1403",
      "name": "minimum-subsequence-in-non-increasing-order",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1401",
      "name": "circle-and-rectangle-overlapping",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Geometry"
      ]
    },
    {
      "id": "Problem 1400",
      "name": "construct-k-palindrome-strings",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Greedy",
        "Counting"
      ]
    },
    {
      "id": "Problem 1402",
      "name": "reducing-dishes",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1404",
      "name": "number-of-steps-to-reduce-a-number-in-binary-representation-to-one",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 1405",
      "name": "longest-happy-string",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Greedy",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1407",
      "name": "top-travellers",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1408",
      "name": "string-matching-in-an-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String",
        "String Matching"
      ]
    },
    {
      "id": "Problem 1406",
      "name": "stone-game-iii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 1412",
      "name": "find-the-quiet-students-in-all-exams",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1411",
      "name": "number-of-ways-to-paint-n-\u00d7-3-grid",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1413",
      "name": "minimum-value-to-get-positive-step-by-step-sum",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1409",
      "name": "queries-on-a-permutation-with-key",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Indexed Tree",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1410",
      "name": "html-entity-parser",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 1414",
      "name": "find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1416",
      "name": "restore-the-array",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1415",
      "name": "the-k-th-lexicographical-string-of-all-happy-strings-of-length-n",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 1421",
      "name": "npv-queries",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1420",
      "name": "build-array-where-you-can-find-the-maximum-exactly-k-comparisons",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1418",
      "name": "display-table-of-food-orders-in-a-restaurant",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Sorting",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 1417",
      "name": "reformat-the-string",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 1419",
      "name": "minimum-number-of-frogs-croaking",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 1422",
      "name": "maximum-score-after-splitting-a-string",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1423",
      "name": "maximum-points-you-can-obtain-from-cards",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sliding Window",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1424",
      "name": "diagonal-traverse-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1426",
      "name": "counting-elements",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1428",
      "name": "leftmost-column-with-at-least-a-one",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1430",
      "name": "check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1429",
      "name": "first-unique-number",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1427",
      "name": "perform-string-shifts",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1425",
      "name": "constrained-subsequence-sum",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Queue",
        "Sliding Window",
        "Heap (Priority Queue)",
        "Monotonic Queue"
      ]
    },
    {
      "id": "Problem 1435",
      "name": "create-a-session-bar-chart",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1432",
      "name": "max-difference-you-can-get-from-changing-an-integer",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1433",
      "name": "check-if-a-string-can-break-another-string",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1434",
      "name": "number-of-ways-to-wear-different-hats-to-each-other",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 1431",
      "name": "kids-with-the-greatest-number-of-candies",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 1436",
      "name": "destination-city",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 1438",
      "name": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Queue",
        "Sliding Window",
        "Heap (Priority Queue)",
        "Ordered Set",
        "Monotonic Queue"
      ]
    },
    {
      "id": "Problem 1437",
      "name": "check-if-all-1's-are-at-least-length-k-places-away",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1442",
      "name": "count-triplets-that-can-form-two-arrays-of-equal-xor",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Bit Manipulation",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1445",
      "name": "apples-&-oranges",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1440",
      "name": "evaluate-boolean-expression",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1439",
      "name": "find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Heap (Priority Queue)",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1443",
      "name": "minimum-time-to-collect-all-apples-in-a-tree",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 1446",
      "name": "consecutive-characters",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 1444",
      "name": "number-of-ways-of-cutting-a-pizza",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Memoization",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1441",
      "name": "build-an-array-with-stack-operations",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Stack",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1449",
      "name": "form-largest-integer-with-digits-that-add-up-to-target",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1451",
      "name": "rearrange-words-in-a-sentence",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1452",
      "name": "people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 1453",
      "name": "maximum-number-of-darts-inside-of-a-circular-dartboard",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Geometry"
      ]
    },
    {
      "id": "Problem 1447",
      "name": "simplified-fractions",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "String",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 1448",
      "name": "count-good-nodes-in-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1450",
      "name": "number-of-students-doing-homework-at-a-given-time",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 1454",
      "name": "active-users",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1459",
      "name": "rectangles-area",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1458",
      "name": "max-dot-product-of-two-subsequences",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1456",
      "name": "maximum-number-of-vowels-in-a-substring-of-given-length",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 1455",
      "name": "check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence",
      "difficulty": "Easy",
      "categories": [
        "Two Pointers",
        "String",
        "String Matching"
      ]
    },
    {
      "id": "Problem 1460",
      "name": "make-two-arrays-equal-by-reversing-subarrays",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1457",
      "name": "pseudo-palindromic-paths-in-a-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "Bit Manipulation",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1461",
      "name": "check-if-a-string-contains-all-binary-codes-of-size-k",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Bit Manipulation",
        "Rolling Hash",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 1462",
      "name": "course-schedule-iv",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Topological Sort"
      ]
    },
    {
      "id": "Problem 1463",
      "name": "cherry-pickup-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1468",
      "name": "calculate-salaries",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1469",
      "name": "find-all-the-lonely-nodes",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1464",
      "name": "maximum-product-of-two-elements-in-an-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1466",
      "name": "reorder-routes-to-make-all-paths-lead-to-the-city-zero",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 1467",
      "name": "probability-of-a-two-boxes-having-the-same-number-of-distinct-balls",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Backtracking",
        "Combinatorics",
        "Probability and Statistics"
      ]
    },
    {
      "id": "Problem 1465",
      "name": "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1470",
      "name": "shuffle-the-array",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 1471",
      "name": "the-k-strongest-values-in-an-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1472",
      "name": "design-browser-history",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Linked List",
        "Stack",
        "Design",
        "Doubly-Linked List",
        "Data Stream"
      ]
    },
    {
      "id": "Problem 1474",
      "name": "delete-n-nodes-after-m-nodes-of-a-linked-list",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1473",
      "name": "paint-house-iii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1475",
      "name": "final-prices-with-a-special-discount-in-a-shop",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Stack",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 1476",
      "name": "subrectangle-queries",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Design",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1477",
      "name": "find-two-non-overlapping-sub-arrays-each-with-target-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Dynamic Programming",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 1478",
      "name": "allocate-mailboxes",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1479",
      "name": "sales-by-day-of-the-week",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1480",
      "name": "running-sum-of-1d-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1482",
      "name": "minimum-number-of-days-to-make-m-bouquets",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 1481",
      "name": "least-number-of-unique-integers-after-k-removals",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Sorting",
        "Counting"
      ]
    },
    {
      "id": "Problem 1483",
      "name": "kth-ancestor-of-a-tree-node",
      "difficulty": "Hard",
      "categories": [
        "Binary Search",
        "Dynamic Programming",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Design"
      ]
    },
    {
      "id": "Problem 1485",
      "name": "clone-binary-tree-with-random-pointer",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1486",
      "name": "xor-operation-in-an-array",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 1487",
      "name": "making-file-names-unique",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 1484",
      "name": "group-sold-products-by-the-date",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1489",
      "name": "find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",
      "difficulty": "Hard",
      "categories": [
        "Union Find",
        "Graph",
        "Sorting",
        "Minimum Spanning Tree",
        "Strongly Connected Component"
      ]
    },
    {
      "id": "Problem 1488",
      "name": "avoid-flood-in-the-city",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Greedy",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1490",
      "name": "clone-n-ary-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1491",
      "name": "average-salary-excluding-the-minimum-and-maximum-salary",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1494",
      "name": "parallel-courses-ii",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Bit Manipulation",
        "Graph",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 1495",
      "name": "friendly-movies-streamed-last-month",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1497",
      "name": "check-if-array-pairs-are-divisible-by-k",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Counting"
      ]
    },
    {
      "id": "Problem 1492",
      "name": "the-kth-factor-of-n",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 1496",
      "name": "path-crossing",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 1493",
      "name": "longest-subarray-of-1's-after-deleting-one-element",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1498",
      "name": "number-of-subsequences-that-satisfy-the-given-sum-condition",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1500",
      "name": "design-a-file-sharing-system",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1499",
      "name": "max-value-of-equation",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Queue",
        "Sliding Window",
        "Heap (Priority Queue)",
        "Monotonic Queue"
      ]
    },
    {
      "id": "Problem 1501",
      "name": "countries-you-can-safely-invest-in",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1504",
      "name": "count-submatrices-with-all-ones",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Stack",
        "Matrix",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 1502",
      "name": "can-make-arithmetic-progression-from-sequence",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1503",
      "name": "last-moment-before-all-ants-fall-out-of-a-plank",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Brainteaser",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1505",
      "name": "minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Greedy",
        "Binary Indexed Tree",
        "Segment Tree"
      ]
    },
    {
      "id": "Problem 1513",
      "name": "number-of-substrings-with-only-1s",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 1510",
      "name": "stone-game-iv",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 1506",
      "name": "find-root-of-n-ary-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1508",
      "name": "range-sum-of-sorted-subarray-sums",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1511",
      "name": "customer-order-frequency",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1507",
      "name": "reformat-date",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 1509",
      "name": "minimum-difference-between-largest-and-smallest-value-in-three-moves",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1512",
      "name": "number-of-good-pairs",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Counting"
      ]
    },
    {
      "id": "Problem 1514",
      "name": "path-with-maximum-probability",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Graph",
        "Heap (Priority Queue)",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 1515",
      "name": "best-position-for-a-service-centre",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Geometry",
        "Randomized"
      ]
    },
    {
      "id": "Problem 1517",
      "name": "find-users-with-valid-e-mails",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1516",
      "name": "move-sub-tree-of-n-ary-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1519",
      "name": "number-of-nodes-in-the-sub-tree-with-the-same-label",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Counting"
      ]
    },
    {
      "id": "Problem 1518",
      "name": "water-bottles",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1520",
      "name": "maximum-number-of-non-overlapping-substrings",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1521",
      "name": "find-a-value-of-a-mysterious-function-closest-to-target",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Bit Manipulation",
        "Segment Tree"
      ]
    },
    {
      "id": "Problem 1522",
      "name": "diameter-of-n-ary-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1523",
      "name": "count-odd-numbers-in-an-interval-range",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 1524",
      "name": "number-of-sub-arrays-with-odd-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1525",
      "name": "number-of-good-ways-to-split-a-string",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Dynamic Programming",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 1526",
      "name": "minimum-number-of-increments-on-subarrays-to-form-a-target-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Stack",
        "Greedy",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 1528",
      "name": "shuffle-string",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String"
      ]
    },
    {
      "id": "Problem 1527",
      "name": "patients-with-a-condition",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1529",
      "name": "minimum-suffix-flips",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1530",
      "name": "number-of-good-leaf-nodes-pairs",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1531",
      "name": "string-compression-ii",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1533",
      "name": "find-the-index-of-the-large-integer",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1532",
      "name": "the-most-recent-three-orders",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1535",
      "name": "find-the-winner-of-an-array-game",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1536",
      "name": "minimum-swaps-to-arrange-a-binary-grid",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1537",
      "name": "get-the-maximum-score",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Two Pointers",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1538",
      "name": "guess-the-majority-in-a-hidden-array",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1534",
      "name": "count-good-triplets",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 1539",
      "name": "kth-missing-positive-number",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 1540",
      "name": "can-convert-string-in-k-moves",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 1541",
      "name": "minimum-insertions-to-balance-a-parentheses-string",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1542",
      "name": "find-longest-awesome-substring",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "String",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 1543",
      "name": "fix-product-name-format",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1544",
      "name": "make-the-string-great",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Stack"
      ]
    },
    {
      "id": "Problem 1548",
      "name": "the-most-similar-path-in-a-graph",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1545",
      "name": "find-kth-bit-in-nth-binary-string",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Recursion",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1547",
      "name": "minimum-cost-to-cut-a-stick",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1546",
      "name": "maximum-number-of-non-overlapping-subarrays-with-sum-equals-target",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1552",
      "name": "magnetic-force-between-two-balls",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1549",
      "name": "the-most-recent-orders-for-each-product",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1550",
      "name": "three-consecutive-odds",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 1551",
      "name": "minimum-operations-to-make-array-equal",
      "difficulty": "Medium",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 1555",
      "name": "bank-account-summary",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1553",
      "name": "minimum-number-of-days-to-eat-n-oranges",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Memoization"
      ]
    },
    {
      "id": "Problem 1556",
      "name": "thousand-separator",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 1554",
      "name": "strings-differ-by-one-character",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1560",
      "name": "most-visited-sector-in-a-circular-track",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1558",
      "name": "minimum-numbers-of-function-calls-to-make-target-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 1559",
      "name": "detect-cycles-in-2d-grid",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1561",
      "name": "maximum-number-of-coins-you-can-get",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Greedy",
        "Sorting",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 1562",
      "name": "find-latest-group-of-size-m",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1563",
      "name": "stone-game-v",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 1557",
      "name": "minimum-number-of-vertices-to-reach-all-nodes",
      "difficulty": "Medium",
      "categories": [
        "Graph"
      ]
    },
    {
      "id": "Problem 1564",
      "name": "put-boxes-into-the-warehouse-i",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1567",
      "name": "maximum-length-of-subarray-with-positive-product",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1566",
      "name": "detect-pattern-of-length-m-repeated-k-or-more-times",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 1565",
      "name": "unique-orders-and-customers-per-month",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1568",
      "name": "minimum-number-of-days-to-disconnect-island",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Matrix",
        "Strongly Connected Component"
      ]
    },
    {
      "id": "Problem 1570",
      "name": "dot-product-of-two-sparse-vectors",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1571",
      "name": "warehouse-manager",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1569",
      "name": "number-of-ways-to-reorder-array-to-get-same-bst",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Divide and Conquer",
        "Dynamic Programming",
        "Tree",
        "Union Find",
        "Binary Search Tree",
        "Memoization",
        "Combinatorics",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1574",
      "name": "shortest-subarray-to-be-removed-to-make-array-sorted",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Stack",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 1575",
      "name": "count-all-possible-routes",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Memoization"
      ]
    },
    {
      "id": "Problem 1573",
      "name": "number-of-ways-to-split-a-string",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 1572",
      "name": "matrix-diagonal-sum",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1576",
      "name": "replace-all-?'s-to-avoid-consecutive-repeating-characters",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1579",
      "name": "remove-max-number-of-edges-to-keep-graph-fully-traversable",
      "difficulty": "Hard",
      "categories": [
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 1577",
      "name": "number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 1578",
      "name": "minimum-time-to-make-rope-colorful",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1582",
      "name": "special-positions-in-a-binary-matrix",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1581",
      "name": "customer-who-visited-but-did-not-make-any-transactions",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1580",
      "name": "put-boxes-into-the-warehouse-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1586",
      "name": "binary-search-tree-iterator-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1583",
      "name": "count-unhappy-friends",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1584",
      "name": "min-cost-to-connect-all-points",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Union Find",
        "Graph",
        "Minimum Spanning Tree"
      ]
    },
    {
      "id": "Problem 1585",
      "name": "check-if-string-is-transformable-with-substring-sort-operations",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1587",
      "name": "bank-account-summary-ii",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1589",
      "name": "maximum-sum-obtained-of-any-permutation",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1588",
      "name": "sum-of-all-odd-length-subarrays",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1590",
      "name": "make-sum-divisible-by-p",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1591",
      "name": "strange-printer-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Graph",
        "Topological Sort",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1592",
      "name": "rearrange-spaces-between-words",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 1593",
      "name": "split-a-string-into-the-max-number-of-unique-substrings",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 1594",
      "name": "maximum-non-negative-product-in-a-matrix",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1595",
      "name": "minimum-cost-to-connect-two-groups-of-points",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Bit Manipulation",
        "Matrix",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 1597",
      "name": "build-binary-expression-tree-from-infix-expression",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1598",
      "name": "crawler-log-folder",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String",
        "Stack"
      ]
    },
    {
      "id": "Problem 1600",
      "name": "throne-inheritance",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Design"
      ]
    },
    {
      "id": "Problem 1601",
      "name": "maximum-number-of-achievable-transfer-requests",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Backtracking",
        "Bit Manipulation",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 1596",
      "name": "the-most-frequently-ordered-products-for-each-customer",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1602",
      "name": "find-nearest-right-node-in-binary-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1603",
      "name": "design-parking-system",
      "difficulty": "Easy",
      "categories": [
        "Design",
        "Simulation",
        "Counting"
      ]
    },
    {
      "id": "Problem 1599",
      "name": "maximum-profit-of-operating-a-centennial-wheel",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1604",
      "name": "alert-using-same-key-card-three-or-more-times-in-a-one-hour-period",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1606",
      "name": "find-servers-that-handled-most-number-of-requests",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Heap (Priority Queue)",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 1605",
      "name": "find-valid-matrix-given-row-and-column-sums",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1607",
      "name": "sellers-with-no-sales",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1608",
      "name": "special-array-with-x-elements-greater-than-or-equal-x",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1611",
      "name": "minimum-one-bit-operations-to-make-integers-zero",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Bit Manipulation",
        "Memoization"
      ]
    },
    {
      "id": "Problem 1610",
      "name": "maximum-number-of-visible-points",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Geometry",
        "Sliding Window",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1609",
      "name": "even-odd-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1612",
      "name": "check-if-two-expression-trees-are-equivalent",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1614",
      "name": "maximum-nesting-depth-of-the-parentheses",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Stack"
      ]
    },
    {
      "id": "Problem 1613",
      "name": "find-the-missing-ids",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1618",
      "name": "maximum-font-to-fit-a-sentence-in-a-screen",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1619",
      "name": "mean-of-array-after-removing-some-elements",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1615",
      "name": "maximal-network-rank",
      "difficulty": "Medium",
      "categories": [
        "Graph"
      ]
    },
    {
      "id": "Problem 1617",
      "name": "count-subtrees-with-max-distance-between-cities",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Bit Manipulation",
        "Tree",
        "Enumeration",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 1616",
      "name": "split-two-strings-to-make-palindrome",
      "difficulty": "Medium",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 1620",
      "name": "coordinate-with-maximum-network-quality",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 1621",
      "name": "number-of-sets-of-k-non-overlapping-line-segments",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 1622",
      "name": "fancy-sequence",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Design",
        "Segment Tree"
      ]
    },
    {
      "id": "Problem 1623",
      "name": "all-valid-triplets-that-can-represent-a-country",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1624",
      "name": "largest-substring-between-two-equal-characters",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 1625",
      "name": "lexicographically-smallest-string-after-applying-operations",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Depth-First Search",
        "Breadth-First Search",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 1628",
      "name": "design-an-expression-tree-with-evaluate-function",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1626",
      "name": "best-team-with-no-conflicts",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1629",
      "name": "slowest-key",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String"
      ]
    },
    {
      "id": "Problem 1627",
      "name": "graph-connectivity-with-threshold",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Union Find",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 1630",
      "name": "arithmetic-subarrays",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1631",
      "name": "path-with-minimum-effort",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Heap (Priority Queue)",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1633",
      "name": "percentage-of-users-attended-a-contest",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1632",
      "name": "rank-transform-of-a-matrix",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Union Find",
        "Graph",
        "Topological Sort",
        "Sorting",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1635",
      "name": "hopper-company-queries-i",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1634",
      "name": "add-two-polynomials-represented-as-linked-lists",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1636",
      "name": "sort-array-by-increasing-frequency",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1639",
      "name": "number-of-ways-to-form-a-target-string-given-a-dictionary",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1640",
      "name": "check-array-formation-through-concatenation",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 1637",
      "name": "widest-vertical-area-between-two-points-containing-no-points",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1641",
      "name": "count-sorted-vowel-strings",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 1642",
      "name": "furthest-building-you-can-reach",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1643",
      "name": "kth-smallest-instructions",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 1638",
      "name": "count-substrings-that-differ-by-one-character",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Dynamic Programming",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 1644",
      "name": "lowest-common-ancestor-of-a-binary-tree-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1645",
      "name": "hopper-company-queries-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1646",
      "name": "get-maximum-in-generated-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1648",
      "name": "sell-diminishing-valued-colored-balls",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Binary Search",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1647",
      "name": "minimum-deletions-to-make-character-frequencies-unique",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1649",
      "name": "create-sorted-array-through-instructions",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Divide and Conquer",
        "Binary Indexed Tree",
        "Segment Tree",
        "Merge Sort",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 1650",
      "name": "lowest-common-ancestor-of-a-binary-tree-iii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1651",
      "name": "hopper-company-queries-iii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1652",
      "name": "defuse-the-bomb",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 1653",
      "name": "minimum-deletions-to-make-string-balanced",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming",
        "Stack"
      ]
    },
    {
      "id": "Problem 1654",
      "name": "minimum-jumps-to-reach-home",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 1656",
      "name": "design-an-ordered-stream",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Design",
        "Data Stream"
      ]
    },
    {
      "id": "Problem 1655",
      "name": "distribute-repeating-integers",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 1657",
      "name": "determine-if-two-strings-are-close",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Sorting",
        "Counting"
      ]
    },
    {
      "id": "Problem 1658",
      "name": "minimum-operations-to-reduce-x-to-zero",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Sliding Window",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1660",
      "name": "correct-a-binary-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1661",
      "name": "average-time-of-process-per-machine",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1663",
      "name": "smallest-string-with-a-given-numeric-value",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1662",
      "name": "check-if-two-string-arrays-are-equivalent",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String"
      ]
    },
    {
      "id": "Problem 1664",
      "name": "ways-to-make-a-fair-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1659",
      "name": "maximize-grid-happiness",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Bit Manipulation",
        "Memoization",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 1666",
      "name": "change-the-root-of-a-binary-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1665",
      "name": "minimum-initial-energy-to-finish-tasks",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1667",
      "name": "fix-names-in-a-table",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1668",
      "name": "maximum-repeating-substring",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Dynamic Programming",
        "String Matching"
      ]
    },
    {
      "id": "Problem 1669",
      "name": "merge-in-between-linked-lists",
      "difficulty": "Medium",
      "categories": [
        "Linked List"
      ]
    },
    {
      "id": "Problem 1671",
      "name": "minimum-number-of-removals-to-make-mountain-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1670",
      "name": "design-front-middle-back-queue",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Linked List",
        "Design",
        "Queue",
        "Data Stream"
      ]
    },
    {
      "id": "Problem 1676",
      "name": "lowest-common-ancestor-of-a-binary-tree-iv",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1675",
      "name": "minimize-deviation-in-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Heap (Priority Queue)",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 1673",
      "name": "find-the-most-competitive-subsequence",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Stack",
        "Greedy",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 1672",
      "name": "richest-customer-wealth",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1674",
      "name": "minimum-moves-to-make-array-complementary",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1677",
      "name": "product's-worth-over-invoices",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1679",
      "name": "max-number-of-k-sum-pairs",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1683",
      "name": "invalid-tweets",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1678",
      "name": "goal-parser-interpretation",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 1682",
      "name": "longest-palindromic-subsequence-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1681",
      "name": "minimum-incompatibility",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 1680",
      "name": "concatenation-of-consecutive-binary-numbers",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Bit Manipulation",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1685",
      "name": "sum-of-absolute-differences-in-a-sorted-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1684",
      "name": "count-the-number-of-consistent-strings",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Bit Manipulation",
        "Counting"
      ]
    },
    {
      "id": "Problem 1688",
      "name": "count-of-matches-in-tournament",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1686",
      "name": "stone-game-vi",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 1687",
      "name": "delivering-boxes-from-storage-to-ports",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Segment Tree",
        "Queue",
        "Heap (Priority Queue)",
        "Prefix Sum",
        "Monotonic Queue"
      ]
    },
    {
      "id": "Problem 1692",
      "name": "count-ways-to-distribute-candies",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1689",
      "name": "partitioning-into-minimum-number-of-deci-binary-numbers",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1691",
      "name": "maximum-height-by-stacking-cuboids",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1690",
      "name": "stone-game-vii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 1694",
      "name": "reformat-phone-number",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 1696",
      "name": "jump-game-vi",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Queue",
        "Heap (Priority Queue)",
        "Monotonic Queue"
      ]
    },
    {
      "id": "Problem 1698",
      "name": "number-of-distinct-substrings-in-a-string",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1695",
      "name": "maximum-erasure-value",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 1699",
      "name": "number-of-calls-between-two-persons",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1693",
      "name": "daily-leads-and-partners",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1697",
      "name": "checking-existence-of-edge-length-limited-paths",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Two Pointers",
        "Union Find",
        "Graph",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1700",
      "name": "number-of-students-unable-to-eat-lunch",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Stack",
        "Queue",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1701",
      "name": "average-waiting-time",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1708",
      "name": "largest-subarray-length-k",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1707",
      "name": "maximum-xor-with-an-element-from-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Bit Manipulation",
        "Trie"
      ]
    },
    {
      "id": "Problem 1704",
      "name": "determine-if-string-halves-are-alike",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 1702",
      "name": "maximum-binary-string-after-change",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1706",
      "name": "where-will-the-ball-fall",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1703",
      "name": "minimum-adjacent-swaps-for-k-consecutive-ones",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Sliding Window",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1705",
      "name": "maximum-number-of-eaten-apples",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1714",
      "name": "sum-of-special-evenly-spaced-elements-in-array",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1713",
      "name": "minimum-operations-to-make-a-subsequence",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1711",
      "name": "count-good-meals",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 1712",
      "name": "ways-to-split-array-into-three-subarrays",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1710",
      "name": "maximum-units-on-a-truck",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1709",
      "name": "biggest-window-between-visits",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1715",
      "name": "count-apples-and-oranges",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1716",
      "name": "calculate-money-in-leetcode-bank",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 1718",
      "name": "construct-the-lexicographically-largest-valid-sequence",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 1717",
      "name": "maximum-score-from-removing-substrings",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1721",
      "name": "swapping-nodes-in-a-linked-list",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 1719",
      "name": "number-of-ways-to-reconstruct-a-tree",
      "difficulty": "Hard",
      "categories": [
        "Tree",
        "Graph"
      ]
    },
    {
      "id": "Problem 1722",
      "name": "minimize-hamming-distance-after-swap-operations",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Union Find"
      ]
    },
    {
      "id": "Problem 1720",
      "name": "decode-xored-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 1723",
      "name": "find-minimum-time-to-finish-all-jobs",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 1724",
      "name": "checking-existence-of-edge-length-limited-paths-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1727",
      "name": "largest-submatrix-with-rearrangements",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1730",
      "name": "shortest-path-to-get-food",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1725",
      "name": "number-of-rectangles-that-can-form-the-largest-square",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 1726",
      "name": "tuple-with-same-product",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Counting"
      ]
    },
    {
      "id": "Problem 1729",
      "name": "find-followers-count",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1728",
      "name": "cat-and-mouse-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Graph",
        "Topological Sort",
        "Memoization",
        "Matrix",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 1731",
      "name": "the-number-of-employees-which-report-to-each-employee",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1732",
      "name": "find-the-highest-altitude",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1734",
      "name": "decode-xored-permutation",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 1736",
      "name": "latest-time-by-replacing-hidden-digits",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1733",
      "name": "minimum-number-of-people-to-teach",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1735",
      "name": "count-ways-to-make-array-with-product",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Combinatorics",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 1738",
      "name": "find-kth-largest-xor-coordinate-value",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Divide and Conquer",
        "Bit Manipulation",
        "Sorting",
        "Heap (Priority Queue)",
        "Matrix",
        "Prefix Sum",
        "Quickselect"
      ]
    },
    {
      "id": "Problem 1737",
      "name": "change-minimum-characters-to-satisfy-one-of-three-conditions",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Counting",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1740",
      "name": "find-distance-in-a-binary-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1739",
      "name": "building-boxes",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Binary Search",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1744",
      "name": "can-you-eat-your-favorite-candy-on-your-favorite-day?",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1746",
      "name": "maximum-subarray-sum-after-one-operation",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1745",
      "name": "palindrome-partitioning-iv",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1741",
      "name": "find-total-time-spent-by-each-employee",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1743",
      "name": "restore-the-array-from-adjacent-pairs",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Depth-First Search"
      ]
    },
    {
      "id": "Problem 1742",
      "name": "maximum-number-of-balls-in-a-box",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "Math",
        "Counting"
      ]
    },
    {
      "id": "Problem 1748",
      "name": "sum-of-unique-elements",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Counting"
      ]
    },
    {
      "id": "Problem 1747",
      "name": "leetflex-banned-accounts",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1749",
      "name": "maximum-absolute-sum-of-any-subarray",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1750",
      "name": "minimum-length-of-string-after-deleting-similar-ends",
      "difficulty": "Medium",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 1751",
      "name": "maximum-number-of-events-that-can-be-attended-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Dynamic Programming",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1753",
      "name": "maximum-score-from-removing-stones",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Greedy",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1754",
      "name": "largest-merge-of-two-strings",
      "difficulty": "Medium",
      "categories": [
        "Two Pointers",
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1752",
      "name": "check-if-array-is-sorted-and-rotated",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 1756",
      "name": "design-most-recently-used-queue",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1762",
      "name": "buildings-with-an-ocean-view",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1760",
      "name": "minimum-limit-of-balls-in-a-bag",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 1758",
      "name": "minimum-changes-to-make-alternating-binary-string",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 1757",
      "name": "recyclable-and-low-fat-products",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1759",
      "name": "count-number-of-homogenous-substrings",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 1755",
      "name": "closest-subsequence-sum",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Two Pointers",
        "Dynamic Programming",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 1761",
      "name": "minimum-degree-of-a-connected-trio-in-a-graph",
      "difficulty": "Hard",
      "categories": [
        "Graph"
      ]
    },
    {
      "id": "Problem 1770",
      "name": "maximum-score-from-performing-multiplication-operations",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1763",
      "name": "longest-nice-substring",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Divide and Conquer",
        "Bit Manipulation",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 1765",
      "name": "map-of-highest-peak",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1769",
      "name": "minimum-number-of-operations-to-move-all-balls-to-each-box",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1768",
      "name": "merge-strings-alternately",
      "difficulty": "Easy",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 1766",
      "name": "tree-of-coprimes",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Tree",
        "Depth-First Search",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 1764",
      "name": "form-array-by-concatenating-subarrays-of-another-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Greedy",
        "String Matching"
      ]
    },
    {
      "id": "Problem 1767",
      "name": "find-the-subtasks-that-did-not-execute",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1771",
      "name": "maximize-palindrome-length-from-subsequences",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1772",
      "name": "sort-features-by-popularity",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1773",
      "name": "count-items-matching-a-rule",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String"
      ]
    },
    {
      "id": "Problem 1775",
      "name": "equal-sum-arrays-with-minimum-number-of-operations",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Counting"
      ]
    },
    {
      "id": "Problem 1774",
      "name": "closest-dessert-cost",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 1776",
      "name": "car-fleet-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Stack",
        "Heap (Priority Queue)",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 1777",
      "name": "product's-price-for-each-store",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1778",
      "name": "shortest-path-in-a-hidden-grid",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1779",
      "name": "find-nearest-point-that-has-the-same-x-or-y-coordinate",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 1783",
      "name": "grand-slam-titles",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1785",
      "name": "minimum-elements-to-add-to-form-a-given-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1780",
      "name": "check-if-number-is-a-sum-of-powers-of-three",
      "difficulty": "Medium",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 1782",
      "name": "count-pairs-of-nodes",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Graph",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1784",
      "name": "check-if-binary-string-has-at-most-one-segment-of-ones",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 1781",
      "name": "sum-of-beauty-of-all-substrings",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 1786",
      "name": "number-of-restricted-paths-from-first-to-last-node",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming",
        "Graph",
        "Topological Sort",
        "Heap (Priority Queue)",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 1788",
      "name": "maximize-the-beauty-of-the-garden",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1790",
      "name": "check-if-one-string-swap-can-make-strings-equal",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 1787",
      "name": "make-the-xor-of-all-segments-equal-to-zero",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 1789",
      "name": "primary-department-for-each-employee",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1791",
      "name": "find-center-of-star-graph",
      "difficulty": "Easy",
      "categories": [
        "Graph"
      ]
    },
    {
      "id": "Problem 1792",
      "name": "maximum-average-pass-ratio",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1793",
      "name": "maximum-score-of-a-good-subarray",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Stack",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 1794",
      "name": "count-pairs-of-equal-substrings-with-minimum-difference",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1800",
      "name": "maximum-ascending-subarray-sum",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 1797",
      "name": "design-authentication-manager",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Linked List",
        "Design",
        "Doubly-Linked List"
      ]
    },
    {
      "id": "Problem 1801",
      "name": "number-of-orders-in-the-backlog",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Heap (Priority Queue)",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1799",
      "name": "maximize-score-after-n-operations",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Number Theory",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 1795",
      "name": "rearrange-products-table",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1796",
      "name": "second-largest-digit-in-a-string",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 1798",
      "name": "maximum-number-of-consecutive-values-you-can-make",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1803",
      "name": "count-pairs-with-xor-in-a-range",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Bit Manipulation",
        "Trie"
      ]
    },
    {
      "id": "Problem 1804",
      "name": "implement-trie-ii-(prefix-tree)",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1802",
      "name": "maximum-value-at-a-given-index-in-a-bounded-array",
      "difficulty": "Medium",
      "categories": [
        "Binary Search",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1806",
      "name": "minimum-number-of-operations-to-reinitialize-a-permutation",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1808",
      "name": "maximize-number-of-nice-divisors",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Recursion",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 1807",
      "name": "evaluate-the-bracket-pairs-of-a-string",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 1805",
      "name": "number-of-different-integers-in-a-string",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 1811",
      "name": "find-interview-candidates",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1810",
      "name": "minimum-path-cost-in-a-hidden-grid",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1809",
      "name": "ad-free-sessions",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1814",
      "name": "count-nice-pairs-in-an-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Counting"
      ]
    },
    {
      "id": "Problem 1812",
      "name": "determine-color-of-a-chessboard-square",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 1813",
      "name": "sentence-similarity-iii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 1816",
      "name": "truncate-sentence",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String"
      ]
    },
    {
      "id": "Problem 1815",
      "name": "maximum-number-of-groups-getting-fresh-donuts",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Bit Manipulation",
        "Memoization",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 1817",
      "name": "finding-the-users-active-minutes",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 1820",
      "name": "maximum-number-of-accepted-invitations",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1821",
      "name": "find-customers-with-positive-revenue-this-year",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1819",
      "name": "number-of-different-subsequences-gcds",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Counting",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 1822",
      "name": "sign-of-the-product-of-an-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 1824",
      "name": "minimum-sideway-jumps",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1818",
      "name": "minimum-absolute-sum-difference",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Sorting",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 1823",
      "name": "find-the-winner-of-the-circular-game",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Recursion",
        "Queue",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1828",
      "name": "queries-on-number-of-points-inside-a-circle",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Geometry"
      ]
    },
    {
      "id": "Problem 1825",
      "name": "finding-mk-average",
      "difficulty": "Hard",
      "categories": [
        "Design",
        "Queue",
        "Heap (Priority Queue)",
        "Data Stream",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 1832",
      "name": "check-if-the-sentence-is-pangram",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 1830",
      "name": "minimum-number-of-operations-to-make-string-sorted",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "String",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 1826",
      "name": "faulty-sensor",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1827",
      "name": "minimum-operations-to-make-the-array-increasing",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1829",
      "name": "maximum-xor-for-each-query",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Bit Manipulation",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1831",
      "name": "maximum-transaction-each-day",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1833",
      "name": "maximum-ice-cream-bars",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting",
        "Counting Sort"
      ]
    },
    {
      "id": "Problem 1835",
      "name": "find-xor-sum-of-all-pairs-bitwise-and",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 1836",
      "name": "remove-duplicates-from-an-unsorted-linked-list",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1834",
      "name": "single-threaded-cpu",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1839",
      "name": "longest-substring-of-all-vowels-in-order",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 1837",
      "name": "sum-of-digits-in-base-k",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 1838",
      "name": "frequency-of-the-most-frequent-element",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Greedy",
        "Sliding Window",
        "Sorting",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1840",
      "name": "maximum-building-height",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1842",
      "name": "next-palindrome-using-same-digits",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1845",
      "name": "seat-reservation-manager",
      "difficulty": "Medium",
      "categories": [
        "Design",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1841",
      "name": "league-statistics",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1844",
      "name": "replace-all-digits-with-characters",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 1843",
      "name": "suspicious-bank-accounts",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1847",
      "name": "closest-room",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Sorting",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 1846",
      "name": "maximum-element-after-decreasing-and-rearranging",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1848",
      "name": "minimum-distance-to-the-target-element",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 1850",
      "name": "minimum-adjacent-swaps-to-reach-the-kth-smallest-number",
      "difficulty": "Medium",
      "categories": [
        "Two Pointers",
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1853",
      "name": "convert-date-format",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1852",
      "name": "distinct-numbers-in-each-subarray",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1849",
      "name": "splitting-a-string-into-descending-consecutive-values",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 1854",
      "name": "maximum-population-year",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Counting",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1851",
      "name": "minimum-interval-to-include-each-query",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Line Sweep",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1855",
      "name": "maximum-distance-between-a-pair-of-values",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 1856",
      "name": "maximum-subarray-min-product",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Stack",
        "Monotonic Stack",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1857",
      "name": "largest-color-value-in-a-directed-graph",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "Dynamic Programming",
        "Graph",
        "Topological Sort",
        "Memoization",
        "Counting"
      ]
    },
    {
      "id": "Problem 1858",
      "name": "longest-word-with-all-prefixes",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1860",
      "name": "incremental-memory-leak",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1861",
      "name": "rotating-the-box",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1859",
      "name": "sorting-the-sentence",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1864",
      "name": "minimum-number-of-swaps-to-make-the-binary-string-alternating",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1862",
      "name": "sum-of-floored-pairs",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Binary Search",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1865",
      "name": "finding-pairs-with-a-certain-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Design"
      ]
    },
    {
      "id": "Problem 1863",
      "name": "sum-of-all-subset-xor-totals",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math",
        "Backtracking",
        "Bit Manipulation",
        "Combinatorics",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 1867",
      "name": "orders-with-maximum-quantity-above-average",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1869",
      "name": "longer-contiguous-segments-of-ones-than-zeros",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 1866",
      "name": "number-of-ways-to-rearrange-sticks-with-k-sticks-visible",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 1868",
      "name": "product-of-two-run-length-encoded-arrays",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1871",
      "name": "jump-game-vii",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming",
        "Sliding Window",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1872",
      "name": "stone-game-viii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Prefix Sum",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 1870",
      "name": "minimum-speed-to-arrive-on-time",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 1873",
      "name": "calculate-special-bonus",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1874",
      "name": "minimize-product-sum-of-two-arrays",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1877",
      "name": "minimize-maximum-pair-sum-in-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1876",
      "name": "substrings-of-size-three-with-distinct-characters",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Sliding Window",
        "Counting"
      ]
    },
    {
      "id": "Problem 1875",
      "name": "group-employees-of-the-same-salary",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1880",
      "name": "check-if-word-equals-summation-of-two-words",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 1878",
      "name": "get-biggest-three-rhombus-sums-in-a-grid",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Sorting",
        "Heap (Priority Queue)",
        "Matrix",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1881",
      "name": "maximum-value-after-insertion",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1879",
      "name": "minimum-xor-sum-of-two-arrays",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 1884",
      "name": "egg-drop-with-2-eggs-and-n-floors",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1882",
      "name": "process-tasks-using-servers",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1883",
      "name": "minimum-skips-to-arrive-at-meeting-on-time",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1887",
      "name": "reduction-operations-to-make-the-array-elements-equal",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1886",
      "name": "determine-whether-matrix-can-be-obtained-by-rotation",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1889",
      "name": "minimum-space-wasted-from-packaging",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Sorting",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1888",
      "name": "minimum-number-of-flips-to-make-the-binary-string-alternating",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming",
        "Greedy",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 1892",
      "name": "page-recommendations-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1891",
      "name": "cutting-ribbons",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1890",
      "name": "the-latest-login-in-2020",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1893",
      "name": "check-if-all-the-integers-in-a-range-are-covered",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1895",
      "name": "largest-magic-square",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1896",
      "name": "minimum-cost-to-change-the-final-value-of-expression",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "String",
        "Dynamic Programming",
        "Stack"
      ]
    },
    {
      "id": "Problem 1885",
      "name": "count-pairs-in-two-arrays",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1897",
      "name": "redistribute-characters-to-make-all-strings-equal",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 1898",
      "name": "maximum-number-of-removable-characters",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "String",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 1899",
      "name": "merge-triplets-to-form-target-triplet",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1902",
      "name": "depth-of-bst-given-insertion-order",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1900",
      "name": "the-earliest-and-latest-rounds-where-players-compete",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Memoization"
      ]
    },
    {
      "id": "Problem 1903",
      "name": "largest-odd-number-in-string",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1901",
      "name": "find-a-peak-element-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1894",
      "name": "find-the-student-that-will-replace-the-chalk",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Simulation",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1904",
      "name": "the-number-of-full-rounds-you-have-played",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 1905",
      "name": "count-sub-islands",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1906",
      "name": "minimum-absolute-difference-queries",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 1908",
      "name": "game-of-nim",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1909",
      "name": "remove-one-element-to-make-the-array-strictly-increasing",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 1907",
      "name": "count-salary-categories",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1913",
      "name": "maximum-product-difference-between-two-pairs",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1914",
      "name": "cyclically-rotating-a-grid",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1910",
      "name": "remove-all-occurrences-of-a-substring",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1912",
      "name": "design-movie-rental-system",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Design",
        "Heap (Priority Queue)",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 1911",
      "name": "maximum-alternating-subsequence-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1915",
      "name": "number-of-wonderful-substrings",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Bit Manipulation",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1918",
      "name": "kth-smallest-subarray-sum",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1917",
      "name": "leetcodify-friends-recommendations",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1919",
      "name": "leetcodify-similar-friends",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1922",
      "name": "count-good-numbers",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Recursion"
      ]
    },
    {
      "id": "Problem 1921",
      "name": "eliminate-maximum-number-of-monsters",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1920",
      "name": "build-array-from-permutation",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1923",
      "name": "longest-common-subpath",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Rolling Hash",
        "Suffix Array",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 1924",
      "name": "erect-the-fence-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1925",
      "name": "count-square-sum-triples",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 1916",
      "name": "count-ways-to-build-rooms-in-an-ant-colony",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Tree",
        "Graph",
        "Topological Sort",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 1927",
      "name": "sum-game",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "String",
        "Greedy",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 1928",
      "name": "minimum-cost-to-reach-destination-in-time",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Graph"
      ]
    },
    {
      "id": "Problem 1926",
      "name": "nearest-exit-from-entrance-in-maze",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1929",
      "name": "concatenation-of-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1930",
      "name": "unique-length-3-palindromic-subsequences",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Bit Manipulation",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1932",
      "name": "merge-bsts-to-create-single-bst",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "Binary Search",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 1931",
      "name": "painting-a-grid-with-three-different-colors",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1933",
      "name": "check-if-string-is-decomposable-into-value-equal-substrings",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1936",
      "name": "add-minimum-number-of-rungs",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1937",
      "name": "maximum-number-of-points-with-cost",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1938",
      "name": "maximum-genetic-difference-query",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Bit Manipulation",
        "Depth-First Search",
        "Trie"
      ]
    },
    {
      "id": "Problem 1934",
      "name": "confirmation-rate",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1935",
      "name": "maximum-number-of-words-you-can-type",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 1939",
      "name": "users-that-actively-request-confirmation-messages",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1940",
      "name": "longest-common-subsequence-between-sorted-arrays",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1941",
      "name": "check-if-all-characters-have-equal-number-of-occurrences",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 1942",
      "name": "the-number-of-the-smallest-unoccupied-chair",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1944",
      "name": "number-of-visible-people-in-a-queue",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Stack",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 1943",
      "name": "describe-the-painting",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1945",
      "name": "sum-of-digits-of-string-after-convert",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 1947",
      "name": "maximum-compatibility-score-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 1946",
      "name": "largest-number-after-mutating-substring",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1948",
      "name": "delete-duplicate-folders-in-system",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Trie",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 1949",
      "name": "strong-friendship",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1950",
      "name": "maximum-of-minimum-values-in-all-subarrays",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1951",
      "name": "all-the-pairs-with-the-maximum-number-of-common-followers",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1953",
      "name": "maximum-number-of-weeks-for-which-you-can-work",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1952",
      "name": "three-divisors",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Enumeration",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 1956",
      "name": "minimum-time-for-k-virus-variants-to-spread",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1955",
      "name": "count-number-of-special-subsequences",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1957",
      "name": "delete-characters-to-make-fancy-string",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 1954",
      "name": "minimum-garden-perimeter-to-collect-enough-apples",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 1958",
      "name": "check-if-move-is-legal",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 1962",
      "name": "remove-stones-to-minimize-the-total",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 1959",
      "name": "minimum-total-space-wasted-with-k-resizing-operations",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1961",
      "name": "check-if-string-is-a-prefix-of-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 1960",
      "name": "maximum-product-of-the-length-of-two-palindromic-substrings",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Rolling Hash",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 1966",
      "name": "binary-searchable-numbers-in-an-unsorted-array",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1964",
      "name": "find-the-longest-valid-obstacle-course-at-each-position",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Binary Indexed Tree"
      ]
    },
    {
      "id": "Problem 1965",
      "name": "employees-with-missing-information",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1963",
      "name": "minimum-number-of-swaps-to-make-the-string-balanced",
      "difficulty": "Medium",
      "categories": [
        "Two Pointers",
        "String",
        "Stack",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1967",
      "name": "number-of-strings-that-appear-as-substrings-in-word",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String"
      ]
    },
    {
      "id": "Problem 1969",
      "name": "minimum-non-zero-product-of-the-array-elements",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Greedy",
        "Recursion"
      ]
    },
    {
      "id": "Problem 1968",
      "name": "array-with-elements-not-equal-to-average-of-neighbors",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1970",
      "name": "last-day-where-you-can-still-cross",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1971",
      "name": "find-if-path-exists-in-graph",
      "difficulty": "Easy",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 1972",
      "name": "first-and-last-call-on-the-same-day",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1973",
      "name": "count-nodes-equal-to-sum-of-descendants",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1974",
      "name": "minimum-time-to-type-word-using-special-typewriter",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 1975",
      "name": "maximum-matrix-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1976",
      "name": "number-of-ways-to-arrive-at-destination",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming",
        "Graph",
        "Topological Sort",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 1977",
      "name": "number-of-ways-to-separate-numbers",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming",
        "Suffix Array"
      ]
    },
    {
      "id": "Problem 1978",
      "name": "employees-whose-manager-left-the-company",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 1979",
      "name": "find-greatest-common-divisor-of-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 1980",
      "name": "find-unique-binary-string",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 1982",
      "name": "find-array-given-subset-sums",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Divide and Conquer"
      ]
    },
    {
      "id": "Problem 1981",
      "name": "minimize-the-difference-between-target-and-chosen-elements",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1983",
      "name": "widest-pair-of-indices-with-equal-range-sum",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1984",
      "name": "minimum-difference-between-highest-and-lowest-of-k-scores",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sliding Window",
        "Sorting"
      ]
    },
    {
      "id": "Problem 1986",
      "name": "minimum-number-of-work-sessions-to-finish-the-tasks",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 1987",
      "name": "number-of-unique-good-subsequences",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1989",
      "name": "maximum-number-of-people-that-can-be-caught-in-tag",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1988",
      "name": "find-cutoff-score-for-each-school",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1985",
      "name": "find-the-kth-largest-integer-in-the-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Divide and Conquer",
        "Sorting",
        "Heap (Priority Queue)",
        "Quickselect"
      ]
    },
    {
      "id": "Problem 1990",
      "name": "count-the-number-of-experiments",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1991",
      "name": "find-the-middle-index-in-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 1992",
      "name": "find-all-groups-of-farmland",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 1999",
      "name": "smallest-greater-multiple-made-of-two-digits",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 1996",
      "name": "the-number-of-weak-characters-in-the-game",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Stack",
        "Greedy",
        "Sorting",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 1998",
      "name": "gcd-sort-of-an-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Union Find",
        "Sorting",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 1995",
      "name": "count-special-quadruplets",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 1997",
      "name": "first-day-where-you-have-been-in-all-the-rooms",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 1994",
      "name": "the-number-of-good-subsets",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 1993",
      "name": "operations-on-tree",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Design"
      ]
    },
    {
      "id": "Problem 2000",
      "name": "reverse-prefix-of-word",
      "difficulty": "Easy",
      "categories": [
        "Two Pointers",
        "String",
        "Stack"
      ]
    },
    {
      "id": "Problem 2005",
      "name": "subtree-removal-game-with-fibonacci-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2004",
      "name": "the-number-of-seniors-and-juniors-to-join-the-company",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2007",
      "name": "find-original-array-from-doubled-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2002",
      "name": "maximum-product-of-the-length-of-two-palindromic-subsequences",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 2003",
      "name": "smallest-missing-genetic-value-in-each-subtree",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Tree",
        "Depth-First Search",
        "Union Find"
      ]
    },
    {
      "id": "Problem 2001",
      "name": "number-of-pairs-of-interchangeable-rectangles",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Counting",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2006",
      "name": "count-number-of-pairs-with-absolute-difference-k",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Counting"
      ]
    },
    {
      "id": "Problem 2008",
      "name": "maximum-earnings-from-taxi",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Dynamic Programming",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2013",
      "name": "detect-squares",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Design",
        "Counting"
      ]
    },
    {
      "id": "Problem 2012",
      "name": "sum-of-beauty-in-the-array",
      "difficulty": "Medium",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 2011",
      "name": "final-value-of-variable-after-performing-operations",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2010",
      "name": "the-number-of-seniors-and-juniors-to-join-the-company-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2009",
      "name": "minimum-number-of-operations-to-make-array-continuous",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2014",
      "name": "longest-subsequence-repeated-k-times",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Backtracking",
        "Greedy",
        "Counting",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2015",
      "name": "average-height-of-buildings-in-each-segment",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2017",
      "name": "grid-game",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2019",
      "name": "the-score-of-students-solving-math-expression",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "String",
        "Dynamic Programming",
        "Stack",
        "Memoization"
      ]
    },
    {
      "id": "Problem 2016",
      "name": "maximum-difference-between-increasing-elements",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2018",
      "name": "check-if-word-can-be-placed-in-crossword",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2020",
      "name": "number-of-accounts-that-did-not-stream",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2021",
      "name": "brightest-position-on-street",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2023",
      "name": "number-of-pairs-of-strings-with-concatenation-equal-to-target",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 2022",
      "name": "convert-1d-array-into-2d-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2025",
      "name": "maximum-number-of-ways-to-partition-an-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Counting",
        "Enumeration",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2024",
      "name": "maximize-the-confusion-of-an-exam",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Binary Search",
        "Sliding Window",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2026",
      "name": "low-quality-problems",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2031",
      "name": "count-subarrays-with-more-ones-than-zeros",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2030",
      "name": "smallest-k-length-subsequence-with-occurrences-of-a-letter",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Stack",
        "Greedy",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 2027",
      "name": "minimum-moves-to-convert-string",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2028",
      "name": "find-missing-observations",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2029",
      "name": "stone-game-ix",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Greedy",
        "Counting",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 2033",
      "name": "minimum-operations-to-make-a-uni-value-grid",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Sorting",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2036",
      "name": "maximum-alternating-subarray-sum",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2034",
      "name": "stock-price-fluctuation",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Design",
        "Heap (Priority Queue)",
        "Data Stream",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 2032",
      "name": "two-out-of-three",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2035",
      "name": "partition-array-into-two-arrays-to-minimize-sum-difference",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Dynamic Programming",
        "Bit Manipulation",
        "Ordered Set",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 2037",
      "name": "minimum-number-of-moves-to-seat-everyone",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Greedy",
        "Sorting",
        "Counting Sort"
      ]
    },
    {
      "id": "Problem 2038",
      "name": "remove-colored-pieces-if-both-neighbors-are-the-same-color",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "String",
        "Greedy",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 2039",
      "name": "the-time-when-the-network-becomes-idle",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Breadth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 2040",
      "name": "kth-smallest-product-of-two-sorted-arrays",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 2041",
      "name": "accepted-candidates-from-the-interviews",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2045",
      "name": "second-minimum-time-to-reach-destination",
      "difficulty": "Hard",
      "categories": [
        "Breadth-First Search",
        "Graph",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 2043",
      "name": "simple-bank-system",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Design",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2044",
      "name": "count-number-of-maximum-bitwise-or-subsets",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Backtracking",
        "Bit Manipulation",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2046",
      "name": "sort-linked-list-already-sorted-using-absolute-values",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2042",
      "name": "check-if-numbers-are-ascending-in-a-sentence",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 2047",
      "name": "number-of-valid-words-in-a-sentence",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 2048",
      "name": "next-greater-numerically-balanced-number",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Backtracking",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2049",
      "name": "count-nodes-with-the-highest-score",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 2052",
      "name": "minimum-cost-to-separate-sentence-into-rows",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2051",
      "name": "the-category-of-each-member-in-the-store",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2054",
      "name": "two-best-non-overlapping-events",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Dynamic Programming",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2053",
      "name": "kth-distinct-string-in-an-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 2050",
      "name": "parallel-courses-iii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Graph",
        "Topological Sort"
      ]
    },
    {
      "id": "Problem 2055",
      "name": "plates-between-candles",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Binary Search",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2058",
      "name": "find-the-minimum-and-maximum-number-of-nodes-between-critical-points",
      "difficulty": "Medium",
      "categories": [
        "Linked List"
      ]
    },
    {
      "id": "Problem 2057",
      "name": "smallest-index-with-equal-value",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 2059",
      "name": "minimum-operations-to-convert-number",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Breadth-First Search"
      ]
    },
    {
      "id": "Problem 2061",
      "name": "number-of-spaces-cleaning-robot-cleaned",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2056",
      "name": "number-of-valid-move-combinations-on-chessboard",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Backtracking",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2060",
      "name": "check-if-an-original-string-exists-given-two-encoded-strings",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2062",
      "name": "count-vowel-substrings-of-a-string",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 2063",
      "name": "vowels-of-all-substrings",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "String",
        "Dynamic Programming",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 2066",
      "name": "account-balance",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2065",
      "name": "maximum-path-quality-of-a-graph",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Backtracking",
        "Graph"
      ]
    },
    {
      "id": "Problem 2068",
      "name": "check-whether-two-strings-are-almost-equivalent",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 2064",
      "name": "minimized-maximum-of-products-distributed-to-any-store",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2070",
      "name": "most-beautiful-item-for-each-query",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2067",
      "name": "number-of-equal-count-substrings",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2069",
      "name": "walking-robot-simulation-ii",
      "difficulty": "Medium",
      "categories": [
        "Design",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2071",
      "name": "maximum-number-of-tasks-you-can-assign",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Greedy",
        "Queue",
        "Sorting",
        "Monotonic Queue"
      ]
    },
    {
      "id": "Problem 2075",
      "name": "decode-the-slanted-ciphertext",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2072",
      "name": "the-winner-university",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2077",
      "name": "paths-in-maze-that-lead-to-same-room",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2076",
      "name": "process-restricted-friend-requests",
      "difficulty": "Hard",
      "categories": [
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 2073",
      "name": "time-needed-to-buy-tickets",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Queue",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2074",
      "name": "reverse-nodes-in-even-length-groups",
      "difficulty": "Medium",
      "categories": [
        "Linked List"
      ]
    },
    {
      "id": "Problem 2078",
      "name": "two-furthest-houses-with-different-colors",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2079",
      "name": "watering-plants",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2082",
      "name": "the-number-of-rich-customers",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2081",
      "name": "sum-of-k-mirror-numbers",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2080",
      "name": "range-frequency-queries",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Design",
        "Segment Tree"
      ]
    },
    {
      "id": "Problem 2084",
      "name": "drop-type-1-orders-for-customers-with-type-0-orders",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2083",
      "name": "substrings-that-begin-and-end-with-the-same-letter",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2085",
      "name": "count-common-words-with-one-occurrence",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 2087",
      "name": "minimum-cost-homecoming-of-a-robot-in-a-grid",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2086",
      "name": "minimum-number-of-food-buckets-to-feed-the-hamsters",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2088",
      "name": "count-fertile-pyramids-in-a-land",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2089",
      "name": "find-target-indices-after-sorting-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2090",
      "name": "k-radius-subarray-averages",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2091",
      "name": "removing-minimum-and-maximum-from-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2092",
      "name": "find-all-people-with-secret",
      "difficulty": "Hard",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2093",
      "name": "minimum-cost-to-reach-city-with-discounts",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2094",
      "name": "finding-3-digit-even-numbers",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2095",
      "name": "delete-the-middle-node-of-a-linked-list",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 2096",
      "name": "step-by-step-directions-from-a-binary-tree-node-to-another",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 2097",
      "name": "valid-arrangement-of-pairs",
      "difficulty": "Hard",
      "categories": [
        "Depth-First Search",
        "Graph",
        "Eulerian Circuit"
      ]
    },
    {
      "id": "Problem 2098",
      "name": "subsequence-of-size-k-with-the-largest-even-sum",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2100",
      "name": "find-good-days-to-rob-the-bank",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2099",
      "name": "find-subsequence-of-length-k-with-the-largest-sum",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2101",
      "name": "detonate-the-maximum-bombs",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Geometry"
      ]
    },
    {
      "id": "Problem 2102",
      "name": "sequentially-ordinal-rank-tracker",
      "difficulty": "Hard",
      "categories": [
        "Design",
        "Heap (Priority Queue)",
        "Data Stream",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 2103",
      "name": "rings-and-rods",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 2106",
      "name": "maximum-fruits-harvested-after-at-most-k-steps",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Sliding Window",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2105",
      "name": "watering-plants-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2104",
      "name": "sum-of-subarray-ranges",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Stack",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 2108",
      "name": "find-first-palindromic-string-in-the-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 2109",
      "name": "adding-spaces-to-a-string",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2107",
      "name": "number-of-unique-flavors-after-sharing-k-candies",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2110",
      "name": "number-of-smooth-descent-periods-of-a-stock",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2112",
      "name": "the-airport-with-the-most-traffic",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2116",
      "name": "check-if-a-parentheses-string-can-be-valid",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2115",
      "name": "find-all-possible-recipes-from-given-supplies",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Graph",
        "Topological Sort"
      ]
    },
    {
      "id": "Problem 2113",
      "name": "elements-in-array-after-removing-and-replacing-elements",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2111",
      "name": "minimum-operations-to-make-the-array-k-increasing",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 2114",
      "name": "maximum-number-of-words-found-in-sentences",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String"
      ]
    },
    {
      "id": "Problem 2118",
      "name": "build-the-equation",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2117",
      "name": "abbreviating-the-product-of-a-range",
      "difficulty": "Hard",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 2119",
      "name": "a-number-after-a-double-reversal",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 2121",
      "name": "intervals-between-identical-elements",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2120",
      "name": "execution-of-all-suffix-instructions-staying-in-a-grid",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2122",
      "name": "recover-the-original-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "Sorting",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2124",
      "name": "check-if-all-a's-appears-before-all-b's",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2123",
      "name": "minimum-operations-to-remove-adjacent-ones-in-matrix",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2128",
      "name": "remove-all-ones-with-row-and-column-flips",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2129",
      "name": "capitalize-the-title",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 2127",
      "name": "maximum-employees-to-be-invited-to-a-meeting",
      "difficulty": "Hard",
      "categories": [
        "Depth-First Search",
        "Graph",
        "Topological Sort"
      ]
    },
    {
      "id": "Problem 2126",
      "name": "destroying-asteroids",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2125",
      "name": "number-of-laser-beams-in-a-bank",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "String",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2137",
      "name": "pour-water-between-buckets-to-make-water-levels-equal",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2132",
      "name": "stamping-the-grid",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Matrix",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2136",
      "name": "earliest-possible-day-of-full-bloom",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2134",
      "name": "minimum-swaps-to-group-all-1's-together-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2131",
      "name": "longest-palindrome-by-concatenating-two-letter-words",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Greedy",
        "Counting"
      ]
    },
    {
      "id": "Problem 2135",
      "name": "count-words-obtained-after-adding-a-letter",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Bit Manipulation",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2133",
      "name": "check-if-every-row-and-column-contains-all-numbers",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2139",
      "name": "minimum-moves-to-reach-target-score",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2142",
      "name": "the-number-of-passengers-in-each-bus-i",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2141",
      "name": "maximum-running-time-of-n-computers",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2140",
      "name": "solving-questions-with-brainpower",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2143",
      "name": "choose-numbers-from-two-arrays-in-range",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2144",
      "name": "minimum-cost-of-buying-candies-with-discount",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2138",
      "name": "divide-a-string-into-groups-of-size-k",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2145",
      "name": "count-the-hidden-sequences",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2147",
      "name": "number-of-ways-to-divide-a-long-corridor",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2149",
      "name": "rearrange-array-elements-by-sign",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2146",
      "name": "k-highest-ranked-items-within-a-price-range",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Breadth-First Search",
        "Sorting",
        "Heap (Priority Queue)",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2148",
      "name": "count-elements-with-strictly-smaller-and-greater-elements",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sorting",
        "Counting"
      ]
    },
    {
      "id": "Problem 2130",
      "name": "maximum-twin-sum-of-a-linked-list",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Two Pointers",
        "Stack"
      ]
    },
    {
      "id": "Problem 2151",
      "name": "maximum-good-people-based-on-statements",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Backtracking",
        "Bit Manipulation",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2150",
      "name": "find-all-lonely-numbers-in-the-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Counting"
      ]
    },
    {
      "id": "Problem 2153",
      "name": "the-number-of-passengers-in-each-bus-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2152",
      "name": "minimum-number-of-lines-to-cover-points",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2155",
      "name": "all-divisions-with-the-highest-score-of-a-binary-array",
      "difficulty": "Medium",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 2156",
      "name": "find-substring-with-given-hash-value",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Sliding Window",
        "Rolling Hash",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 2154",
      "name": "keep-multiplying-found-values-by-two",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2157",
      "name": "groups-of-strings",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Bit Manipulation",
        "Union Find"
      ]
    },
    {
      "id": "Problem 2160",
      "name": "minimum-sum-of-four-digit-number-after-splitting-digits",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2158",
      "name": "amount-of-new-area-painted-each-day",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2159",
      "name": "order-two-columns-independently",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2162",
      "name": "minimum-cost-to-set-cooking-time",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2163",
      "name": "minimum-difference-in-sums-after-removal-of-elements",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2161",
      "name": "partition-array-according-to-given-pivot",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2164",
      "name": "sort-even-and-odd-indices-independently",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2168",
      "name": "unique-substrings-with-equal-digit-frequency",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2165",
      "name": "smallest-value-of-the-rearranged-number",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2167",
      "name": "minimum-time-to-remove-all-cars-containing-illegal-goods",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2172",
      "name": "maximum-and-sum-of-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 2166",
      "name": "design-bitset",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Design"
      ]
    },
    {
      "id": "Problem 2169",
      "name": "count-operations-to-obtain-zero",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2170",
      "name": "minimum-operations-to-make-the-array-alternating",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Counting"
      ]
    },
    {
      "id": "Problem 2171",
      "name": "removing-minimum-number-of-magic-beans",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting",
        "Enumeration",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2173",
      "name": "longest-winning-streak",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2176",
      "name": "count-equal-and-divisible-pairs-in-an-array",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 2178",
      "name": "maximum-split-of-positive-even-integers",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Backtracking",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2175",
      "name": "the-change-in-global-rankings",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2174",
      "name": "remove-all-ones-with-row-and-column-flips-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2180",
      "name": "count-integers-with-even-digit-sum",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2179",
      "name": "count-good-triplets-in-an-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Divide and Conquer",
        "Binary Indexed Tree",
        "Segment Tree",
        "Merge Sort",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 2177",
      "name": "find-three-consecutive-integers-that-sum-to-a-given-number",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2181",
      "name": "merge-nodes-in-between-zeros",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2183",
      "name": "count-array-pairs-divisible-by-k",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2184",
      "name": "number-of-ways-to-build-sturdy-brick-wall",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2182",
      "name": "construct-string-with-repeat-limit",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Greedy",
        "Heap (Priority Queue)",
        "Counting"
      ]
    },
    {
      "id": "Problem 2187",
      "name": "minimum-time-to-complete-trips",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 2186",
      "name": "minimum-number-of-steps-to-make-two-strings-anagram-ii",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 2188",
      "name": "minimum-time-to-finish-the-race",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2185",
      "name": "counting-words-with-a-given-prefix",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String",
        "String Matching"
      ]
    },
    {
      "id": "Problem 2189",
      "name": "number-of-ways-to-build-house-of-cards",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2193",
      "name": "minimum-number-of-moves-to-make-palindrome",
      "difficulty": "Hard",
      "categories": [
        "Two Pointers",
        "String",
        "Greedy",
        "Binary Indexed Tree"
      ]
    },
    {
      "id": "Problem 2190",
      "name": "most-frequent-number-following-key-in-an-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Counting"
      ]
    },
    {
      "id": "Problem 2192",
      "name": "all-ancestors-of-a-node-in-a-directed-acyclic-graph",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Topological Sort"
      ]
    },
    {
      "id": "Problem 2195",
      "name": "append-k-integers-with-minimal-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2191",
      "name": "sort-the-jumbled-numbers",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2196",
      "name": "create-binary-tree-from-descriptions",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 2197",
      "name": "replace-non-coprime-numbers-in-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Stack",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2194",
      "name": "cells-in-a-range-on-an-excel-sheet",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 2200",
      "name": "find-all-k-distant-indices-in-an-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 2201",
      "name": "count-artifacts-that-can-be-extracted",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2199",
      "name": "finding-the-topic-of-each-post",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2204",
      "name": "distance-to-a-cycle-in-undirected-graph",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2202",
      "name": "maximize-the-topmost-element-after-k-moves",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2198",
      "name": "number-of-single-divisor-triplets",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2203",
      "name": "minimum-weighted-subgraph-with-the-required-paths",
      "difficulty": "Hard",
      "categories": [
        "Graph",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 2205",
      "name": "the-number-of-users-that-are-eligible-for-discount",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2209",
      "name": "minimum-white-tiles-after-covering-with-carpets",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2208",
      "name": "minimum-operations-to-halve-array-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2210",
      "name": "count-hills-and-valleys-in-an-array",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 2211",
      "name": "count-collisions-on-a-road",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2212",
      "name": "maximum-points-in-an-archery-competition",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Backtracking",
        "Bit Manipulation",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2206",
      "name": "divide-array-into-equal-pairs",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Bit Manipulation",
        "Counting"
      ]
    },
    {
      "id": "Problem 2207",
      "name": "maximize-number-of-subsequences-in-a-string",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Greedy",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2213",
      "name": "longest-substring-of-one-repeating-character",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Segment Tree",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 2214",
      "name": "minimum-health-to-beat-game",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2219",
      "name": "maximum-sum-score-of-array",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2220",
      "name": "minimum-bit-flips-to-convert-number",
      "difficulty": "Easy",
      "categories": [
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2217",
      "name": "find-palindrome-with-fixed-length",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 2215",
      "name": "find-the-difference-of-two-arrays",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 2216",
      "name": "minimum-deletions-to-make-array-beautiful",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Stack",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2221",
      "name": "find-triangular-sum-of-an-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Simulation",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 2218",
      "name": "maximum-value-of-k-coins-from-piles",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2222",
      "name": "number-of-ways-to-select-buildings",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2223",
      "name": "sum-of-scores-of-built-strings",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Binary Search",
        "Rolling Hash",
        "Suffix Array",
        "String Matching",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 2224",
      "name": "minimum-number-of-operations-to-convert-time",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2225",
      "name": "find-players-with-zero-or-one-losses",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting",
        "Counting"
      ]
    },
    {
      "id": "Problem 2226",
      "name": "maximum-candies-allocated-to-k-children",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 2227",
      "name": "encrypt-and-decrypt-strings",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Design",
        "Trie"
      ]
    },
    {
      "id": "Problem 2228",
      "name": "users-with-two-purchases-within-seven-days",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2229",
      "name": "check-if-an-array-is-consecutive",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2231",
      "name": "largest-number-after-digit-swaps-by-parity",
      "difficulty": "Easy",
      "categories": [
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2230",
      "name": "the-users-that-are-eligible-for-discount",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2232",
      "name": "minimize-result-by-adding-parentheses-to-expression",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2234",
      "name": "maximum-total-beauty-of-the-gardens",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2235",
      "name": "add-two-integers",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 2233",
      "name": "maximum-product-after-k-increments",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2236",
      "name": "root-equals-sum-of-children",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 2237",
      "name": "count-positions-on-street-with-required-brightness",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2238",
      "name": "number-of-times-a-driver-was-a-passenger",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2239",
      "name": "find-closest-number-to-zero",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 2241",
      "name": "design-an-atm-machine",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Design"
      ]
    },
    {
      "id": "Problem 2243",
      "name": "calculate-digit-sum-of-a-string",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2240",
      "name": "number-of-ways-to-buy-pens-and-pencils",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2242",
      "name": "maximum-score-of-a-node-sequence",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Graph",
        "Sorting",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2244",
      "name": "minimum-rounds-to-complete-all-tasks",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Counting"
      ]
    },
    {
      "id": "Problem 2245",
      "name": "maximum-trailing-zeros-in-a-cornered-path",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2250",
      "name": "count-number-of-rectangles-containing-each-point",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Binary Indexed Tree",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2246",
      "name": "longest-path-with-different-adjacent-characters",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Tree",
        "Depth-First Search",
        "Graph",
        "Topological Sort"
      ]
    },
    {
      "id": "Problem 2249",
      "name": "count-lattice-points-inside-a-circle",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Geometry",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2247",
      "name": "maximum-cost-of-trip-with-k-highways",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2248",
      "name": "intersection-of-multiple-arrays",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting",
        "Counting"
      ]
    },
    {
      "id": "Problem 2251",
      "name": "number-of-flowers-in-full-bloom",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Sorting",
        "Prefix Sum",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 2253",
      "name": "dynamic-unpivoting-of-a-table",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2252",
      "name": "dynamic-pivoting-of-a-table",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2254",
      "name": "design-video-sharing-platform",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2259",
      "name": "remove-digit-from-number-to-maximize-result",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Greedy",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2260",
      "name": "minimum-consecutive-cards-to-pick-up",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2256",
      "name": "minimum-average-difference",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2255",
      "name": "count-prefixes-of-a-given-string",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String"
      ]
    },
    {
      "id": "Problem 2257",
      "name": "count-unguarded-cells-in-the-grid",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2258",
      "name": "escape-the-spreading-fire",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2261",
      "name": "k-divisible-elements-subarrays",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Trie",
        "Rolling Hash",
        "Hash Function",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2263",
      "name": "make-array-non-decreasing-or-non-increasing",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2262",
      "name": "total-appeal-of-a-string",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2264",
      "name": "largest-3-same-digit-number-in-string",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 2266",
      "name": "count-number-of-texts",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Math",
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2265",
      "name": "count-nodes-equal-to-average-of-subtree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 2268",
      "name": "minimum-number-of-keypresses",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2267",
      "name": "check-if-there-is-a-valid-parentheses-string-path",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2274",
      "name": "maximum-consecutive-floors-without-special-floors",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2270",
      "name": "number-of-ways-to-split-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2269",
      "name": "find-the-k-beauty-of-a-number",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2272",
      "name": "substring-with-largest-variance",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2273",
      "name": "find-resultant-array-after-removing-anagrams",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2271",
      "name": "maximum-white-tiles-covered-by-a-carpet",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Greedy",
        "Sorting",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2275",
      "name": "largest-combination-with-bitwise-and-greater-than-zero",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Bit Manipulation",
        "Counting"
      ]
    },
    {
      "id": "Problem 2276",
      "name": "count-integers-in-intervals",
      "difficulty": "Hard",
      "categories": [
        "Design",
        "Segment Tree",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 2282",
      "name": "number-of-people-that-can-be-seen-in-a-grid",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2280",
      "name": "minimum-lines-to-represent-a-line-chart",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Geometry",
        "Sorting",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2279",
      "name": "maximum-bags-with-full-capacity-of-rocks",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2277",
      "name": "closest-node-to-path-in-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2278",
      "name": "percentage-of-letter-in-string",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 2281",
      "name": "sum-of-total-strength-of-wizards",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Stack",
        "Monotonic Stack",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2283",
      "name": "check-if-number-has-equal-digit-count-and-digit-value",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 2284",
      "name": "sender-with-largest-word-count",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 2291",
      "name": "maximum-profit-from-trading-stocks",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2286",
      "name": "booking-concert-tickets-in-groups",
      "difficulty": "Hard",
      "categories": [
        "Binary Search",
        "Design",
        "Binary Indexed Tree",
        "Segment Tree"
      ]
    },
    {
      "id": "Problem 2287",
      "name": "rearrange-characters-to-make-target-string",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 2285",
      "name": "maximum-total-importance-of-roads",
      "difficulty": "Medium",
      "categories": [
        "Greedy",
        "Graph",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2289",
      "name": "steps-to-make-array-non-decreasing",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Linked List",
        "Stack",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 2290",
      "name": "minimum-obstacle-removal-to-reach-corner",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Breadth-First Search",
        "Graph",
        "Heap (Priority Queue)",
        "Matrix",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 2288",
      "name": "apply-discount-to-prices",
      "difficulty": "Medium",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 2292",
      "name": "products-with-three-or-more-orders-in-two-consecutive-years",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2296",
      "name": "design-a-text-editor",
      "difficulty": "Hard",
      "categories": [
        "Linked List",
        "String",
        "Stack",
        "Design",
        "Simulation",
        "Doubly-Linked List"
      ]
    },
    {
      "id": "Problem 2294",
      "name": "partition-array-such-that-maximum-difference-is-k",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2297",
      "name": "jump-game-viii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2295",
      "name": "replace-elements-in-an-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2298",
      "name": "tasks-count-in-the-weekend",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2299",
      "name": "strong-password-checker-ii",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 2293",
      "name": "min-max-game",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2303",
      "name": "calculate-amount-paid-in-taxes",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2301",
      "name": "match-substring-after-replacement",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "String Matching"
      ]
    },
    {
      "id": "Problem 2302",
      "name": "count-subarrays-with-score-less-than-k",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Sliding Window",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2305",
      "name": "fair-distribution-of-cookies",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 2300",
      "name": "successful-pairs-of-spells-and-potions",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2304",
      "name": "minimum-path-cost-in-a-grid",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2306",
      "name": "naming-a-company",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Bit Manipulation",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2307",
      "name": "check-for-contradictions-in-equations",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2314",
      "name": "the-first-day-of-the-maximum-recorded-degree-in-each-city",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2308",
      "name": "arrange-table-by-gender",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2312",
      "name": "selling-pieces-of-wood",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Memoization"
      ]
    },
    {
      "id": "Problem 2310",
      "name": "sum-of-numbers-with-units-digit-k",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Greedy",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2311",
      "name": "longest-binary-subsequence-less-than-or-equal-to-k",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming",
        "Greedy",
        "Memoization"
      ]
    },
    {
      "id": "Problem 2313",
      "name": "minimum-flips-in-binary-tree-to-get-result",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2309",
      "name": "greatest-english-letter-in-upper-and-lower-case",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2315",
      "name": "count-asterisks",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 2318",
      "name": "number-of-distinct-roll-sequences",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Memoization"
      ]
    },
    {
      "id": "Problem 2317",
      "name": "maximum-xor-after-operations",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2319",
      "name": "check-if-matrix-is-x-matrix",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2321",
      "name": "maximum-score-of-spliced-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2323",
      "name": "find-minimum-time-to-finish-all-jobs-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2320",
      "name": "count-number-of-ways-to-place-houses",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2316",
      "name": "count-unreachable-pairs-of-nodes-in-an-undirected-graph",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 2322",
      "name": "minimum-score-after-removals-on-a-tree",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Bit Manipulation",
        "Tree",
        "Depth-First Search"
      ]
    },
    {
      "id": "Problem 2324",
      "name": "product-sales-analysis-iv",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2326",
      "name": "spiral-matrix-iv",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Linked List",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2325",
      "name": "decode-the-message",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 2329",
      "name": "product-sales-analysis-v",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2330",
      "name": "valid-palindrome-iv",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2327",
      "name": "number-of-people-aware-of-a-secret",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming",
        "Queue",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2331",
      "name": "evaluate-boolean-binary-tree",
      "difficulty": "Easy",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 2328",
      "name": "number-of-increasing-paths-in-a-grid",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Topological Sort",
        "Memoization",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2334",
      "name": "subarray-with-elements-greater-than-varying-threshold",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Stack",
        "Union Find",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 2333",
      "name": "minimum-sum-of-squared-difference",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2332",
      "name": "the-latest-time-to-catch-a-bus",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2335",
      "name": "minimum-amount-of-time-to-fill-cups",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2336",
      "name": "smallest-number-in-infinite-set",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Design",
        "Heap (Priority Queue)",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 2338",
      "name": "count-the-number-of-ideal-arrays",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Combinatorics",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2340",
      "name": "minimum-adjacent-swaps-to-make-a-valid-array",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2337",
      "name": "move-pieces-to-obtain-a-string",
      "difficulty": "Medium",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 2339",
      "name": "all-the-matches-of-the-league",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2341",
      "name": "maximum-number-of-pairs-in-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Counting"
      ]
    },
    {
      "id": "Problem 2342",
      "name": "max-sum-of-a-pair-with-equal-sum-of-digits",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2346",
      "name": "compute-the-rank-as-a-percentage",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2345",
      "name": "finding-the-number-of-visible-mountains",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2348",
      "name": "number-of-zero-filled-subarrays",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 2349",
      "name": "design-a-number-container-system",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Design",
        "Heap (Priority Queue)",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 2347",
      "name": "best-poker-hand",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Counting"
      ]
    },
    {
      "id": "Problem 2344",
      "name": "minimum-deletions-to-make-array-divisible",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Sorting",
        "Heap (Priority Queue)",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2343",
      "name": "query-kth-smallest-trimmed-number",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Divide and Conquer",
        "Sorting",
        "Heap (Priority Queue)",
        "Radix Sort",
        "Quickselect"
      ]
    },
    {
      "id": "Problem 2350",
      "name": "shortest-impossible-sequence-of-rolls",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2352",
      "name": "equal-row-and-column-pairs",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2351",
      "name": "first-letter-to-appear-twice",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Bit Manipulation",
        "Counting"
      ]
    },
    {
      "id": "Problem 2355",
      "name": "maximum-number-of-books-you-can-take",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2353",
      "name": "design-a-food-rating-system",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Design",
        "Heap (Priority Queue)",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 2357",
      "name": "make-array-zero-by-subtracting-equal-amounts",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2354",
      "name": "number-of-excellent-pairs",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2356",
      "name": "number-of-unique-subjects-taught-by-each-teacher",
      "difficulty": "Easy",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 2360",
      "name": "longest-cycle-in-a-graph",
      "difficulty": "Hard",
      "categories": [
        "Depth-First Search",
        "Graph",
        "Topological Sort"
      ]
    },
    {
      "id": "Problem 2358",
      "name": "maximum-number-of-groups-entering-a-competition",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Binary Search",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2359",
      "name": "find-closest-node-to-given-two-nodes",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 2361",
      "name": "minimum-costs-using-the-train-line",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2362",
      "name": "generate-the-invoice",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2365",
      "name": "task-scheduler-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2364",
      "name": "count-number-of-bad-pairs",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Counting"
      ]
    },
    {
      "id": "Problem 2363",
      "name": "merge-similar-items",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 2367",
      "name": "number-of-arithmetic-triplets",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2369",
      "name": "check-if-there-is-a-valid-partition-for-the-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2370",
      "name": "longest-ideal-subsequence",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2366",
      "name": "minimum-replacements-to-sort-the-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2368",
      "name": "reachable-nodes-with-restrictions",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 2371",
      "name": "minimize-maximum-value-in-a-grid",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2373",
      "name": "largest-local-values-in-a-matrix",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2374",
      "name": "node-with-highest-edge-score",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Graph"
      ]
    },
    {
      "id": "Problem 2372",
      "name": "calculate-the-influence-of-each-salesperson",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2375",
      "name": "construct-smallest-number-from-di-string",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Backtracking",
        "Stack",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2376",
      "name": "count-special-integers",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2378",
      "name": "choose-edges-to-maximize-score-in-a-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2379",
      "name": "minimum-recolors-to-get-k-consecutive-black-blocks",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2377",
      "name": "sort-the-olympic-table",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2381",
      "name": "shifting-letters-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2380",
      "name": "time-needed-to-rearrange-a-binary-string",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2386",
      "name": "find-the-k-sum-of-an-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2382",
      "name": "maximum-segment-sum-after-removals",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Union Find",
        "Prefix Sum",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 2385",
      "name": "amount-of-time-for-binary-tree-to-be-infected",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 2384",
      "name": "largest-palindromic-number",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Greedy",
        "Counting"
      ]
    },
    {
      "id": "Problem 2383",
      "name": "minimum-hours-of-training-to-win-a-competition",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2387",
      "name": "median-of-a-row-wise-sorted-matrix",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2388",
      "name": "change-null-values-in-a-table-to-the-previous-value",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2389",
      "name": "longest-subsequence-with-limited-sum",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Binary Search",
        "Greedy",
        "Sorting",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2390",
      "name": "removing-stars-from-a-string",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Stack",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2392",
      "name": "build-a-matrix-with-conditions",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Graph",
        "Topological Sort",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2395",
      "name": "find-subarrays-with-equal-sum",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 2396",
      "name": "strictly-palindromic-number",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Two Pointers",
        "Brainteaser"
      ]
    },
    {
      "id": "Problem 2393",
      "name": "count-strictly-increasing-subarrays",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2397",
      "name": "maximum-rows-covered-by-columns",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Backtracking",
        "Bit Manipulation",
        "Matrix",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2394",
      "name": "employees-with-deductions",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2391",
      "name": "minimum-amount-of-time-to-collect-garbage",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2400",
      "name": "number-of-ways-to-reach-a-position-after-exactly-k-steps",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 2399",
      "name": "check-distances-between-same-letters",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 2398",
      "name": "maximum-number-of-robots-within-budget",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Queue",
        "Sliding Window",
        "Heap (Priority Queue)",
        "Prefix Sum",
        "Monotonic Queue"
      ]
    },
    {
      "id": "Problem 2401",
      "name": "longest-nice-subarray",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Bit Manipulation",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2402",
      "name": "meeting-rooms-iii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting",
        "Heap (Priority Queue)",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2405",
      "name": "optimal-partition-of-string",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2404",
      "name": "most-frequent-even-element",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Counting"
      ]
    },
    {
      "id": "Problem 2403",
      "name": "minimum-time-to-kill-all-monsters",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2406",
      "name": "divide-intervals-into-minimum-number-of-groups",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2407",
      "name": "longest-increasing-subsequence-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Divide and Conquer",
        "Dynamic Programming",
        "Binary Indexed Tree",
        "Segment Tree",
        "Queue",
        "Monotonic Queue"
      ]
    },
    {
      "id": "Problem 2408",
      "name": "design-sql",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2411",
      "name": "smallest-subarrays-with-maximum-bitwise-or",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Bit Manipulation",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2413",
      "name": "smallest-even-multiple",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2410",
      "name": "maximum-matching-of-players-with-trainers",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2415",
      "name": "reverse-odd-levels-of-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 2414",
      "name": "length-of-the-longest-alphabetical-continuous-substring",
      "difficulty": "Medium",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 2412",
      "name": "minimum-money-required-before-transactions",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2416",
      "name": "sum-of-prefix-scores-of-strings",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Trie",
        "Counting"
      ]
    },
    {
      "id": "Problem 2417",
      "name": "closest-fair-integer",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2418",
      "name": "sort-the-people",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2419",
      "name": "longest-subarray-with-maximum-bitwise-and",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Bit Manipulation",
        "Brainteaser"
      ]
    },
    {
      "id": "Problem 2409",
      "name": "count-days-spent-together",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 2422",
      "name": "merge-operations-to-turn-array-into-a-palindrome",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2420",
      "name": "find-all-good-indices",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2421",
      "name": "number-of-good-paths",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Tree",
        "Union Find",
        "Graph",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2423",
      "name": "remove-letter-to-equalize-frequency",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 2427",
      "name": "number-of-common-factors",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Enumeration",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2425",
      "name": "bitwise-xor-of-all-pairings",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Bit Manipulation",
        "Brainteaser"
      ]
    },
    {
      "id": "Problem 2424",
      "name": "longest-uploaded-prefix",
      "difficulty": "Medium",
      "categories": [
        "Binary Search",
        "Union Find",
        "Design",
        "Binary Indexed Tree",
        "Segment Tree",
        "Heap (Priority Queue)",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 2426",
      "name": "number-of-pairs-satisfying-inequality",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Divide and Conquer",
        "Binary Indexed Tree",
        "Segment Tree",
        "Merge Sort",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 2429",
      "name": "minimize-xor",
      "difficulty": "Medium",
      "categories": [
        "Greedy",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2428",
      "name": "maximum-sum-of-an-hourglass",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2430",
      "name": "maximum-deletions-on-a-string",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming",
        "Rolling Hash",
        "String Matching",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 2433",
      "name": "find-the-original-array-of-prefix-xor",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2434",
      "name": "using-a-robot-to-print-the-lexicographically-smallest-string",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Stack",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2431",
      "name": "maximize-total-tastiness-of-purchased-fruits",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2435",
      "name": "paths-in-matrix-whose-sum-is-divisible-by-k",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2432",
      "name": "the-employee-that-worked-on-the-longest-task",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 2436",
      "name": "minimum-split-into-subarrays-with-gcd-greater-than-one",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2438",
      "name": "range-product-queries-of-powers",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Bit Manipulation",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2437",
      "name": "number-of-valid-clock-times",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2445",
      "name": "number-of-nodes-with-value-one",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2443",
      "name": "sum-of-number-and-its-reverse",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2442",
      "name": "count-number-of-distinct-integers-after-reverse-operations",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Counting"
      ]
    },
    {
      "id": "Problem 2439",
      "name": "minimize-maximum-of-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Dynamic Programming",
        "Greedy",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2444",
      "name": "count-subarrays-with-fixed-bounds",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Queue",
        "Sliding Window",
        "Monotonic Queue"
      ]
    },
    {
      "id": "Problem 2441",
      "name": "largest-positive-integer-that-exists-with-its-negative",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2440",
      "name": "create-components-with-same-value",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Tree",
        "Depth-First Search",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2446",
      "name": "determine-if-two-events-have-conflict",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String"
      ]
    },
    {
      "id": "Problem 2450",
      "name": "number-of-distinct-binary-strings-after-applying-operations",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2447",
      "name": "number-of-subarrays-with-gcd-equal-to-k",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2451",
      "name": "odd-string-difference",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 2452",
      "name": "words-within-two-edits-of-dictionary",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String"
      ]
    },
    {
      "id": "Problem 2454",
      "name": "next-greater-element-iv",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Stack",
        "Sorting",
        "Heap (Priority Queue)",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 2453",
      "name": "destroy-sequential-targets",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Counting"
      ]
    },
    {
      "id": "Problem 2448",
      "name": "minimum-cost-to-make-array-equal",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Greedy",
        "Sorting",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2449",
      "name": "minimum-number-of-operations-to-make-arrays-similar",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2459",
      "name": "sort-array-by-moving-items-to-empty-space",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2455",
      "name": "average-value-of-even-numbers-that-are-divisible-by-three",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 2460",
      "name": "apply-operations-to-an-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2457",
      "name": "minimum-addition-to-make-integer-beautiful",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2458",
      "name": "height-of-binary-tree-after-subtree-removal-queries",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 2456",
      "name": "most-popular-video-creator",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2461",
      "name": "maximum-sum-of-distinct-subarrays-with-length-k",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2462",
      "name": "total-cost-to-hire-k-workers",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Heap (Priority Queue)",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2464",
      "name": "minimum-subarrays-in-a-valid-split",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2466",
      "name": "count-ways-to-build-good-strings",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2468",
      "name": "split-message-based-on-limit",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 2465",
      "name": "number-of-distinct-averages",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2467",
      "name": "most-profitable-path-in-a-tree",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 2463",
      "name": "minimum-total-distance-traveled",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2469",
      "name": "convert-the-temperature",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 2470",
      "name": "number-of-subarrays-with-lcm-equal-to-k",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2473",
      "name": "minimum-cost-to-buy-apples",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2472",
      "name": "maximum-number-of-non-overlapping-palindrome-substrings",
      "difficulty": "Hard",
      "categories": [
        "Two Pointers",
        "String",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2471",
      "name": "minimum-number-of-operations-to-sort-a-binary-tree-by-level",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 2474",
      "name": "customers-with-strictly-increasing-purchases",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2475",
      "name": "number-of-unequal-triplets-in-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2476",
      "name": "closest-nodes-queries-in-a-binary-search-tree",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 2478",
      "name": "number-of-beautiful-partitions",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2481",
      "name": "minimum-cuts-to-divide-a-circle",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Geometry"
      ]
    },
    {
      "id": "Problem 2477",
      "name": "minimum-fuel-cost-to-report-to-the-capital",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 2480",
      "name": "form-a-chemical-bond",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2479",
      "name": "maximum-xor-of-two-non-overlapping-subtrees",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2484",
      "name": "count-palindromic-subsequences",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2482",
      "name": "difference-between-ones-and-zeros-in-row-and-column",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2483",
      "name": "minimum-penalty-for-a-shop",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2488",
      "name": "count-subarrays-with-median-k",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2487",
      "name": "remove-nodes-from-linked-list",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Stack",
        "Recursion",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 2486",
      "name": "append-characters-to-string-to-make-subsequence",
      "difficulty": "Medium",
      "categories": [
        "Two Pointers",
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2490",
      "name": "circular-sentence",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 2489",
      "name": "number-of-substrings-with-fixed-ratio",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2485",
      "name": "find-the-pivot-integer",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2491",
      "name": "divide-players-into-teams-of-equal-skill",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2492",
      "name": "minimum-score-of-a-path-between-two-cities",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 2499",
      "name": "minimum-total-cost-to-make-arrays-unequal",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Counting"
      ]
    },
    {
      "id": "Problem 2495",
      "name": "number-of-subarrays-having-even-product",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2494",
      "name": "merge-overlapping-events-in-the-same-hall",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2493",
      "name": "divide-nodes-into-the-maximum-number-of-groups",
      "difficulty": "Hard",
      "categories": [
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 2498",
      "name": "frog-jump-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2496",
      "name": "maximum-value-of-a-string-in-an-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String"
      ]
    },
    {
      "id": "Problem 2500",
      "name": "delete-greatest-value-in-each-row",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sorting",
        "Heap (Priority Queue)",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2497",
      "name": "maximum-star-sum-of-a-graph",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Graph",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2505",
      "name": "bitwise-or-of-all-subsequence-sums",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2506",
      "name": "count-pairs-of-similar-strings",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Bit Manipulation",
        "Counting"
      ]
    },
    {
      "id": "Problem 2508",
      "name": "add-edges-to-make-degrees-of-all-nodes-even",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "Graph"
      ]
    },
    {
      "id": "Problem 2504",
      "name": "concatenate-the-name-and-the-profession",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2507",
      "name": "smallest-value-after-replacing-with-sum-of-prime-factors",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Simulation",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2501",
      "name": "longest-square-streak-in-an-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Dynamic Programming",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2503",
      "name": "maximum-number-of-points-from-grid-queries",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Two Pointers",
        "Breadth-First Search",
        "Union Find",
        "Sorting",
        "Heap (Priority Queue)",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2502",
      "name": "design-memory-allocator",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Design",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2511",
      "name": "maximum-enemy-forts-that-can-be-captured",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 2509",
      "name": "cycle-length-queries-in-a-tree",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 2510",
      "name": "check-if-there-is-a-path-with-equal-number-of-0's-and-1's",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2516",
      "name": "take-k-of-each-character-from-left-and-right",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2515",
      "name": "shortest-distance-to-target-string-in-a-circular-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String"
      ]
    },
    {
      "id": "Problem 2513",
      "name": "minimize-the-maximum-of-two-arrays",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Binary Search",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2518",
      "name": "number-of-great-partitions",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2519",
      "name": "count-the-number-of-k-big-indices",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2517",
      "name": "maximum-tastiness-of-candy-basket",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2512",
      "name": "reward-top-k-students",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2514",
      "name": "count-anagrams",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "Math",
        "String",
        "Combinatorics",
        "Counting"
      ]
    },
    {
      "id": "Problem 2521",
      "name": "distinct-prime-factors-of-product-of-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2520",
      "name": "count-the-digits-that-divide-a-number",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 2522",
      "name": "partition-string-into-substrings-with-values-at-most-k",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2524",
      "name": "maximum-frequency-score-of-a-subarray",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2526",
      "name": "find-consecutive-integers-from-a-data-stream",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Design",
        "Queue",
        "Counting",
        "Data Stream"
      ]
    },
    {
      "id": "Problem 2527",
      "name": "find-xor-beauty-of-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2523",
      "name": "closest-prime-numbers-in-range",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2525",
      "name": "categorize-box-according-to-criteria",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 2528",
      "name": "maximize-the-minimum-powered-city",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Greedy",
        "Queue",
        "Sliding Window",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2529",
      "name": "maximum-count-of-positive-integer-and-negative-integer",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Binary Search",
        "Counting"
      ]
    },
    {
      "id": "Problem 2530",
      "name": "maximal-score-after-applying-k-operations",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2534",
      "name": "time-taken-to-cross-the-door",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2531",
      "name": "make-number-of-distinct-characters-equal",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 2533",
      "name": "number-of-good-binary-strings",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2532",
      "name": "time-to-cross-a-bridge",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Heap (Priority Queue)",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2536",
      "name": "increment-submatrices-by-one",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2535",
      "name": "difference-between-element-sum-and-digit-sum-of-an-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 2537",
      "name": "count-the-number-of-good-subarrays",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2539",
      "name": "count-the-number-of-good-subsequences",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2538",
      "name": "difference-between-maximum-and-minimum-price-sum",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Tree",
        "Depth-First Search"
      ]
    },
    {
      "id": "Problem 2540",
      "name": "minimum-common-value",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 2545",
      "name": "sort-the-students-by-their-kth-score",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sorting",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2544",
      "name": "alternating-digit-sum",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 2542",
      "name": "maximum-subsequence-score",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2541",
      "name": "minimum-operations-to-make-array-equal-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2543",
      "name": "check-if-point-is-reachable",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2546",
      "name": "apply-bitwise-operations-to-make-strings-equal",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2547",
      "name": "minimum-cost-to-split-an-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Dynamic Programming",
        "Counting"
      ]
    },
    {
      "id": "Problem 2551",
      "name": "put-marbles-in-bags",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2550",
      "name": "count-collisions-of-monkeys-on-a-polygon",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Recursion"
      ]
    },
    {
      "id": "Problem 2549",
      "name": "count-distinct-numbers-on-board",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2553",
      "name": "separate-the-digits-in-an-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2548",
      "name": "maximum-price-to-fill-a-bag",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2552",
      "name": "count-increasing-quadruplets",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Binary Indexed Tree",
        "Enumeration",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2555",
      "name": "maximize-win-from-two-segments",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2559",
      "name": "count-vowel-strings-in-ranges",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2557",
      "name": "maximum-number-of-integers-to-choose-from-a-range-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2560",
      "name": "house-robber-iv",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 2554",
      "name": "maximum-number-of-integers-to-choose-from-a-range-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2561",
      "name": "rearranging-fruits",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2556",
      "name": "disconnect-path-in-a-binary-matrix-by-at-most-one-flip",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Depth-First Search",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2558",
      "name": "take-gifts-from-the-richest-pile",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Heap (Priority Queue)",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2563",
      "name": "count-the-number-of-fair-pairs",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2562",
      "name": "find-the-array-concatenation-value",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2564",
      "name": "substring-xor-queries",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2565",
      "name": "subsequence-with-the-minimum-score",
      "difficulty": "Hard",
      "categories": [
        "Two Pointers",
        "String",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 2566",
      "name": "maximum-difference-by-remapping-a-digit",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2567",
      "name": "minimum-score-by-changing-two-elements",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2568",
      "name": "minimum-impossible-or",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Bit Manipulation",
        "Brainteaser"
      ]
    },
    {
      "id": "Problem 2569",
      "name": "handling-sum-queries-after-update",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Segment Tree"
      ]
    },
    {
      "id": "Problem 2574",
      "name": "left-and-right-sum-differences",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2570",
      "name": "merge-two-2d-arrays-by-summing-values",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 2571",
      "name": "minimum-operations-to-reduce-an-integer-to-0",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming",
        "Greedy",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2572",
      "name": "count-the-number-of-square-free-subsets",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 2573",
      "name": "find-the-string-with-lcp",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Dynamic Programming",
        "Greedy",
        "Union Find",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2575",
      "name": "find-the-divisibility-array-of-a-string",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 2576",
      "name": "find-the-maximum-number-of-marked-indices",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2581",
      "name": "count-number-of-possible-root-nodes",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Dynamic Programming",
        "Tree",
        "Depth-First Search"
      ]
    },
    {
      "id": "Problem 2580",
      "name": "count-ways-to-group-overlapping-ranges",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2579",
      "name": "count-total-number-of-colored-cells",
      "difficulty": "Medium",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 2577",
      "name": "minimum-time-to-visit-a-cell-in-a-grid",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Breadth-First Search",
        "Graph",
        "Heap (Priority Queue)",
        "Matrix",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 2578",
      "name": "split-with-minimum-sum",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2583",
      "name": "kth-largest-sum-in-a-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Breadth-First Search",
        "Sorting",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 2582",
      "name": "pass-the-pillow",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2585",
      "name": "number-of-ways-to-earn-points",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2591",
      "name": "distribute-money-to-maximum-children",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2590",
      "name": "design-a-todo-list",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2588",
      "name": "count-the-number-of-beautiful-subarrays",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Bit Manipulation",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2589",
      "name": "minimum-time-to-complete-all-tasks",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Stack",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2587",
      "name": "rearrange-array-to-maximize-prefix-score",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2584",
      "name": "split-the-array-to-make-coprime-products",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2594",
      "name": "minimum-time-to-repair-cars",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 2595",
      "name": "number-of-even-and-odd-bits",
      "difficulty": "Easy",
      "categories": [
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2596",
      "name": "check-knight-tour-configuration",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2586",
      "name": "count-the-number-of-vowel-strings-in-range",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 2592",
      "name": "maximize-greatness-of-an-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2593",
      "name": "find-score-of-an-array-after-marking-all-elements",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting",
        "Heap (Priority Queue)",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2597",
      "name": "the-number-of-beautiful-subsets",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Dynamic Programming",
        "Backtracking",
        "Sorting",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 2603",
      "name": "collect-coins-in-a-tree",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Tree",
        "Graph",
        "Topological Sort"
      ]
    },
    {
      "id": "Problem 2602",
      "name": "minimum-operations-to-make-all-array-elements-equal",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Sorting",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2605",
      "name": "form-smallest-number-from-two-digit-arrays",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2608",
      "name": "shortest-cycle-in-a-graph",
      "difficulty": "Hard",
      "categories": [
        "Breadth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 2599",
      "name": "make-the-prefix-sum-non-negative",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2607",
      "name": "make-k-subarray-sums-equal",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Sorting",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2601",
      "name": "prime-subtraction-operation",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Binary Search",
        "Greedy",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2598",
      "name": "smallest-missing-non-negative-integer-after-operations",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2609",
      "name": "find-the-longest-balanced-substring-of-a-binary-string",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 2600",
      "name": "k-items-with-the-maximum-sum",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2611",
      "name": "mice-and-cheese",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2604",
      "name": "minimum-time-to-eat-all-grains",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2610",
      "name": "convert-an-array-into-a-2d-array-with-conditions",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 2606",
      "name": "find-the-substring-with-maximum-cost",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2615",
      "name": "sum-of-distances",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2613",
      "name": "beautiful-pairs",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2618",
      "name": "check-if-object-instance-of-class",
      "difficulty": "Medium",
      "categories": []
    },
    {
      "id": "Problem 2616",
      "name": "minimize-the-maximum-difference-of-pairs",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2619",
      "name": "array-prototype-last",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2614",
      "name": "prime-in-diagonal",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math",
        "Matrix",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2612",
      "name": "minimum-reverse-operations",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Breadth-First Search",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 2617",
      "name": "minimum-number-of-visited-cells-in-a-grid",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Stack",
        "Breadth-First Search",
        "Union Find",
        "Heap (Priority Queue)",
        "Matrix",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 2621",
      "name": "sleep",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2623",
      "name": "memoize",
      "difficulty": "Medium",
      "categories": []
    },
    {
      "id": "Problem 2620",
      "name": "counter",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2622",
      "name": "cache-with-time-limit",
      "difficulty": "Medium",
      "categories": []
    },
    {
      "id": "Problem 2625",
      "name": "flatten-deeply-nested-array",
      "difficulty": "Medium",
      "categories": []
    },
    {
      "id": "Problem 2624",
      "name": "snail-traversal",
      "difficulty": "Medium",
      "categories": []
    },
    {
      "id": "Problem 2627",
      "name": "debounce",
      "difficulty": "Medium",
      "categories": []
    },
    {
      "id": "Problem 2630",
      "name": "memoize-ii",
      "difficulty": "Hard",
      "categories": []
    },
    {
      "id": "Problem 2629",
      "name": "function-composition",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2628",
      "name": "json-deep-equal",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2631",
      "name": "group-by",
      "difficulty": "Medium",
      "categories": []
    },
    {
      "id": "Problem 2626",
      "name": "array-reduce-transformation",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2632",
      "name": "curry",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2634",
      "name": "filter-elements-from-array",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2633",
      "name": "convert-object-to-json-string",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2638",
      "name": "count-the-number-of-k-free-subsets",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2639",
      "name": "find-the-width-of-columns-of-a-grid",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2636",
      "name": "promise-pool",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2635",
      "name": "apply-transform-over-each-element-in-array",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2637",
      "name": "promise-time-limit",
      "difficulty": "Medium",
      "categories": []
    },
    {
      "id": "Problem 2640",
      "name": "find-the-score-of-all-prefixes-of-an-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2642",
      "name": "design-graph-with-shortest-path-calculator",
      "difficulty": "Hard",
      "categories": [
        "Graph",
        "Design",
        "Heap (Priority Queue)",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 2641",
      "name": "cousins-in-binary-tree-ii",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 2643",
      "name": "row-with-maximum-ones",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2646",
      "name": "minimize-the-total-price-of-the-trips",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Tree",
        "Depth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 2645",
      "name": "minimum-additions-to-make-valid-string",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming",
        "Stack",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2647",
      "name": "color-the-triangle-red",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2644",
      "name": "find-the-maximum-divisibility-score",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 2648",
      "name": "generate-fibonacci-sequence",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2651",
      "name": "calculate-delayed-arrival-time",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 2649",
      "name": "nested-array-generator",
      "difficulty": "Medium",
      "categories": []
    },
    {
      "id": "Problem 2650",
      "name": "design-cancellable-function",
      "difficulty": "Hard",
      "categories": []
    },
    {
      "id": "Problem 2652",
      "name": "sum-multiples",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 2653",
      "name": "sliding-subarray-beauty",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2654",
      "name": "minimum-number-of-operations-to-make-all-array-elements-equal-to-1",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2656",
      "name": "maximum-sum-with-exactly-k-elements",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2655",
      "name": "find-maximal-uncovered-ranges",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2657",
      "name": "find-the-prefix-common-array-of-two-arrays",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2658",
      "name": "maximum-number-of-fish-in-a-grid",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2659",
      "name": "make-array-empty",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Greedy",
        "Binary Indexed Tree",
        "Segment Tree",
        "Sorting",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 2660",
      "name": "determine-the-winner-of-a-bowling-game",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2661",
      "name": "first-completely-painted-row-or-column",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2662",
      "name": "minimum-cost-of-a-path-with-special-roads",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Graph",
        "Heap (Priority Queue)",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 2663",
      "name": "lexicographically-smallest-beautiful-string",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2664",
      "name": "the-knight\u2019s-tour",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2665",
      "name": "counter-ii",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2666",
      "name": "allow-one-function-call",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2668",
      "name": "find-latest-salaries",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2667",
      "name": "create-hello-world-function",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2672",
      "name": "number-of-adjacent-elements-with-the-same-color",
      "difficulty": "Medium",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 2671",
      "name": "frequency-tracker",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Design"
      ]
    },
    {
      "id": "Problem 2669",
      "name": "count-artist-occurrences-on-spotify-ranking-list",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2670",
      "name": "find-the-distinct-difference-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 2674",
      "name": "split-a-circular-linked-list",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2673",
      "name": "make-costs-of-paths-equal-in-a-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy",
        "Tree",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 2675",
      "name": "array-of-objects-to-matrix",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2676",
      "name": "throttle",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2677",
      "name": "chunk-array",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2679",
      "name": "sum-in-a-matrix",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sorting",
        "Heap (Priority Queue)",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2678",
      "name": "number-of-senior-citizens",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String"
      ]
    },
    {
      "id": "Problem 2680",
      "name": "maximum-or",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Bit Manipulation",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2681",
      "name": "power-of-heroes",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Sorting",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2682",
      "name": "find-the-losers-of-the-circular-game",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2683",
      "name": "neighboring-bitwise-xor",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2686",
      "name": "immediate-food-delivery-iii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2687",
      "name": "bikes-last-time-used",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2684",
      "name": "maximum-number-of-moves-in-a-grid",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2685",
      "name": "count-the-number-of-complete-components",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 2690",
      "name": "infinite-method-object",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2691",
      "name": "immutability-helper",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2688",
      "name": "find-active-users",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2695",
      "name": "array-wrapper",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2694",
      "name": "event-emitter",
      "difficulty": "Medium",
      "categories": []
    },
    {
      "id": "Problem 2692",
      "name": "make-object-immutable",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2693",
      "name": "call-function-with-custom-context",
      "difficulty": "Medium",
      "categories": []
    },
    {
      "id": "Problem 2689",
      "name": "extract-kth-character-from-the-rope-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2696",
      "name": "minimum-string-length-after-removing-substrings",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Stack",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2697",
      "name": "lexicographically-smallest-palindrome",
      "difficulty": "Easy",
      "categories": [
        "Two Pointers",
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2700",
      "name": "differences-between-two-objects",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2705",
      "name": "compact-object",
      "difficulty": "Medium",
      "categories": []
    },
    {
      "id": "Problem 2699",
      "name": "modify-graph-edge-weights",
      "difficulty": "Hard",
      "categories": [
        "Graph",
        "Heap (Priority Queue)",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 2703",
      "name": "return-length-of-arguments-passed",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2698",
      "name": "find-the-punishment-number-of-an-integer",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 2701",
      "name": "consecutive-transactions-with-increasing-amounts",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2704",
      "name": "to-be-or-not-to-be",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2702",
      "name": "minimum-operations-to-make-numbers-non-positive",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2709",
      "name": "greatest-common-divisor-traversal",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Union Find",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2706",
      "name": "buy-two-chocolates",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2707",
      "name": "extra-characters-in-a-string",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Dynamic Programming",
        "Trie"
      ]
    },
    {
      "id": "Problem 2710",
      "name": "remove-trailing-zeros-from-a-string",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 2708",
      "name": "maximum-strength-of-a-group",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Backtracking",
        "Greedy",
        "Bit Manipulation",
        "Sorting",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2711",
      "name": "difference-of-number-of-distinct-values-on-diagonals",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2712",
      "name": "minimum-cost-to-make-all-characters-equal",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2713",
      "name": "maximum-strictly-increasing-cells-in-a-matrix",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Dynamic Programming",
        "Memoization",
        "Sorting",
        "Matrix",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 2716",
      "name": "minimize-string-length",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 2717",
      "name": "semi-ordered-permutation",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2714",
      "name": "find-shortest-path-with-k-hops",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2718",
      "name": "sum-of-matrix-after-queries",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 2715",
      "name": "timeout-cancellation",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2719",
      "name": "count-of-integers",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2720",
      "name": "popularity-percentage",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2722",
      "name": "join-two-arrays-by-id",
      "difficulty": "Medium",
      "categories": []
    },
    {
      "id": "Problem 2721",
      "name": "execute-asynchronous-functions-in-parallel",
      "difficulty": "Medium",
      "categories": []
    },
    {
      "id": "Problem 2725",
      "name": "interval-cancellation",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2726",
      "name": "calculator-with-method-chaining",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2723",
      "name": "add-two-promises",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2727",
      "name": "is-object-empty",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2724",
      "name": "sort-by",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2728",
      "name": "count-houses-in-a-circular-street",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2729",
      "name": "check-if-the-number-is-fascinating",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "Math"
      ]
    },
    {
      "id": "Problem 2730",
      "name": "find-the-longest-semi-repetitive-substring",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2731",
      "name": "movement-of-robots",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Brainteaser",
        "Sorting",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2734",
      "name": "lexicographically-smallest-string-after-substring-operation",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2733",
      "name": "neither-minimum-nor-maximum",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2732",
      "name": "find-a-good-subset-of-the-matrix",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Bit Manipulation",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2737",
      "name": "find-the-closest-marked-node",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2735",
      "name": "collecting-chocolates",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2738",
      "name": "count-occurrences-in-text",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2736",
      "name": "maximum-sum-queries",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Stack",
        "Binary Indexed Tree",
        "Segment Tree",
        "Sorting",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 2739",
      "name": "total-distance-traveled",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2741",
      "name": "special-permutations",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 2740",
      "name": "find-the-value-of-the-partition",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2742",
      "name": "painting-the-walls",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2745",
      "name": "construct-the-longest-new-string",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Greedy",
        "Brainteaser"
      ]
    },
    {
      "id": "Problem 2744",
      "name": "find-maximum-number-of-string-pairs",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2743",
      "name": "count-substrings-without-repeating-character",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2746",
      "name": "decremental-string-concatenation",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2747",
      "name": "count-zero-request-servers",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sliding Window",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2749",
      "name": "minimum-operations-to-make-the-integer-zero",
      "difficulty": "Medium",
      "categories": [
        "Bit Manipulation",
        "Brainteaser"
      ]
    },
    {
      "id": "Problem 2750",
      "name": "ways-to-split-array-into-good-subarrays",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2748",
      "name": "number-of-beautiful-pairs",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Counting",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2752",
      "name": "customers-with-maximum-number-of-transactions-on-consecutive-days",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2754",
      "name": "bind-function-to-context",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2753",
      "name": "count-houses-in-a-circular-street-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2751",
      "name": "robot-collisions",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Stack",
        "Sorting",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2755",
      "name": "deep-merge-of-two-objects",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2757",
      "name": "generate-circular-array-values",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2756",
      "name": "query-batching",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2758",
      "name": "next-day",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2761",
      "name": "prime-pairs-with-target-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Enumeration",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2759",
      "name": "convert-json-string-to-object",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2762",
      "name": "continuous-subarrays",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Queue",
        "Sliding Window",
        "Heap (Priority Queue)",
        "Ordered Set",
        "Monotonic Queue"
      ]
    },
    {
      "id": "Problem 2760",
      "name": "longest-even-odd-subarray-with-threshold",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2765",
      "name": "longest-alternating-subarray",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2766",
      "name": "relocate-marbles",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2764",
      "name": "is-array-a-preorder-of-some-\u200cbinary-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2763",
      "name": "sum-of-imbalance-numbers-of-all-subarrays",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 2767",
      "name": "partition-string-into-minimum-beautiful-substrings",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Dynamic Programming",
        "Backtracking"
      ]
    },
    {
      "id": "Problem 2768",
      "name": "number-of-black-blocks",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2770",
      "name": "maximum-number-of-jumps-to-reach-the-last-index",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2769",
      "name": "find-the-maximum-achievable-number",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 2772",
      "name": "apply-operations-to-make-all-array-elements-equal-to-zero",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2773",
      "name": "height-of-special-binary-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2771",
      "name": "longest-non-decreasing-subarray-from-two-arrays",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2776",
      "name": "convert-callback-based-function-to-promise-based-function",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2777",
      "name": "date-range-generator",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2778",
      "name": "sum-of-squares-of-special-elements",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2775",
      "name": "undefined-to-null",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2774",
      "name": "array-upper-bound",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2782",
      "name": "number-of-unique-categories",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2779",
      "name": "maximum-beauty-of-an-array-after-applying-operation",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Sliding Window",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2781",
      "name": "length-of-the-longest-valid-substring",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2780",
      "name": "minimum-index-of-a-valid-split",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2783",
      "name": "flight-occupancy-and-waitlist-analysis",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2785",
      "name": "sort-vowels-in-a-string",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2784",
      "name": "check-if-array-is-good",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2786",
      "name": "visit-array-positions-to-maximize-score",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2787",
      "name": "ways-to-express-an-integer-as-sum-of-powers",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2792",
      "name": "count-nodes-that-are-great-enough",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2791",
      "name": "count-paths-that-can-form-a-palindrome-in-a-tree",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Bit Manipulation",
        "Tree",
        "Depth-First Search",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 2789",
      "name": "largest-element-in-an-array-after-merge-operations",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2790",
      "name": "maximum-number-of-groups-with-increasing-length",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Binary Search",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2788",
      "name": "split-strings-by-separator",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String"
      ]
    },
    {
      "id": "Problem 2793",
      "name": "status-of-flight-tickets",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2794",
      "name": "create-object-from-two-arrays",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2795",
      "name": "parallel-execution-of-promises-for-individual-results-retrieval",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2796",
      "name": "repeat-string",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2797",
      "name": "partial-function-with-placeholders",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2801",
      "name": "count-stepping-numbers-in-range",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2802",
      "name": "find-the-k-th-lucky-number",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2799",
      "name": "count-complete-subarrays-in-an-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2798",
      "name": "number-of-employees-who-met-the-target",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 2800",
      "name": "shortest-string-that-contains-three-strings",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Greedy",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2803",
      "name": "factorial-generator",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2805",
      "name": "custom-interval",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2804",
      "name": "array-prototype-foreach",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2810",
      "name": "faulty-keyboard",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2808",
      "name": "minimum-seconds-to-equalize-a-circular-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 2807",
      "name": "insert-greatest-common-divisors-in-linked-list",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Math",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2809",
      "name": "minimum-time-to-make-array-sum-at-most-x",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2806",
      "name": "account-balance-after-rounded-purchase",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 2811",
      "name": "check-if-it-is-possible-to-split-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2813",
      "name": "maximum-elegance-of-a-k-length-subsequence",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Stack",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2812",
      "name": "find-the-safest-path-in-a-grid",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2819",
      "name": "minimum-relative-loss-after-buying-chocolates",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2814",
      "name": "minimum-time-takes-to-reach-destination-without-drowning",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2815",
      "name": "max-pair-sum-in-an-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 2818",
      "name": "apply-operations-to-maximize-score",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Stack",
        "Greedy",
        "Monotonic Stack",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2816",
      "name": "double-a-number-represented-as-a-linked-list",
      "difficulty": "Medium",
      "categories": [
        "Linked List",
        "Math",
        "Stack"
      ]
    },
    {
      "id": "Problem 2817",
      "name": "minimum-absolute-difference-between-elements-with-constraint",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 2821",
      "name": "delay-the-resolution-of-each-promise",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2820",
      "name": "election-results",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2822",
      "name": "inversion-of-object",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2823",
      "name": "deep-object-filter",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2827",
      "name": "number-of-beautiful-integers-in-the-range",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2825",
      "name": "make-string-a-subsequence-using-cyclic-increments",
      "difficulty": "Medium",
      "categories": [
        "Two Pointers",
        "String"
      ]
    },
    {
      "id": "Problem 2826",
      "name": "sorting-three-groups",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2824",
      "name": "count-pairs-whose-sum-is-less-than-target",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2828",
      "name": "check-if-a-string-is-an-acronym-of-words",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String"
      ]
    },
    {
      "id": "Problem 2829",
      "name": "determine-the-minimum-sum-of-a-k-avoiding-array",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2830",
      "name": "maximize-the-profit-as-the-salesman",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Dynamic Programming",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2832",
      "name": "maximal-range-that-each-element-is-maximum-in-it",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2831",
      "name": "find-the-longest-equal-subarray",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2835",
      "name": "minimum-operations-to-form-subsequence-with-target-sum",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2833",
      "name": "furthest-point-from-origin",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 2836",
      "name": "maximize-value-of-function-in-a-ball-passing-game",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2834",
      "name": "find-the-minimum-possible-sum-of-a-beautiful-array",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2837",
      "name": "total-traveled-distance",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2838",
      "name": "maximum-coins-heroes-can-collect",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2840",
      "name": "check-if-strings-can-be-made-equal-with-operations-ii",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2839",
      "name": "check-if-strings-can-be-made-equal-with-operations-i",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 2841",
      "name": "maximum-sum-of-almost-unique-subarray",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2842",
      "name": "count-k-subsequences-of-a-string-with-maximum-beauty",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "Math",
        "String",
        "Greedy",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 2843",
      "name": "count-symmetric-integers",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2844",
      "name": "minimum-operations-to-make-a-special-number",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "String",
        "Greedy",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2845",
      "name": "count-of-interesting-subarrays",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2847",
      "name": "smallest-number-with-given-digit-product",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2846",
      "name": "minimum-edge-weight-equilibrium-queries-in-a-tree",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Tree",
        "Graph",
        "Strongly Connected Component"
      ]
    },
    {
      "id": "Problem 2849",
      "name": "determine-if-a-cell-is-reachable-at-a-given-time",
      "difficulty": "Medium",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 2848",
      "name": "points-that-intersect-with-cars",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2850",
      "name": "minimum-moves-to-spread-stones-over-grid",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Breadth-First Search",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2851",
      "name": "string-transformation",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "String",
        "Dynamic Programming",
        "String Matching"
      ]
    },
    {
      "id": "Problem 2852",
      "name": "sum-of-remoteness-of-all-cells",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2853",
      "name": "highest-salaries-difference",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2855",
      "name": "minimum-right-shifts-to-sort-the-array",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 2856",
      "name": "minimum-array-length-after-pair-removals",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "Binary Search",
        "Greedy",
        "Counting"
      ]
    },
    {
      "id": "Problem 2854",
      "name": "rolling-average-steps",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2857",
      "name": "count-pairs-of-points-with-distance-k",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2858",
      "name": "minimum-edge-reversals-so-every-node-is-reachable",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Depth-First Search",
        "Breadth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 2859",
      "name": "sum-of-values-at-indices-with-k-set-bits",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2860",
      "name": "happy-students",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sorting",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2861",
      "name": "maximum-number-of-alloys",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 2862",
      "name": "maximum-element-sum-of-a-complete-subset-of-indices",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2863",
      "name": "maximum-length-of-semi-decreasing-subarrays",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2865",
      "name": "beautiful-towers-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Stack",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 2864",
      "name": "maximum-odd-binary-number",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2866",
      "name": "beautiful-towers-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Stack",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 2867",
      "name": "count-valid-paths-in-a-tree",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Tree",
        "Depth-First Search",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 2868",
      "name": "the-wording-game",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2871",
      "name": "split-array-into-maximum-number-of-subarrays",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2872",
      "name": "maximum-number-of-k-divisible-components",
      "difficulty": "Hard",
      "categories": [
        "Tree",
        "Depth-First Search"
      ]
    },
    {
      "id": "Problem 2870",
      "name": "minimum-number-of-operations-to-make-array-empty",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Counting"
      ]
    },
    {
      "id": "Problem 2869",
      "name": "minimum-operations-to-collect-elements",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2873",
      "name": "maximum-value-of-an-ordered-triplet-i",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 2874",
      "name": "maximum-value-of-an-ordered-triplet-ii",
      "difficulty": "Medium",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 2875",
      "name": "minimum-size-subarray-in-infinite-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sliding Window",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2876",
      "name": "count-visited-nodes-in-a-directed-graph",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Graph",
        "Memoization"
      ]
    },
    {
      "id": "Problem 2878",
      "name": "get-the-size-of-a-dataframe",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2877",
      "name": "create-a-dataframe-from-list",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2880",
      "name": "select-data",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2879",
      "name": "display-the-first-three-rows",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2881",
      "name": "create-a-new-column",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2883",
      "name": "drop-missing-data",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2882",
      "name": "drop-duplicate-rows",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2886",
      "name": "change-data-type",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2888",
      "name": "reshape-data:-concatenate",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2889",
      "name": "reshape-data:-pivot",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2884",
      "name": "modify-columns",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2887",
      "name": "fill-missing-data",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2890",
      "name": "reshape-data:-melt",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2891",
      "name": "method-chaining",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2885",
      "name": "rename-columns",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 2896",
      "name": "apply-operations-to-make-two-strings-equal",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2895",
      "name": "minimum-processing-time",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2899",
      "name": "last-visited-integers",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2901",
      "name": "longest-unequal-adjacent-groups-subsequence-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2894",
      "name": "divisible-and-non-divisible-sums-difference",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 2892",
      "name": "minimizing-array-after-replacing-pairs-with-their-product",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2902",
      "name": "count-of-sub-multisets-with-bounded-sum",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Dynamic Programming",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2900",
      "name": "longest-unequal-adjacent-groups-subsequence-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2898",
      "name": "maximum-linear-stock-score",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2893",
      "name": "calculate-orders-within-each-interval",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2897",
      "name": "apply-operations-on-array-to-maximize-sum-of-squares",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2903",
      "name": "find-indices-with-index-and-value-difference-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 2904",
      "name": "shortest-and-lexicographically-smallest-beautiful-string",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2905",
      "name": "find-indices-with-index-and-value-difference-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers"
      ]
    },
    {
      "id": "Problem 2910",
      "name": "minimum-number-of-groups-to-create-a-valid-assignment",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2908",
      "name": "minimum-sum-of-mountain-triplets-i",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 2906",
      "name": "construct-product-matrix",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2907",
      "name": "maximum-profitable-triplets-with-increasing-prices-i",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2909",
      "name": "minimum-sum-of-mountain-triplets-ii",
      "difficulty": "Medium",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 2912",
      "name": "number-of-ways-to-reach-destination-in-the-grid",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2913",
      "name": "subarrays-distinct-element-sum-of-squares-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 2911",
      "name": "minimum-changes-to-make-k-semi-palindromes",
      "difficulty": "Hard",
      "categories": [
        "Two Pointers",
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2914",
      "name": "minimum-number-of-changes-to-make-binary-string-beautiful",
      "difficulty": "Medium",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 2915",
      "name": "length-of-the-longest-subsequence-that-sums-to-target",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2916",
      "name": "subarrays-distinct-element-sum-of-squares-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Binary Indexed Tree",
        "Segment Tree"
      ]
    },
    {
      "id": "Problem 2920",
      "name": "maximum-points-after-collecting-coins-from-all-nodes",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Bit Manipulation",
        "Tree",
        "Depth-First Search"
      ]
    },
    {
      "id": "Problem 2919",
      "name": "minimum-increment-operations-to-make-array-beautiful",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2921",
      "name": "maximum-profitable-triplets-with-increasing-prices-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2918",
      "name": "minimum-equal-sum-of-two-arrays-after-replacing-zeros",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2923",
      "name": "find-champion-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2922",
      "name": "market-analysis-iii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2926",
      "name": "maximum-balanced-subsequence-sum",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Dynamic Programming",
        "Binary Indexed Tree",
        "Segment Tree"
      ]
    },
    {
      "id": "Problem 2925",
      "name": "maximum-score-after-applying-operations-on-a-tree",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming",
        "Tree",
        "Depth-First Search"
      ]
    },
    {
      "id": "Problem 2924",
      "name": "find-champion-ii",
      "difficulty": "Medium",
      "categories": [
        "Graph"
      ]
    },
    {
      "id": "Problem 2929",
      "name": "distribute-candies-among-children-ii",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Combinatorics",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2931",
      "name": "maximum-spending-after-buying-items",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2927",
      "name": "distribute-candies-among-children-iii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2928",
      "name": "distribute-candies-among-children-i",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Combinatorics",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2932",
      "name": "maximum-strong-pair-xor-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Bit Manipulation",
        "Trie",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2935",
      "name": "maximum-strong-pair-xor-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Bit Manipulation",
        "Trie",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2936",
      "name": "number-of-equal-numbers-blocks",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2933",
      "name": "high-access-employees",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2934",
      "name": "minimum-operations-to-maximize-last-elements-in-arrays",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2917",
      "name": "find-the-k-or-of-an-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2930",
      "name": "number-of-strings-which-can-be-rearranged-to-contain-substring",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 2937",
      "name": "make-three-strings-equal",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 2938",
      "name": "separate-black-and-white-balls",
      "difficulty": "Medium",
      "categories": [
        "Two Pointers",
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2939",
      "name": "maximum-xor-product",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Greedy",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2941",
      "name": "maximum-gcd-sum-of-a-subarray",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2946",
      "name": "matrix-similarity-after-cyclic-shifts",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2945",
      "name": "find-maximum-non-decreasing-array-length",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Dynamic Programming",
        "Stack",
        "Queue",
        "Monotonic Stack",
        "Monotonic Queue"
      ]
    },
    {
      "id": "Problem 2944",
      "name": "minimum-number-of-coins-for-fruits",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Queue",
        "Heap (Priority Queue)",
        "Monotonic Queue"
      ]
    },
    {
      "id": "Problem 2947",
      "name": "count-beautiful-substrings-i",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Math",
        "String",
        "Enumeration",
        "Number Theory",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2940",
      "name": "find-building-where-alice-and-bob-can-meet",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Stack",
        "Binary Indexed Tree",
        "Segment Tree",
        "Heap (Priority Queue)",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 2942",
      "name": "find-words-containing-character",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String"
      ]
    },
    {
      "id": "Problem 2943",
      "name": "maximize-area-of-square-hole-in-grid",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2948",
      "name": "make-lexicographically-smallest-array-by-swapping-elements",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Union Find",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2949",
      "name": "count-beautiful-substrings-ii",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "Math",
        "String",
        "Number Theory",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2950",
      "name": "number-of-divisible-substrings",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2952",
      "name": "minimum-number-of-coins-to-be-added",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2953",
      "name": "count-complete-substrings",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2954",
      "name": "count-the-number-of-infection-sequences",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 2955",
      "name": "number-of-same-end-substrings",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2951",
      "name": "find-the-peaks",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2958",
      "name": "length-of-longest-subarray-with-at-most-k-frequency",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2956",
      "name": "find-common-elements-between-two-arrays",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 2960",
      "name": "count-tested-devices-after-test-operations",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Simulation",
        "Counting"
      ]
    },
    {
      "id": "Problem 2959",
      "name": "number-of-possible-sets-of-closing-branches",
      "difficulty": "Hard",
      "categories": [
        "Bit Manipulation",
        "Graph",
        "Heap (Priority Queue)",
        "Enumeration",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 2957",
      "name": "remove-adjacent-almost-equal-characters",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 2961",
      "name": "double-modular-exponentiation",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2962",
      "name": "count-subarrays-where-max-element-appears-at-least-k-times",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 2963",
      "name": "count-the-number-of-good-partitions",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 2965",
      "name": "find-missing-and-repeated-values",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Matrix"
      ]
    },
    {
      "id": "Problem 2966",
      "name": "divide-array-into-arrays-with-max-difference",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2964",
      "name": "number-of-divisible-triplet-sums",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2967",
      "name": "minimum-cost-to-make-array-equalindromic",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Binary Search",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2968",
      "name": "apply-operations-to-maximize-frequency-score",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Sliding Window",
        "Sorting",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2969",
      "name": "minimum-number-of-coins-for-fruits-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2970",
      "name": "count-the-number-of-incremovable-subarrays-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2971",
      "name": "find-polygon-with-the-largest-perimeter",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2979",
      "name": "most-expensive-item-that-can-not-be-bought",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2978",
      "name": "symmetric-coordinates",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2973",
      "name": "find-number-of-coins-to-place-in-tree-nodes",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Tree",
        "Depth-First Search",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 2974",
      "name": "minimum-number-game",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sorting",
        "Heap (Priority Queue)",
        "Simulation"
      ]
    },
    {
      "id": "Problem 2976",
      "name": "minimum-cost-to-convert-string-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Graph",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 2975",
      "name": "maximum-square-area-by-removing-fences-from-a-field",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2977",
      "name": "minimum-cost-to-convert-string-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Dynamic Programming",
        "Graph",
        "Trie",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 2972",
      "name": "count-the-number-of-incremovable-subarrays-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Two Pointers",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 2984",
      "name": "find-peak-calling-hours-for-each-city",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2986",
      "name": "find-third-transaction",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2985",
      "name": "calculate-compressed-mean",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2982",
      "name": "find-longest-special-substring-that-occurs-thrice-ii",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Binary Search",
        "Sliding Window",
        "Counting"
      ]
    },
    {
      "id": "Problem 2980",
      "name": "check-if-bitwise-or-has-trailing-zeros",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 2981",
      "name": "find-longest-special-substring-that-occurs-thrice-i",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Binary Search",
        "Sliding Window",
        "Counting"
      ]
    },
    {
      "id": "Problem 2987",
      "name": "find-expensive-cities",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2988",
      "name": "manager-of-the-largest-department",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2989",
      "name": "class-performance",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2990",
      "name": "loan-types",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2992",
      "name": "number-of-self-divisible-permutations",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2993",
      "name": "friday-purchases-i",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2991",
      "name": "top-three-wineries",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2983",
      "name": "palindrome-rearrangement-queries",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "String",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 2995",
      "name": "viewers-turned-streamers",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 2994",
      "name": "friday-purchases-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3001",
      "name": "minimum-moves-to-capture-the-queen",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 2996",
      "name": "smallest-missing-integer-greater-than-sequential-prefix-sum",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting"
      ]
    },
    {
      "id": "Problem 2998",
      "name": "minimum-number-of-operations-to-make-x-and-y-equal",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming",
        "Breadth-First Search",
        "Memoization"
      ]
    },
    {
      "id": "Problem 2999",
      "name": "count-the-number-of-powerful-integers",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 2997",
      "name": "minimum-number-of-operations-to-make-array-xor-equal-to-k",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 3000",
      "name": "maximum-area-of-longest-diagonal-rectangle",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 3002",
      "name": "maximum-size-of-a-set-after-removals",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Greedy"
      ]
    },
    {
      "id": "Problem 3003",
      "name": "maximize-the-number-of-partitions-after-operations",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 3007",
      "name": "maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k",
      "difficulty": "Medium",
      "categories": [
        "Binary Search",
        "Dynamic Programming",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 3004",
      "name": "maximum-subtree-of-the-same-color",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3005",
      "name": "count-elements-with-maximum-frequency",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Counting"
      ]
    },
    {
      "id": "Problem 3006",
      "name": "find-beautiful-indices-in-the-given-array-i",
      "difficulty": "Medium",
      "categories": [
        "Two Pointers",
        "String",
        "Binary Search",
        "Rolling Hash",
        "String Matching",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 3008",
      "name": "find-beautiful-indices-in-the-given-array-ii",
      "difficulty": "Hard",
      "categories": [
        "Two Pointers",
        "String",
        "Binary Search",
        "Rolling Hash",
        "String Matching",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 3009",
      "name": "maximum-number-of-intersections-on-the-chart",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3015",
      "name": "count-the-number-of-houses-at-a-certain-distance-i",
      "difficulty": "Medium",
      "categories": [
        "Breadth-First Search",
        "Graph",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3013",
      "name": "divide-an-array-into-subarrays-with-minimum-cost-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Sliding Window",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 3011",
      "name": "find-if-array-can-be-sorted",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Bit Manipulation",
        "Sorting"
      ]
    },
    {
      "id": "Problem 3014",
      "name": "minimum-number-of-pushes-to-type-word-i",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 3010",
      "name": "divide-an-array-into-subarrays-with-minimum-cost-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sorting",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 3012",
      "name": "minimize-length-of-array-using-operations",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Greedy",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 3016",
      "name": "minimum-number-of-pushes-to-type-word-ii",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Greedy",
        "Sorting",
        "Counting"
      ]
    },
    {
      "id": "Problem 3017",
      "name": "count-the-number-of-houses-at-a-certain-distance-ii",
      "difficulty": "Hard",
      "categories": [
        "Graph",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3018",
      "name": "maximum-number-of-removal-queries-that-can-be-processed-i",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3022",
      "name": "minimize-or-of-remaining-elements-using-operations",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 3019",
      "name": "number-of-changing-keys",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 3024",
      "name": "type-of-triangle",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math",
        "Sorting"
      ]
    },
    {
      "id": "Problem 3021",
      "name": "alice-and-bob-playing-flower-game",
      "difficulty": "Medium",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 3023",
      "name": "find-pattern-in-infinite-stream-i",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3025",
      "name": "find-the-number-of-ways-to-place-people-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Geometry",
        "Sorting",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 3020",
      "name": "find-the-maximum-number-of-elements-in-subset",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 3026",
      "name": "maximum-good-subarray-sum",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3027",
      "name": "find-the-number-of-ways-to-place-people-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Geometry",
        "Sorting",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 3029",
      "name": "minimum-time-to-revert-word-to-initial-state-i",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Rolling Hash",
        "String Matching",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 3028",
      "name": "ant-on-the-boundary",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Simulation",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3030",
      "name": "find-the-grid-of-region-average",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix"
      ]
    },
    {
      "id": "Problem 3031",
      "name": "minimum-time-to-revert-word-to-initial-state-ii",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Rolling Hash",
        "String Matching",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 3032",
      "name": "count-numbers-with-unique-digits-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3037",
      "name": "find-pattern-in-infinite-stream-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3039",
      "name": "apply-operations-to-make-string-empty",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting",
        "Counting"
      ]
    },
    {
      "id": "Problem 3035",
      "name": "maximum-palindromes-after-operations",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Greedy",
        "Sorting",
        "Counting"
      ]
    },
    {
      "id": "Problem 3038",
      "name": "maximum-number-of-operations-with-the-same-score-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 3033",
      "name": "modify-the-matrix",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix"
      ]
    },
    {
      "id": "Problem 3036",
      "name": "number-of-subarrays-that-match-a-pattern-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Rolling Hash",
        "String Matching",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 3034",
      "name": "number-of-subarrays-that-match-a-pattern-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Rolling Hash",
        "String Matching",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 3040",
      "name": "maximum-number-of-operations-with-the-same-score-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Memoization"
      ]
    },
    {
      "id": "Problem 3041",
      "name": "maximize-consecutive-elements-in-an-array-after-modification",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Sorting"
      ]
    },
    {
      "id": "Problem 3043",
      "name": "find-the-length-of-the-longest-common-prefix",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Trie"
      ]
    },
    {
      "id": "Problem 3046",
      "name": "split-the-array",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Counting"
      ]
    },
    {
      "id": "Problem 3045",
      "name": "count-prefix-and-suffix-pairs-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Trie",
        "Rolling Hash",
        "String Matching",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 3044",
      "name": "most-frequent-prime",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Matrix",
        "Counting",
        "Enumeration",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 3042",
      "name": "count-prefix-and-suffix-pairs-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String",
        "Trie",
        "Rolling Hash",
        "String Matching",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 3054",
      "name": "binary-tree-nodes",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3052",
      "name": "maximize-items",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3053",
      "name": "classifying-triangles-by-lengths",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3050",
      "name": "pizza-toppings-cost-analysis",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3051",
      "name": "find-candidates-for-data-scientist-position",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3048",
      "name": "earliest-second-to-mark-indices-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 3047",
      "name": "find-the-largest-area-of-square-inside-two-rectangles",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Geometry"
      ]
    },
    {
      "id": "Problem 3049",
      "name": "earliest-second-to-mark-indices-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Greedy",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 3056",
      "name": "snaps-analysis",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3057",
      "name": "employees-project-allocation",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3059",
      "name": "find-all-unique-email-domains",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3060",
      "name": "user-activities-within-time-bounds",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3062",
      "name": "winner-of-the-linked-list-game",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3055",
      "name": "top-percentile-fraud",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3058",
      "name": "friends-with-no-mutual-friends",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3061",
      "name": "calculate-trapping-rain-water",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3065",
      "name": "minimum-operations-to-exceed-threshold-value-i",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 3064",
      "name": "guess-the-number-using-bitwise-questions-i",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3063",
      "name": "linked-list-frequency",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3066",
      "name": "minimum-operations-to-exceed-threshold-value-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Heap (Priority Queue)",
        "Simulation"
      ]
    },
    {
      "id": "Problem 3067",
      "name": "count-pairs-of-connectable-servers-in-a-weighted-tree-network",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Tree",
        "Depth-First Search"
      ]
    },
    {
      "id": "Problem 3068",
      "name": "find-the-maximum-sum-of-node-values",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy",
        "Bit Manipulation",
        "Tree",
        "Sorting"
      ]
    },
    {
      "id": "Problem 3069",
      "name": "distribute-elements-into-two-arrays-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 3072",
      "name": "distribute-elements-into-two-arrays-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Indexed Tree",
        "Segment Tree",
        "Simulation"
      ]
    },
    {
      "id": "Problem 3071",
      "name": "minimum-operations-to-write-the-letter-y-on-a-grid",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Matrix",
        "Counting"
      ]
    },
    {
      "id": "Problem 3073",
      "name": "maximum-increasing-triplet-value",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3075",
      "name": "maximize-happiness-of-selected-children",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 3076",
      "name": "shortest-uncommon-substring-in-an-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Trie"
      ]
    },
    {
      "id": "Problem 3074",
      "name": "apple-redistribution-into-boxes",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 3070",
      "name": "count-submatrices-with-top-left-element-and-sum-less-than-k",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3079",
      "name": "find-the-sum-of-encrypted-integers",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 3080",
      "name": "mark-elements-on-array-by-performing-queries",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting",
        "Heap (Priority Queue)",
        "Simulation"
      ]
    },
    {
      "id": "Problem 3077",
      "name": "maximum-strength-of-k-disjoint-subarrays",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3078",
      "name": "match-alphanumerical-pattern-in-matrix-i",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3084",
      "name": "count-substrings-starting-and-ending-with-given-character",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 3082",
      "name": "find-the-sum-of-the-power-of-all-subsequences",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 3081",
      "name": "replace-question-marks-in-string-to-minimize-its-value",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)",
        "Counting"
      ]
    },
    {
      "id": "Problem 3083",
      "name": "existence-of-a-substring-in-a-string-and-its-reverse",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 3085",
      "name": "minimum-deletions-to-make-string-k-special",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Greedy",
        "Sorting",
        "Counting"
      ]
    },
    {
      "id": "Problem 3087",
      "name": "find-trending-hashtags",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3086",
      "name": "minimum-moves-to-pick-k-ones",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Sliding Window",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3088",
      "name": "make-string-anti-palindrome",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3089",
      "name": "find-bursty-behavior",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3091",
      "name": "apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Greedy",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 3090",
      "name": "maximum-length-substring-with-two-occurrences",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 3093",
      "name": "longest-common-suffix-queries",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Trie"
      ]
    },
    {
      "id": "Problem 3092",
      "name": "most-frequent-ids",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Heap (Priority Queue)",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 3095",
      "name": "shortest-subarray-with-or-at-least-k-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Bit Manipulation",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 3094",
      "name": "guess-the-number-using-bitwise-questions-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3099",
      "name": "harshad-number",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 3098",
      "name": "find-the-sum-of-subsequence-powers",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Sorting"
      ]
    },
    {
      "id": "Problem 3097",
      "name": "shortest-subarray-with-or-at-least-k-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Bit Manipulation",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 3096",
      "name": "minimum-levels-to-gain-more-points",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3102",
      "name": "minimize-manhattan-distances",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Geometry",
        "Sorting",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 3100",
      "name": "water-bottles-ii",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "Simulation"
      ]
    },
    {
      "id": "Problem 3101",
      "name": "count-alternating-subarrays",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 3103",
      "name": "find-trending-hashtags-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3104",
      "name": "find-longest-self-contained-substring",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3105",
      "name": "longest-strictly-increasing-or-strictly-decreasing-subarray",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 3106",
      "name": "lexicographically-smallest-string-after-operations-with-constraint",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 3107",
      "name": "minimum-operations-to-make-median-of-array-equal-to-k",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 3108",
      "name": "minimum-cost-walk-in-weighted-graph",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Bit Manipulation",
        "Union Find",
        "Graph"
      ]
    },
    {
      "id": "Problem 3111",
      "name": "minimum-rectangles-to-cover-points",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 3110",
      "name": "score-of-a-string",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 3109",
      "name": "find-the-index-of-permutation",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3113",
      "name": "find-the-number-of-subarrays-where-boundary-elements-are-maximum",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Stack",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 3115",
      "name": "maximum-prime-difference",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 3114",
      "name": "latest-time-you-can-obtain-after-replacing-characters",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 3112",
      "name": "minimum-time-to-visit-disappearing-nodes",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Graph",
        "Heap (Priority Queue)",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 3119",
      "name": "maximum-number-of-potholes-that-can-be-fixed",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3117",
      "name": "minimum-sum-of-values-by-dividing-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Dynamic Programming",
        "Bit Manipulation",
        "Segment Tree",
        "Queue"
      ]
    },
    {
      "id": "Problem 3118",
      "name": "friday-purchase-iii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3116",
      "name": "kth-smallest-amount-with-single-denomination-combination",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Binary Search",
        "Bit Manipulation",
        "Combinatorics",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 3120",
      "name": "count-the-number-of-special-characters-i",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 3123",
      "name": "find-edges-in-shortest-paths",
      "difficulty": "Hard",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Heap (Priority Queue)",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 3122",
      "name": "minimum-number-of-operations-to-satisfy-conditions",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 3121",
      "name": "count-the-number-of-special-characters-ii",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 3124",
      "name": "find-longest-calls",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3125",
      "name": "maximum-number-that-makes-result-of-bitwise-and-zero",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3126",
      "name": "server-utilization-time",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3127",
      "name": "make-a-square-with-the-same-color",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 3129",
      "name": "find-all-possible-stable-binary-arrays-i",
      "difficulty": "Medium",
      "categories": [
        "Dynamic Programming",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3130",
      "name": "find-all-possible-stable-binary-arrays-ii",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3128",
      "name": "right-triangles",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Combinatorics",
        "Counting"
      ]
    },
    {
      "id": "Problem 3132",
      "name": "find-the-integer-added-to-array-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Sorting",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 3133",
      "name": "minimum-array-end",
      "difficulty": "Medium",
      "categories": [
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 3131",
      "name": "find-the-integer-added-to-array-i",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 3135",
      "name": "equalize-strings-by-adding-or-removing-characters-at-ends",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3134",
      "name": "find-the-median-of-the-uniqueness-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Binary Search",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 3141",
      "name": "maximum-hamming-distances",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3137",
      "name": "minimum-number-of-operations-to-make-word-k-periodic",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 3138",
      "name": "minimum-length-of-anagram-concatenation",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 3139",
      "name": "minimum-cost-to-equalize-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 3140",
      "name": "consecutive-available-seats-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3142",
      "name": "check-if-grid-satisfies-conditions",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Matrix"
      ]
    },
    {
      "id": "Problem 3136",
      "name": "valid-word",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 3145",
      "name": "find-products-of-elements-of-big-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 3148",
      "name": "maximum-difference-score-in-a-grid",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 3144",
      "name": "minimum-substring-partition-of-equal-character-frequency",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Dynamic Programming",
        "Counting"
      ]
    },
    {
      "id": "Problem 3147",
      "name": "taking-maximum-energy-from-the-mystic-dungeon",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3146",
      "name": "permutation-difference-between-two-strings",
      "difficulty": "Easy",
      "categories": [
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 3143",
      "name": "maximum-points-inside-the-square",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 3150",
      "name": "invalid-tweets-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3149",
      "name": "find-the-minimum-cost-array-permutation",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Bit Manipulation",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 3154",
      "name": "find-number-of-ways-to-reach-the-k-th-stair",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Bit Manipulation",
        "Memoization",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 3155",
      "name": "maximum-number-of-upgradable-servers",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3151",
      "name": "special-array-i",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 3152",
      "name": "special-array-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3156",
      "name": "employee-task-duration-and-concurrent-tasks",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3153",
      "name": "sum-of-digit-differences-of-all-pairs",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Counting"
      ]
    },
    {
      "id": "Problem 3159",
      "name": "find-occurrences-of-an-element-in-an-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 3158",
      "name": "find-the-xor-of-numbers-which-appear-twice",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 3160",
      "name": "find-the-number-of-distinct-colors-among-the-balls",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Simulation"
      ]
    },
    {
      "id": "Problem 3157",
      "name": "find-the-level-of-tree-with-minimum-sum",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3163",
      "name": "string-compression-iii",
      "difficulty": "Medium",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 3162",
      "name": "find-the-number-of-good-pairs-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 3164",
      "name": "find-the-number-of-good-pairs-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table"
      ]
    },
    {
      "id": "Problem 3161",
      "name": "block-placement-queries",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Binary Indexed Tree",
        "Segment Tree"
      ]
    },
    {
      "id": "Problem 3166",
      "name": "calculate-parking-fees-and-duration",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3165",
      "name": "maximum-sum-of-subsequence-with-non-adjacent-elements",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Divide and Conquer",
        "Dynamic Programming",
        "Segment Tree"
      ]
    },
    {
      "id": "Problem 3168",
      "name": "minimum-number-of-chairs-in-a-waiting-room",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 3169",
      "name": "count-days-without-meetings",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sorting"
      ]
    },
    {
      "id": "Problem 3167",
      "name": "better-compression-of-string",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3171",
      "name": "find-subarray-with-bitwise-or-closest-to-k",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Bit Manipulation",
        "Segment Tree"
      ]
    },
    {
      "id": "Problem 3172",
      "name": "second-day-verification",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3170",
      "name": "lexicographically-minimum-string-after-removing-stars",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Stack",
        "Greedy",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 3178",
      "name": "find-the-child-who-has-the-ball-after-k-seconds",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Simulation"
      ]
    },
    {
      "id": "Problem 3177",
      "name": "find-the-maximum-length-of-a-good-subsequence-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 3174",
      "name": "clear-digits",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Stack",
        "Simulation"
      ]
    },
    {
      "id": "Problem 3175",
      "name": "find-the-first-player-to-win-k-games-in-a-row",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Simulation"
      ]
    },
    {
      "id": "Problem 3173",
      "name": "bitwise-or-of-adjacent-elements",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3176",
      "name": "find-the-maximum-length-of-a-good-subsequence-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 3179",
      "name": "find-the-n-th-value-after-k-seconds",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Simulation",
        "Combinatorics",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3180",
      "name": "maximum-total-reward-using-operations-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 3185",
      "name": "count-pairs-that-form-a-complete-day-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Counting"
      ]
    },
    {
      "id": "Problem 3183",
      "name": "the-number-of-ways-to-make-the-sum",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3188",
      "name": "find-top-scoring-students-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3182",
      "name": "find-top-scoring-students",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3187",
      "name": "peaks-in-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Indexed Tree",
        "Segment Tree"
      ]
    },
    {
      "id": "Problem 3186",
      "name": "maximum-total-damage-with-spell-casting",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "Binary Search",
        "Dynamic Programming",
        "Sorting",
        "Counting"
      ]
    },
    {
      "id": "Problem 3184",
      "name": "count-pairs-that-form-a-complete-day-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Counting"
      ]
    },
    {
      "id": "Problem 3181",
      "name": "maximum-total-reward-using-operations-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 3192",
      "name": "minimum-operations-to-make-binary-array-elements-equal-to-one-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 3189",
      "name": "minimum-moves-to-get-a-peaceful-board",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3191",
      "name": "minimum-operations-to-make-binary-array-elements-equal-to-one-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Bit Manipulation",
        "Queue",
        "Sliding Window",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3194",
      "name": "minimum-average-of-smallest-and-largest-elements",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Two Pointers",
        "Sorting"
      ]
    },
    {
      "id": "Problem 3193",
      "name": "count-the-number-of-inversions",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 3196",
      "name": "maximize-total-cost-of-alternating-subarrays",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 3195",
      "name": "find-the-minimum-area-to-cover-all-ones-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix"
      ]
    },
    {
      "id": "Problem 3190",
      "name": "find-minimum-operations-to-make-all-elements-divisible-by-three",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 3198",
      "name": "find-cities-in-each-state",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3199",
      "name": "count-triplets-with-even-xor-set-bits-i",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3200",
      "name": "maximum-height-of-a-triangle",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 3197",
      "name": "find-the-minimum-area-to-cover-all-ones-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Matrix",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 3201",
      "name": "find-the-maximum-length-of-valid-subsequence-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 3203",
      "name": "find-minimum-diameter-after-merging-two-trees",
      "difficulty": "Hard",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 3204",
      "name": "bitwise-user-permissions-analysis",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3206",
      "name": "alternating-groups-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 3202",
      "name": "find-the-maximum-length-of-valid-subsequence-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 3205",
      "name": "maximum-array-hopping-score-i",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3210",
      "name": "find-the-encrypted-string",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 3207",
      "name": "maximum-points-after-enemy-battles",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 3209",
      "name": "number-of-subarrays-with-and-value-of-k",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Bit Manipulation",
        "Segment Tree"
      ]
    },
    {
      "id": "Problem 3208",
      "name": "alternating-groups-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 3211",
      "name": "generate-binary-strings-without-adjacent-zeros",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Backtracking",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 3213",
      "name": "construct-string-with-minimum-cost",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Dynamic Programming",
        "Suffix Array"
      ]
    },
    {
      "id": "Problem 3212",
      "name": "count-submatrices-with-equal-frequency-of-x-and-y",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Matrix",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3216",
      "name": "lexicographically-smallest-string-after-a-swap",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Greedy"
      ]
    },
    {
      "id": "Problem 3215",
      "name": "count-triplets-with-even-xor-set-bits-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3214",
      "name": "year-on-year-growth-rate",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3218",
      "name": "minimum-cost-for-cutting-cake-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 3217",
      "name": "delete-nodes-from-linked-list-present-in-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Linked List"
      ]
    },
    {
      "id": "Problem 3221",
      "name": "maximum-array-hopping-score-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3220",
      "name": "odd-and-even-transactions",
      "difficulty": "Medium",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Problem 3222",
      "name": "find-the-winning-player-in-coin-game",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Simulation",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 3223",
      "name": "minimum-length-of-string-after-operations",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Counting"
      ]
    },
    {
      "id": "Problem 3219",
      "name": "minimum-cost-for-cutting-cake-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 3224",
      "name": "minimum-array-changes-to-make-differences-equal",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3225",
      "name": "maximum-score-from-grid-operations",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3227",
      "name": "vowels-game-in-a-string",
      "difficulty": "Medium",
      "categories": [
        "Math",
        "String",
        "Brainteaser",
        "Game Theory"
      ]
    },
    {
      "id": "Problem 3229",
      "name": "minimum-operations-to-make-array-equal-to-target",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Stack",
        "Greedy",
        "Monotonic Stack"
      ]
    },
    {
      "id": "Problem 3228",
      "name": "maximum-number-of-operations-to-move-ones-to-the-end",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Greedy",
        "Counting"
      ]
    },
    {
      "id": "Problem 3231",
      "name": "minimum-number-of-increasing-subsequence-to-be-removed",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3230",
      "name": "customer-purchasing-behavior-analysis",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3232",
      "name": "find-if-digit-game-can-be-won",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 3236",
      "name": "ceo-subordinate-hierarchy",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3235",
      "name": "check-if-the-rectangle-corner-is-reachable",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Geometry"
      ]
    },
    {
      "id": "Problem 3234",
      "name": "count-the-number-of-substrings-with-dominant-ones",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Sliding Window",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 3226",
      "name": "number-of-bit-changes-to-make-two-integers-equal",
      "difficulty": "Easy",
      "categories": [
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 3233",
      "name": "find-the-count-of-numbers-which-are-not-special",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 3238",
      "name": "find-the-number-of-winning-players",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Counting"
      ]
    },
    {
      "id": "Problem 3237",
      "name": "alt-and-tab-simulation",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3239",
      "name": "minimum-number-of-flips-to-make-binary-grid-palindromic-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Matrix"
      ]
    },
    {
      "id": "Problem 3240",
      "name": "minimum-number-of-flips-to-make-binary-grid-palindromic-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Two Pointers",
        "Matrix"
      ]
    },
    {
      "id": "Problem 3244",
      "name": "shortest-distance-after-road-addition-queries-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Graph",
        "Ordered Set"
      ]
    },
    {
      "id": "Problem 3245",
      "name": "alternating-groups-iii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Indexed Tree"
      ]
    },
    {
      "id": "Problem 3243",
      "name": "shortest-distance-after-road-addition-queries-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Breadth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 3241",
      "name": "time-taken-to-mark-all-nodes",
      "difficulty": "Hard",
      "categories": [
        "Dynamic Programming",
        "Tree",
        "Depth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 3242",
      "name": "design-neighbor-sum-service",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Design",
        "Matrix",
        "Simulation"
      ]
    },
    {
      "id": "Problem 3246",
      "name": "premier-league-table-ranking",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3247",
      "name": "number-of-subsequences-with-odd-sum",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3249",
      "name": "count-the-number-of-good-nodes",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search"
      ]
    },
    {
      "id": "Problem 3248",
      "name": "snake-in-matrix",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 3252",
      "name": "premier-league-table-ranking-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3253",
      "name": "construct-string-with-minimum-cost-(easy)",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3251",
      "name": "find-the-count-of-monotonic-pairs-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Combinatorics",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3254",
      "name": "find-the-power-of-k-size-subarrays-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 3250",
      "name": "find-the-count-of-monotonic-pairs-i",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Combinatorics",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3255",
      "name": "find-the-power-of-k-size-subarrays-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 3257",
      "name": "maximum-value-sum-by-placing-three-rooks-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 3256",
      "name": "maximum-value-sum-by-placing-three-rooks-i",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 3259",
      "name": "maximum-energy-boost-from-two-drinks",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 3258",
      "name": "count-substrings-that-satisfy-k-constraint-i",
      "difficulty": "Easy",
      "categories": [
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 3260",
      "name": "find-the-largest-palindrome-divisible-by-k",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "String",
        "Dynamic Programming",
        "Greedy",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 3261",
      "name": "count-substrings-that-satisfy-k-constraint-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Binary Search",
        "Sliding Window",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3263",
      "name": "convert-doubly-linked-list-to-array-i",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3262",
      "name": "find-overlapping-shifts",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3264",
      "name": "final-array-state-after-k-multiplication-operations-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math",
        "Heap (Priority Queue)",
        "Simulation"
      ]
    },
    {
      "id": "Problem 3265",
      "name": "count-almost-equal-pairs-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting",
        "Counting",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 3269",
      "name": "constructing-two-increasing-arrays",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3268",
      "name": "find-overlapping-shifts-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3266",
      "name": "final-array-state-after-k-multiplication-operations-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Heap (Priority Queue)",
        "Simulation"
      ]
    },
    {
      "id": "Problem 3267",
      "name": "count-almost-equal-pairs-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Sorting",
        "Counting",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 3273",
      "name": "minimum-amount-of-damage-dealt-to-bob",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 3270",
      "name": "find-the-key-of-the-numbers",
      "difficulty": "Easy",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Problem 3272",
      "name": "find-the-count-of-good-integers",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "Math",
        "Combinatorics",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 3271",
      "name": "hash-divided-string",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 3277",
      "name": "maximum-xor-score-subarray-queries",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 3274",
      "name": "check-if-two-chessboard-squares-have-the-same-color",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 3275",
      "name": "k-th-nearest-obstacle-queries",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 3276",
      "name": "select-cells-in-grid-with-maximum-score",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Bit Manipulation",
        "Matrix",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 3278",
      "name": "find-candidates-for-data-scientist-position-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3279",
      "name": "maximum-total-area-occupied-by-pistons",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3280",
      "name": "convert-date-to-binary",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "String"
      ]
    },
    {
      "id": "Problem 3281",
      "name": "maximize-score-of-numbers-in-ranges",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 3282",
      "name": "reach-end-of-array-with-max-score",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy"
      ]
    },
    {
      "id": "Problem 3284",
      "name": "sum-of-consecutive-subarrays",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3283",
      "name": "maximum-number-of-moves-to-kill-all-pawns",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Bit Manipulation",
        "Breadth-First Search",
        "Game Theory",
        "Bitmask"
      ]
    },
    {
      "id": "Problem 3287",
      "name": "find-the-maximum-sequence-value-of-array",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 3288",
      "name": "length-of-the-longest-increasing-path",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Sorting"
      ]
    },
    {
      "id": "Problem 3289",
      "name": "the-two-sneaky-numbers-of-digitville",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Math"
      ]
    },
    {
      "id": "Problem 3286",
      "name": "find-a-safe-walk-through-a-grid",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Breadth-First Search",
        "Graph",
        "Heap (Priority Queue)",
        "Matrix",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 3285",
      "name": "find-indices-of-stable-mountains",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 3291",
      "name": "minimum-number-of-valid-strings-to-form-target-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "String",
        "Binary Search",
        "Dynamic Programming",
        "Trie",
        "Segment Tree",
        "Rolling Hash",
        "String Matching",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 3292",
      "name": "minimum-number-of-valid-strings-to-form-target-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "String",
        "Binary Search",
        "Dynamic Programming",
        "Segment Tree",
        "Rolling Hash",
        "String Matching",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 3290",
      "name": "maximum-multiplication-score",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 3295",
      "name": "report-spam-message",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String"
      ]
    },
    {
      "id": "Problem 3296",
      "name": "minimum-number-of-seconds-to-make-mountain-height-zero",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Binary Search",
        "Greedy",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 3293",
      "name": "calculate-product-final-price",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3294",
      "name": "convert-doubly-linked-list-to-array-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3297",
      "name": "count-substrings-that-can-be-rearranged-to-contain-a-string-i",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 3298",
      "name": "count-substrings-that-can-be-rearranged-to-contain-a-string-ii",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 3300",
      "name": "minimum-element-after-replacement-with-digit-sum",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Math"
      ]
    },
    {
      "id": "Problem 3299",
      "name": "sum-of-consecutive-subsequences",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3305",
      "name": "count-of-substrings-containing-every-vowel-and-k-consonants-i",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 3301",
      "name": "maximize-the-total-height-of-unique-towers",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Greedy",
        "Sorting"
      ]
    },
    {
      "id": "Problem 3302",
      "name": "find-the-lexicographically-smallest-valid-sequence",
      "difficulty": "Medium",
      "categories": [
        "Two Pointers",
        "String",
        "Dynamic Programming",
        "Greedy"
      ]
    },
    {
      "id": "Problem 3303",
      "name": "find-the-occurrence-of-first-almost-equal-substring",
      "difficulty": "Hard",
      "categories": [
        "String",
        "String Matching"
      ]
    },
    {
      "id": "Problem 3304",
      "name": "find-the-k-th-character-in-string-game-i",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Bit Manipulation",
        "Recursion",
        "Simulation"
      ]
    },
    {
      "id": "Problem 3306",
      "name": "count-of-substrings-containing-every-vowel-and-k-consonants-ii",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 3307",
      "name": "find-the-k-th-character-in-string-game-ii",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Bit Manipulation",
        "Recursion"
      ]
    },
    {
      "id": "Problem 3313",
      "name": "find-the-last-marked-nodes-in-tree",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3311",
      "name": "construct-2d-grid-matching-graph-layout",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Graph",
        "Matrix"
      ]
    },
    {
      "id": "Problem 3310",
      "name": "remove-methods-from-project",
      "difficulty": "Medium",
      "categories": [
        "Depth-First Search",
        "Breadth-First Search",
        "Graph"
      ]
    },
    {
      "id": "Problem 3308",
      "name": "find-top-performing-driver",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3312",
      "name": "sorted-gcd-pair-queries",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Math",
        "Binary Search",
        "Combinatorics",
        "Counting",
        "Number Theory",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3309",
      "name": "maximum-possible-number-by-binary-concatenation",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Bit Manipulation",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 3314",
      "name": "construct-the-minimum-bitwise-array-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 3322",
      "name": "premier-league-table-ranking-iii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3315",
      "name": "construct-the-minimum-bitwise-array-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Bit Manipulation"
      ]
    },
    {
      "id": "Problem 3317",
      "name": "find-the-number-of-possible-ways-for-an-event",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "Dynamic Programming",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 3320",
      "name": "count-the-number-of-winning-sequences",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 3316",
      "name": "find-maximum-removals-from-source-string",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "String",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 3321",
      "name": "find-x-sum-of-all-k-long-subarrays-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Sliding Window",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 3319",
      "name": "k-th-largest-perfect-subtree-size-in-binary-tree",
      "difficulty": "Medium",
      "categories": [
        "Tree",
        "Depth-First Search",
        "Sorting",
        "Binary Tree"
      ]
    },
    {
      "id": "Problem 3318",
      "name": "find-x-sum-of-all-k-long-subarrays-i",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Hash Table",
        "Sliding Window",
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Problem 3329",
      "name": "count-substrings-with-k-frequency-characters-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3327",
      "name": "check-if-dfs-strings-are-palindromes",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Tree",
        "Depth-First Search",
        "Hash Function"
      ]
    },
    {
      "id": "Problem 3325",
      "name": "count-substrings-with-k-frequency-characters-i",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "String",
        "Sliding Window"
      ]
    },
    {
      "id": "Problem 3323",
      "name": "minimize-connected-groups-by-inserting-interval",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3330",
      "name": "find-the-original-typed-string-i",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 3326",
      "name": "minimum-division-operations-to-make-array-non-decreasing",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Greedy",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 3328",
      "name": "find-cities-in-each-state-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3324",
      "name": "find-the-sequence-of-strings-appeared-on-the-screen",
      "difficulty": "Medium",
      "categories": [
        "String",
        "Simulation"
      ]
    },
    {
      "id": "Problem 3331",
      "name": "find-subtree-sizes-after-changes",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Hash Table",
        "String",
        "Tree",
        "Depth-First Search"
      ]
    },
    {
      "id": "Problem 3333",
      "name": "find-the-original-typed-string-ii",
      "difficulty": "Hard",
      "categories": [
        "String",
        "Dynamic Programming",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3334",
      "name": "find-the-maximum-factor-score-of-array",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Math",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 3332",
      "name": "maximum-points-tourist-can-earn",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ]
    },
    {
      "id": "Problem 3336",
      "name": "find-the-number-of-subsequences-with-equal-gcd",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 3335",
      "name": "total-characters-in-string-after-transformations-i",
      "difficulty": "Medium",
      "categories": [
        "Hash Table",
        "Math",
        "String",
        "Dynamic Programming",
        "Counting"
      ]
    },
    {
      "id": "Problem 3338",
      "name": "second-highest-salary-ii",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3337",
      "name": "total-characters-in-string-after-transformations-ii",
      "difficulty": "Hard",
      "categories": [
        "Hash Table",
        "Math",
        "String",
        "Dynamic Programming",
        "Counting"
      ]
    },
    {
      "id": "Problem 3339",
      "name": "find-the-number-of-k-even-arrays",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3347",
      "name": "maximum-frequency-of-an-element-after-performing-operations-ii",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Sliding Window",
        "Sorting",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3346",
      "name": "maximum-frequency-of-an-element-after-performing-operations-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Sliding Window",
        "Sorting",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3340",
      "name": "check-balanced-string",
      "difficulty": "Easy",
      "categories": [
        "String"
      ]
    },
    {
      "id": "Problem 3345",
      "name": "smallest-divisible-digit-product-i",
      "difficulty": "Easy",
      "categories": [
        "Math",
        "Enumeration"
      ]
    },
    {
      "id": "Problem 3342",
      "name": "find-minimum-time-to-reach-last-room-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Graph",
        "Heap (Priority Queue)",
        "Matrix",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 3341",
      "name": "find-minimum-time-to-reach-last-room-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Graph",
        "Heap (Priority Queue)",
        "Matrix",
        "Shortest Path"
      ]
    },
    {
      "id": "Problem 3344",
      "name": "maximum-sized-array",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3343",
      "name": "count-number-of-balanced-permutations",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "String",
        "Dynamic Programming",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 3348",
      "name": "smallest-divisible-digit-product-ii",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "String",
        "Backtracking",
        "Greedy",
        "Number Theory"
      ]
    },
    {
      "id": "Problem 3349",
      "name": "adjacent-increasing-subarrays-detection-i",
      "difficulty": "Easy",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Problem 3350",
      "name": "adjacent-increasing-subarrays-detection-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search"
      ]
    },
    {
      "id": "Problem 3351",
      "name": "sum-of-good-subsequences",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Hash Table",
        "Dynamic Programming"
      ]
    },
    {
      "id": "Problem 3352",
      "name": "count-k-reducible-numbers-less-than-n",
      "difficulty": "Hard",
      "categories": [
        "Math",
        "String",
        "Dynamic Programming",
        "Combinatorics"
      ]
    },
    {
      "id": "Problem 3353",
      "name": "minimum-total-operations",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3357",
      "name": "minimize-the-maximum-adjacent-element-difference",
      "difficulty": "Hard",
      "categories": [
        "Array",
        "Binary Search",
        "Greedy"
      ]
    },
    {
      "id": "Problem 3355",
      "name": "zero-array-transformation-i",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3354",
      "name": "make-array-elements-equal-to-zero",
      "difficulty": "Easy",
      "categories": [
        "Array",
        "Simulation",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3356",
      "name": "zero-array-transformation-ii",
      "difficulty": "Medium",
      "categories": [
        "Array",
        "Binary Search",
        "Prefix Sum"
      ]
    },
    {
      "id": "Problem 3359",
      "name": "find-sorted-submatrices-with-maximum-element-at-most-k",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3361",
      "name": "shift-distance-between-two-strings",
      "difficulty": "Medium",
      "categories": []
    },
    {
      "id": "Problem 3360",
      "name": "stone-removal-game",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 3358",
      "name": "books-with-null-ratings",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3363",
      "name": "find-the-maximum-number-of-fruits-collected",
      "difficulty": "Hard",
      "categories": []
    },
    {
      "id": "Problem 3362",
      "name": "zero-array-transformation-iii",
      "difficulty": "Medium",
      "categories": []
    },
    {
      "id": "Problem 3365",
      "name": "rearrange-k-substrings-to-form-target-string",
      "difficulty": "Medium",
      "categories": []
    },
    {
      "id": "Problem 3364",
      "name": "minimum-positive-sum-subarray",
      "difficulty": "Easy",
      "categories": []
    },
    {
      "id": "Problem 3369",
      "name": "design-an-array-statistics-tracker",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3368",
      "name": "first-letter-capitalization",
      "difficulty": null,
      "categories": []
    },
    {
      "id": "Problem 3367",
      "name": "maximize-sum-of-weights-after-edge-removals",
      "difficulty": "Hard",
      "categories": []
    },
    {
      "id": "Problem 3366",
      "name": "minimum-array-sum",
      "difficulty": "Medium",
      "categories": []
    },
    {
      "id": "Array",
      "difficulty": "",
      "categories": [
        "Array"
      ]
    },
    {
      "id": "Backtracking",
      "difficulty": "",
      "categories": [
        "Backtracking"
      ]
    },
    {
      "id": "Biconnected Component",
      "difficulty": "",
      "categories": [
        "Biconnected Component"
      ]
    },
    {
      "id": "Binary Indexed Tree",
      "difficulty": "",
      "categories": [
        "Binary Indexed Tree"
      ]
    },
    {
      "id": "Binary Search",
      "difficulty": "",
      "categories": [
        "Binary Search"
      ]
    },
    {
      "id": "Binary Search Tree",
      "difficulty": "",
      "categories": [
        "Binary Search Tree"
      ]
    },
    {
      "id": "Binary Tree",
      "difficulty": "",
      "categories": [
        "Binary Tree"
      ]
    },
    {
      "id": "Bit Manipulation",
      "difficulty": "",
      "categories": [
        "Bit Manipulation"
      ]
    },
    {
      "id": "Bitmask",
      "difficulty": "",
      "categories": [
        "Bitmask"
      ]
    },
    {
      "id": "Brainteaser",
      "difficulty": "",
      "categories": [
        "Brainteaser"
      ]
    },
    {
      "id": "Breadth-First Search",
      "difficulty": "",
      "categories": [
        "Breadth-First Search"
      ]
    },
    {
      "id": "Bucket Sort",
      "difficulty": "",
      "categories": [
        "Bucket Sort"
      ]
    },
    {
      "id": "Combinatorics",
      "difficulty": "",
      "categories": [
        "Combinatorics"
      ]
    },
    {
      "id": "Concurrency",
      "difficulty": "",
      "categories": [
        "Concurrency"
      ]
    },
    {
      "id": "Counting",
      "difficulty": "",
      "categories": [
        "Counting"
      ]
    },
    {
      "id": "Counting Sort",
      "difficulty": "",
      "categories": [
        "Counting Sort"
      ]
    },
    {
      "id": "Data Stream",
      "difficulty": "",
      "categories": [
        "Data Stream"
      ]
    },
    {
      "id": "Database",
      "difficulty": "",
      "categories": [
        "Database"
      ]
    },
    {
      "id": "Depth-First Search",
      "difficulty": "",
      "categories": [
        "Depth-First Search"
      ]
    },
    {
      "id": "Design",
      "difficulty": "",
      "categories": [
        "Design"
      ]
    },
    {
      "id": "Divide and Conquer",
      "difficulty": "",
      "categories": [
        "Divide and Conquer"
      ]
    },
    {
      "id": "Doubly-Linked List",
      "difficulty": "",
      "categories": [
        "Doubly-Linked List"
      ]
    },
    {
      "id": "Dynamic Programming",
      "difficulty": "",
      "categories": [
        "Dynamic Programming"
      ]
    },
    {
      "id": "Enumeration",
      "difficulty": "",
      "categories": [
        "Enumeration"
      ]
    },
    {
      "id": "Eulerian Circuit",
      "difficulty": "",
      "categories": [
        "Eulerian Circuit"
      ]
    },
    {
      "id": "Game Theory",
      "difficulty": "",
      "categories": [
        "Game Theory"
      ]
    },
    {
      "id": "Geometry",
      "difficulty": "",
      "categories": [
        "Geometry"
      ]
    },
    {
      "id": "Graph",
      "difficulty": "",
      "categories": [
        "Graph"
      ]
    },
    {
      "id": "Greedy",
      "difficulty": "",
      "categories": [
        "Greedy"
      ]
    },
    {
      "id": "Hash Function",
      "difficulty": "",
      "categories": [
        "Hash Function"
      ]
    },
    {
      "id": "Hash Table",
      "difficulty": "",
      "categories": [
        "Hash Table"
      ]
    },
    {
      "id": "Heap (Priority Queue)",
      "difficulty": "",
      "categories": [
        "Heap (Priority Queue)"
      ]
    },
    {
      "id": "Interactive",
      "difficulty": "",
      "categories": [
        "Interactive"
      ]
    },
    {
      "id": "Iterator",
      "difficulty": "",
      "categories": [
        "Iterator"
      ]
    },
    {
      "id": "Line Sweep",
      "difficulty": "",
      "categories": [
        "Line Sweep"
      ]
    },
    {
      "id": "Linked List",
      "difficulty": "",
      "categories": [
        "Linked List"
      ]
    },
    {
      "id": "Math",
      "difficulty": "",
      "categories": [
        "Math"
      ]
    },
    {
      "id": "Matrix",
      "difficulty": "",
      "categories": [
        "Matrix"
      ]
    },
    {
      "id": "Memoization",
      "difficulty": "",
      "categories": [
        "Memoization"
      ]
    },
    {
      "id": "Merge Sort",
      "difficulty": "",
      "categories": [
        "Merge Sort"
      ]
    },
    {
      "id": "Minimum Spanning Tree",
      "difficulty": "",
      "categories": [
        "Minimum Spanning Tree"
      ]
    },
    {
      "id": "Monotonic Queue",
      "difficulty": "",
      "categories": [
        "Monotonic Queue"
      ]
    },
    {
      "id": "Monotonic Stack",
      "difficulty": "",
      "categories": [
        "Monotonic Stack"
      ]
    },
    {
      "id": "Number Theory",
      "difficulty": "",
      "categories": [
        "Number Theory"
      ]
    },
    {
      "id": "Ordered Set",
      "difficulty": "",
      "categories": [
        "Ordered Set"
      ]
    },
    {
      "id": "Prefix Sum",
      "difficulty": "",
      "categories": [
        "Prefix Sum"
      ]
    },
    {
      "id": "Probability and Statistics",
      "difficulty": "",
      "categories": [
        "Probability and Statistics"
      ]
    },
    {
      "id": "Queue",
      "difficulty": "",
      "categories": [
        "Queue"
      ]
    },
    {
      "id": "Quickselect",
      "difficulty": "",
      "categories": [
        "Quickselect"
      ]
    },
    {
      "id": "Radix Sort",
      "difficulty": "",
      "categories": [
        "Radix Sort"
      ]
    },
    {
      "id": "Randomized",
      "difficulty": "",
      "categories": [
        "Randomized"
      ]
    },
    {
      "id": "Recursion",
      "difficulty": "",
      "categories": [
        "Recursion"
      ]
    },
    {
      "id": "Rejection Sampling",
      "difficulty": "",
      "categories": [
        "Rejection Sampling"
      ]
    },
    {
      "id": "Reservoir Sampling",
      "difficulty": "",
      "categories": [
        "Reservoir Sampling"
      ]
    },
    {
      "id": "Rolling Hash",
      "difficulty": "",
      "categories": [
        "Rolling Hash"
      ]
    },
    {
      "id": "Segment Tree",
      "difficulty": "",
      "categories": [
        "Segment Tree"
      ]
    },
    {
      "id": "Shell",
      "difficulty": "",
      "categories": [
        "Shell"
      ]
    },
    {
      "id": "Shortest Path",
      "difficulty": "",
      "categories": [
        "Shortest Path"
      ]
    },
    {
      "id": "Simulation",
      "difficulty": "",
      "categories": [
        "Simulation"
      ]
    },
    {
      "id": "Sliding Window",
      "difficulty": "",
      "categories": [
        "Sliding Window"
      ]
    },
    {
      "id": "Sorting",
      "difficulty": "",
      "categories": [
        "Sorting"
      ]
    },
    {
      "id": "Stack",
      "difficulty": "",
      "categories": [
        "Stack"
      ]
    },
    {
      "id": "String",
      "difficulty": "",
      "categories": [
        "String"
      ]
    },
    {
      "id": "String Matching",
      "difficulty": "",
      "categories": [
        "String Matching"
      ]
    },
    {
      "id": "Strongly Connected Component",
      "difficulty": "",
      "categories": [
        "Strongly Connected Component"
      ]
    },
    {
      "id": "Suffix Array",
      "difficulty": "",
      "categories": [
        "Suffix Array"
      ]
    },
    {
      "id": "Topological Sort",
      "difficulty": "",
      "categories": [
        "Topological Sort"
      ]
    },
    {
      "id": "Tree",
      "difficulty": "",
      "categories": [
        "Tree"
      ]
    },
    {
      "id": "Trie",
      "difficulty": "",
      "categories": [
        "Trie"
      ]
    },
    {
      "id": "Two Pointers",
      "difficulty": "",
      "categories": [
        "Two Pointers"
      ]
    },
    {
      "id": "Union Find",
      "difficulty": "",
      "categories": [
        "Union Find"
      ]
    }
  ],
  "links": [
    {
      "source": "Math",
      "target": "Problem 7",
      "value": 1,
      "timestamp": "2024-01-01"
    },
    {
      "source": "String",
      "target": "Problem 6",
      "value": 1,
      "timestamp": "2024-01-01"
    },
    {
      "source": "Linked List",
      "target": "Problem 2",
      "value": 1,
      "timestamp": "2024-01-01"
    },
    {
      "source": "Math",
      "target": "Problem 2",
      "value": 1,
      "timestamp": "2024-01-01"
    },
    {
      "source": "Recursion",
      "target": "Problem 2",
      "value": 1,
      "timestamp": "2024-01-01"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 5",
      "value": 1,
      "timestamp": "2024-01-02"
    },
    {
      "source": "String",
      "target": "Problem 5",
      "value": 1,
      "timestamp": "2024-01-02"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 5",
      "value": 1,
      "timestamp": "2024-01-02"
    },
    {
      "source": "Array",
      "target": "Problem 4",
      "value": 1,
      "timestamp": "2024-01-02"
    },
    {
      "source": "Binary Search",
      "target": "Problem 4",
      "value": 1,
      "timestamp": "2024-01-02"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 4",
      "value": 1,
      "timestamp": "2024-01-02"
    },
    {
      "source": "Array",
      "target": "Problem 1",
      "value": 1,
      "timestamp": "2024-01-02"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1",
      "value": 1,
      "timestamp": "2024-01-02"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3",
      "value": 1,
      "timestamp": "2024-01-03"
    },
    {
      "source": "String",
      "target": "Problem 3",
      "value": 1,
      "timestamp": "2024-01-03"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3",
      "value": 1,
      "timestamp": "2024-01-03"
    },
    {
      "source": "Math",
      "target": "Problem 9",
      "value": 1,
      "timestamp": "2024-01-03"
    },
    {
      "source": "Hash Table",
      "target": "Problem 13",
      "value": 1,
      "timestamp": "2024-01-04"
    },
    {
      "source": "Math",
      "target": "Problem 13",
      "value": 1,
      "timestamp": "2024-01-04"
    },
    {
      "source": "String",
      "target": "Problem 13",
      "value": 1,
      "timestamp": "2024-01-04"
    },
    {
      "source": "Array",
      "target": "Problem 11",
      "value": 1,
      "timestamp": "2024-01-04"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 11",
      "value": 1,
      "timestamp": "2024-01-04"
    },
    {
      "source": "Greedy",
      "target": "Problem 11",
      "value": 1,
      "timestamp": "2024-01-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 12",
      "value": 1,
      "timestamp": "2024-01-04"
    },
    {
      "source": "Math",
      "target": "Problem 12",
      "value": 1,
      "timestamp": "2024-01-04"
    },
    {
      "source": "String",
      "target": "Problem 12",
      "value": 1,
      "timestamp": "2024-01-04"
    },
    {
      "source": "String",
      "target": "Problem 10",
      "value": 1,
      "timestamp": "2024-01-05"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 10",
      "value": 1,
      "timestamp": "2024-01-05"
    },
    {
      "source": "Recursion",
      "target": "Problem 10",
      "value": 1,
      "timestamp": "2024-01-05"
    },
    {
      "source": "String",
      "target": "Problem 14",
      "value": 1,
      "timestamp": "2024-01-05"
    },
    {
      "source": "Trie",
      "target": "Problem 14",
      "value": 1,
      "timestamp": "2024-01-05"
    },
    {
      "source": "Array",
      "target": "Problem 15",
      "value": 1,
      "timestamp": "2024-01-05"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 15",
      "value": 1,
      "timestamp": "2024-01-05"
    },
    {
      "source": "Sorting",
      "target": "Problem 15",
      "value": 1,
      "timestamp": "2024-01-05"
    },
    {
      "source": "Array",
      "target": "Problem 16",
      "value": 1,
      "timestamp": "2024-01-06"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 16",
      "value": 1,
      "timestamp": "2024-01-06"
    },
    {
      "source": "Sorting",
      "target": "Problem 16",
      "value": 1,
      "timestamp": "2024-01-06"
    },
    {
      "source": "Hash Table",
      "target": "Problem 17",
      "value": 1,
      "timestamp": "2024-01-06"
    },
    {
      "source": "String",
      "target": "Problem 17",
      "value": 1,
      "timestamp": "2024-01-06"
    },
    {
      "source": "Backtracking",
      "target": "Problem 17",
      "value": 1,
      "timestamp": "2024-01-06"
    },
    {
      "source": "String",
      "target": "Problem 22",
      "value": 1,
      "timestamp": "2024-01-06"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 22",
      "value": 1,
      "timestamp": "2024-01-06"
    },
    {
      "source": "Backtracking",
      "target": "Problem 22",
      "value": 1,
      "timestamp": "2024-01-06"
    },
    {
      "source": "Linked List",
      "target": "Problem 19",
      "value": 1,
      "timestamp": "2024-01-07"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 19",
      "value": 1,
      "timestamp": "2024-01-07"
    },
    {
      "source": "String",
      "target": "Problem 20",
      "value": 1,
      "timestamp": "2024-01-07"
    },
    {
      "source": "Stack",
      "target": "Problem 20",
      "value": 1,
      "timestamp": "2024-01-07"
    },
    {
      "source": "Array",
      "target": "Problem 18",
      "value": 1,
      "timestamp": "2024-01-07"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 18",
      "value": 1,
      "timestamp": "2024-01-07"
    },
    {
      "source": "Sorting",
      "target": "Problem 18",
      "value": 1,
      "timestamp": "2024-01-07"
    },
    {
      "source": "Linked List",
      "target": "Problem 23",
      "value": 1,
      "timestamp": "2024-01-08"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 23",
      "value": 1,
      "timestamp": "2024-01-08"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 23",
      "value": 1,
      "timestamp": "2024-01-08"
    },
    {
      "source": "Merge Sort",
      "target": "Problem 23",
      "value": 1,
      "timestamp": "2024-01-08"
    },
    {
      "source": "Linked List",
      "target": "Problem 21",
      "value": 1,
      "timestamp": "2024-01-08"
    },
    {
      "source": "Recursion",
      "target": "Problem 21",
      "value": 1,
      "timestamp": "2024-01-08"
    },
    {
      "source": "Array",
      "target": "Problem 26",
      "value": 1,
      "timestamp": "2024-01-08"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 26",
      "value": 1,
      "timestamp": "2024-01-08"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 28",
      "value": 1,
      "timestamp": "2024-01-09"
    },
    {
      "source": "String",
      "target": "Problem 28",
      "value": 1,
      "timestamp": "2024-01-09"
    },
    {
      "source": "String Matching",
      "target": "Problem 28",
      "value": 1,
      "timestamp": "2024-01-09"
    },
    {
      "source": "Linked List",
      "target": "Problem 25",
      "value": 1,
      "timestamp": "2024-01-09"
    },
    {
      "source": "Recursion",
      "target": "Problem 25",
      "value": 1,
      "timestamp": "2024-01-09"
    },
    {
      "source": "Linked List",
      "target": "Problem 24",
      "value": 1,
      "timestamp": "2024-01-09"
    },
    {
      "source": "Recursion",
      "target": "Problem 24",
      "value": 1,
      "timestamp": "2024-01-09"
    },
    {
      "source": "Hash Table",
      "target": "Problem 30",
      "value": 1,
      "timestamp": "2024-01-10"
    },
    {
      "source": "String",
      "target": "Problem 30",
      "value": 1,
      "timestamp": "2024-01-10"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 30",
      "value": 1,
      "timestamp": "2024-01-10"
    },
    {
      "source": "Array",
      "target": "Problem 27",
      "value": 1,
      "timestamp": "2024-01-10"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 27",
      "value": 1,
      "timestamp": "2024-01-10"
    },
    {
      "source": "Math",
      "target": "Problem 29",
      "value": 1,
      "timestamp": "2024-01-10"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 29",
      "value": 1,
      "timestamp": "2024-01-10"
    },
    {
      "source": "Array",
      "target": "Problem 31",
      "value": 1,
      "timestamp": "2024-01-11"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 31",
      "value": 1,
      "timestamp": "2024-01-11"
    },
    {
      "source": "String",
      "target": "Problem 38",
      "value": 1,
      "timestamp": "2024-01-11"
    },
    {
      "source": "Array",
      "target": "Problem 35",
      "value": 1,
      "timestamp": "2024-01-11"
    },
    {
      "source": "Binary Search",
      "target": "Problem 35",
      "value": 1,
      "timestamp": "2024-01-11"
    },
    {
      "source": "Array",
      "target": "Problem 37",
      "value": 1,
      "timestamp": "2024-01-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 37",
      "value": 1,
      "timestamp": "2024-01-12"
    },
    {
      "source": "Backtracking",
      "target": "Problem 37",
      "value": 1,
      "timestamp": "2024-01-12"
    },
    {
      "source": "Matrix",
      "target": "Problem 37",
      "value": 1,
      "timestamp": "2024-01-12"
    },
    {
      "source": "String",
      "target": "Problem 32",
      "value": 1,
      "timestamp": "2024-01-12"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 32",
      "value": 1,
      "timestamp": "2024-01-12"
    },
    {
      "source": "Stack",
      "target": "Problem 32",
      "value": 1,
      "timestamp": "2024-01-12"
    },
    {
      "source": "Array",
      "target": "Problem 34",
      "value": 1,
      "timestamp": "2024-01-12"
    },
    {
      "source": "Binary Search",
      "target": "Problem 34",
      "value": 1,
      "timestamp": "2024-01-12"
    },
    {
      "source": "Array",
      "target": "Problem 39",
      "value": 1,
      "timestamp": "2024-01-13"
    },
    {
      "source": "Backtracking",
      "target": "Problem 39",
      "value": 1,
      "timestamp": "2024-01-13"
    },
    {
      "source": "Array",
      "target": "Problem 33",
      "value": 1,
      "timestamp": "2024-01-13"
    },
    {
      "source": "Binary Search",
      "target": "Problem 33",
      "value": 1,
      "timestamp": "2024-01-13"
    },
    {
      "source": "Array",
      "target": "Problem 36",
      "value": 1,
      "timestamp": "2024-01-13"
    },
    {
      "source": "Hash Table",
      "target": "Problem 36",
      "value": 1,
      "timestamp": "2024-01-13"
    },
    {
      "source": "Matrix",
      "target": "Problem 36",
      "value": 1,
      "timestamp": "2024-01-13"
    },
    {
      "source": "Array",
      "target": "Problem 41",
      "value": 1,
      "timestamp": "2024-01-14"
    },
    {
      "source": "Hash Table",
      "target": "Problem 41",
      "value": 1,
      "timestamp": "2024-01-14"
    },
    {
      "source": "Math",
      "target": "Problem 43",
      "value": 1,
      "timestamp": "2024-01-14"
    },
    {
      "source": "String",
      "target": "Problem 43",
      "value": 1,
      "timestamp": "2024-01-14"
    },
    {
      "source": "Simulation",
      "target": "Problem 43",
      "value": 1,
      "timestamp": "2024-01-14"
    },
    {
      "source": "String",
      "target": "Problem 44",
      "value": 1,
      "timestamp": "2024-01-14"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 44",
      "value": 1,
      "timestamp": "2024-01-14"
    },
    {
      "source": "Greedy",
      "target": "Problem 44",
      "value": 1,
      "timestamp": "2024-01-14"
    },
    {
      "source": "Recursion",
      "target": "Problem 44",
      "value": 1,
      "timestamp": "2024-01-14"
    },
    {
      "source": "Array",
      "target": "Problem 42",
      "value": 1,
      "timestamp": "2024-01-15"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 42",
      "value": 1,
      "timestamp": "2024-01-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 42",
      "value": 1,
      "timestamp": "2024-01-15"
    },
    {
      "source": "Stack",
      "target": "Problem 42",
      "value": 1,
      "timestamp": "2024-01-15"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 42",
      "value": 1,
      "timestamp": "2024-01-15"
    },
    {
      "source": "Array",
      "target": "Problem 40",
      "value": 1,
      "timestamp": "2024-01-15"
    },
    {
      "source": "Backtracking",
      "target": "Problem 40",
      "value": 1,
      "timestamp": "2024-01-15"
    },
    {
      "source": "Array",
      "target": "Problem 46",
      "value": 1,
      "timestamp": "2024-01-15"
    },
    {
      "source": "Backtracking",
      "target": "Problem 46",
      "value": 1,
      "timestamp": "2024-01-15"
    },
    {
      "source": "Array",
      "target": "Problem 47",
      "value": 1,
      "timestamp": "2024-01-16"
    },
    {
      "source": "Backtracking",
      "target": "Problem 47",
      "value": 1,
      "timestamp": "2024-01-16"
    },
    {
      "source": "Array",
      "target": "Problem 45",
      "value": 1,
      "timestamp": "2024-01-16"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 45",
      "value": 1,
      "timestamp": "2024-01-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 45",
      "value": 1,
      "timestamp": "2024-01-16"
    },
    {
      "source": "Array",
      "target": "Problem 49",
      "value": 1,
      "timestamp": "2024-01-16"
    },
    {
      "source": "Hash Table",
      "target": "Problem 49",
      "value": 1,
      "timestamp": "2024-01-16"
    },
    {
      "source": "String",
      "target": "Problem 49",
      "value": 1,
      "timestamp": "2024-01-16"
    },
    {
      "source": "Sorting",
      "target": "Problem 49",
      "value": 1,
      "timestamp": "2024-01-16"
    },
    {
      "source": "Array",
      "target": "Problem 48",
      "value": 1,
      "timestamp": "2024-01-17"
    },
    {
      "source": "Math",
      "target": "Problem 48",
      "value": 1,
      "timestamp": "2024-01-17"
    },
    {
      "source": "Matrix",
      "target": "Problem 48",
      "value": 1,
      "timestamp": "2024-01-17"
    },
    {
      "source": "Array",
      "target": "Problem 51",
      "value": 1,
      "timestamp": "2024-01-17"
    },
    {
      "source": "Backtracking",
      "target": "Problem 51",
      "value": 1,
      "timestamp": "2024-01-17"
    },
    {
      "source": "Backtracking",
      "target": "Problem 52",
      "value": 1,
      "timestamp": "2024-01-18"
    },
    {
      "source": "Array",
      "target": "Problem 53",
      "value": 1,
      "timestamp": "2024-01-18"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 53",
      "value": 1,
      "timestamp": "2024-01-18"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 53",
      "value": 1,
      "timestamp": "2024-01-18"
    },
    {
      "source": "Array",
      "target": "Problem 54",
      "value": 1,
      "timestamp": "2024-01-18"
    },
    {
      "source": "Matrix",
      "target": "Problem 54",
      "value": 1,
      "timestamp": "2024-01-18"
    },
    {
      "source": "Simulation",
      "target": "Problem 54",
      "value": 1,
      "timestamp": "2024-01-18"
    },
    {
      "source": "Array",
      "target": "Problem 55",
      "value": 1,
      "timestamp": "2024-01-19"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 55",
      "value": 1,
      "timestamp": "2024-01-19"
    },
    {
      "source": "Greedy",
      "target": "Problem 55",
      "value": 1,
      "timestamp": "2024-01-19"
    },
    {
      "source": "Array",
      "target": "Problem 56",
      "value": 1,
      "timestamp": "2024-01-19"
    },
    {
      "source": "Sorting",
      "target": "Problem 56",
      "value": 1,
      "timestamp": "2024-01-19"
    },
    {
      "source": "Array",
      "target": "Problem 57",
      "value": 1,
      "timestamp": "2024-01-19"
    },
    {
      "source": "String",
      "target": "Problem 58",
      "value": 1,
      "timestamp": "2024-01-20"
    },
    {
      "source": "Array",
      "target": "Problem 59",
      "value": 1,
      "timestamp": "2024-01-20"
    },
    {
      "source": "Matrix",
      "target": "Problem 59",
      "value": 1,
      "timestamp": "2024-01-20"
    },
    {
      "source": "Simulation",
      "target": "Problem 59",
      "value": 1,
      "timestamp": "2024-01-20"
    },
    {
      "source": "Math",
      "target": "Problem 60",
      "value": 1,
      "timestamp": "2024-01-20"
    },
    {
      "source": "Recursion",
      "target": "Problem 60",
      "value": 1,
      "timestamp": "2024-01-20"
    },
    {
      "source": "Linked List",
      "target": "Problem 61",
      "value": 1,
      "timestamp": "2024-01-21"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 61",
      "value": 1,
      "timestamp": "2024-01-21"
    },
    {
      "source": "String",
      "target": "Problem 65",
      "value": 1,
      "timestamp": "2024-01-21"
    },
    {
      "source": "Math",
      "target": "Problem 62",
      "value": 1,
      "timestamp": "2024-01-21"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 62",
      "value": 1,
      "timestamp": "2024-01-21"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 62",
      "value": 1,
      "timestamp": "2024-01-21"
    },
    {
      "source": "Array",
      "target": "Problem 63",
      "value": 1,
      "timestamp": "2024-01-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 63",
      "value": 1,
      "timestamp": "2024-01-22"
    },
    {
      "source": "Matrix",
      "target": "Problem 63",
      "value": 1,
      "timestamp": "2024-01-22"
    },
    {
      "source": "Array",
      "target": "Problem 64",
      "value": 1,
      "timestamp": "2024-01-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 64",
      "value": 1,
      "timestamp": "2024-01-22"
    },
    {
      "source": "Matrix",
      "target": "Problem 64",
      "value": 1,
      "timestamp": "2024-01-22"
    },
    {
      "source": "Array",
      "target": "Problem 66",
      "value": 1,
      "timestamp": "2024-01-22"
    },
    {
      "source": "Math",
      "target": "Problem 66",
      "value": 1,
      "timestamp": "2024-01-22"
    },
    {
      "source": "Math",
      "target": "Problem 67",
      "value": 1,
      "timestamp": "2024-01-23"
    },
    {
      "source": "String",
      "target": "Problem 67",
      "value": 1,
      "timestamp": "2024-01-23"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 67",
      "value": 1,
      "timestamp": "2024-01-23"
    },
    {
      "source": "Simulation",
      "target": "Problem 67",
      "value": 1,
      "timestamp": "2024-01-23"
    },
    {
      "source": "Array",
      "target": "Problem 68",
      "value": 1,
      "timestamp": "2024-01-23"
    },
    {
      "source": "String",
      "target": "Problem 68",
      "value": 1,
      "timestamp": "2024-01-23"
    },
    {
      "source": "Simulation",
      "target": "Problem 68",
      "value": 1,
      "timestamp": "2024-01-23"
    },
    {
      "source": "Array",
      "target": "Problem 73",
      "value": 1,
      "timestamp": "2024-01-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 73",
      "value": 1,
      "timestamp": "2024-01-24"
    },
    {
      "source": "Matrix",
      "target": "Problem 73",
      "value": 1,
      "timestamp": "2024-01-24"
    },
    {
      "source": "String",
      "target": "Problem 71",
      "value": 1,
      "timestamp": "2024-01-24"
    },
    {
      "source": "Stack",
      "target": "Problem 71",
      "value": 1,
      "timestamp": "2024-01-24"
    },
    {
      "source": "Math",
      "target": "Problem 70",
      "value": 1,
      "timestamp": "2024-01-24"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 70",
      "value": 1,
      "timestamp": "2024-01-24"
    },
    {
      "source": "Memoization",
      "target": "Problem 70",
      "value": 1,
      "timestamp": "2024-01-24"
    },
    {
      "source": "String",
      "target": "Problem 72",
      "value": 1,
      "timestamp": "2024-01-25"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 72",
      "value": 1,
      "timestamp": "2024-01-25"
    },
    {
      "source": "Array",
      "target": "Problem 74",
      "value": 1,
      "timestamp": "2024-01-25"
    },
    {
      "source": "Binary Search",
      "target": "Problem 74",
      "value": 1,
      "timestamp": "2024-01-25"
    },
    {
      "source": "Matrix",
      "target": "Problem 74",
      "value": 1,
      "timestamp": "2024-01-25"
    },
    {
      "source": "Array",
      "target": "Problem 75",
      "value": 1,
      "timestamp": "2024-01-25"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 75",
      "value": 1,
      "timestamp": "2024-01-25"
    },
    {
      "source": "Sorting",
      "target": "Problem 75",
      "value": 1,
      "timestamp": "2024-01-25"
    },
    {
      "source": "Hash Table",
      "target": "Problem 76",
      "value": 1,
      "timestamp": "2024-01-26"
    },
    {
      "source": "String",
      "target": "Problem 76",
      "value": 1,
      "timestamp": "2024-01-26"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 76",
      "value": 1,
      "timestamp": "2024-01-26"
    },
    {
      "source": "Array",
      "target": "Problem 78",
      "value": 1,
      "timestamp": "2024-01-26"
    },
    {
      "source": "Backtracking",
      "target": "Problem 78",
      "value": 1,
      "timestamp": "2024-01-26"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 78",
      "value": 1,
      "timestamp": "2024-01-26"
    },
    {
      "source": "Array",
      "target": "Problem 79",
      "value": 1,
      "timestamp": "2024-01-26"
    },
    {
      "source": "String",
      "target": "Problem 79",
      "value": 1,
      "timestamp": "2024-01-26"
    },
    {
      "source": "Backtracking",
      "target": "Problem 79",
      "value": 1,
      "timestamp": "2024-01-26"
    },
    {
      "source": "Matrix",
      "target": "Problem 79",
      "value": 1,
      "timestamp": "2024-01-26"
    },
    {
      "source": "Backtracking",
      "target": "Problem 77",
      "value": 1,
      "timestamp": "2024-01-27"
    },
    {
      "source": "Array",
      "target": "Problem 80",
      "value": 1,
      "timestamp": "2024-01-27"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 80",
      "value": 1,
      "timestamp": "2024-01-27"
    },
    {
      "source": "Array",
      "target": "Problem 81",
      "value": 1,
      "timestamp": "2024-01-27"
    },
    {
      "source": "Binary Search",
      "target": "Problem 81",
      "value": 1,
      "timestamp": "2024-01-27"
    },
    {
      "source": "Linked List",
      "target": "Problem 82",
      "value": 1,
      "timestamp": "2024-01-28"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 82",
      "value": 1,
      "timestamp": "2024-01-28"
    },
    {
      "source": "String",
      "target": "Problem 87",
      "value": 1,
      "timestamp": "2024-01-28"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 87",
      "value": 1,
      "timestamp": "2024-01-28"
    },
    {
      "source": "Linked List",
      "target": "Problem 86",
      "value": 1,
      "timestamp": "2024-01-28"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 86",
      "value": 1,
      "timestamp": "2024-01-28"
    },
    {
      "source": "Linked List",
      "target": "Problem 83",
      "value": 1,
      "timestamp": "2024-01-29"
    },
    {
      "source": "Array",
      "target": "Problem 85",
      "value": 1,
      "timestamp": "2024-01-29"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 85",
      "value": 1,
      "timestamp": "2024-01-29"
    },
    {
      "source": "Stack",
      "target": "Problem 85",
      "value": 1,
      "timestamp": "2024-01-29"
    },
    {
      "source": "Matrix",
      "target": "Problem 85",
      "value": 1,
      "timestamp": "2024-01-29"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 85",
      "value": 1,
      "timestamp": "2024-01-29"
    },
    {
      "source": "Array",
      "target": "Problem 84",
      "value": 1,
      "timestamp": "2024-01-29"
    },
    {
      "source": "Stack",
      "target": "Problem 84",
      "value": 1,
      "timestamp": "2024-01-29"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 84",
      "value": 1,
      "timestamp": "2024-01-29"
    },
    {
      "source": "Math",
      "target": "Problem 89",
      "value": 1,
      "timestamp": "2024-01-30"
    },
    {
      "source": "Backtracking",
      "target": "Problem 89",
      "value": 1,
      "timestamp": "2024-01-30"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 89",
      "value": 1,
      "timestamp": "2024-01-30"
    },
    {
      "source": "Array",
      "target": "Problem 90",
      "value": 1,
      "timestamp": "2024-01-30"
    },
    {
      "source": "Backtracking",
      "target": "Problem 90",
      "value": 1,
      "timestamp": "2024-01-30"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 90",
      "value": 1,
      "timestamp": "2024-01-30"
    },
    {
      "source": "Array",
      "target": "Problem 88",
      "value": 1,
      "timestamp": "2024-01-30"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 88",
      "value": 1,
      "timestamp": "2024-01-30"
    },
    {
      "source": "Sorting",
      "target": "Problem 88",
      "value": 1,
      "timestamp": "2024-01-30"
    },
    {
      "source": "String",
      "target": "Problem 91",
      "value": 1,
      "timestamp": "2024-01-31"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 91",
      "value": 1,
      "timestamp": "2024-01-31"
    },
    {
      "source": "Linked List",
      "target": "Problem 92",
      "value": 1,
      "timestamp": "2024-01-31"
    },
    {
      "source": "Stack",
      "target": "Problem 94",
      "value": 1,
      "timestamp": "2024-01-31"
    },
    {
      "source": "Tree",
      "target": "Problem 94",
      "value": 1,
      "timestamp": "2024-01-31"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 94",
      "value": 1,
      "timestamp": "2024-01-31"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 94",
      "value": 1,
      "timestamp": "2024-01-31"
    },
    {
      "source": "String",
      "target": "Problem 93",
      "value": 1,
      "timestamp": "2024-02-01"
    },
    {
      "source": "Backtracking",
      "target": "Problem 93",
      "value": 1,
      "timestamp": "2024-02-01"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 95",
      "value": 1,
      "timestamp": "2024-02-01"
    },
    {
      "source": "Backtracking",
      "target": "Problem 95",
      "value": 1,
      "timestamp": "2024-02-01"
    },
    {
      "source": "Tree",
      "target": "Problem 95",
      "value": 1,
      "timestamp": "2024-02-01"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 95",
      "value": 1,
      "timestamp": "2024-02-01"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 95",
      "value": 1,
      "timestamp": "2024-02-01"
    },
    {
      "source": "Math",
      "target": "Problem 96",
      "value": 1,
      "timestamp": "2024-02-01"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 96",
      "value": 1,
      "timestamp": "2024-02-01"
    },
    {
      "source": "Tree",
      "target": "Problem 96",
      "value": 1,
      "timestamp": "2024-02-01"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 96",
      "value": 1,
      "timestamp": "2024-02-01"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 96",
      "value": 1,
      "timestamp": "2024-02-01"
    },
    {
      "source": "Tree",
      "target": "Problem 98",
      "value": 1,
      "timestamp": "2024-02-02"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 98",
      "value": 1,
      "timestamp": "2024-02-02"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 98",
      "value": 1,
      "timestamp": "2024-02-02"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 98",
      "value": 1,
      "timestamp": "2024-02-02"
    },
    {
      "source": "Tree",
      "target": "Problem 99",
      "value": 1,
      "timestamp": "2024-02-02"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 99",
      "value": 1,
      "timestamp": "2024-02-02"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 99",
      "value": 1,
      "timestamp": "2024-02-02"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 99",
      "value": 1,
      "timestamp": "2024-02-02"
    },
    {
      "source": "String",
      "target": "Problem 97",
      "value": 1,
      "timestamp": "2024-02-02"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 97",
      "value": 1,
      "timestamp": "2024-02-02"
    },
    {
      "source": "Tree",
      "target": "Problem 100",
      "value": 1,
      "timestamp": "2024-02-03"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 100",
      "value": 1,
      "timestamp": "2024-02-03"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 100",
      "value": 1,
      "timestamp": "2024-02-03"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 100",
      "value": 1,
      "timestamp": "2024-02-03"
    },
    {
      "source": "Tree",
      "target": "Problem 101",
      "value": 1,
      "timestamp": "2024-02-03"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 101",
      "value": 1,
      "timestamp": "2024-02-03"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 101",
      "value": 1,
      "timestamp": "2024-02-03"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 101",
      "value": 1,
      "timestamp": "2024-02-03"
    },
    {
      "source": "Tree",
      "target": "Problem 103",
      "value": 1,
      "timestamp": "2024-02-03"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 103",
      "value": 1,
      "timestamp": "2024-02-03"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 103",
      "value": 1,
      "timestamp": "2024-02-03"
    },
    {
      "source": "Tree",
      "target": "Problem 104",
      "value": 1,
      "timestamp": "2024-02-04"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 104",
      "value": 1,
      "timestamp": "2024-02-04"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 104",
      "value": 1,
      "timestamp": "2024-02-04"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 104",
      "value": 1,
      "timestamp": "2024-02-04"
    },
    {
      "source": "Array",
      "target": "Problem 105",
      "value": 1,
      "timestamp": "2024-02-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 105",
      "value": 1,
      "timestamp": "2024-02-04"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 105",
      "value": 1,
      "timestamp": "2024-02-04"
    },
    {
      "source": "Tree",
      "target": "Problem 105",
      "value": 1,
      "timestamp": "2024-02-04"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 105",
      "value": 1,
      "timestamp": "2024-02-04"
    },
    {
      "source": "Tree",
      "target": "Problem 107",
      "value": 1,
      "timestamp": "2024-02-04"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 107",
      "value": 1,
      "timestamp": "2024-02-04"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 107",
      "value": 1,
      "timestamp": "2024-02-04"
    },
    {
      "source": "Tree",
      "target": "Problem 102",
      "value": 1,
      "timestamp": "2024-02-05"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 102",
      "value": 1,
      "timestamp": "2024-02-05"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 102",
      "value": 1,
      "timestamp": "2024-02-05"
    },
    {
      "source": "Array",
      "target": "Problem 106",
      "value": 1,
      "timestamp": "2024-02-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 106",
      "value": 1,
      "timestamp": "2024-02-05"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 106",
      "value": 1,
      "timestamp": "2024-02-05"
    },
    {
      "source": "Tree",
      "target": "Problem 106",
      "value": 1,
      "timestamp": "2024-02-05"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 106",
      "value": 1,
      "timestamp": "2024-02-05"
    },
    {
      "source": "Array",
      "target": "Problem 108",
      "value": 1,
      "timestamp": "2024-02-05"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 108",
      "value": 1,
      "timestamp": "2024-02-05"
    },
    {
      "source": "Tree",
      "target": "Problem 108",
      "value": 1,
      "timestamp": "2024-02-05"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 108",
      "value": 1,
      "timestamp": "2024-02-05"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 108",
      "value": 1,
      "timestamp": "2024-02-05"
    },
    {
      "source": "Linked List",
      "target": "Problem 109",
      "value": 1,
      "timestamp": "2024-02-06"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 109",
      "value": 1,
      "timestamp": "2024-02-06"
    },
    {
      "source": "Tree",
      "target": "Problem 109",
      "value": 1,
      "timestamp": "2024-02-06"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 109",
      "value": 1,
      "timestamp": "2024-02-06"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 109",
      "value": 1,
      "timestamp": "2024-02-06"
    },
    {
      "source": "Tree",
      "target": "Problem 110",
      "value": 1,
      "timestamp": "2024-02-06"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 110",
      "value": 1,
      "timestamp": "2024-02-06"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 110",
      "value": 1,
      "timestamp": "2024-02-06"
    },
    {
      "source": "String",
      "target": "Problem 115",
      "value": 1,
      "timestamp": "2024-02-06"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 115",
      "value": 1,
      "timestamp": "2024-02-06"
    },
    {
      "source": "Linked List",
      "target": "Problem 114",
      "value": 1,
      "timestamp": "2024-02-07"
    },
    {
      "source": "Stack",
      "target": "Problem 114",
      "value": 1,
      "timestamp": "2024-02-07"
    },
    {
      "source": "Tree",
      "target": "Problem 114",
      "value": 1,
      "timestamp": "2024-02-07"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 114",
      "value": 1,
      "timestamp": "2024-02-07"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 114",
      "value": 1,
      "timestamp": "2024-02-07"
    },
    {
      "source": "Tree",
      "target": "Problem 111",
      "value": 1,
      "timestamp": "2024-02-07"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 111",
      "value": 1,
      "timestamp": "2024-02-07"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 111",
      "value": 1,
      "timestamp": "2024-02-07"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 111",
      "value": 1,
      "timestamp": "2024-02-07"
    },
    {
      "source": "Tree",
      "target": "Problem 112",
      "value": 1,
      "timestamp": "2024-02-07"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 112",
      "value": 1,
      "timestamp": "2024-02-07"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 112",
      "value": 1,
      "timestamp": "2024-02-07"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 112",
      "value": 1,
      "timestamp": "2024-02-07"
    },
    {
      "source": "Linked List",
      "target": "Problem 116",
      "value": 1,
      "timestamp": "2024-02-08"
    },
    {
      "source": "Tree",
      "target": "Problem 116",
      "value": 1,
      "timestamp": "2024-02-08"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 116",
      "value": 1,
      "timestamp": "2024-02-08"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 116",
      "value": 1,
      "timestamp": "2024-02-08"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 116",
      "value": 1,
      "timestamp": "2024-02-08"
    },
    {
      "source": "Backtracking",
      "target": "Problem 113",
      "value": 1,
      "timestamp": "2024-02-08"
    },
    {
      "source": "Tree",
      "target": "Problem 113",
      "value": 1,
      "timestamp": "2024-02-08"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 113",
      "value": 1,
      "timestamp": "2024-02-08"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 113",
      "value": 1,
      "timestamp": "2024-02-08"
    },
    {
      "source": "Linked List",
      "target": "Problem 117",
      "value": 1,
      "timestamp": "2024-02-08"
    },
    {
      "source": "Tree",
      "target": "Problem 117",
      "value": 1,
      "timestamp": "2024-02-08"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 117",
      "value": 1,
      "timestamp": "2024-02-08"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 117",
      "value": 1,
      "timestamp": "2024-02-08"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 117",
      "value": 1,
      "timestamp": "2024-02-08"
    },
    {
      "source": "Array",
      "target": "Problem 120",
      "value": 1,
      "timestamp": "2024-02-09"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 120",
      "value": 1,
      "timestamp": "2024-02-09"
    },
    {
      "source": "Array",
      "target": "Problem 123",
      "value": 1,
      "timestamp": "2024-02-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 123",
      "value": 1,
      "timestamp": "2024-02-10"
    },
    {
      "source": "Array",
      "target": "Problem 121",
      "value": 1,
      "timestamp": "2024-02-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 121",
      "value": 1,
      "timestamp": "2024-02-10"
    },
    {
      "source": "Array",
      "target": "Problem 122",
      "value": 1,
      "timestamp": "2024-02-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 122",
      "value": 1,
      "timestamp": "2024-02-10"
    },
    {
      "source": "Greedy",
      "target": "Problem 122",
      "value": 1,
      "timestamp": "2024-02-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 124",
      "value": 1,
      "timestamp": "2024-02-11"
    },
    {
      "source": "Tree",
      "target": "Problem 124",
      "value": 1,
      "timestamp": "2024-02-11"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 124",
      "value": 1,
      "timestamp": "2024-02-11"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 124",
      "value": 1,
      "timestamp": "2024-02-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 126",
      "value": 1,
      "timestamp": "2024-02-11"
    },
    {
      "source": "String",
      "target": "Problem 126",
      "value": 1,
      "timestamp": "2024-02-11"
    },
    {
      "source": "Backtracking",
      "target": "Problem 126",
      "value": 1,
      "timestamp": "2024-02-11"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 126",
      "value": 1,
      "timestamp": "2024-02-11"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 125",
      "value": 1,
      "timestamp": "2024-02-11"
    },
    {
      "source": "String",
      "target": "Problem 125",
      "value": 1,
      "timestamp": "2024-02-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 127",
      "value": 1,
      "timestamp": "2024-02-12"
    },
    {
      "source": "String",
      "target": "Problem 127",
      "value": 1,
      "timestamp": "2024-02-12"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 127",
      "value": 1,
      "timestamp": "2024-02-12"
    },
    {
      "source": "Array",
      "target": "Problem 128",
      "value": 1,
      "timestamp": "2024-02-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 128",
      "value": 1,
      "timestamp": "2024-02-12"
    },
    {
      "source": "Union Find",
      "target": "Problem 128",
      "value": 1,
      "timestamp": "2024-02-12"
    },
    {
      "source": "Array",
      "target": "Problem 130",
      "value": 1,
      "timestamp": "2024-02-12"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 130",
      "value": 1,
      "timestamp": "2024-02-12"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 130",
      "value": 1,
      "timestamp": "2024-02-12"
    },
    {
      "source": "Union Find",
      "target": "Problem 130",
      "value": 1,
      "timestamp": "2024-02-12"
    },
    {
      "source": "Matrix",
      "target": "Problem 130",
      "value": 1,
      "timestamp": "2024-02-12"
    },
    {
      "source": "Tree",
      "target": "Problem 129",
      "value": 1,
      "timestamp": "2024-02-13"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 129",
      "value": 1,
      "timestamp": "2024-02-13"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 129",
      "value": 1,
      "timestamp": "2024-02-13"
    },
    {
      "source": "String",
      "target": "Problem 131",
      "value": 1,
      "timestamp": "2024-02-13"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 131",
      "value": 1,
      "timestamp": "2024-02-13"
    },
    {
      "source": "Backtracking",
      "target": "Problem 131",
      "value": 1,
      "timestamp": "2024-02-13"
    },
    {
      "source": "String",
      "target": "Problem 132",
      "value": 1,
      "timestamp": "2024-02-13"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 132",
      "value": 1,
      "timestamp": "2024-02-13"
    },
    {
      "source": "Hash Table",
      "target": "Problem 133",
      "value": 1,
      "timestamp": "2024-02-14"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 133",
      "value": 1,
      "timestamp": "2024-02-14"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 133",
      "value": 1,
      "timestamp": "2024-02-14"
    },
    {
      "source": "Graph",
      "target": "Problem 133",
      "value": 1,
      "timestamp": "2024-02-14"
    },
    {
      "source": "Array",
      "target": "Problem 134",
      "value": 1,
      "timestamp": "2024-02-14"
    },
    {
      "source": "Greedy",
      "target": "Problem 134",
      "value": 1,
      "timestamp": "2024-02-14"
    },
    {
      "source": "Array",
      "target": "Problem 135",
      "value": 1,
      "timestamp": "2024-02-14"
    },
    {
      "source": "Greedy",
      "target": "Problem 135",
      "value": 1,
      "timestamp": "2024-02-14"
    },
    {
      "source": "Hash Table",
      "target": "Problem 138",
      "value": 1,
      "timestamp": "2024-02-15"
    },
    {
      "source": "Linked List",
      "target": "Problem 138",
      "value": 1,
      "timestamp": "2024-02-15"
    },
    {
      "source": "Array",
      "target": "Problem 139",
      "value": 1,
      "timestamp": "2024-02-15"
    },
    {
      "source": "Hash Table",
      "target": "Problem 139",
      "value": 1,
      "timestamp": "2024-02-15"
    },
    {
      "source": "String",
      "target": "Problem 139",
      "value": 1,
      "timestamp": "2024-02-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 139",
      "value": 1,
      "timestamp": "2024-02-15"
    },
    {
      "source": "Trie",
      "target": "Problem 139",
      "value": 1,
      "timestamp": "2024-02-15"
    },
    {
      "source": "Memoization",
      "target": "Problem 139",
      "value": 1,
      "timestamp": "2024-02-15"
    },
    {
      "source": "Array",
      "target": "Problem 136",
      "value": 1,
      "timestamp": "2024-02-15"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 136",
      "value": 1,
      "timestamp": "2024-02-15"
    },
    {
      "source": "Array",
      "target": "Problem 140",
      "value": 1,
      "timestamp": "2024-02-16"
    },
    {
      "source": "Hash Table",
      "target": "Problem 140",
      "value": 1,
      "timestamp": "2024-02-16"
    },
    {
      "source": "String",
      "target": "Problem 140",
      "value": 1,
      "timestamp": "2024-02-16"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 140",
      "value": 1,
      "timestamp": "2024-02-16"
    },
    {
      "source": "Backtracking",
      "target": "Problem 140",
      "value": 1,
      "timestamp": "2024-02-16"
    },
    {
      "source": "Trie",
      "target": "Problem 140",
      "value": 1,
      "timestamp": "2024-02-16"
    },
    {
      "source": "Memoization",
      "target": "Problem 140",
      "value": 1,
      "timestamp": "2024-02-16"
    },
    {
      "source": "Array",
      "target": "Problem 137",
      "value": 1,
      "timestamp": "2024-02-16"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 137",
      "value": 1,
      "timestamp": "2024-02-16"
    },
    {
      "source": "Hash Table",
      "target": "Problem 141",
      "value": 1,
      "timestamp": "2024-02-16"
    },
    {
      "source": "Linked List",
      "target": "Problem 141",
      "value": 1,
      "timestamp": "2024-02-16"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 141",
      "value": 1,
      "timestamp": "2024-02-16"
    },
    {
      "source": "Hash Table",
      "target": "Problem 142",
      "value": 1,
      "timestamp": "2024-02-17"
    },
    {
      "source": "Linked List",
      "target": "Problem 142",
      "value": 1,
      "timestamp": "2024-02-17"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 142",
      "value": 1,
      "timestamp": "2024-02-17"
    },
    {
      "source": "Linked List",
      "target": "Problem 143",
      "value": 1,
      "timestamp": "2024-02-17"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 143",
      "value": 1,
      "timestamp": "2024-02-17"
    },
    {
      "source": "Stack",
      "target": "Problem 143",
      "value": 1,
      "timestamp": "2024-02-17"
    },
    {
      "source": "Recursion",
      "target": "Problem 143",
      "value": 1,
      "timestamp": "2024-02-17"
    },
    {
      "source": "Stack",
      "target": "Problem 145",
      "value": 1,
      "timestamp": "2024-02-17"
    },
    {
      "source": "Tree",
      "target": "Problem 145",
      "value": 1,
      "timestamp": "2024-02-17"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 145",
      "value": 1,
      "timestamp": "2024-02-17"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 145",
      "value": 1,
      "timestamp": "2024-02-17"
    },
    {
      "source": "Stack",
      "target": "Problem 144",
      "value": 1,
      "timestamp": "2024-02-18"
    },
    {
      "source": "Tree",
      "target": "Problem 144",
      "value": 1,
      "timestamp": "2024-02-18"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 144",
      "value": 1,
      "timestamp": "2024-02-18"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 144",
      "value": 1,
      "timestamp": "2024-02-18"
    },
    {
      "source": "Array",
      "target": "Problem 149",
      "value": 1,
      "timestamp": "2024-02-18"
    },
    {
      "source": "Hash Table",
      "target": "Problem 149",
      "value": 1,
      "timestamp": "2024-02-18"
    },
    {
      "source": "Math",
      "target": "Problem 149",
      "value": 1,
      "timestamp": "2024-02-18"
    },
    {
      "source": "Geometry",
      "target": "Problem 149",
      "value": 1,
      "timestamp": "2024-02-18"
    },
    {
      "source": "Linked List",
      "target": "Problem 147",
      "value": 1,
      "timestamp": "2024-02-18"
    },
    {
      "source": "Sorting",
      "target": "Problem 147",
      "value": 1,
      "timestamp": "2024-02-18"
    },
    {
      "source": "Hash Table",
      "target": "Problem 146",
      "value": 1,
      "timestamp": "2024-02-19"
    },
    {
      "source": "Linked List",
      "target": "Problem 146",
      "value": 1,
      "timestamp": "2024-02-19"
    },
    {
      "source": "Design",
      "target": "Problem 146",
      "value": 1,
      "timestamp": "2024-02-19"
    },
    {
      "source": "Doubly-Linked List",
      "target": "Problem 146",
      "value": 1,
      "timestamp": "2024-02-19"
    },
    {
      "source": "Linked List",
      "target": "Problem 148",
      "value": 1,
      "timestamp": "2024-02-19"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 148",
      "value": 1,
      "timestamp": "2024-02-19"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 148",
      "value": 1,
      "timestamp": "2024-02-19"
    },
    {
      "source": "Sorting",
      "target": "Problem 148",
      "value": 1,
      "timestamp": "2024-02-19"
    },
    {
      "source": "Merge Sort",
      "target": "Problem 148",
      "value": 1,
      "timestamp": "2024-02-19"
    },
    {
      "source": "Array",
      "target": "Problem 150",
      "value": 1,
      "timestamp": "2024-02-19"
    },
    {
      "source": "Math",
      "target": "Problem 150",
      "value": 1,
      "timestamp": "2024-02-19"
    },
    {
      "source": "Stack",
      "target": "Problem 150",
      "value": 1,
      "timestamp": "2024-02-19"
    },
    {
      "source": "Array",
      "target": "Problem 153",
      "value": 1,
      "timestamp": "2024-02-20"
    },
    {
      "source": "Binary Search",
      "target": "Problem 153",
      "value": 1,
      "timestamp": "2024-02-20"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 151",
      "value": 1,
      "timestamp": "2024-02-20"
    },
    {
      "source": "String",
      "target": "Problem 151",
      "value": 1,
      "timestamp": "2024-02-20"
    },
    {
      "source": "Array",
      "target": "Problem 152",
      "value": 1,
      "timestamp": "2024-02-20"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 152",
      "value": 1,
      "timestamp": "2024-02-20"
    },
    {
      "source": "Array",
      "target": "Problem 154",
      "value": 1,
      "timestamp": "2024-02-21"
    },
    {
      "source": "Binary Search",
      "target": "Problem 154",
      "value": 1,
      "timestamp": "2024-02-21"
    },
    {
      "source": "Stack",
      "target": "Problem 155",
      "value": 1,
      "timestamp": "2024-02-21"
    },
    {
      "source": "Design",
      "target": "Problem 155",
      "value": 1,
      "timestamp": "2024-02-21"
    },
    {
      "source": "Hash Table",
      "target": "Problem 160",
      "value": 1,
      "timestamp": "2024-02-23"
    },
    {
      "source": "Linked List",
      "target": "Problem 160",
      "value": 1,
      "timestamp": "2024-02-23"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 160",
      "value": 1,
      "timestamp": "2024-02-23"
    },
    {
      "source": "Array",
      "target": "Problem 162",
      "value": 1,
      "timestamp": "2024-02-24"
    },
    {
      "source": "Binary Search",
      "target": "Problem 162",
      "value": 1,
      "timestamp": "2024-02-24"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 165",
      "value": 1,
      "timestamp": "2024-02-24"
    },
    {
      "source": "String",
      "target": "Problem 165",
      "value": 1,
      "timestamp": "2024-02-24"
    },
    {
      "source": "Array",
      "target": "Problem 164",
      "value": 1,
      "timestamp": "2024-02-24"
    },
    {
      "source": "Sorting",
      "target": "Problem 164",
      "value": 1,
      "timestamp": "2024-02-24"
    },
    {
      "source": "Bucket Sort",
      "target": "Problem 164",
      "value": 1,
      "timestamp": "2024-02-24"
    },
    {
      "source": "Radix Sort",
      "target": "Problem 164",
      "value": 1,
      "timestamp": "2024-02-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 166",
      "value": 1,
      "timestamp": "2024-02-25"
    },
    {
      "source": "Math",
      "target": "Problem 166",
      "value": 1,
      "timestamp": "2024-02-25"
    },
    {
      "source": "String",
      "target": "Problem 166",
      "value": 1,
      "timestamp": "2024-02-25"
    },
    {
      "source": "Math",
      "target": "Problem 168",
      "value": 1,
      "timestamp": "2024-02-25"
    },
    {
      "source": "String",
      "target": "Problem 168",
      "value": 1,
      "timestamp": "2024-02-25"
    },
    {
      "source": "Array",
      "target": "Problem 169",
      "value": 1,
      "timestamp": "2024-02-26"
    },
    {
      "source": "Hash Table",
      "target": "Problem 169",
      "value": 1,
      "timestamp": "2024-02-26"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 169",
      "value": 1,
      "timestamp": "2024-02-26"
    },
    {
      "source": "Sorting",
      "target": "Problem 169",
      "value": 1,
      "timestamp": "2024-02-26"
    },
    {
      "source": "Counting",
      "target": "Problem 169",
      "value": 1,
      "timestamp": "2024-02-26"
    },
    {
      "source": "Math",
      "target": "Problem 172",
      "value": 1,
      "timestamp": "2024-02-26"
    },
    {
      "source": "Stack",
      "target": "Problem 173",
      "value": 1,
      "timestamp": "2024-02-26"
    },
    {
      "source": "Tree",
      "target": "Problem 173",
      "value": 1,
      "timestamp": "2024-02-26"
    },
    {
      "source": "Design",
      "target": "Problem 173",
      "value": 1,
      "timestamp": "2024-02-26"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 173",
      "value": 1,
      "timestamp": "2024-02-26"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 173",
      "value": 1,
      "timestamp": "2024-02-26"
    },
    {
      "source": "Iterator",
      "target": "Problem 173",
      "value": 1,
      "timestamp": "2024-02-26"
    },
    {
      "source": "Array",
      "target": "Problem 174",
      "value": 1,
      "timestamp": "2024-02-27"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 174",
      "value": 1,
      "timestamp": "2024-02-27"
    },
    {
      "source": "Matrix",
      "target": "Problem 174",
      "value": 1,
      "timestamp": "2024-02-27"
    },
    {
      "source": "Math",
      "target": "Problem 171",
      "value": 1,
      "timestamp": "2024-02-27"
    },
    {
      "source": "String",
      "target": "Problem 171",
      "value": 1,
      "timestamp": "2024-02-27"
    },
    {
      "source": "Database",
      "target": "Problem 177",
      "value": 1,
      "timestamp": "2024-02-28"
    },
    {
      "source": "Database",
      "target": "Problem 176",
      "value": 1,
      "timestamp": "2024-02-28"
    },
    {
      "source": "Database",
      "target": "Problem 175",
      "value": 1,
      "timestamp": "2024-02-28"
    },
    {
      "source": "Database",
      "target": "Problem 180",
      "value": 1,
      "timestamp": "2024-02-29"
    },
    {
      "source": "Database",
      "target": "Problem 182",
      "value": 1,
      "timestamp": "2024-02-29"
    },
    {
      "source": "Database",
      "target": "Problem 181",
      "value": 1,
      "timestamp": "2024-02-29"
    },
    {
      "source": "Array",
      "target": "Problem 179",
      "value": 1,
      "timestamp": "2024-03-01"
    },
    {
      "source": "String",
      "target": "Problem 179",
      "value": 1,
      "timestamp": "2024-03-01"
    },
    {
      "source": "Greedy",
      "target": "Problem 179",
      "value": 1,
      "timestamp": "2024-03-01"
    },
    {
      "source": "Sorting",
      "target": "Problem 179",
      "value": 1,
      "timestamp": "2024-03-01"
    },
    {
      "source": "Database",
      "target": "Problem 178",
      "value": 1,
      "timestamp": "2024-03-01"
    },
    {
      "source": "Database",
      "target": "Problem 183",
      "value": 1,
      "timestamp": "2024-03-01"
    },
    {
      "source": "Database",
      "target": "Problem 184",
      "value": 1,
      "timestamp": "2024-03-02"
    },
    {
      "source": "Database",
      "target": "Problem 185",
      "value": 1,
      "timestamp": "2024-03-02"
    },
    {
      "source": "Hash Table",
      "target": "Problem 187",
      "value": 1,
      "timestamp": "2024-03-02"
    },
    {
      "source": "String",
      "target": "Problem 187",
      "value": 1,
      "timestamp": "2024-03-02"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 187",
      "value": 1,
      "timestamp": "2024-03-02"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 187",
      "value": 1,
      "timestamp": "2024-03-02"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 187",
      "value": 1,
      "timestamp": "2024-03-02"
    },
    {
      "source": "Hash Function",
      "target": "Problem 187",
      "value": 1,
      "timestamp": "2024-03-02"
    },
    {
      "source": "Array",
      "target": "Problem 189",
      "value": 1,
      "timestamp": "2024-03-03"
    },
    {
      "source": "Math",
      "target": "Problem 189",
      "value": 1,
      "timestamp": "2024-03-03"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 189",
      "value": 1,
      "timestamp": "2024-03-03"
    },
    {
      "source": "Array",
      "target": "Problem 188",
      "value": 1,
      "timestamp": "2024-03-03"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 188",
      "value": 1,
      "timestamp": "2024-03-03"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 190",
      "value": 1,
      "timestamp": "2024-03-03"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 190",
      "value": 1,
      "timestamp": "2024-03-03"
    },
    {
      "source": "Shell",
      "target": "Problem 193",
      "value": 1,
      "timestamp": "2024-03-04"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 191",
      "value": 1,
      "timestamp": "2024-03-04"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 191",
      "value": 1,
      "timestamp": "2024-03-04"
    },
    {
      "source": "Shell",
      "target": "Problem 194",
      "value": 1,
      "timestamp": "2024-03-05"
    },
    {
      "source": "Shell",
      "target": "Problem 192",
      "value": 1,
      "timestamp": "2024-03-05"
    },
    {
      "source": "Shell",
      "target": "Problem 195",
      "value": 1,
      "timestamp": "2024-03-05"
    },
    {
      "source": "Database",
      "target": "Problem 196",
      "value": 1,
      "timestamp": "2024-03-06"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 201",
      "value": 1,
      "timestamp": "2024-03-06"
    },
    {
      "source": "Array",
      "target": "Problem 198",
      "value": 1,
      "timestamp": "2024-03-06"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 198",
      "value": 1,
      "timestamp": "2024-03-06"
    },
    {
      "source": "Database",
      "target": "Problem 197",
      "value": 1,
      "timestamp": "2024-03-07"
    },
    {
      "source": "Array",
      "target": "Problem 200",
      "value": 1,
      "timestamp": "2024-03-07"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 200",
      "value": 1,
      "timestamp": "2024-03-07"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 200",
      "value": 1,
      "timestamp": "2024-03-07"
    },
    {
      "source": "Union Find",
      "target": "Problem 200",
      "value": 1,
      "timestamp": "2024-03-07"
    },
    {
      "source": "Matrix",
      "target": "Problem 200",
      "value": 1,
      "timestamp": "2024-03-07"
    },
    {
      "source": "Linked List",
      "target": "Problem 203",
      "value": 1,
      "timestamp": "2024-03-07"
    },
    {
      "source": "Recursion",
      "target": "Problem 203",
      "value": 1,
      "timestamp": "2024-03-07"
    },
    {
      "source": "Hash Table",
      "target": "Problem 202",
      "value": 1,
      "timestamp": "2024-03-08"
    },
    {
      "source": "Math",
      "target": "Problem 202",
      "value": 1,
      "timestamp": "2024-03-08"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 202",
      "value": 1,
      "timestamp": "2024-03-08"
    },
    {
      "source": "Array",
      "target": "Problem 204",
      "value": 1,
      "timestamp": "2024-03-08"
    },
    {
      "source": "Math",
      "target": "Problem 204",
      "value": 1,
      "timestamp": "2024-03-08"
    },
    {
      "source": "Enumeration",
      "target": "Problem 204",
      "value": 1,
      "timestamp": "2024-03-08"
    },
    {
      "source": "Number Theory",
      "target": "Problem 204",
      "value": 1,
      "timestamp": "2024-03-08"
    },
    {
      "source": "Tree",
      "target": "Problem 199",
      "value": 1,
      "timestamp": "2024-03-08"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 199",
      "value": 1,
      "timestamp": "2024-03-08"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 199",
      "value": 1,
      "timestamp": "2024-03-08"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 199",
      "value": 1,
      "timestamp": "2024-03-08"
    },
    {
      "source": "Hash Table",
      "target": "Problem 205",
      "value": 1,
      "timestamp": "2024-03-09"
    },
    {
      "source": "String",
      "target": "Problem 205",
      "value": 1,
      "timestamp": "2024-03-09"
    },
    {
      "source": "Array",
      "target": "Problem 209",
      "value": 1,
      "timestamp": "2024-03-09"
    },
    {
      "source": "Binary Search",
      "target": "Problem 209",
      "value": 1,
      "timestamp": "2024-03-09"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 209",
      "value": 1,
      "timestamp": "2024-03-09"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 209",
      "value": 1,
      "timestamp": "2024-03-09"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 207",
      "value": 1,
      "timestamp": "2024-03-09"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 207",
      "value": 1,
      "timestamp": "2024-03-09"
    },
    {
      "source": "Graph",
      "target": "Problem 207",
      "value": 1,
      "timestamp": "2024-03-09"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 207",
      "value": 1,
      "timestamp": "2024-03-09"
    },
    {
      "source": "Array",
      "target": "Problem 212",
      "value": 1,
      "timestamp": "2024-03-10"
    },
    {
      "source": "String",
      "target": "Problem 212",
      "value": 1,
      "timestamp": "2024-03-10"
    },
    {
      "source": "Backtracking",
      "target": "Problem 212",
      "value": 1,
      "timestamp": "2024-03-10"
    },
    {
      "source": "Trie",
      "target": "Problem 212",
      "value": 1,
      "timestamp": "2024-03-10"
    },
    {
      "source": "Matrix",
      "target": "Problem 212",
      "value": 1,
      "timestamp": "2024-03-10"
    },
    {
      "source": "Linked List",
      "target": "Problem 206",
      "value": 1,
      "timestamp": "2024-03-10"
    },
    {
      "source": "Recursion",
      "target": "Problem 206",
      "value": 1,
      "timestamp": "2024-03-10"
    },
    {
      "source": "Array",
      "target": "Problem 213",
      "value": 1,
      "timestamp": "2024-03-11"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 213",
      "value": 1,
      "timestamp": "2024-03-11"
    },
    {
      "source": "String",
      "target": "Problem 211",
      "value": 1,
      "timestamp": "2024-03-11"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 211",
      "value": 1,
      "timestamp": "2024-03-11"
    },
    {
      "source": "Design",
      "target": "Problem 211",
      "value": 1,
      "timestamp": "2024-03-11"
    },
    {
      "source": "Trie",
      "target": "Problem 211",
      "value": 1,
      "timestamp": "2024-03-11"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 210",
      "value": 1,
      "timestamp": "2024-03-11"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 210",
      "value": 1,
      "timestamp": "2024-03-11"
    },
    {
      "source": "Graph",
      "target": "Problem 210",
      "value": 1,
      "timestamp": "2024-03-11"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 210",
      "value": 1,
      "timestamp": "2024-03-11"
    },
    {
      "source": "Array",
      "target": "Problem 216",
      "value": 1,
      "timestamp": "2024-03-12"
    },
    {
      "source": "Backtracking",
      "target": "Problem 216",
      "value": 1,
      "timestamp": "2024-03-12"
    },
    {
      "source": "Array",
      "target": "Problem 217",
      "value": 1,
      "timestamp": "2024-03-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 217",
      "value": 1,
      "timestamp": "2024-03-12"
    },
    {
      "source": "Sorting",
      "target": "Problem 217",
      "value": 1,
      "timestamp": "2024-03-12"
    },
    {
      "source": "Array",
      "target": "Problem 219",
      "value": 1,
      "timestamp": "2024-03-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 219",
      "value": 1,
      "timestamp": "2024-03-12"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 219",
      "value": 1,
      "timestamp": "2024-03-12"
    },
    {
      "source": "String",
      "target": "Problem 214",
      "value": 1,
      "timestamp": "2024-03-13"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 214",
      "value": 1,
      "timestamp": "2024-03-13"
    },
    {
      "source": "String Matching",
      "target": "Problem 214",
      "value": 1,
      "timestamp": "2024-03-13"
    },
    {
      "source": "Hash Function",
      "target": "Problem 214",
      "value": 1,
      "timestamp": "2024-03-13"
    },
    {
      "source": "Array",
      "target": "Problem 215",
      "value": 1,
      "timestamp": "2024-03-13"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 215",
      "value": 1,
      "timestamp": "2024-03-13"
    },
    {
      "source": "Sorting",
      "target": "Problem 215",
      "value": 1,
      "timestamp": "2024-03-13"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 215",
      "value": 1,
      "timestamp": "2024-03-13"
    },
    {
      "source": "Quickselect",
      "target": "Problem 215",
      "value": 1,
      "timestamp": "2024-03-13"
    },
    {
      "source": "Array",
      "target": "Problem 220",
      "value": 1,
      "timestamp": "2024-03-13"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 220",
      "value": 1,
      "timestamp": "2024-03-13"
    },
    {
      "source": "Sorting",
      "target": "Problem 220",
      "value": 1,
      "timestamp": "2024-03-13"
    },
    {
      "source": "Bucket Sort",
      "target": "Problem 220",
      "value": 1,
      "timestamp": "2024-03-13"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 220",
      "value": 1,
      "timestamp": "2024-03-13"
    },
    {
      "source": "Array",
      "target": "Problem 218",
      "value": 1,
      "timestamp": "2024-03-14"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 218",
      "value": 1,
      "timestamp": "2024-03-14"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 218",
      "value": 1,
      "timestamp": "2024-03-14"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 218",
      "value": 1,
      "timestamp": "2024-03-14"
    },
    {
      "source": "Line Sweep",
      "target": "Problem 218",
      "value": 1,
      "timestamp": "2024-03-14"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 218",
      "value": 1,
      "timestamp": "2024-03-14"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 218",
      "value": 1,
      "timestamp": "2024-03-14"
    },
    {
      "source": "Math",
      "target": "Problem 227",
      "value": 1,
      "timestamp": "2024-03-14"
    },
    {
      "source": "String",
      "target": "Problem 227",
      "value": 1,
      "timestamp": "2024-03-14"
    },
    {
      "source": "Stack",
      "target": "Problem 227",
      "value": 1,
      "timestamp": "2024-03-14"
    },
    {
      "source": "Array",
      "target": "Problem 228",
      "value": 1,
      "timestamp": "2024-03-14"
    },
    {
      "source": "Stack",
      "target": "Problem 225",
      "value": 1,
      "timestamp": "2024-03-15"
    },
    {
      "source": "Design",
      "target": "Problem 225",
      "value": 1,
      "timestamp": "2024-03-15"
    },
    {
      "source": "Queue",
      "target": "Problem 225",
      "value": 1,
      "timestamp": "2024-03-15"
    },
    {
      "source": "Math",
      "target": "Problem 223",
      "value": 1,
      "timestamp": "2024-03-15"
    },
    {
      "source": "Geometry",
      "target": "Problem 223",
      "value": 1,
      "timestamp": "2024-03-15"
    },
    {
      "source": "Array",
      "target": "Problem 221",
      "value": 1,
      "timestamp": "2024-03-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 221",
      "value": 1,
      "timestamp": "2024-03-15"
    },
    {
      "source": "Matrix",
      "target": "Problem 221",
      "value": 1,
      "timestamp": "2024-03-15"
    },
    {
      "source": "Tree",
      "target": "Problem 226",
      "value": 1,
      "timestamp": "2024-03-16"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 226",
      "value": 1,
      "timestamp": "2024-03-16"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 226",
      "value": 1,
      "timestamp": "2024-03-16"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 226",
      "value": 1,
      "timestamp": "2024-03-16"
    },
    {
      "source": "Math",
      "target": "Problem 224",
      "value": 1,
      "timestamp": "2024-03-16"
    },
    {
      "source": "String",
      "target": "Problem 224",
      "value": 1,
      "timestamp": "2024-03-16"
    },
    {
      "source": "Stack",
      "target": "Problem 224",
      "value": 1,
      "timestamp": "2024-03-16"
    },
    {
      "source": "Recursion",
      "target": "Problem 224",
      "value": 1,
      "timestamp": "2024-03-16"
    },
    {
      "source": "Binary Search",
      "target": "Problem 222",
      "value": 1,
      "timestamp": "2024-03-16"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 222",
      "value": 1,
      "timestamp": "2024-03-16"
    },
    {
      "source": "Tree",
      "target": "Problem 222",
      "value": 1,
      "timestamp": "2024-03-16"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 222",
      "value": 1,
      "timestamp": "2024-03-16"
    },
    {
      "source": "Math",
      "target": "Problem 233",
      "value": 1,
      "timestamp": "2024-03-17"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 233",
      "value": 1,
      "timestamp": "2024-03-17"
    },
    {
      "source": "Recursion",
      "target": "Problem 233",
      "value": 1,
      "timestamp": "2024-03-17"
    },
    {
      "source": "Linked List",
      "target": "Problem 234",
      "value": 1,
      "timestamp": "2024-03-17"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 234",
      "value": 1,
      "timestamp": "2024-03-17"
    },
    {
      "source": "Stack",
      "target": "Problem 234",
      "value": 1,
      "timestamp": "2024-03-17"
    },
    {
      "source": "Recursion",
      "target": "Problem 234",
      "value": 1,
      "timestamp": "2024-03-17"
    },
    {
      "source": "Math",
      "target": "Problem 231",
      "value": 1,
      "timestamp": "2024-03-17"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 231",
      "value": 1,
      "timestamp": "2024-03-17"
    },
    {
      "source": "Recursion",
      "target": "Problem 231",
      "value": 1,
      "timestamp": "2024-03-17"
    },
    {
      "source": "Tree",
      "target": "Problem 236",
      "value": 1,
      "timestamp": "2024-03-18"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 236",
      "value": 1,
      "timestamp": "2024-03-18"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 236",
      "value": 1,
      "timestamp": "2024-03-18"
    },
    {
      "source": "Array",
      "target": "Problem 229",
      "value": 1,
      "timestamp": "2024-03-18"
    },
    {
      "source": "Hash Table",
      "target": "Problem 229",
      "value": 1,
      "timestamp": "2024-03-18"
    },
    {
      "source": "Sorting",
      "target": "Problem 229",
      "value": 1,
      "timestamp": "2024-03-18"
    },
    {
      "source": "Counting",
      "target": "Problem 229",
      "value": 1,
      "timestamp": "2024-03-18"
    },
    {
      "source": "Tree",
      "target": "Problem 235",
      "value": 1,
      "timestamp": "2024-03-18"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 235",
      "value": 1,
      "timestamp": "2024-03-18"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 235",
      "value": 1,
      "timestamp": "2024-03-18"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 235",
      "value": 1,
      "timestamp": "2024-03-18"
    },
    {
      "source": "Tree",
      "target": "Problem 230",
      "value": 1,
      "timestamp": "2024-03-19"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 230",
      "value": 1,
      "timestamp": "2024-03-19"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 230",
      "value": 1,
      "timestamp": "2024-03-19"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 230",
      "value": 1,
      "timestamp": "2024-03-19"
    },
    {
      "source": "Stack",
      "target": "Problem 232",
      "value": 1,
      "timestamp": "2024-03-19"
    },
    {
      "source": "Design",
      "target": "Problem 232",
      "value": 1,
      "timestamp": "2024-03-19"
    },
    {
      "source": "Queue",
      "target": "Problem 232",
      "value": 1,
      "timestamp": "2024-03-19"
    },
    {
      "source": "Linked List",
      "target": "Problem 237",
      "value": 1,
      "timestamp": "2024-03-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 242",
      "value": 1,
      "timestamp": "2024-03-20"
    },
    {
      "source": "String",
      "target": "Problem 242",
      "value": 1,
      "timestamp": "2024-03-20"
    },
    {
      "source": "Sorting",
      "target": "Problem 242",
      "value": 1,
      "timestamp": "2024-03-20"
    },
    {
      "source": "Math",
      "target": "Problem 241",
      "value": 1,
      "timestamp": "2024-03-21"
    },
    {
      "source": "String",
      "target": "Problem 241",
      "value": 1,
      "timestamp": "2024-03-21"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 241",
      "value": 1,
      "timestamp": "2024-03-21"
    },
    {
      "source": "Recursion",
      "target": "Problem 241",
      "value": 1,
      "timestamp": "2024-03-21"
    },
    {
      "source": "Memoization",
      "target": "Problem 241",
      "value": 1,
      "timestamp": "2024-03-21"
    },
    {
      "source": "Array",
      "target": "Problem 240",
      "value": 1,
      "timestamp": "2024-03-21"
    },
    {
      "source": "Binary Search",
      "target": "Problem 240",
      "value": 1,
      "timestamp": "2024-03-21"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 240",
      "value": 1,
      "timestamp": "2024-03-21"
    },
    {
      "source": "Matrix",
      "target": "Problem 240",
      "value": 1,
      "timestamp": "2024-03-21"
    },
    {
      "source": "Array",
      "target": "Problem 238",
      "value": 1,
      "timestamp": "2024-03-21"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 238",
      "value": 1,
      "timestamp": "2024-03-21"
    },
    {
      "source": "Array",
      "target": "Problem 239",
      "value": 1,
      "timestamp": "2024-03-22"
    },
    {
      "source": "Queue",
      "target": "Problem 239",
      "value": 1,
      "timestamp": "2024-03-22"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 239",
      "value": 1,
      "timestamp": "2024-03-22"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 239",
      "value": 1,
      "timestamp": "2024-03-22"
    },
    {
      "source": "Monotonic Queue",
      "target": "Problem 239",
      "value": 1,
      "timestamp": "2024-03-22"
    },
    {
      "source": "Math",
      "target": "Problem 258",
      "value": 1,
      "timestamp": "2024-03-25"
    },
    {
      "source": "Simulation",
      "target": "Problem 258",
      "value": 1,
      "timestamp": "2024-03-25"
    },
    {
      "source": "Number Theory",
      "target": "Problem 258",
      "value": 1,
      "timestamp": "2024-03-25"
    },
    {
      "source": "String",
      "target": "Problem 257",
      "value": 1,
      "timestamp": "2024-03-26"
    },
    {
      "source": "Backtracking",
      "target": "Problem 257",
      "value": 1,
      "timestamp": "2024-03-26"
    },
    {
      "source": "Tree",
      "target": "Problem 257",
      "value": 1,
      "timestamp": "2024-03-26"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 257",
      "value": 1,
      "timestamp": "2024-03-26"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 257",
      "value": 1,
      "timestamp": "2024-03-26"
    },
    {
      "source": "Database",
      "target": "Problem 262",
      "value": 1,
      "timestamp": "2024-03-27"
    },
    {
      "source": "Array",
      "target": "Problem 260",
      "value": 1,
      "timestamp": "2024-03-28"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 260",
      "value": 1,
      "timestamp": "2024-03-28"
    },
    {
      "source": "Hash Table",
      "target": "Problem 264",
      "value": 1,
      "timestamp": "2024-03-28"
    },
    {
      "source": "Math",
      "target": "Problem 264",
      "value": 1,
      "timestamp": "2024-03-28"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 264",
      "value": 1,
      "timestamp": "2024-03-28"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 264",
      "value": 1,
      "timestamp": "2024-03-28"
    },
    {
      "source": "Math",
      "target": "Problem 263",
      "value": 1,
      "timestamp": "2024-03-28"
    },
    {
      "source": "Array",
      "target": "Problem 268",
      "value": 1,
      "timestamp": "2024-03-31"
    },
    {
      "source": "Hash Table",
      "target": "Problem 268",
      "value": 1,
      "timestamp": "2024-03-31"
    },
    {
      "source": "Math",
      "target": "Problem 268",
      "value": 1,
      "timestamp": "2024-03-31"
    },
    {
      "source": "Binary Search",
      "target": "Problem 268",
      "value": 1,
      "timestamp": "2024-03-31"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 268",
      "value": 1,
      "timestamp": "2024-03-31"
    },
    {
      "source": "Sorting",
      "target": "Problem 268",
      "value": 1,
      "timestamp": "2024-03-31"
    },
    {
      "source": "Array",
      "target": "Problem 275",
      "value": 1,
      "timestamp": "2024-03-31"
    },
    {
      "source": "Binary Search",
      "target": "Problem 275",
      "value": 1,
      "timestamp": "2024-03-31"
    },
    {
      "source": "Array",
      "target": "Problem 274",
      "value": 1,
      "timestamp": "2024-04-01"
    },
    {
      "source": "Sorting",
      "target": "Problem 274",
      "value": 1,
      "timestamp": "2024-04-01"
    },
    {
      "source": "Counting Sort",
      "target": "Problem 274",
      "value": 1,
      "timestamp": "2024-04-01"
    },
    {
      "source": "Math",
      "target": "Problem 273",
      "value": 1,
      "timestamp": "2024-04-01"
    },
    {
      "source": "String",
      "target": "Problem 273",
      "value": 1,
      "timestamp": "2024-04-01"
    },
    {
      "source": "Recursion",
      "target": "Problem 273",
      "value": 1,
      "timestamp": "2024-04-01"
    },
    {
      "source": "Math",
      "target": "Problem 279",
      "value": 1,
      "timestamp": "2024-04-02"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 279",
      "value": 1,
      "timestamp": "2024-04-02"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 279",
      "value": 1,
      "timestamp": "2024-04-02"
    },
    {
      "source": "Binary Search",
      "target": "Problem 278",
      "value": 1,
      "timestamp": "2024-04-02"
    },
    {
      "source": "Interactive",
      "target": "Problem 278",
      "value": 1,
      "timestamp": "2024-04-02"
    },
    {
      "source": "Math",
      "target": "Problem 282",
      "value": 1,
      "timestamp": "2024-04-03"
    },
    {
      "source": "String",
      "target": "Problem 282",
      "value": 1,
      "timestamp": "2024-04-03"
    },
    {
      "source": "Backtracking",
      "target": "Problem 282",
      "value": 1,
      "timestamp": "2024-04-03"
    },
    {
      "source": "Array",
      "target": "Problem 284",
      "value": 1,
      "timestamp": "2024-04-03"
    },
    {
      "source": "Design",
      "target": "Problem 284",
      "value": 1,
      "timestamp": "2024-04-03"
    },
    {
      "source": "Iterator",
      "target": "Problem 284",
      "value": 1,
      "timestamp": "2024-04-03"
    },
    {
      "source": "Array",
      "target": "Problem 283",
      "value": 1,
      "timestamp": "2024-04-04"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 283",
      "value": 1,
      "timestamp": "2024-04-04"
    },
    {
      "source": "Array",
      "target": "Problem 287",
      "value": 1,
      "timestamp": "2024-04-05"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 287",
      "value": 1,
      "timestamp": "2024-04-05"
    },
    {
      "source": "Binary Search",
      "target": "Problem 287",
      "value": 1,
      "timestamp": "2024-04-05"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 287",
      "value": 1,
      "timestamp": "2024-04-05"
    },
    {
      "source": "Math",
      "target": "Problem 292",
      "value": 1,
      "timestamp": "2024-04-06"
    },
    {
      "source": "Brainteaser",
      "target": "Problem 292",
      "value": 1,
      "timestamp": "2024-04-06"
    },
    {
      "source": "Game Theory",
      "target": "Problem 292",
      "value": 1,
      "timestamp": "2024-04-06"
    },
    {
      "source": "Hash Table",
      "target": "Problem 290",
      "value": 1,
      "timestamp": "2024-04-07"
    },
    {
      "source": "String",
      "target": "Problem 290",
      "value": 1,
      "timestamp": "2024-04-07"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 295",
      "value": 1,
      "timestamp": "2024-04-08"
    },
    {
      "source": "Design",
      "target": "Problem 295",
      "value": 1,
      "timestamp": "2024-04-08"
    },
    {
      "source": "Sorting",
      "target": "Problem 295",
      "value": 1,
      "timestamp": "2024-04-08"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 295",
      "value": 1,
      "timestamp": "2024-04-08"
    },
    {
      "source": "Data Stream",
      "target": "Problem 295",
      "value": 1,
      "timestamp": "2024-04-08"
    },
    {
      "source": "Array",
      "target": "Problem 289",
      "value": 1,
      "timestamp": "2024-04-08"
    },
    {
      "source": "Matrix",
      "target": "Problem 289",
      "value": 1,
      "timestamp": "2024-04-08"
    },
    {
      "source": "Simulation",
      "target": "Problem 289",
      "value": 1,
      "timestamp": "2024-04-08"
    },
    {
      "source": "String",
      "target": "Problem 301",
      "value": 1,
      "timestamp": "2024-04-09"
    },
    {
      "source": "Backtracking",
      "target": "Problem 301",
      "value": 1,
      "timestamp": "2024-04-09"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 301",
      "value": 1,
      "timestamp": "2024-04-09"
    },
    {
      "source": "Array",
      "target": "Problem 300",
      "value": 1,
      "timestamp": "2024-04-09"
    },
    {
      "source": "Binary Search",
      "target": "Problem 300",
      "value": 1,
      "timestamp": "2024-04-09"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 300",
      "value": 1,
      "timestamp": "2024-04-09"
    },
    {
      "source": "Hash Table",
      "target": "Problem 299",
      "value": 1,
      "timestamp": "2024-04-09"
    },
    {
      "source": "String",
      "target": "Problem 299",
      "value": 1,
      "timestamp": "2024-04-09"
    },
    {
      "source": "Counting",
      "target": "Problem 299",
      "value": 1,
      "timestamp": "2024-04-09"
    },
    {
      "source": "String",
      "target": "Problem 297",
      "value": 1,
      "timestamp": "2024-04-10"
    },
    {
      "source": "Tree",
      "target": "Problem 297",
      "value": 1,
      "timestamp": "2024-04-10"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 297",
      "value": 1,
      "timestamp": "2024-04-10"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 297",
      "value": 1,
      "timestamp": "2024-04-10"
    },
    {
      "source": "Design",
      "target": "Problem 297",
      "value": 1,
      "timestamp": "2024-04-10"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 297",
      "value": 1,
      "timestamp": "2024-04-10"
    },
    {
      "source": "String",
      "target": "Problem 306",
      "value": 1,
      "timestamp": "2024-04-11"
    },
    {
      "source": "Backtracking",
      "target": "Problem 306",
      "value": 1,
      "timestamp": "2024-04-11"
    },
    {
      "source": "Array",
      "target": "Problem 309",
      "value": 1,
      "timestamp": "2024-04-12"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 309",
      "value": 1,
      "timestamp": "2024-04-12"
    },
    {
      "source": "Array",
      "target": "Problem 312",
      "value": 1,
      "timestamp": "2024-04-13"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 312",
      "value": 1,
      "timestamp": "2024-04-13"
    },
    {
      "source": "Array",
      "target": "Problem 313",
      "value": 1,
      "timestamp": "2024-04-14"
    },
    {
      "source": "Math",
      "target": "Problem 313",
      "value": 1,
      "timestamp": "2024-04-14"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 313",
      "value": 1,
      "timestamp": "2024-04-14"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 310",
      "value": 1,
      "timestamp": "2024-04-14"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 310",
      "value": 1,
      "timestamp": "2024-04-14"
    },
    {
      "source": "Graph",
      "target": "Problem 310",
      "value": 1,
      "timestamp": "2024-04-14"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 310",
      "value": 1,
      "timestamp": "2024-04-14"
    },
    {
      "source": "Array",
      "target": "Problem 315",
      "value": 1,
      "timestamp": "2024-04-14"
    },
    {
      "source": "Binary Search",
      "target": "Problem 315",
      "value": 1,
      "timestamp": "2024-04-14"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 315",
      "value": 1,
      "timestamp": "2024-04-14"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 315",
      "value": 1,
      "timestamp": "2024-04-14"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 315",
      "value": 1,
      "timestamp": "2024-04-14"
    },
    {
      "source": "Merge Sort",
      "target": "Problem 315",
      "value": 1,
      "timestamp": "2024-04-14"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 315",
      "value": 1,
      "timestamp": "2024-04-14"
    },
    {
      "source": "String",
      "target": "Problem 316",
      "value": 1,
      "timestamp": "2024-04-15"
    },
    {
      "source": "Stack",
      "target": "Problem 316",
      "value": 1,
      "timestamp": "2024-04-15"
    },
    {
      "source": "Greedy",
      "target": "Problem 316",
      "value": 1,
      "timestamp": "2024-04-15"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 316",
      "value": 1,
      "timestamp": "2024-04-15"
    },
    {
      "source": "Math",
      "target": "Problem 319",
      "value": 1,
      "timestamp": "2024-04-15"
    },
    {
      "source": "Brainteaser",
      "target": "Problem 319",
      "value": 1,
      "timestamp": "2024-04-15"
    },
    {
      "source": "Array",
      "target": "Problem 318",
      "value": 1,
      "timestamp": "2024-04-16"
    },
    {
      "source": "String",
      "target": "Problem 318",
      "value": 1,
      "timestamp": "2024-04-16"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 318",
      "value": 1,
      "timestamp": "2024-04-16"
    },
    {
      "source": "Array",
      "target": "Problem 322",
      "value": 1,
      "timestamp": "2024-04-16"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 322",
      "value": 1,
      "timestamp": "2024-04-16"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 322",
      "value": 1,
      "timestamp": "2024-04-16"
    },
    {
      "source": "Array",
      "target": "Problem 321",
      "value": 1,
      "timestamp": "2024-04-16"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 321",
      "value": 1,
      "timestamp": "2024-04-16"
    },
    {
      "source": "Stack",
      "target": "Problem 321",
      "value": 1,
      "timestamp": "2024-04-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 321",
      "value": 1,
      "timestamp": "2024-04-16"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 321",
      "value": 1,
      "timestamp": "2024-04-16"
    },
    {
      "source": "Array",
      "target": "Problem 324",
      "value": 1,
      "timestamp": "2024-04-17"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 324",
      "value": 1,
      "timestamp": "2024-04-17"
    },
    {
      "source": "Greedy",
      "target": "Problem 324",
      "value": 1,
      "timestamp": "2024-04-17"
    },
    {
      "source": "Sorting",
      "target": "Problem 324",
      "value": 1,
      "timestamp": "2024-04-17"
    },
    {
      "source": "Quickselect",
      "target": "Problem 324",
      "value": 1,
      "timestamp": "2024-04-17"
    },
    {
      "source": "Array",
      "target": "Problem 329",
      "value": 1,
      "timestamp": "2024-04-18"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 329",
      "value": 1,
      "timestamp": "2024-04-18"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 329",
      "value": 1,
      "timestamp": "2024-04-18"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 329",
      "value": 1,
      "timestamp": "2024-04-18"
    },
    {
      "source": "Graph",
      "target": "Problem 329",
      "value": 1,
      "timestamp": "2024-04-18"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 329",
      "value": 1,
      "timestamp": "2024-04-18"
    },
    {
      "source": "Memoization",
      "target": "Problem 329",
      "value": 1,
      "timestamp": "2024-04-18"
    },
    {
      "source": "Matrix",
      "target": "Problem 329",
      "value": 1,
      "timestamp": "2024-04-18"
    },
    {
      "source": "Linked List",
      "target": "Problem 328",
      "value": 1,
      "timestamp": "2024-04-18"
    },
    {
      "source": "Array",
      "target": "Problem 327",
      "value": 1,
      "timestamp": "2024-04-19"
    },
    {
      "source": "Binary Search",
      "target": "Problem 327",
      "value": 1,
      "timestamp": "2024-04-19"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 327",
      "value": 1,
      "timestamp": "2024-04-19"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 327",
      "value": 1,
      "timestamp": "2024-04-19"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 327",
      "value": 1,
      "timestamp": "2024-04-19"
    },
    {
      "source": "Merge Sort",
      "target": "Problem 327",
      "value": 1,
      "timestamp": "2024-04-19"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 327",
      "value": 1,
      "timestamp": "2024-04-19"
    },
    {
      "source": "Array",
      "target": "Problem 330",
      "value": 1,
      "timestamp": "2024-04-19"
    },
    {
      "source": "Greedy",
      "target": "Problem 330",
      "value": 1,
      "timestamp": "2024-04-19"
    },
    {
      "source": "String",
      "target": "Problem 331",
      "value": 1,
      "timestamp": "2024-04-20"
    },
    {
      "source": "Stack",
      "target": "Problem 331",
      "value": 1,
      "timestamp": "2024-04-20"
    },
    {
      "source": "Tree",
      "target": "Problem 331",
      "value": 1,
      "timestamp": "2024-04-20"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 331",
      "value": 1,
      "timestamp": "2024-04-20"
    },
    {
      "source": "Math",
      "target": "Problem 326",
      "value": 1,
      "timestamp": "2024-04-20"
    },
    {
      "source": "Recursion",
      "target": "Problem 326",
      "value": 1,
      "timestamp": "2024-04-20"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 332",
      "value": 1,
      "timestamp": "2024-04-20"
    },
    {
      "source": "Graph",
      "target": "Problem 332",
      "value": 1,
      "timestamp": "2024-04-20"
    },
    {
      "source": "Eulerian Circuit",
      "target": "Problem 332",
      "value": 1,
      "timestamp": "2024-04-20"
    },
    {
      "source": "Array",
      "target": "Problem 334",
      "value": 1,
      "timestamp": "2024-04-21"
    },
    {
      "source": "Greedy",
      "target": "Problem 334",
      "value": 1,
      "timestamp": "2024-04-21"
    },
    {
      "source": "Array",
      "target": "Problem 336",
      "value": 1,
      "timestamp": "2024-04-21"
    },
    {
      "source": "Hash Table",
      "target": "Problem 336",
      "value": 1,
      "timestamp": "2024-04-21"
    },
    {
      "source": "String",
      "target": "Problem 336",
      "value": 1,
      "timestamp": "2024-04-21"
    },
    {
      "source": "Trie",
      "target": "Problem 336",
      "value": 1,
      "timestamp": "2024-04-21"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 337",
      "value": 1,
      "timestamp": "2024-04-21"
    },
    {
      "source": "Tree",
      "target": "Problem 337",
      "value": 1,
      "timestamp": "2024-04-21"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 337",
      "value": 1,
      "timestamp": "2024-04-21"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 337",
      "value": 1,
      "timestamp": "2024-04-21"
    },
    {
      "source": "Array",
      "target": "Problem 335",
      "value": 1,
      "timestamp": "2024-04-22"
    },
    {
      "source": "Math",
      "target": "Problem 335",
      "value": 1,
      "timestamp": "2024-04-22"
    },
    {
      "source": "Geometry",
      "target": "Problem 335",
      "value": 1,
      "timestamp": "2024-04-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 338",
      "value": 1,
      "timestamp": "2024-04-22"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 338",
      "value": 1,
      "timestamp": "2024-04-22"
    },
    {
      "source": "Stack",
      "target": "Problem 341",
      "value": 1,
      "timestamp": "2024-04-23"
    },
    {
      "source": "Tree",
      "target": "Problem 341",
      "value": 1,
      "timestamp": "2024-04-23"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 341",
      "value": 1,
      "timestamp": "2024-04-23"
    },
    {
      "source": "Design",
      "target": "Problem 341",
      "value": 1,
      "timestamp": "2024-04-23"
    },
    {
      "source": "Queue",
      "target": "Problem 341",
      "value": 1,
      "timestamp": "2024-04-23"
    },
    {
      "source": "Iterator",
      "target": "Problem 341",
      "value": 1,
      "timestamp": "2024-04-23"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 345",
      "value": 1,
      "timestamp": "2024-04-23"
    },
    {
      "source": "String",
      "target": "Problem 345",
      "value": 1,
      "timestamp": "2024-04-23"
    },
    {
      "source": "Math",
      "target": "Problem 343",
      "value": 1,
      "timestamp": "2024-04-24"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 343",
      "value": 1,
      "timestamp": "2024-04-24"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 344",
      "value": 1,
      "timestamp": "2024-04-24"
    },
    {
      "source": "String",
      "target": "Problem 344",
      "value": 1,
      "timestamp": "2024-04-24"
    },
    {
      "source": "Math",
      "target": "Problem 342",
      "value": 1,
      "timestamp": "2024-04-24"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 342",
      "value": 1,
      "timestamp": "2024-04-24"
    },
    {
      "source": "Recursion",
      "target": "Problem 342",
      "value": 1,
      "timestamp": "2024-04-24"
    },
    {
      "source": "Array",
      "target": "Problem 347",
      "value": 1,
      "timestamp": "2024-04-26"
    },
    {
      "source": "Hash Table",
      "target": "Problem 347",
      "value": 1,
      "timestamp": "2024-04-26"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 347",
      "value": 1,
      "timestamp": "2024-04-26"
    },
    {
      "source": "Sorting",
      "target": "Problem 347",
      "value": 1,
      "timestamp": "2024-04-26"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 347",
      "value": 1,
      "timestamp": "2024-04-26"
    },
    {
      "source": "Bucket Sort",
      "target": "Problem 347",
      "value": 1,
      "timestamp": "2024-04-26"
    },
    {
      "source": "Counting",
      "target": "Problem 347",
      "value": 1,
      "timestamp": "2024-04-26"
    },
    {
      "source": "Quickselect",
      "target": "Problem 347",
      "value": 1,
      "timestamp": "2024-04-26"
    },
    {
      "source": "Array",
      "target": "Problem 350",
      "value": 1,
      "timestamp": "2024-04-26"
    },
    {
      "source": "Hash Table",
      "target": "Problem 350",
      "value": 1,
      "timestamp": "2024-04-26"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 350",
      "value": 1,
      "timestamp": "2024-04-26"
    },
    {
      "source": "Binary Search",
      "target": "Problem 350",
      "value": 1,
      "timestamp": "2024-04-26"
    },
    {
      "source": "Sorting",
      "target": "Problem 350",
      "value": 1,
      "timestamp": "2024-04-26"
    },
    {
      "source": "Binary Search",
      "target": "Problem 352",
      "value": 1,
      "timestamp": "2024-04-27"
    },
    {
      "source": "Design",
      "target": "Problem 352",
      "value": 1,
      "timestamp": "2024-04-27"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 352",
      "value": 1,
      "timestamp": "2024-04-27"
    },
    {
      "source": "Array",
      "target": "Problem 349",
      "value": 1,
      "timestamp": "2024-04-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 349",
      "value": 1,
      "timestamp": "2024-04-27"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 349",
      "value": 1,
      "timestamp": "2024-04-27"
    },
    {
      "source": "Binary Search",
      "target": "Problem 349",
      "value": 1,
      "timestamp": "2024-04-27"
    },
    {
      "source": "Sorting",
      "target": "Problem 349",
      "value": 1,
      "timestamp": "2024-04-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 355",
      "value": 1,
      "timestamp": "2024-04-27"
    },
    {
      "source": "Linked List",
      "target": "Problem 355",
      "value": 1,
      "timestamp": "2024-04-27"
    },
    {
      "source": "Design",
      "target": "Problem 355",
      "value": 1,
      "timestamp": "2024-04-27"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 355",
      "value": 1,
      "timestamp": "2024-04-27"
    },
    {
      "source": "Array",
      "target": "Problem 354",
      "value": 1,
      "timestamp": "2024-04-29"
    },
    {
      "source": "Binary Search",
      "target": "Problem 354",
      "value": 1,
      "timestamp": "2024-04-29"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 354",
      "value": 1,
      "timestamp": "2024-04-29"
    },
    {
      "source": "Sorting",
      "target": "Problem 354",
      "value": 1,
      "timestamp": "2024-04-29"
    },
    {
      "source": "Math",
      "target": "Problem 357",
      "value": 1,
      "timestamp": "2024-04-30"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 357",
      "value": 1,
      "timestamp": "2024-04-30"
    },
    {
      "source": "Backtracking",
      "target": "Problem 357",
      "value": 1,
      "timestamp": "2024-04-30"
    },
    {
      "source": "Array",
      "target": "Problem 368",
      "value": 1,
      "timestamp": "2024-04-30"
    },
    {
      "source": "Math",
      "target": "Problem 368",
      "value": 1,
      "timestamp": "2024-04-30"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 368",
      "value": 1,
      "timestamp": "2024-04-30"
    },
    {
      "source": "Sorting",
      "target": "Problem 368",
      "value": 1,
      "timestamp": "2024-04-30"
    },
    {
      "source": "Math",
      "target": "Problem 367",
      "value": 1,
      "timestamp": "2024-05-01"
    },
    {
      "source": "Binary Search",
      "target": "Problem 367",
      "value": 1,
      "timestamp": "2024-05-01"
    },
    {
      "source": "Math",
      "target": "Problem 365",
      "value": 1,
      "timestamp": "2024-05-01"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 365",
      "value": 1,
      "timestamp": "2024-05-01"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 365",
      "value": 1,
      "timestamp": "2024-05-01"
    },
    {
      "source": "Array",
      "target": "Problem 363",
      "value": 1,
      "timestamp": "2024-05-02"
    },
    {
      "source": "Binary Search",
      "target": "Problem 363",
      "value": 1,
      "timestamp": "2024-05-02"
    },
    {
      "source": "Matrix",
      "target": "Problem 363",
      "value": 1,
      "timestamp": "2024-05-02"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 363",
      "value": 1,
      "timestamp": "2024-05-02"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 363",
      "value": 1,
      "timestamp": "2024-05-02"
    },
    {
      "source": "Array",
      "target": "Problem 373",
      "value": 1,
      "timestamp": "2024-05-03"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 373",
      "value": 1,
      "timestamp": "2024-05-03"
    },
    {
      "source": "Math",
      "target": "Problem 371",
      "value": 1,
      "timestamp": "2024-05-03"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 371",
      "value": 1,
      "timestamp": "2024-05-03"
    },
    {
      "source": "Math",
      "target": "Problem 372",
      "value": 1,
      "timestamp": "2024-05-04"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 372",
      "value": 1,
      "timestamp": "2024-05-04"
    },
    {
      "source": "Array",
      "target": "Problem 377",
      "value": 1,
      "timestamp": "2024-05-04"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 377",
      "value": 1,
      "timestamp": "2024-05-04"
    },
    {
      "source": "Array",
      "target": "Problem 378",
      "value": 1,
      "timestamp": "2024-05-04"
    },
    {
      "source": "Binary Search",
      "target": "Problem 378",
      "value": 1,
      "timestamp": "2024-05-04"
    },
    {
      "source": "Sorting",
      "target": "Problem 378",
      "value": 1,
      "timestamp": "2024-05-04"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 378",
      "value": 1,
      "timestamp": "2024-05-04"
    },
    {
      "source": "Matrix",
      "target": "Problem 378",
      "value": 1,
      "timestamp": "2024-05-04"
    },
    {
      "source": "Math",
      "target": "Problem 375",
      "value": 1,
      "timestamp": "2024-05-05"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 375",
      "value": 1,
      "timestamp": "2024-05-05"
    },
    {
      "source": "Game Theory",
      "target": "Problem 375",
      "value": 1,
      "timestamp": "2024-05-05"
    },
    {
      "source": "Array",
      "target": "Problem 376",
      "value": 1,
      "timestamp": "2024-05-05"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 376",
      "value": 1,
      "timestamp": "2024-05-05"
    },
    {
      "source": "Greedy",
      "target": "Problem 376",
      "value": 1,
      "timestamp": "2024-05-05"
    },
    {
      "source": "Binary Search",
      "target": "Problem 374",
      "value": 1,
      "timestamp": "2024-05-05"
    },
    {
      "source": "Interactive",
      "target": "Problem 374",
      "value": 1,
      "timestamp": "2024-05-05"
    },
    {
      "source": "String",
      "target": "Problem 385",
      "value": 1,
      "timestamp": "2024-05-07"
    },
    {
      "source": "Stack",
      "target": "Problem 385",
      "value": 1,
      "timestamp": "2024-05-07"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 385",
      "value": 1,
      "timestamp": "2024-05-07"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 386",
      "value": 1,
      "timestamp": "2024-05-07"
    },
    {
      "source": "Trie",
      "target": "Problem 386",
      "value": 1,
      "timestamp": "2024-05-07"
    },
    {
      "source": "Linked List",
      "target": "Problem 382",
      "value": 1,
      "timestamp": "2024-05-07"
    },
    {
      "source": "Math",
      "target": "Problem 382",
      "value": 1,
      "timestamp": "2024-05-07"
    },
    {
      "source": "Reservoir Sampling",
      "target": "Problem 382",
      "value": 1,
      "timestamp": "2024-05-07"
    },
    {
      "source": "Randomized",
      "target": "Problem 382",
      "value": 1,
      "timestamp": "2024-05-07"
    },
    {
      "source": "Hash Table",
      "target": "Problem 383",
      "value": 1,
      "timestamp": "2024-05-08"
    },
    {
      "source": "String",
      "target": "Problem 383",
      "value": 1,
      "timestamp": "2024-05-08"
    },
    {
      "source": "Counting",
      "target": "Problem 383",
      "value": 1,
      "timestamp": "2024-05-08"
    },
    {
      "source": "Array",
      "target": "Problem 384",
      "value": 1,
      "timestamp": "2024-05-08"
    },
    {
      "source": "Math",
      "target": "Problem 384",
      "value": 1,
      "timestamp": "2024-05-08"
    },
    {
      "source": "Design",
      "target": "Problem 384",
      "value": 1,
      "timestamp": "2024-05-08"
    },
    {
      "source": "Randomized",
      "target": "Problem 384",
      "value": 1,
      "timestamp": "2024-05-08"
    },
    {
      "source": "Hash Table",
      "target": "Problem 387",
      "value": 1,
      "timestamp": "2024-05-08"
    },
    {
      "source": "String",
      "target": "Problem 387",
      "value": 1,
      "timestamp": "2024-05-08"
    },
    {
      "source": "Queue",
      "target": "Problem 387",
      "value": 1,
      "timestamp": "2024-05-08"
    },
    {
      "source": "Counting",
      "target": "Problem 387",
      "value": 1,
      "timestamp": "2024-05-08"
    },
    {
      "source": "String",
      "target": "Problem 388",
      "value": 1,
      "timestamp": "2024-05-09"
    },
    {
      "source": "Stack",
      "target": "Problem 388",
      "value": 1,
      "timestamp": "2024-05-09"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 388",
      "value": 1,
      "timestamp": "2024-05-09"
    },
    {
      "source": "Hash Table",
      "target": "Problem 389",
      "value": 1,
      "timestamp": "2024-05-09"
    },
    {
      "source": "String",
      "target": "Problem 389",
      "value": 1,
      "timestamp": "2024-05-09"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 389",
      "value": 1,
      "timestamp": "2024-05-09"
    },
    {
      "source": "Sorting",
      "target": "Problem 389",
      "value": 1,
      "timestamp": "2024-05-09"
    },
    {
      "source": "Array",
      "target": "Problem 391",
      "value": 1,
      "timestamp": "2024-05-09"
    },
    {
      "source": "Line Sweep",
      "target": "Problem 391",
      "value": 1,
      "timestamp": "2024-05-09"
    },
    {
      "source": "String",
      "target": "Problem 394",
      "value": 1,
      "timestamp": "2024-05-10"
    },
    {
      "source": "Stack",
      "target": "Problem 394",
      "value": 1,
      "timestamp": "2024-05-10"
    },
    {
      "source": "Recursion",
      "target": "Problem 394",
      "value": 1,
      "timestamp": "2024-05-10"
    },
    {
      "source": "Array",
      "target": "Problem 393",
      "value": 1,
      "timestamp": "2024-05-10"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 393",
      "value": 1,
      "timestamp": "2024-05-10"
    },
    {
      "source": "Math",
      "target": "Problem 390",
      "value": 1,
      "timestamp": "2024-05-10"
    },
    {
      "source": "Recursion",
      "target": "Problem 390",
      "value": 1,
      "timestamp": "2024-05-10"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 392",
      "value": 1,
      "timestamp": "2024-05-11"
    },
    {
      "source": "String",
      "target": "Problem 392",
      "value": 1,
      "timestamp": "2024-05-11"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 392",
      "value": 1,
      "timestamp": "2024-05-11"
    },
    {
      "source": "Array",
      "target": "Problem 396",
      "value": 1,
      "timestamp": "2024-05-11"
    },
    {
      "source": "Math",
      "target": "Problem 396",
      "value": 1,
      "timestamp": "2024-05-11"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 396",
      "value": 1,
      "timestamp": "2024-05-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 395",
      "value": 1,
      "timestamp": "2024-05-11"
    },
    {
      "source": "String",
      "target": "Problem 395",
      "value": 1,
      "timestamp": "2024-05-11"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 395",
      "value": 1,
      "timestamp": "2024-05-11"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 395",
      "value": 1,
      "timestamp": "2024-05-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 398",
      "value": 1,
      "timestamp": "2024-05-12"
    },
    {
      "source": "Math",
      "target": "Problem 398",
      "value": 1,
      "timestamp": "2024-05-12"
    },
    {
      "source": "Reservoir Sampling",
      "target": "Problem 398",
      "value": 1,
      "timestamp": "2024-05-12"
    },
    {
      "source": "Randomized",
      "target": "Problem 398",
      "value": 1,
      "timestamp": "2024-05-12"
    },
    {
      "source": "Array",
      "target": "Problem 399",
      "value": 1,
      "timestamp": "2024-05-12"
    },
    {
      "source": "String",
      "target": "Problem 399",
      "value": 1,
      "timestamp": "2024-05-12"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 399",
      "value": 1,
      "timestamp": "2024-05-12"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 399",
      "value": 1,
      "timestamp": "2024-05-12"
    },
    {
      "source": "Union Find",
      "target": "Problem 399",
      "value": 1,
      "timestamp": "2024-05-12"
    },
    {
      "source": "Graph",
      "target": "Problem 399",
      "value": 1,
      "timestamp": "2024-05-12"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 399",
      "value": 1,
      "timestamp": "2024-05-12"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 397",
      "value": 1,
      "timestamp": "2024-05-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 397",
      "value": 1,
      "timestamp": "2024-05-12"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 397",
      "value": 1,
      "timestamp": "2024-05-12"
    },
    {
      "source": "Memoization",
      "target": "Problem 397",
      "value": 1,
      "timestamp": "2024-05-12"
    },
    {
      "source": "Math",
      "target": "Problem 400",
      "value": 1,
      "timestamp": "2024-05-13"
    },
    {
      "source": "Binary Search",
      "target": "Problem 400",
      "value": 1,
      "timestamp": "2024-05-13"
    },
    {
      "source": "String",
      "target": "Problem 402",
      "value": 1,
      "timestamp": "2024-05-13"
    },
    {
      "source": "Stack",
      "target": "Problem 402",
      "value": 1,
      "timestamp": "2024-05-13"
    },
    {
      "source": "Greedy",
      "target": "Problem 402",
      "value": 1,
      "timestamp": "2024-05-13"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 402",
      "value": 1,
      "timestamp": "2024-05-13"
    },
    {
      "source": "Backtracking",
      "target": "Problem 401",
      "value": 1,
      "timestamp": "2024-05-13"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 401",
      "value": 1,
      "timestamp": "2024-05-13"
    },
    {
      "source": "Array",
      "target": "Problem 407",
      "value": 1,
      "timestamp": "2024-05-14"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 407",
      "value": 1,
      "timestamp": "2024-05-14"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 407",
      "value": 1,
      "timestamp": "2024-05-14"
    },
    {
      "source": "Matrix",
      "target": "Problem 407",
      "value": 1,
      "timestamp": "2024-05-14"
    },
    {
      "source": "Math",
      "target": "Problem 405",
      "value": 1,
      "timestamp": "2024-05-14"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 405",
      "value": 1,
      "timestamp": "2024-05-14"
    },
    {
      "source": "Array",
      "target": "Problem 403",
      "value": 1,
      "timestamp": "2024-05-14"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 403",
      "value": 1,
      "timestamp": "2024-05-14"
    },
    {
      "source": "Tree",
      "target": "Problem 404",
      "value": 1,
      "timestamp": "2024-05-15"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 404",
      "value": 1,
      "timestamp": "2024-05-15"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 404",
      "value": 1,
      "timestamp": "2024-05-15"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 404",
      "value": 1,
      "timestamp": "2024-05-15"
    },
    {
      "source": "Array",
      "target": "Problem 406",
      "value": 1,
      "timestamp": "2024-05-15"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 406",
      "value": 1,
      "timestamp": "2024-05-15"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 406",
      "value": 1,
      "timestamp": "2024-05-15"
    },
    {
      "source": "Sorting",
      "target": "Problem 406",
      "value": 1,
      "timestamp": "2024-05-15"
    },
    {
      "source": "Hash Table",
      "target": "Problem 409",
      "value": 1,
      "timestamp": "2024-05-16"
    },
    {
      "source": "String",
      "target": "Problem 409",
      "value": 1,
      "timestamp": "2024-05-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 409",
      "value": 1,
      "timestamp": "2024-05-16"
    },
    {
      "source": "Array",
      "target": "Problem 410",
      "value": 1,
      "timestamp": "2024-05-16"
    },
    {
      "source": "Binary Search",
      "target": "Problem 410",
      "value": 1,
      "timestamp": "2024-05-16"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 410",
      "value": 1,
      "timestamp": "2024-05-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 410",
      "value": 1,
      "timestamp": "2024-05-16"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 410",
      "value": 1,
      "timestamp": "2024-05-16"
    },
    {
      "source": "Array",
      "target": "Problem 413",
      "value": 1,
      "timestamp": "2024-05-17"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 413",
      "value": 1,
      "timestamp": "2024-05-17"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 413",
      "value": 1,
      "timestamp": "2024-05-17"
    },
    {
      "source": "Math",
      "target": "Problem 415",
      "value": 1,
      "timestamp": "2024-05-17"
    },
    {
      "source": "String",
      "target": "Problem 415",
      "value": 1,
      "timestamp": "2024-05-17"
    },
    {
      "source": "Simulation",
      "target": "Problem 415",
      "value": 1,
      "timestamp": "2024-05-17"
    },
    {
      "source": "Math",
      "target": "Problem 412",
      "value": 1,
      "timestamp": "2024-05-17"
    },
    {
      "source": "String",
      "target": "Problem 412",
      "value": 1,
      "timestamp": "2024-05-17"
    },
    {
      "source": "Simulation",
      "target": "Problem 412",
      "value": 1,
      "timestamp": "2024-05-17"
    },
    {
      "source": "Array",
      "target": "Problem 416",
      "value": 1,
      "timestamp": "2024-05-18"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 416",
      "value": 1,
      "timestamp": "2024-05-18"
    },
    {
      "source": "Array",
      "target": "Problem 414",
      "value": 1,
      "timestamp": "2024-05-18"
    },
    {
      "source": "Sorting",
      "target": "Problem 414",
      "value": 1,
      "timestamp": "2024-05-18"
    },
    {
      "source": "Array",
      "target": "Problem 417",
      "value": 1,
      "timestamp": "2024-05-18"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 417",
      "value": 1,
      "timestamp": "2024-05-18"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 417",
      "value": 1,
      "timestamp": "2024-05-18"
    },
    {
      "source": "Matrix",
      "target": "Problem 417",
      "value": 1,
      "timestamp": "2024-05-18"
    },
    {
      "source": "Hash Table",
      "target": "Problem 424",
      "value": 1,
      "timestamp": "2024-05-19"
    },
    {
      "source": "String",
      "target": "Problem 424",
      "value": 1,
      "timestamp": "2024-05-19"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 424",
      "value": 1,
      "timestamp": "2024-05-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 423",
      "value": 1,
      "timestamp": "2024-05-19"
    },
    {
      "source": "Math",
      "target": "Problem 423",
      "value": 1,
      "timestamp": "2024-05-19"
    },
    {
      "source": "String",
      "target": "Problem 423",
      "value": 1,
      "timestamp": "2024-05-19"
    },
    {
      "source": "String",
      "target": "Problem 420",
      "value": 1,
      "timestamp": "2024-05-20"
    },
    {
      "source": "Greedy",
      "target": "Problem 420",
      "value": 1,
      "timestamp": "2024-05-20"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 420",
      "value": 1,
      "timestamp": "2024-05-20"
    },
    {
      "source": "Array",
      "target": "Problem 421",
      "value": 1,
      "timestamp": "2024-05-21"
    },
    {
      "source": "Hash Table",
      "target": "Problem 421",
      "value": 1,
      "timestamp": "2024-05-21"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 421",
      "value": 1,
      "timestamp": "2024-05-21"
    },
    {
      "source": "Trie",
      "target": "Problem 421",
      "value": 1,
      "timestamp": "2024-05-21"
    },
    {
      "source": "Array",
      "target": "Problem 419",
      "value": 1,
      "timestamp": "2024-05-21"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 419",
      "value": 1,
      "timestamp": "2024-05-21"
    },
    {
      "source": "Matrix",
      "target": "Problem 419",
      "value": 1,
      "timestamp": "2024-05-21"
    },
    {
      "source": "Array",
      "target": "Problem 427",
      "value": 1,
      "timestamp": "2024-05-21"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 427",
      "value": 1,
      "timestamp": "2024-05-21"
    },
    {
      "source": "Tree",
      "target": "Problem 427",
      "value": 1,
      "timestamp": "2024-05-21"
    },
    {
      "source": "Matrix",
      "target": "Problem 427",
      "value": 1,
      "timestamp": "2024-05-21"
    },
    {
      "source": "Tree",
      "target": "Problem 429",
      "value": 1,
      "timestamp": "2024-05-23"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 429",
      "value": 1,
      "timestamp": "2024-05-23"
    },
    {
      "source": "Hash Table",
      "target": "Problem 433",
      "value": 1,
      "timestamp": "2024-05-23"
    },
    {
      "source": "String",
      "target": "Problem 433",
      "value": 1,
      "timestamp": "2024-05-23"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 433",
      "value": 1,
      "timestamp": "2024-05-23"
    },
    {
      "source": "Linked List",
      "target": "Problem 430",
      "value": 1,
      "timestamp": "2024-05-24"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 430",
      "value": 1,
      "timestamp": "2024-05-24"
    },
    {
      "source": "Doubly-Linked List",
      "target": "Problem 430",
      "value": 1,
      "timestamp": "2024-05-24"
    },
    {
      "source": "Array",
      "target": "Problem 436",
      "value": 1,
      "timestamp": "2024-05-24"
    },
    {
      "source": "Binary Search",
      "target": "Problem 436",
      "value": 1,
      "timestamp": "2024-05-24"
    },
    {
      "source": "Sorting",
      "target": "Problem 436",
      "value": 1,
      "timestamp": "2024-05-24"
    },
    {
      "source": "Array",
      "target": "Problem 435",
      "value": 1,
      "timestamp": "2024-05-24"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 435",
      "value": 1,
      "timestamp": "2024-05-24"
    },
    {
      "source": "Greedy",
      "target": "Problem 435",
      "value": 1,
      "timestamp": "2024-05-24"
    },
    {
      "source": "Sorting",
      "target": "Problem 435",
      "value": 1,
      "timestamp": "2024-05-24"
    },
    {
      "source": "String",
      "target": "Problem 434",
      "value": 1,
      "timestamp": "2024-05-25"
    },
    {
      "source": "Trie",
      "target": "Problem 440",
      "value": 1,
      "timestamp": "2024-05-25"
    },
    {
      "source": "Tree",
      "target": "Problem 437",
      "value": 1,
      "timestamp": "2024-05-26"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 437",
      "value": 1,
      "timestamp": "2024-05-26"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 437",
      "value": 1,
      "timestamp": "2024-05-26"
    },
    {
      "source": "Math",
      "target": "Problem 441",
      "value": 1,
      "timestamp": "2024-05-26"
    },
    {
      "source": "Binary Search",
      "target": "Problem 441",
      "value": 1,
      "timestamp": "2024-05-26"
    },
    {
      "source": "Hash Table",
      "target": "Problem 438",
      "value": 1,
      "timestamp": "2024-05-26"
    },
    {
      "source": "String",
      "target": "Problem 438",
      "value": 1,
      "timestamp": "2024-05-26"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 438",
      "value": 1,
      "timestamp": "2024-05-26"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 443",
      "value": 1,
      "timestamp": "2024-05-27"
    },
    {
      "source": "String",
      "target": "Problem 443",
      "value": 1,
      "timestamp": "2024-05-27"
    },
    {
      "source": "Array",
      "target": "Problem 442",
      "value": 1,
      "timestamp": "2024-05-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 442",
      "value": 1,
      "timestamp": "2024-05-27"
    },
    {
      "source": "Array",
      "target": "Problem 447",
      "value": 1,
      "timestamp": "2024-05-28"
    },
    {
      "source": "Hash Table",
      "target": "Problem 447",
      "value": 1,
      "timestamp": "2024-05-28"
    },
    {
      "source": "Math",
      "target": "Problem 447",
      "value": 1,
      "timestamp": "2024-05-28"
    },
    {
      "source": "Linked List",
      "target": "Problem 445",
      "value": 1,
      "timestamp": "2024-05-28"
    },
    {
      "source": "Math",
      "target": "Problem 445",
      "value": 1,
      "timestamp": "2024-05-28"
    },
    {
      "source": "Stack",
      "target": "Problem 445",
      "value": 1,
      "timestamp": "2024-05-28"
    },
    {
      "source": "String",
      "target": "Problem 449",
      "value": 1,
      "timestamp": "2024-05-29"
    },
    {
      "source": "Tree",
      "target": "Problem 449",
      "value": 1,
      "timestamp": "2024-05-29"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 449",
      "value": 1,
      "timestamp": "2024-05-29"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 449",
      "value": 1,
      "timestamp": "2024-05-29"
    },
    {
      "source": "Design",
      "target": "Problem 449",
      "value": 1,
      "timestamp": "2024-05-29"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 449",
      "value": 1,
      "timestamp": "2024-05-29"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 449",
      "value": 1,
      "timestamp": "2024-05-29"
    },
    {
      "source": "Array",
      "target": "Problem 448",
      "value": 1,
      "timestamp": "2024-05-29"
    },
    {
      "source": "Hash Table",
      "target": "Problem 448",
      "value": 1,
      "timestamp": "2024-05-29"
    },
    {
      "source": "Tree",
      "target": "Problem 450",
      "value": 1,
      "timestamp": "2024-05-29"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 450",
      "value": 1,
      "timestamp": "2024-05-29"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 450",
      "value": 1,
      "timestamp": "2024-05-29"
    },
    {
      "source": "Array",
      "target": "Problem 454",
      "value": 1,
      "timestamp": "2024-05-30"
    },
    {
      "source": "Hash Table",
      "target": "Problem 454",
      "value": 1,
      "timestamp": "2024-05-30"
    },
    {
      "source": "Array",
      "target": "Problem 452",
      "value": 1,
      "timestamp": "2024-05-30"
    },
    {
      "source": "Greedy",
      "target": "Problem 452",
      "value": 1,
      "timestamp": "2024-05-30"
    },
    {
      "source": "Sorting",
      "target": "Problem 452",
      "value": 1,
      "timestamp": "2024-05-30"
    },
    {
      "source": "Array",
      "target": "Problem 453",
      "value": 1,
      "timestamp": "2024-05-30"
    },
    {
      "source": "Math",
      "target": "Problem 453",
      "value": 1,
      "timestamp": "2024-05-30"
    },
    {
      "source": "Array",
      "target": "Problem 455",
      "value": 1,
      "timestamp": "2024-05-31"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 455",
      "value": 1,
      "timestamp": "2024-05-31"
    },
    {
      "source": "Greedy",
      "target": "Problem 455",
      "value": 1,
      "timestamp": "2024-05-31"
    },
    {
      "source": "Sorting",
      "target": "Problem 455",
      "value": 1,
      "timestamp": "2024-05-31"
    },
    {
      "source": "Hash Table",
      "target": "Problem 451",
      "value": 1,
      "timestamp": "2024-05-31"
    },
    {
      "source": "String",
      "target": "Problem 451",
      "value": 1,
      "timestamp": "2024-05-31"
    },
    {
      "source": "Sorting",
      "target": "Problem 451",
      "value": 1,
      "timestamp": "2024-05-31"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 451",
      "value": 1,
      "timestamp": "2024-05-31"
    },
    {
      "source": "Bucket Sort",
      "target": "Problem 451",
      "value": 1,
      "timestamp": "2024-05-31"
    },
    {
      "source": "Counting",
      "target": "Problem 451",
      "value": 1,
      "timestamp": "2024-05-31"
    },
    {
      "source": "Array",
      "target": "Problem 456",
      "value": 1,
      "timestamp": "2024-05-31"
    },
    {
      "source": "Binary Search",
      "target": "Problem 456",
      "value": 1,
      "timestamp": "2024-05-31"
    },
    {
      "source": "Stack",
      "target": "Problem 456",
      "value": 1,
      "timestamp": "2024-05-31"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 456",
      "value": 1,
      "timestamp": "2024-05-31"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 456",
      "value": 1,
      "timestamp": "2024-05-31"
    },
    {
      "source": "Array",
      "target": "Problem 457",
      "value": 1,
      "timestamp": "2024-06-01"
    },
    {
      "source": "Hash Table",
      "target": "Problem 457",
      "value": 1,
      "timestamp": "2024-06-01"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 457",
      "value": 1,
      "timestamp": "2024-06-01"
    },
    {
      "source": "Array",
      "target": "Problem 462",
      "value": 1,
      "timestamp": "2024-06-01"
    },
    {
      "source": "Math",
      "target": "Problem 462",
      "value": 1,
      "timestamp": "2024-06-01"
    },
    {
      "source": "Sorting",
      "target": "Problem 462",
      "value": 1,
      "timestamp": "2024-06-01"
    },
    {
      "source": "Math",
      "target": "Problem 458",
      "value": 1,
      "timestamp": "2024-06-01"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 458",
      "value": 1,
      "timestamp": "2024-06-01"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 458",
      "value": 1,
      "timestamp": "2024-06-01"
    },
    {
      "source": "String",
      "target": "Problem 459",
      "value": 1,
      "timestamp": "2024-06-02"
    },
    {
      "source": "String Matching",
      "target": "Problem 459",
      "value": 1,
      "timestamp": "2024-06-02"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 461",
      "value": 1,
      "timestamp": "2024-06-02"
    },
    {
      "source": "Array",
      "target": "Problem 463",
      "value": 1,
      "timestamp": "2024-06-02"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 463",
      "value": 1,
      "timestamp": "2024-06-02"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 463",
      "value": 1,
      "timestamp": "2024-06-02"
    },
    {
      "source": "Matrix",
      "target": "Problem 463",
      "value": 1,
      "timestamp": "2024-06-02"
    },
    {
      "source": "Hash Table",
      "target": "Problem 460",
      "value": 1,
      "timestamp": "2024-06-03"
    },
    {
      "source": "Linked List",
      "target": "Problem 460",
      "value": 1,
      "timestamp": "2024-06-03"
    },
    {
      "source": "Design",
      "target": "Problem 460",
      "value": 1,
      "timestamp": "2024-06-03"
    },
    {
      "source": "Doubly-Linked List",
      "target": "Problem 460",
      "value": 1,
      "timestamp": "2024-06-03"
    },
    {
      "source": "Math",
      "target": "Problem 464",
      "value": 1,
      "timestamp": "2024-06-03"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 464",
      "value": 1,
      "timestamp": "2024-06-03"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 464",
      "value": 1,
      "timestamp": "2024-06-03"
    },
    {
      "source": "Memoization",
      "target": "Problem 464",
      "value": 1,
      "timestamp": "2024-06-03"
    },
    {
      "source": "Game Theory",
      "target": "Problem 464",
      "value": 1,
      "timestamp": "2024-06-03"
    },
    {
      "source": "Bitmask",
      "target": "Problem 464",
      "value": 1,
      "timestamp": "2024-06-03"
    },
    {
      "source": "String",
      "target": "Problem 467",
      "value": 1,
      "timestamp": "2024-06-04"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 467",
      "value": 1,
      "timestamp": "2024-06-04"
    },
    {
      "source": "String",
      "target": "Problem 466",
      "value": 1,
      "timestamp": "2024-06-05"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 466",
      "value": 1,
      "timestamp": "2024-06-05"
    },
    {
      "source": "Array",
      "target": "Problem 472",
      "value": 1,
      "timestamp": "2024-06-05"
    },
    {
      "source": "String",
      "target": "Problem 472",
      "value": 1,
      "timestamp": "2024-06-05"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 472",
      "value": 1,
      "timestamp": "2024-06-05"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 472",
      "value": 1,
      "timestamp": "2024-06-05"
    },
    {
      "source": "Trie",
      "target": "Problem 472",
      "value": 1,
      "timestamp": "2024-06-05"
    },
    {
      "source": "Array",
      "target": "Problem 473",
      "value": 1,
      "timestamp": "2024-06-05"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 473",
      "value": 1,
      "timestamp": "2024-06-05"
    },
    {
      "source": "Backtracking",
      "target": "Problem 473",
      "value": 1,
      "timestamp": "2024-06-05"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 473",
      "value": 1,
      "timestamp": "2024-06-05"
    },
    {
      "source": "Bitmask",
      "target": "Problem 473",
      "value": 1,
      "timestamp": "2024-06-05"
    },
    {
      "source": "String",
      "target": "Problem 468",
      "value": 1,
      "timestamp": "2024-06-06"
    },
    {
      "source": "Math",
      "target": "Problem 479",
      "value": 1,
      "timestamp": "2024-06-06"
    },
    {
      "source": "Enumeration",
      "target": "Problem 479",
      "value": 1,
      "timestamp": "2024-06-06"
    },
    {
      "source": "Array",
      "target": "Problem 474",
      "value": 1,
      "timestamp": "2024-06-07"
    },
    {
      "source": "String",
      "target": "Problem 474",
      "value": 1,
      "timestamp": "2024-06-07"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 474",
      "value": 1,
      "timestamp": "2024-06-07"
    },
    {
      "source": "Array",
      "target": "Problem 480",
      "value": 1,
      "timestamp": "2024-06-07"
    },
    {
      "source": "Hash Table",
      "target": "Problem 480",
      "value": 1,
      "timestamp": "2024-06-07"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 480",
      "value": 1,
      "timestamp": "2024-06-07"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 480",
      "value": 1,
      "timestamp": "2024-06-07"
    },
    {
      "source": "Array",
      "target": "Problem 477",
      "value": 1,
      "timestamp": "2024-06-07"
    },
    {
      "source": "Math",
      "target": "Problem 477",
      "value": 1,
      "timestamp": "2024-06-07"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 477",
      "value": 1,
      "timestamp": "2024-06-07"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 476",
      "value": 1,
      "timestamp": "2024-06-08"
    },
    {
      "source": "Math",
      "target": "Problem 478",
      "value": 1,
      "timestamp": "2024-06-08"
    },
    {
      "source": "Geometry",
      "target": "Problem 478",
      "value": 1,
      "timestamp": "2024-06-08"
    },
    {
      "source": "Rejection Sampling",
      "target": "Problem 478",
      "value": 1,
      "timestamp": "2024-06-08"
    },
    {
      "source": "Randomized",
      "target": "Problem 478",
      "value": 1,
      "timestamp": "2024-06-08"
    },
    {
      "source": "Array",
      "target": "Problem 475",
      "value": 1,
      "timestamp": "2024-06-08"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 475",
      "value": 1,
      "timestamp": "2024-06-08"
    },
    {
      "source": "Binary Search",
      "target": "Problem 475",
      "value": 1,
      "timestamp": "2024-06-08"
    },
    {
      "source": "Sorting",
      "target": "Problem 475",
      "value": 1,
      "timestamp": "2024-06-08"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 481",
      "value": 1,
      "timestamp": "2024-06-09"
    },
    {
      "source": "String",
      "target": "Problem 481",
      "value": 1,
      "timestamp": "2024-06-09"
    },
    {
      "source": "Math",
      "target": "Problem 483",
      "value": 1,
      "timestamp": "2024-06-09"
    },
    {
      "source": "Binary Search",
      "target": "Problem 483",
      "value": 1,
      "timestamp": "2024-06-09"
    },
    {
      "source": "Array",
      "target": "Problem 485",
      "value": 1,
      "timestamp": "2024-06-09"
    },
    {
      "source": "Array",
      "target": "Problem 486",
      "value": 1,
      "timestamp": "2024-06-10"
    },
    {
      "source": "Math",
      "target": "Problem 486",
      "value": 1,
      "timestamp": "2024-06-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 486",
      "value": 1,
      "timestamp": "2024-06-10"
    },
    {
      "source": "Recursion",
      "target": "Problem 486",
      "value": 1,
      "timestamp": "2024-06-10"
    },
    {
      "source": "Game Theory",
      "target": "Problem 486",
      "value": 1,
      "timestamp": "2024-06-10"
    },
    {
      "source": "String",
      "target": "Problem 482",
      "value": 1,
      "timestamp": "2024-06-10"
    },
    {
      "source": "String",
      "target": "Problem 488",
      "value": 1,
      "timestamp": "2024-06-11"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 488",
      "value": 1,
      "timestamp": "2024-06-11"
    },
    {
      "source": "Stack",
      "target": "Problem 488",
      "value": 1,
      "timestamp": "2024-06-11"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 488",
      "value": 1,
      "timestamp": "2024-06-11"
    },
    {
      "source": "Memoization",
      "target": "Problem 488",
      "value": 1,
      "timestamp": "2024-06-11"
    },
    {
      "source": "Array",
      "target": "Problem 491",
      "value": 1,
      "timestamp": "2024-06-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 491",
      "value": 1,
      "timestamp": "2024-06-12"
    },
    {
      "source": "Backtracking",
      "target": "Problem 491",
      "value": 1,
      "timestamp": "2024-06-12"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 491",
      "value": 1,
      "timestamp": "2024-06-12"
    },
    {
      "source": "Math",
      "target": "Problem 492",
      "value": 1,
      "timestamp": "2024-06-12"
    },
    {
      "source": "Array",
      "target": "Problem 494",
      "value": 1,
      "timestamp": "2024-06-13"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 494",
      "value": 1,
      "timestamp": "2024-06-13"
    },
    {
      "source": "Backtracking",
      "target": "Problem 494",
      "value": 1,
      "timestamp": "2024-06-13"
    },
    {
      "source": "Array",
      "target": "Problem 496",
      "value": 1,
      "timestamp": "2024-06-13"
    },
    {
      "source": "Hash Table",
      "target": "Problem 496",
      "value": 1,
      "timestamp": "2024-06-13"
    },
    {
      "source": "Stack",
      "target": "Problem 496",
      "value": 1,
      "timestamp": "2024-06-13"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 496",
      "value": 1,
      "timestamp": "2024-06-13"
    },
    {
      "source": "Array",
      "target": "Problem 493",
      "value": 1,
      "timestamp": "2024-06-13"
    },
    {
      "source": "Binary Search",
      "target": "Problem 493",
      "value": 1,
      "timestamp": "2024-06-13"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 493",
      "value": 1,
      "timestamp": "2024-06-13"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 493",
      "value": 1,
      "timestamp": "2024-06-13"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 493",
      "value": 1,
      "timestamp": "2024-06-13"
    },
    {
      "source": "Merge Sort",
      "target": "Problem 493",
      "value": 1,
      "timestamp": "2024-06-13"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 493",
      "value": 1,
      "timestamp": "2024-06-13"
    },
    {
      "source": "Array",
      "target": "Problem 495",
      "value": 1,
      "timestamp": "2024-06-14"
    },
    {
      "source": "Simulation",
      "target": "Problem 495",
      "value": 1,
      "timestamp": "2024-06-14"
    },
    {
      "source": "Array",
      "target": "Problem 497",
      "value": 1,
      "timestamp": "2024-06-14"
    },
    {
      "source": "Math",
      "target": "Problem 497",
      "value": 1,
      "timestamp": "2024-06-14"
    },
    {
      "source": "Binary Search",
      "target": "Problem 497",
      "value": 1,
      "timestamp": "2024-06-14"
    },
    {
      "source": "Reservoir Sampling",
      "target": "Problem 497",
      "value": 1,
      "timestamp": "2024-06-14"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 497",
      "value": 1,
      "timestamp": "2024-06-14"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 497",
      "value": 1,
      "timestamp": "2024-06-14"
    },
    {
      "source": "Randomized",
      "target": "Problem 497",
      "value": 1,
      "timestamp": "2024-06-14"
    },
    {
      "source": "Array",
      "target": "Problem 498",
      "value": 1,
      "timestamp": "2024-06-14"
    },
    {
      "source": "Matrix",
      "target": "Problem 498",
      "value": 1,
      "timestamp": "2024-06-14"
    },
    {
      "source": "Simulation",
      "target": "Problem 498",
      "value": 1,
      "timestamp": "2024-06-14"
    },
    {
      "source": "Array",
      "target": "Problem 500",
      "value": 1,
      "timestamp": "2024-06-15"
    },
    {
      "source": "Hash Table",
      "target": "Problem 500",
      "value": 1,
      "timestamp": "2024-06-15"
    },
    {
      "source": "String",
      "target": "Problem 500",
      "value": 1,
      "timestamp": "2024-06-15"
    },
    {
      "source": "Math",
      "target": "Problem 507",
      "value": 1,
      "timestamp": "2024-06-16"
    },
    {
      "source": "Math",
      "target": "Problem 504",
      "value": 1,
      "timestamp": "2024-06-16"
    },
    {
      "source": "Array",
      "target": "Problem 502",
      "value": 1,
      "timestamp": "2024-06-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 502",
      "value": 1,
      "timestamp": "2024-06-16"
    },
    {
      "source": "Sorting",
      "target": "Problem 502",
      "value": 1,
      "timestamp": "2024-06-16"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 502",
      "value": 1,
      "timestamp": "2024-06-16"
    },
    {
      "source": "Array",
      "target": "Problem 503",
      "value": 1,
      "timestamp": "2024-06-17"
    },
    {
      "source": "Stack",
      "target": "Problem 503",
      "value": 1,
      "timestamp": "2024-06-17"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 503",
      "value": 1,
      "timestamp": "2024-06-17"
    },
    {
      "source": "Array",
      "target": "Problem 506",
      "value": 1,
      "timestamp": "2024-06-17"
    },
    {
      "source": "Sorting",
      "target": "Problem 506",
      "value": 1,
      "timestamp": "2024-06-17"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 506",
      "value": 1,
      "timestamp": "2024-06-17"
    },
    {
      "source": "Tree",
      "target": "Problem 501",
      "value": 1,
      "timestamp": "2024-06-17"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 501",
      "value": 1,
      "timestamp": "2024-06-17"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 501",
      "value": 1,
      "timestamp": "2024-06-17"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 501",
      "value": 1,
      "timestamp": "2024-06-17"
    },
    {
      "source": "Hash Table",
      "target": "Problem 508",
      "value": 1,
      "timestamp": "2024-06-18"
    },
    {
      "source": "Tree",
      "target": "Problem 508",
      "value": 1,
      "timestamp": "2024-06-18"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 508",
      "value": 1,
      "timestamp": "2024-06-18"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 508",
      "value": 1,
      "timestamp": "2024-06-18"
    },
    {
      "source": "Math",
      "target": "Problem 509",
      "value": 1,
      "timestamp": "2024-06-18"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 509",
      "value": 1,
      "timestamp": "2024-06-18"
    },
    {
      "source": "Recursion",
      "target": "Problem 509",
      "value": 1,
      "timestamp": "2024-06-18"
    },
    {
      "source": "Memoization",
      "target": "Problem 509",
      "value": 1,
      "timestamp": "2024-06-18"
    },
    {
      "source": "Database",
      "target": "Problem 511",
      "value": 1,
      "timestamp": "2024-06-18"
    },
    {
      "source": "String",
      "target": "Problem 514",
      "value": 1,
      "timestamp": "2024-06-19"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 514",
      "value": 1,
      "timestamp": "2024-06-19"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 514",
      "value": 1,
      "timestamp": "2024-06-19"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 514",
      "value": 1,
      "timestamp": "2024-06-19"
    },
    {
      "source": "Tree",
      "target": "Problem 515",
      "value": 1,
      "timestamp": "2024-06-20"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 515",
      "value": 1,
      "timestamp": "2024-06-20"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 515",
      "value": 1,
      "timestamp": "2024-06-20"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 515",
      "value": 1,
      "timestamp": "2024-06-20"
    },
    {
      "source": "Tree",
      "target": "Problem 513",
      "value": 1,
      "timestamp": "2024-06-20"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 513",
      "value": 1,
      "timestamp": "2024-06-20"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 513",
      "value": 1,
      "timestamp": "2024-06-20"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 513",
      "value": 1,
      "timestamp": "2024-06-20"
    },
    {
      "source": "String",
      "target": "Problem 516",
      "value": 1,
      "timestamp": "2024-06-20"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 516",
      "value": 1,
      "timestamp": "2024-06-20"
    },
    {
      "source": "Array",
      "target": "Problem 517",
      "value": 1,
      "timestamp": "2024-06-21"
    },
    {
      "source": "Greedy",
      "target": "Problem 517",
      "value": 1,
      "timestamp": "2024-06-21"
    },
    {
      "source": "Array",
      "target": "Problem 523",
      "value": 1,
      "timestamp": "2024-06-21"
    },
    {
      "source": "Hash Table",
      "target": "Problem 523",
      "value": 1,
      "timestamp": "2024-06-21"
    },
    {
      "source": "Math",
      "target": "Problem 523",
      "value": 1,
      "timestamp": "2024-06-21"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 523",
      "value": 1,
      "timestamp": "2024-06-21"
    },
    {
      "source": "Array",
      "target": "Problem 518",
      "value": 1,
      "timestamp": "2024-06-21"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 518",
      "value": 1,
      "timestamp": "2024-06-21"
    },
    {
      "source": "Hash Table",
      "target": "Problem 519",
      "value": 1,
      "timestamp": "2024-06-22"
    },
    {
      "source": "Math",
      "target": "Problem 519",
      "value": 1,
      "timestamp": "2024-06-22"
    },
    {
      "source": "Reservoir Sampling",
      "target": "Problem 519",
      "value": 1,
      "timestamp": "2024-06-22"
    },
    {
      "source": "Randomized",
      "target": "Problem 519",
      "value": 1,
      "timestamp": "2024-06-22"
    },
    {
      "source": "Array",
      "target": "Problem 522",
      "value": 1,
      "timestamp": "2024-06-22"
    },
    {
      "source": "Hash Table",
      "target": "Problem 522",
      "value": 1,
      "timestamp": "2024-06-22"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 522",
      "value": 1,
      "timestamp": "2024-06-22"
    },
    {
      "source": "String",
      "target": "Problem 522",
      "value": 1,
      "timestamp": "2024-06-22"
    },
    {
      "source": "Sorting",
      "target": "Problem 522",
      "value": 1,
      "timestamp": "2024-06-22"
    },
    {
      "source": "String",
      "target": "Problem 520",
      "value": 1,
      "timestamp": "2024-06-22"
    },
    {
      "source": "Array",
      "target": "Problem 524",
      "value": 1,
      "timestamp": "2024-06-23"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 524",
      "value": 1,
      "timestamp": "2024-06-23"
    },
    {
      "source": "String",
      "target": "Problem 524",
      "value": 1,
      "timestamp": "2024-06-23"
    },
    {
      "source": "Sorting",
      "target": "Problem 524",
      "value": 1,
      "timestamp": "2024-06-23"
    },
    {
      "source": "String",
      "target": "Problem 521",
      "value": 1,
      "timestamp": "2024-06-23"
    },
    {
      "source": "Array",
      "target": "Problem 525",
      "value": 1,
      "timestamp": "2024-06-23"
    },
    {
      "source": "Hash Table",
      "target": "Problem 525",
      "value": 1,
      "timestamp": "2024-06-23"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 525",
      "value": 1,
      "timestamp": "2024-06-23"
    },
    {
      "source": "Array",
      "target": "Problem 526",
      "value": 1,
      "timestamp": "2024-06-24"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 526",
      "value": 1,
      "timestamp": "2024-06-24"
    },
    {
      "source": "Backtracking",
      "target": "Problem 526",
      "value": 1,
      "timestamp": "2024-06-24"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 526",
      "value": 1,
      "timestamp": "2024-06-24"
    },
    {
      "source": "Bitmask",
      "target": "Problem 526",
      "value": 1,
      "timestamp": "2024-06-24"
    },
    {
      "source": "Array",
      "target": "Problem 528",
      "value": 1,
      "timestamp": "2024-06-24"
    },
    {
      "source": "Math",
      "target": "Problem 528",
      "value": 1,
      "timestamp": "2024-06-24"
    },
    {
      "source": "Binary Search",
      "target": "Problem 528",
      "value": 1,
      "timestamp": "2024-06-24"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 528",
      "value": 1,
      "timestamp": "2024-06-24"
    },
    {
      "source": "Randomized",
      "target": "Problem 528",
      "value": 1,
      "timestamp": "2024-06-24"
    },
    {
      "source": "Array",
      "target": "Problem 532",
      "value": 1,
      "timestamp": "2024-06-25"
    },
    {
      "source": "Hash Table",
      "target": "Problem 532",
      "value": 1,
      "timestamp": "2024-06-25"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 532",
      "value": 1,
      "timestamp": "2024-06-25"
    },
    {
      "source": "Binary Search",
      "target": "Problem 532",
      "value": 1,
      "timestamp": "2024-06-25"
    },
    {
      "source": "Sorting",
      "target": "Problem 532",
      "value": 1,
      "timestamp": "2024-06-25"
    },
    {
      "source": "Array",
      "target": "Problem 529",
      "value": 1,
      "timestamp": "2024-06-25"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 529",
      "value": 1,
      "timestamp": "2024-06-25"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 529",
      "value": 1,
      "timestamp": "2024-06-25"
    },
    {
      "source": "Matrix",
      "target": "Problem 529",
      "value": 1,
      "timestamp": "2024-06-25"
    },
    {
      "source": "Tree",
      "target": "Problem 530",
      "value": 1,
      "timestamp": "2024-06-26"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 530",
      "value": 1,
      "timestamp": "2024-06-26"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 530",
      "value": 1,
      "timestamp": "2024-06-26"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 530",
      "value": 1,
      "timestamp": "2024-06-26"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 530",
      "value": 1,
      "timestamp": "2024-06-26"
    },
    {
      "source": "Hash Table",
      "target": "Problem 535",
      "value": 1,
      "timestamp": "2024-06-27"
    },
    {
      "source": "String",
      "target": "Problem 535",
      "value": 1,
      "timestamp": "2024-06-27"
    },
    {
      "source": "Design",
      "target": "Problem 535",
      "value": 1,
      "timestamp": "2024-06-27"
    },
    {
      "source": "Hash Function",
      "target": "Problem 535",
      "value": 1,
      "timestamp": "2024-06-27"
    },
    {
      "source": "Array",
      "target": "Problem 540",
      "value": 1,
      "timestamp": "2024-06-27"
    },
    {
      "source": "Binary Search",
      "target": "Problem 540",
      "value": 1,
      "timestamp": "2024-06-27"
    },
    {
      "source": "Math",
      "target": "Problem 537",
      "value": 1,
      "timestamp": "2024-06-28"
    },
    {
      "source": "String",
      "target": "Problem 537",
      "value": 1,
      "timestamp": "2024-06-28"
    },
    {
      "source": "Simulation",
      "target": "Problem 537",
      "value": 1,
      "timestamp": "2024-06-28"
    },
    {
      "source": "Tree",
      "target": "Problem 538",
      "value": 1,
      "timestamp": "2024-06-28"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 538",
      "value": 1,
      "timestamp": "2024-06-28"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 538",
      "value": 1,
      "timestamp": "2024-06-28"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 538",
      "value": 1,
      "timestamp": "2024-06-28"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 541",
      "value": 1,
      "timestamp": "2024-06-28"
    },
    {
      "source": "String",
      "target": "Problem 541",
      "value": 1,
      "timestamp": "2024-06-28"
    },
    {
      "source": "Array",
      "target": "Problem 539",
      "value": 1,
      "timestamp": "2024-06-29"
    },
    {
      "source": "Math",
      "target": "Problem 539",
      "value": 1,
      "timestamp": "2024-06-29"
    },
    {
      "source": "String",
      "target": "Problem 539",
      "value": 1,
      "timestamp": "2024-06-29"
    },
    {
      "source": "Sorting",
      "target": "Problem 539",
      "value": 1,
      "timestamp": "2024-06-29"
    },
    {
      "source": "Array",
      "target": "Problem 542",
      "value": 1,
      "timestamp": "2024-06-29"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 542",
      "value": 1,
      "timestamp": "2024-06-29"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 542",
      "value": 1,
      "timestamp": "2024-06-29"
    },
    {
      "source": "Matrix",
      "target": "Problem 542",
      "value": 1,
      "timestamp": "2024-06-29"
    },
    {
      "source": "Tree",
      "target": "Problem 543",
      "value": 1,
      "timestamp": "2024-06-29"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 543",
      "value": 1,
      "timestamp": "2024-06-29"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 543",
      "value": 1,
      "timestamp": "2024-06-29"
    },
    {
      "source": "Array",
      "target": "Problem 546",
      "value": 1,
      "timestamp": "2024-06-30"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 546",
      "value": 1,
      "timestamp": "2024-06-30"
    },
    {
      "source": "Memoization",
      "target": "Problem 546",
      "value": 1,
      "timestamp": "2024-06-30"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 547",
      "value": 1,
      "timestamp": "2024-07-01"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 547",
      "value": 1,
      "timestamp": "2024-07-01"
    },
    {
      "source": "Union Find",
      "target": "Problem 547",
      "value": 1,
      "timestamp": "2024-07-01"
    },
    {
      "source": "Graph",
      "target": "Problem 547",
      "value": 1,
      "timestamp": "2024-07-01"
    },
    {
      "source": "Database",
      "target": "Problem 550",
      "value": 1,
      "timestamp": "2024-07-02"
    },
    {
      "source": "String",
      "target": "Problem 551",
      "value": 1,
      "timestamp": "2024-07-02"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 552",
      "value": 1,
      "timestamp": "2024-07-02"
    },
    {
      "source": "Array",
      "target": "Problem 553",
      "value": 1,
      "timestamp": "2024-07-03"
    },
    {
      "source": "Math",
      "target": "Problem 553",
      "value": 1,
      "timestamp": "2024-07-03"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 553",
      "value": 1,
      "timestamp": "2024-07-03"
    },
    {
      "source": "Array",
      "target": "Problem 554",
      "value": 1,
      "timestamp": "2024-07-03"
    },
    {
      "source": "Hash Table",
      "target": "Problem 554",
      "value": 1,
      "timestamp": "2024-07-03"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 557",
      "value": 1,
      "timestamp": "2024-07-04"
    },
    {
      "source": "String",
      "target": "Problem 557",
      "value": 1,
      "timestamp": "2024-07-04"
    },
    {
      "source": "Math",
      "target": "Problem 556",
      "value": 1,
      "timestamp": "2024-07-04"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 556",
      "value": 1,
      "timestamp": "2024-07-04"
    },
    {
      "source": "String",
      "target": "Problem 556",
      "value": 1,
      "timestamp": "2024-07-04"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 558",
      "value": 1,
      "timestamp": "2024-07-04"
    },
    {
      "source": "Tree",
      "target": "Problem 558",
      "value": 1,
      "timestamp": "2024-07-04"
    },
    {
      "source": "Tree",
      "target": "Problem 559",
      "value": 1,
      "timestamp": "2024-07-05"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 559",
      "value": 1,
      "timestamp": "2024-07-05"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 559",
      "value": 1,
      "timestamp": "2024-07-05"
    },
    {
      "source": "Array",
      "target": "Problem 560",
      "value": 1,
      "timestamp": "2024-07-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 560",
      "value": 1,
      "timestamp": "2024-07-05"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 560",
      "value": 1,
      "timestamp": "2024-07-05"
    },
    {
      "source": "Array",
      "target": "Problem 561",
      "value": 1,
      "timestamp": "2024-07-05"
    },
    {
      "source": "Greedy",
      "target": "Problem 561",
      "value": 1,
      "timestamp": "2024-07-05"
    },
    {
      "source": "Sorting",
      "target": "Problem 561",
      "value": 1,
      "timestamp": "2024-07-05"
    },
    {
      "source": "Counting Sort",
      "target": "Problem 561",
      "value": 1,
      "timestamp": "2024-07-05"
    },
    {
      "source": "Tree",
      "target": "Problem 563",
      "value": 1,
      "timestamp": "2024-07-06"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 563",
      "value": 1,
      "timestamp": "2024-07-06"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 563",
      "value": 1,
      "timestamp": "2024-07-06"
    },
    {
      "source": "Array",
      "target": "Problem 565",
      "value": 1,
      "timestamp": "2024-07-06"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 565",
      "value": 1,
      "timestamp": "2024-07-06"
    },
    {
      "source": "Array",
      "target": "Problem 566",
      "value": 1,
      "timestamp": "2024-07-07"
    },
    {
      "source": "Matrix",
      "target": "Problem 566",
      "value": 1,
      "timestamp": "2024-07-07"
    },
    {
      "source": "Simulation",
      "target": "Problem 566",
      "value": 1,
      "timestamp": "2024-07-07"
    },
    {
      "source": "Math",
      "target": "Problem 564",
      "value": 1,
      "timestamp": "2024-07-07"
    },
    {
      "source": "String",
      "target": "Problem 564",
      "value": 1,
      "timestamp": "2024-07-07"
    },
    {
      "source": "Hash Table",
      "target": "Problem 567",
      "value": 1,
      "timestamp": "2024-07-08"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 567",
      "value": 1,
      "timestamp": "2024-07-08"
    },
    {
      "source": "String",
      "target": "Problem 567",
      "value": 1,
      "timestamp": "2024-07-08"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 567",
      "value": 1,
      "timestamp": "2024-07-08"
    },
    {
      "source": "Tree",
      "target": "Problem 572",
      "value": 1,
      "timestamp": "2024-07-08"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 572",
      "value": 1,
      "timestamp": "2024-07-08"
    },
    {
      "source": "String Matching",
      "target": "Problem 572",
      "value": 1,
      "timestamp": "2024-07-08"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 572",
      "value": 1,
      "timestamp": "2024-07-08"
    },
    {
      "source": "Hash Function",
      "target": "Problem 572",
      "value": 1,
      "timestamp": "2024-07-08"
    },
    {
      "source": "Database",
      "target": "Problem 570",
      "value": 1,
      "timestamp": "2024-07-09"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 576",
      "value": 1,
      "timestamp": "2024-07-09"
    },
    {
      "source": "Array",
      "target": "Problem 575",
      "value": 1,
      "timestamp": "2024-07-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 575",
      "value": 1,
      "timestamp": "2024-07-10"
    },
    {
      "source": "Database",
      "target": "Problem 577",
      "value": 1,
      "timestamp": "2024-07-11"
    },
    {
      "source": "Array",
      "target": "Problem 581",
      "value": 1,
      "timestamp": "2024-07-12"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 581",
      "value": 1,
      "timestamp": "2024-07-12"
    },
    {
      "source": "Stack",
      "target": "Problem 581",
      "value": 1,
      "timestamp": "2024-07-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 581",
      "value": 1,
      "timestamp": "2024-07-12"
    },
    {
      "source": "Sorting",
      "target": "Problem 581",
      "value": 1,
      "timestamp": "2024-07-12"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 581",
      "value": 1,
      "timestamp": "2024-07-12"
    },
    {
      "source": "String",
      "target": "Problem 583",
      "value": 1,
      "timestamp": "2024-07-13"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 583",
      "value": 1,
      "timestamp": "2024-07-13"
    },
    {
      "source": "Database",
      "target": "Problem 584",
      "value": 1,
      "timestamp": "2024-07-13"
    },
    {
      "source": "String",
      "target": "Problem 591",
      "value": 1,
      "timestamp": "2024-07-14"
    },
    {
      "source": "Stack",
      "target": "Problem 591",
      "value": 1,
      "timestamp": "2024-07-14"
    },
    {
      "source": "Math",
      "target": "Problem 592",
      "value": 1,
      "timestamp": "2024-07-14"
    },
    {
      "source": "String",
      "target": "Problem 592",
      "value": 1,
      "timestamp": "2024-07-14"
    },
    {
      "source": "Simulation",
      "target": "Problem 592",
      "value": 1,
      "timestamp": "2024-07-14"
    },
    {
      "source": "Stack",
      "target": "Problem 590",
      "value": 1,
      "timestamp": "2024-07-14"
    },
    {
      "source": "Tree",
      "target": "Problem 590",
      "value": 1,
      "timestamp": "2024-07-14"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 590",
      "value": 1,
      "timestamp": "2024-07-14"
    },
    {
      "source": "Array",
      "target": "Problem 587",
      "value": 1,
      "timestamp": "2024-07-15"
    },
    {
      "source": "Math",
      "target": "Problem 587",
      "value": 1,
      "timestamp": "2024-07-15"
    },
    {
      "source": "Geometry",
      "target": "Problem 587",
      "value": 1,
      "timestamp": "2024-07-15"
    },
    {
      "source": "Database",
      "target": "Problem 586",
      "value": 1,
      "timestamp": "2024-07-15"
    },
    {
      "source": "Database",
      "target": "Problem 585",
      "value": 1,
      "timestamp": "2024-07-15"
    },
    {
      "source": "Stack",
      "target": "Problem 589",
      "value": 1,
      "timestamp": "2024-07-16"
    },
    {
      "source": "Tree",
      "target": "Problem 589",
      "value": 1,
      "timestamp": "2024-07-16"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 589",
      "value": 1,
      "timestamp": "2024-07-16"
    },
    {
      "source": "Math",
      "target": "Problem 593",
      "value": 1,
      "timestamp": "2024-07-16"
    },
    {
      "source": "Geometry",
      "target": "Problem 593",
      "value": 1,
      "timestamp": "2024-07-16"
    },
    {
      "source": "Database",
      "target": "Problem 596",
      "value": 1,
      "timestamp": "2024-07-16"
    },
    {
      "source": "Database",
      "target": "Problem 595",
      "value": 1,
      "timestamp": "2024-07-17"
    },
    {
      "source": "Array",
      "target": "Problem 594",
      "value": 1,
      "timestamp": "2024-07-17"
    },
    {
      "source": "Hash Table",
      "target": "Problem 594",
      "value": 1,
      "timestamp": "2024-07-17"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 594",
      "value": 1,
      "timestamp": "2024-07-17"
    },
    {
      "source": "Sorting",
      "target": "Problem 594",
      "value": 1,
      "timestamp": "2024-07-17"
    },
    {
      "source": "Counting",
      "target": "Problem 594",
      "value": 1,
      "timestamp": "2024-07-17"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 600",
      "value": 1,
      "timestamp": "2024-07-17"
    },
    {
      "source": "Array",
      "target": "Problem 598",
      "value": 1,
      "timestamp": "2024-07-18"
    },
    {
      "source": "Math",
      "target": "Problem 598",
      "value": 1,
      "timestamp": "2024-07-18"
    },
    {
      "source": "Array",
      "target": "Problem 599",
      "value": 1,
      "timestamp": "2024-07-18"
    },
    {
      "source": "Hash Table",
      "target": "Problem 599",
      "value": 1,
      "timestamp": "2024-07-18"
    },
    {
      "source": "String",
      "target": "Problem 599",
      "value": 1,
      "timestamp": "2024-07-18"
    },
    {
      "source": "Database",
      "target": "Problem 601",
      "value": 1,
      "timestamp": "2024-07-19"
    },
    {
      "source": "Database",
      "target": "Problem 607",
      "value": 1,
      "timestamp": "2024-07-19"
    },
    {
      "source": "Database",
      "target": "Problem 608",
      "value": 1,
      "timestamp": "2024-07-20"
    },
    {
      "source": "Array",
      "target": "Problem 605",
      "value": 1,
      "timestamp": "2024-07-21"
    },
    {
      "source": "Greedy",
      "target": "Problem 605",
      "value": 1,
      "timestamp": "2024-07-21"
    },
    {
      "source": "String",
      "target": "Problem 606",
      "value": 1,
      "timestamp": "2024-07-21"
    },
    {
      "source": "Tree",
      "target": "Problem 606",
      "value": 1,
      "timestamp": "2024-07-21"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 606",
      "value": 1,
      "timestamp": "2024-07-21"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 606",
      "value": 1,
      "timestamp": "2024-07-21"
    },
    {
      "source": "Database",
      "target": "Problem 610",
      "value": 1,
      "timestamp": "2024-07-21"
    },
    {
      "source": "Array",
      "target": "Problem 609",
      "value": 1,
      "timestamp": "2024-07-22"
    },
    {
      "source": "Hash Table",
      "target": "Problem 609",
      "value": 1,
      "timestamp": "2024-07-22"
    },
    {
      "source": "String",
      "target": "Problem 609",
      "value": 1,
      "timestamp": "2024-07-22"
    },
    {
      "source": "Array",
      "target": "Problem 611",
      "value": 1,
      "timestamp": "2024-07-22"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 611",
      "value": 1,
      "timestamp": "2024-07-22"
    },
    {
      "source": "Binary Search",
      "target": "Problem 611",
      "value": 1,
      "timestamp": "2024-07-22"
    },
    {
      "source": "Greedy",
      "target": "Problem 611",
      "value": 1,
      "timestamp": "2024-07-22"
    },
    {
      "source": "Sorting",
      "target": "Problem 611",
      "value": 1,
      "timestamp": "2024-07-22"
    },
    {
      "source": "Database",
      "target": "Problem 620",
      "value": 1,
      "timestamp": "2024-07-24"
    },
    {
      "source": "Database",
      "target": "Problem 619",
      "value": 1,
      "timestamp": "2024-07-24"
    },
    {
      "source": "Tree",
      "target": "Problem 617",
      "value": 1,
      "timestamp": "2024-07-25"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 617",
      "value": 1,
      "timestamp": "2024-07-25"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 617",
      "value": 1,
      "timestamp": "2024-07-25"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 617",
      "value": 1,
      "timestamp": "2024-07-25"
    },
    {
      "source": "Array",
      "target": "Problem 621",
      "value": 1,
      "timestamp": "2024-07-25"
    },
    {
      "source": "Hash Table",
      "target": "Problem 621",
      "value": 1,
      "timestamp": "2024-07-25"
    },
    {
      "source": "Greedy",
      "target": "Problem 621",
      "value": 1,
      "timestamp": "2024-07-25"
    },
    {
      "source": "Sorting",
      "target": "Problem 621",
      "value": 1,
      "timestamp": "2024-07-25"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 621",
      "value": 1,
      "timestamp": "2024-07-25"
    },
    {
      "source": "Counting",
      "target": "Problem 621",
      "value": 1,
      "timestamp": "2024-07-25"
    },
    {
      "source": "Array",
      "target": "Problem 624",
      "value": 1,
      "timestamp": "2024-07-26"
    },
    {
      "source": "Greedy",
      "target": "Problem 624",
      "value": 1,
      "timestamp": "2024-07-26"
    },
    {
      "source": "Array",
      "target": "Problem 622",
      "value": 1,
      "timestamp": "2024-07-26"
    },
    {
      "source": "Linked List",
      "target": "Problem 622",
      "value": 1,
      "timestamp": "2024-07-26"
    },
    {
      "source": "Design",
      "target": "Problem 622",
      "value": 1,
      "timestamp": "2024-07-26"
    },
    {
      "source": "Queue",
      "target": "Problem 622",
      "value": 1,
      "timestamp": "2024-07-26"
    },
    {
      "source": "Tree",
      "target": "Problem 623",
      "value": 1,
      "timestamp": "2024-07-26"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 623",
      "value": 1,
      "timestamp": "2024-07-26"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 623",
      "value": 1,
      "timestamp": "2024-07-26"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 623",
      "value": 1,
      "timestamp": "2024-07-26"
    },
    {
      "source": "Database",
      "target": "Problem 627",
      "value": 1,
      "timestamp": "2024-07-27"
    },
    {
      "source": "Database",
      "target": "Problem 626",
      "value": 1,
      "timestamp": "2024-07-27"
    },
    {
      "source": "Array",
      "target": "Problem 628",
      "value": 1,
      "timestamp": "2024-07-27"
    },
    {
      "source": "Math",
      "target": "Problem 628",
      "value": 1,
      "timestamp": "2024-07-27"
    },
    {
      "source": "Sorting",
      "target": "Problem 628",
      "value": 1,
      "timestamp": "2024-07-27"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 629",
      "value": 1,
      "timestamp": "2024-07-28"
    },
    {
      "source": "Array",
      "target": "Problem 630",
      "value": 1,
      "timestamp": "2024-07-28"
    },
    {
      "source": "Greedy",
      "target": "Problem 630",
      "value": 1,
      "timestamp": "2024-07-28"
    },
    {
      "source": "Sorting",
      "target": "Problem 630",
      "value": 1,
      "timestamp": "2024-07-28"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 630",
      "value": 1,
      "timestamp": "2024-07-28"
    },
    {
      "source": "Array",
      "target": "Problem 632",
      "value": 1,
      "timestamp": "2024-07-29"
    },
    {
      "source": "Hash Table",
      "target": "Problem 632",
      "value": 1,
      "timestamp": "2024-07-29"
    },
    {
      "source": "Greedy",
      "target": "Problem 632",
      "value": 1,
      "timestamp": "2024-07-29"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 632",
      "value": 1,
      "timestamp": "2024-07-29"
    },
    {
      "source": "Sorting",
      "target": "Problem 632",
      "value": 1,
      "timestamp": "2024-07-29"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 632",
      "value": 1,
      "timestamp": "2024-07-29"
    },
    {
      "source": "Math",
      "target": "Problem 633",
      "value": 1,
      "timestamp": "2024-07-30"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 633",
      "value": 1,
      "timestamp": "2024-07-30"
    },
    {
      "source": "Binary Search",
      "target": "Problem 633",
      "value": 1,
      "timestamp": "2024-07-30"
    },
    {
      "source": "Array",
      "target": "Problem 636",
      "value": 1,
      "timestamp": "2024-07-30"
    },
    {
      "source": "Stack",
      "target": "Problem 636",
      "value": 1,
      "timestamp": "2024-07-30"
    },
    {
      "source": "Array",
      "target": "Problem 638",
      "value": 1,
      "timestamp": "2024-07-31"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 638",
      "value": 1,
      "timestamp": "2024-07-31"
    },
    {
      "source": "Backtracking",
      "target": "Problem 638",
      "value": 1,
      "timestamp": "2024-07-31"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 638",
      "value": 1,
      "timestamp": "2024-07-31"
    },
    {
      "source": "Memoization",
      "target": "Problem 638",
      "value": 1,
      "timestamp": "2024-07-31"
    },
    {
      "source": "Bitmask",
      "target": "Problem 638",
      "value": 1,
      "timestamp": "2024-07-31"
    },
    {
      "source": "Tree",
      "target": "Problem 637",
      "value": 1,
      "timestamp": "2024-07-31"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 637",
      "value": 1,
      "timestamp": "2024-07-31"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 637",
      "value": 1,
      "timestamp": "2024-07-31"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 637",
      "value": 1,
      "timestamp": "2024-07-31"
    },
    {
      "source": "Math",
      "target": "Problem 640",
      "value": 1,
      "timestamp": "2024-07-31"
    },
    {
      "source": "String",
      "target": "Problem 640",
      "value": 1,
      "timestamp": "2024-07-31"
    },
    {
      "source": "Simulation",
      "target": "Problem 640",
      "value": 1,
      "timestamp": "2024-07-31"
    },
    {
      "source": "String",
      "target": "Problem 639",
      "value": 1,
      "timestamp": "2024-08-01"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 639",
      "value": 1,
      "timestamp": "2024-08-01"
    },
    {
      "source": "Array",
      "target": "Problem 641",
      "value": 1,
      "timestamp": "2024-08-01"
    },
    {
      "source": "Linked List",
      "target": "Problem 641",
      "value": 1,
      "timestamp": "2024-08-01"
    },
    {
      "source": "Design",
      "target": "Problem 641",
      "value": 1,
      "timestamp": "2024-08-01"
    },
    {
      "source": "Queue",
      "target": "Problem 641",
      "value": 1,
      "timestamp": "2024-08-01"
    },
    {
      "source": "Array",
      "target": "Problem 643",
      "value": 1,
      "timestamp": "2024-08-02"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 643",
      "value": 1,
      "timestamp": "2024-08-02"
    },
    {
      "source": "Array",
      "target": "Problem 645",
      "value": 1,
      "timestamp": "2024-08-02"
    },
    {
      "source": "Hash Table",
      "target": "Problem 645",
      "value": 1,
      "timestamp": "2024-08-02"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 645",
      "value": 1,
      "timestamp": "2024-08-02"
    },
    {
      "source": "Sorting",
      "target": "Problem 645",
      "value": 1,
      "timestamp": "2024-08-02"
    },
    {
      "source": "Array",
      "target": "Problem 646",
      "value": 1,
      "timestamp": "2024-08-02"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 646",
      "value": 1,
      "timestamp": "2024-08-02"
    },
    {
      "source": "Greedy",
      "target": "Problem 646",
      "value": 1,
      "timestamp": "2024-08-02"
    },
    {
      "source": "Sorting",
      "target": "Problem 646",
      "value": 1,
      "timestamp": "2024-08-02"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 647",
      "value": 1,
      "timestamp": "2024-08-03"
    },
    {
      "source": "String",
      "target": "Problem 647",
      "value": 1,
      "timestamp": "2024-08-03"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 647",
      "value": 1,
      "timestamp": "2024-08-03"
    },
    {
      "source": "Array",
      "target": "Problem 648",
      "value": 1,
      "timestamp": "2024-08-03"
    },
    {
      "source": "Hash Table",
      "target": "Problem 648",
      "value": 1,
      "timestamp": "2024-08-03"
    },
    {
      "source": "String",
      "target": "Problem 648",
      "value": 1,
      "timestamp": "2024-08-03"
    },
    {
      "source": "Trie",
      "target": "Problem 648",
      "value": 1,
      "timestamp": "2024-08-03"
    },
    {
      "source": "String",
      "target": "Problem 649",
      "value": 1,
      "timestamp": "2024-08-04"
    },
    {
      "source": "Greedy",
      "target": "Problem 649",
      "value": 1,
      "timestamp": "2024-08-04"
    },
    {
      "source": "Queue",
      "target": "Problem 649",
      "value": 1,
      "timestamp": "2024-08-04"
    },
    {
      "source": "Math",
      "target": "Problem 650",
      "value": 1,
      "timestamp": "2024-08-04"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 650",
      "value": 1,
      "timestamp": "2024-08-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 652",
      "value": 1,
      "timestamp": "2024-08-05"
    },
    {
      "source": "Tree",
      "target": "Problem 652",
      "value": 1,
      "timestamp": "2024-08-05"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 652",
      "value": 1,
      "timestamp": "2024-08-05"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 652",
      "value": 1,
      "timestamp": "2024-08-05"
    },
    {
      "source": "Array",
      "target": "Problem 654",
      "value": 1,
      "timestamp": "2024-08-05"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 654",
      "value": 1,
      "timestamp": "2024-08-05"
    },
    {
      "source": "Stack",
      "target": "Problem 654",
      "value": 1,
      "timestamp": "2024-08-05"
    },
    {
      "source": "Tree",
      "target": "Problem 654",
      "value": 1,
      "timestamp": "2024-08-05"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 654",
      "value": 1,
      "timestamp": "2024-08-05"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 654",
      "value": 1,
      "timestamp": "2024-08-05"
    },
    {
      "source": "Tree",
      "target": "Problem 655",
      "value": 1,
      "timestamp": "2024-08-06"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 655",
      "value": 1,
      "timestamp": "2024-08-06"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 655",
      "value": 1,
      "timestamp": "2024-08-06"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 655",
      "value": 1,
      "timestamp": "2024-08-06"
    },
    {
      "source": "String",
      "target": "Problem 657",
      "value": 1,
      "timestamp": "2024-08-06"
    },
    {
      "source": "Simulation",
      "target": "Problem 657",
      "value": 1,
      "timestamp": "2024-08-06"
    },
    {
      "source": "Array",
      "target": "Problem 658",
      "value": 1,
      "timestamp": "2024-08-07"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 658",
      "value": 1,
      "timestamp": "2024-08-07"
    },
    {
      "source": "Binary Search",
      "target": "Problem 658",
      "value": 1,
      "timestamp": "2024-08-07"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 658",
      "value": 1,
      "timestamp": "2024-08-07"
    },
    {
      "source": "Sorting",
      "target": "Problem 658",
      "value": 1,
      "timestamp": "2024-08-07"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 658",
      "value": 1,
      "timestamp": "2024-08-07"
    },
    {
      "source": "Array",
      "target": "Problem 659",
      "value": 1,
      "timestamp": "2024-08-07"
    },
    {
      "source": "Hash Table",
      "target": "Problem 659",
      "value": 1,
      "timestamp": "2024-08-07"
    },
    {
      "source": "Greedy",
      "target": "Problem 659",
      "value": 1,
      "timestamp": "2024-08-07"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 659",
      "value": 1,
      "timestamp": "2024-08-07"
    },
    {
      "source": "Array",
      "target": "Problem 661",
      "value": 1,
      "timestamp": "2024-08-08"
    },
    {
      "source": "Matrix",
      "target": "Problem 661",
      "value": 1,
      "timestamp": "2024-08-08"
    },
    {
      "source": "Tree",
      "target": "Problem 662",
      "value": 1,
      "timestamp": "2024-08-08"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 662",
      "value": 1,
      "timestamp": "2024-08-08"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 662",
      "value": 1,
      "timestamp": "2024-08-08"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 662",
      "value": 1,
      "timestamp": "2024-08-08"
    },
    {
      "source": "String",
      "target": "Problem 664",
      "value": 1,
      "timestamp": "2024-08-09"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 664",
      "value": 1,
      "timestamp": "2024-08-09"
    },
    {
      "source": "Array",
      "target": "Problem 665",
      "value": 1,
      "timestamp": "2024-08-09"
    },
    {
      "source": "Array",
      "target": "Problem 667",
      "value": 1,
      "timestamp": "2024-08-09"
    },
    {
      "source": "Math",
      "target": "Problem 667",
      "value": 1,
      "timestamp": "2024-08-09"
    },
    {
      "source": "Math",
      "target": "Problem 668",
      "value": 1,
      "timestamp": "2024-08-10"
    },
    {
      "source": "Binary Search",
      "target": "Problem 668",
      "value": 1,
      "timestamp": "2024-08-10"
    },
    {
      "source": "Tree",
      "target": "Problem 669",
      "value": 1,
      "timestamp": "2024-08-10"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 669",
      "value": 1,
      "timestamp": "2024-08-10"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 669",
      "value": 1,
      "timestamp": "2024-08-10"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 669",
      "value": 1,
      "timestamp": "2024-08-10"
    },
    {
      "source": "Math",
      "target": "Problem 670",
      "value": 1,
      "timestamp": "2024-08-10"
    },
    {
      "source": "Greedy",
      "target": "Problem 670",
      "value": 1,
      "timestamp": "2024-08-10"
    },
    {
      "source": "Tree",
      "target": "Problem 671",
      "value": 1,
      "timestamp": "2024-08-11"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 671",
      "value": 1,
      "timestamp": "2024-08-11"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 671",
      "value": 1,
      "timestamp": "2024-08-11"
    },
    {
      "source": "Math",
      "target": "Problem 672",
      "value": 1,
      "timestamp": "2024-08-11"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 672",
      "value": 1,
      "timestamp": "2024-08-11"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 672",
      "value": 1,
      "timestamp": "2024-08-11"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 672",
      "value": 1,
      "timestamp": "2024-08-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 677",
      "value": 1,
      "timestamp": "2024-08-12"
    },
    {
      "source": "String",
      "target": "Problem 677",
      "value": 1,
      "timestamp": "2024-08-12"
    },
    {
      "source": "Design",
      "target": "Problem 677",
      "value": 1,
      "timestamp": "2024-08-12"
    },
    {
      "source": "Trie",
      "target": "Problem 677",
      "value": 1,
      "timestamp": "2024-08-12"
    },
    {
      "source": "Array",
      "target": "Problem 673",
      "value": 1,
      "timestamp": "2024-08-12"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 673",
      "value": 1,
      "timestamp": "2024-08-12"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 673",
      "value": 1,
      "timestamp": "2024-08-12"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 673",
      "value": 1,
      "timestamp": "2024-08-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 676",
      "value": 1,
      "timestamp": "2024-08-12"
    },
    {
      "source": "String",
      "target": "Problem 676",
      "value": 1,
      "timestamp": "2024-08-12"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 676",
      "value": 1,
      "timestamp": "2024-08-12"
    },
    {
      "source": "Design",
      "target": "Problem 676",
      "value": 1,
      "timestamp": "2024-08-12"
    },
    {
      "source": "Trie",
      "target": "Problem 676",
      "value": 1,
      "timestamp": "2024-08-12"
    },
    {
      "source": "Array",
      "target": "Problem 675",
      "value": 1,
      "timestamp": "2024-08-13"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 675",
      "value": 1,
      "timestamp": "2024-08-13"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 675",
      "value": 1,
      "timestamp": "2024-08-13"
    },
    {
      "source": "Matrix",
      "target": "Problem 675",
      "value": 1,
      "timestamp": "2024-08-13"
    },
    {
      "source": "String",
      "target": "Problem 678",
      "value": 1,
      "timestamp": "2024-08-13"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 678",
      "value": 1,
      "timestamp": "2024-08-13"
    },
    {
      "source": "Stack",
      "target": "Problem 678",
      "value": 1,
      "timestamp": "2024-08-13"
    },
    {
      "source": "Greedy",
      "target": "Problem 678",
      "value": 1,
      "timestamp": "2024-08-13"
    },
    {
      "source": "Array",
      "target": "Problem 679",
      "value": 1,
      "timestamp": "2024-08-13"
    },
    {
      "source": "Math",
      "target": "Problem 679",
      "value": 1,
      "timestamp": "2024-08-13"
    },
    {
      "source": "Backtracking",
      "target": "Problem 679",
      "value": 1,
      "timestamp": "2024-08-13"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 680",
      "value": 1,
      "timestamp": "2024-08-14"
    },
    {
      "source": "String",
      "target": "Problem 680",
      "value": 1,
      "timestamp": "2024-08-14"
    },
    {
      "source": "Greedy",
      "target": "Problem 680",
      "value": 1,
      "timestamp": "2024-08-14"
    },
    {
      "source": "Array",
      "target": "Problem 674",
      "value": 1,
      "timestamp": "2024-08-14"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 684",
      "value": 1,
      "timestamp": "2024-08-15"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 684",
      "value": 1,
      "timestamp": "2024-08-15"
    },
    {
      "source": "Union Find",
      "target": "Problem 684",
      "value": 1,
      "timestamp": "2024-08-15"
    },
    {
      "source": "Graph",
      "target": "Problem 684",
      "value": 1,
      "timestamp": "2024-08-15"
    },
    {
      "source": "Array",
      "target": "Problem 682",
      "value": 1,
      "timestamp": "2024-08-15"
    },
    {
      "source": "Stack",
      "target": "Problem 682",
      "value": 1,
      "timestamp": "2024-08-15"
    },
    {
      "source": "Simulation",
      "target": "Problem 682",
      "value": 1,
      "timestamp": "2024-08-15"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 685",
      "value": 1,
      "timestamp": "2024-08-16"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 685",
      "value": 1,
      "timestamp": "2024-08-16"
    },
    {
      "source": "Union Find",
      "target": "Problem 685",
      "value": 1,
      "timestamp": "2024-08-16"
    },
    {
      "source": "Graph",
      "target": "Problem 685",
      "value": 1,
      "timestamp": "2024-08-16"
    },
    {
      "source": "String",
      "target": "Problem 686",
      "value": 1,
      "timestamp": "2024-08-16"
    },
    {
      "source": "String Matching",
      "target": "Problem 686",
      "value": 1,
      "timestamp": "2024-08-16"
    },
    {
      "source": "Tree",
      "target": "Problem 687",
      "value": 1,
      "timestamp": "2024-08-16"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 687",
      "value": 1,
      "timestamp": "2024-08-16"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 687",
      "value": 1,
      "timestamp": "2024-08-16"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 688",
      "value": 1,
      "timestamp": "2024-08-17"
    },
    {
      "source": "Array",
      "target": "Problem 689",
      "value": 1,
      "timestamp": "2024-08-17"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 689",
      "value": 1,
      "timestamp": "2024-08-17"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 693",
      "value": 1,
      "timestamp": "2024-08-17"
    },
    {
      "source": "Array",
      "target": "Problem 691",
      "value": 1,
      "timestamp": "2024-08-18"
    },
    {
      "source": "String",
      "target": "Problem 691",
      "value": 1,
      "timestamp": "2024-08-18"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 691",
      "value": 1,
      "timestamp": "2024-08-18"
    },
    {
      "source": "Backtracking",
      "target": "Problem 691",
      "value": 1,
      "timestamp": "2024-08-18"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 691",
      "value": 1,
      "timestamp": "2024-08-18"
    },
    {
      "source": "Bitmask",
      "target": "Problem 691",
      "value": 1,
      "timestamp": "2024-08-18"
    },
    {
      "source": "Array",
      "target": "Problem 690",
      "value": 1,
      "timestamp": "2024-08-18"
    },
    {
      "source": "Hash Table",
      "target": "Problem 690",
      "value": 1,
      "timestamp": "2024-08-18"
    },
    {
      "source": "Tree",
      "target": "Problem 690",
      "value": 1,
      "timestamp": "2024-08-18"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 690",
      "value": 1,
      "timestamp": "2024-08-18"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 690",
      "value": 1,
      "timestamp": "2024-08-18"
    },
    {
      "source": "Hash Table",
      "target": "Problem 692",
      "value": 1,
      "timestamp": "2024-08-18"
    },
    {
      "source": "String",
      "target": "Problem 692",
      "value": 1,
      "timestamp": "2024-08-18"
    },
    {
      "source": "Trie",
      "target": "Problem 692",
      "value": 1,
      "timestamp": "2024-08-18"
    },
    {
      "source": "Sorting",
      "target": "Problem 692",
      "value": 1,
      "timestamp": "2024-08-18"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 692",
      "value": 1,
      "timestamp": "2024-08-18"
    },
    {
      "source": "Bucket Sort",
      "target": "Problem 692",
      "value": 1,
      "timestamp": "2024-08-18"
    },
    {
      "source": "Counting",
      "target": "Problem 692",
      "value": 1,
      "timestamp": "2024-08-18"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 696",
      "value": 1,
      "timestamp": "2024-08-19"
    },
    {
      "source": "String",
      "target": "Problem 696",
      "value": 1,
      "timestamp": "2024-08-19"
    },
    {
      "source": "Array",
      "target": "Problem 699",
      "value": 1,
      "timestamp": "2024-08-19"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 699",
      "value": 1,
      "timestamp": "2024-08-19"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 699",
      "value": 1,
      "timestamp": "2024-08-19"
    },
    {
      "source": "Array",
      "target": "Problem 697",
      "value": 1,
      "timestamp": "2024-08-20"
    },
    {
      "source": "Hash Table",
      "target": "Problem 697",
      "value": 1,
      "timestamp": "2024-08-20"
    },
    {
      "source": "Array",
      "target": "Problem 695",
      "value": 1,
      "timestamp": "2024-08-20"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 695",
      "value": 1,
      "timestamp": "2024-08-20"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 695",
      "value": 1,
      "timestamp": "2024-08-20"
    },
    {
      "source": "Union Find",
      "target": "Problem 695",
      "value": 1,
      "timestamp": "2024-08-20"
    },
    {
      "source": "Matrix",
      "target": "Problem 695",
      "value": 1,
      "timestamp": "2024-08-20"
    },
    {
      "source": "Array",
      "target": "Problem 698",
      "value": 1,
      "timestamp": "2024-08-20"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 698",
      "value": 1,
      "timestamp": "2024-08-20"
    },
    {
      "source": "Backtracking",
      "target": "Problem 698",
      "value": 1,
      "timestamp": "2024-08-20"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 698",
      "value": 1,
      "timestamp": "2024-08-20"
    },
    {
      "source": "Memoization",
      "target": "Problem 698",
      "value": 1,
      "timestamp": "2024-08-20"
    },
    {
      "source": "Bitmask",
      "target": "Problem 698",
      "value": 1,
      "timestamp": "2024-08-20"
    },
    {
      "source": "Tree",
      "target": "Problem 700",
      "value": 1,
      "timestamp": "2024-08-21"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 700",
      "value": 1,
      "timestamp": "2024-08-21"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 700",
      "value": 1,
      "timestamp": "2024-08-21"
    },
    {
      "source": "Tree",
      "target": "Problem 701",
      "value": 1,
      "timestamp": "2024-08-21"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 701",
      "value": 1,
      "timestamp": "2024-08-21"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 701",
      "value": 1,
      "timestamp": "2024-08-21"
    },
    {
      "source": "Tree",
      "target": "Problem 703",
      "value": 1,
      "timestamp": "2024-08-22"
    },
    {
      "source": "Design",
      "target": "Problem 703",
      "value": 1,
      "timestamp": "2024-08-22"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 703",
      "value": 1,
      "timestamp": "2024-08-22"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 703",
      "value": 1,
      "timestamp": "2024-08-22"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 703",
      "value": 1,
      "timestamp": "2024-08-22"
    },
    {
      "source": "Data Stream",
      "target": "Problem 703",
      "value": 1,
      "timestamp": "2024-08-22"
    },
    {
      "source": "Array",
      "target": "Problem 705",
      "value": 1,
      "timestamp": "2024-08-22"
    },
    {
      "source": "Hash Table",
      "target": "Problem 705",
      "value": 1,
      "timestamp": "2024-08-22"
    },
    {
      "source": "Linked List",
      "target": "Problem 705",
      "value": 1,
      "timestamp": "2024-08-22"
    },
    {
      "source": "Design",
      "target": "Problem 705",
      "value": 1,
      "timestamp": "2024-08-22"
    },
    {
      "source": "Hash Function",
      "target": "Problem 705",
      "value": 1,
      "timestamp": "2024-08-22"
    },
    {
      "source": "Array",
      "target": "Problem 706",
      "value": 1,
      "timestamp": "2024-08-22"
    },
    {
      "source": "Hash Table",
      "target": "Problem 706",
      "value": 1,
      "timestamp": "2024-08-22"
    },
    {
      "source": "Linked List",
      "target": "Problem 706",
      "value": 1,
      "timestamp": "2024-08-22"
    },
    {
      "source": "Design",
      "target": "Problem 706",
      "value": 1,
      "timestamp": "2024-08-22"
    },
    {
      "source": "Hash Function",
      "target": "Problem 706",
      "value": 1,
      "timestamp": "2024-08-22"
    },
    {
      "source": "Array",
      "target": "Problem 704",
      "value": 1,
      "timestamp": "2024-08-23"
    },
    {
      "source": "Binary Search",
      "target": "Problem 704",
      "value": 1,
      "timestamp": "2024-08-23"
    },
    {
      "source": "Linked List",
      "target": "Problem 707",
      "value": 1,
      "timestamp": "2024-08-23"
    },
    {
      "source": "Design",
      "target": "Problem 707",
      "value": 1,
      "timestamp": "2024-08-23"
    },
    {
      "source": "String",
      "target": "Problem 709",
      "value": 1,
      "timestamp": "2024-08-24"
    },
    {
      "source": "Array",
      "target": "Problem 710",
      "value": 1,
      "timestamp": "2024-08-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 710",
      "value": 1,
      "timestamp": "2024-08-24"
    },
    {
      "source": "Math",
      "target": "Problem 710",
      "value": 1,
      "timestamp": "2024-08-24"
    },
    {
      "source": "Binary Search",
      "target": "Problem 710",
      "value": 1,
      "timestamp": "2024-08-24"
    },
    {
      "source": "Sorting",
      "target": "Problem 710",
      "value": 1,
      "timestamp": "2024-08-24"
    },
    {
      "source": "Randomized",
      "target": "Problem 710",
      "value": 1,
      "timestamp": "2024-08-24"
    },
    {
      "source": "String",
      "target": "Problem 712",
      "value": 1,
      "timestamp": "2024-08-25"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 712",
      "value": 1,
      "timestamp": "2024-08-25"
    },
    {
      "source": "Array",
      "target": "Problem 714",
      "value": 1,
      "timestamp": "2024-08-25"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 714",
      "value": 1,
      "timestamp": "2024-08-25"
    },
    {
      "source": "Greedy",
      "target": "Problem 714",
      "value": 1,
      "timestamp": "2024-08-25"
    },
    {
      "source": "Array",
      "target": "Problem 713",
      "value": 1,
      "timestamp": "2024-08-25"
    },
    {
      "source": "Binary Search",
      "target": "Problem 713",
      "value": 1,
      "timestamp": "2024-08-25"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 713",
      "value": 1,
      "timestamp": "2024-08-25"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 713",
      "value": 1,
      "timestamp": "2024-08-25"
    },
    {
      "source": "Array",
      "target": "Problem 717",
      "value": 1,
      "timestamp": "2024-08-26"
    },
    {
      "source": "Design",
      "target": "Problem 715",
      "value": 1,
      "timestamp": "2024-08-26"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 715",
      "value": 1,
      "timestamp": "2024-08-26"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 715",
      "value": 1,
      "timestamp": "2024-08-26"
    },
    {
      "source": "Array",
      "target": "Problem 718",
      "value": 1,
      "timestamp": "2024-08-27"
    },
    {
      "source": "Binary Search",
      "target": "Problem 718",
      "value": 1,
      "timestamp": "2024-08-27"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 718",
      "value": 1,
      "timestamp": "2024-08-27"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 718",
      "value": 1,
      "timestamp": "2024-08-27"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 718",
      "value": 1,
      "timestamp": "2024-08-27"
    },
    {
      "source": "Hash Function",
      "target": "Problem 718",
      "value": 1,
      "timestamp": "2024-08-27"
    },
    {
      "source": "Array",
      "target": "Problem 722",
      "value": 1,
      "timestamp": "2024-08-27"
    },
    {
      "source": "String",
      "target": "Problem 722",
      "value": 1,
      "timestamp": "2024-08-27"
    },
    {
      "source": "Array",
      "target": "Problem 720",
      "value": 1,
      "timestamp": "2024-08-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 720",
      "value": 1,
      "timestamp": "2024-08-27"
    },
    {
      "source": "String",
      "target": "Problem 720",
      "value": 1,
      "timestamp": "2024-08-27"
    },
    {
      "source": "Trie",
      "target": "Problem 720",
      "value": 1,
      "timestamp": "2024-08-27"
    },
    {
      "source": "Sorting",
      "target": "Problem 720",
      "value": 1,
      "timestamp": "2024-08-27"
    },
    {
      "source": "Array",
      "target": "Problem 719",
      "value": 1,
      "timestamp": "2024-08-28"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 719",
      "value": 1,
      "timestamp": "2024-08-28"
    },
    {
      "source": "Binary Search",
      "target": "Problem 719",
      "value": 1,
      "timestamp": "2024-08-28"
    },
    {
      "source": "Sorting",
      "target": "Problem 719",
      "value": 1,
      "timestamp": "2024-08-28"
    },
    {
      "source": "Array",
      "target": "Problem 721",
      "value": 1,
      "timestamp": "2024-08-28"
    },
    {
      "source": "Hash Table",
      "target": "Problem 721",
      "value": 1,
      "timestamp": "2024-08-28"
    },
    {
      "source": "String",
      "target": "Problem 721",
      "value": 1,
      "timestamp": "2024-08-28"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 721",
      "value": 1,
      "timestamp": "2024-08-28"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 721",
      "value": 1,
      "timestamp": "2024-08-28"
    },
    {
      "source": "Union Find",
      "target": "Problem 721",
      "value": 1,
      "timestamp": "2024-08-28"
    },
    {
      "source": "Sorting",
      "target": "Problem 721",
      "value": 1,
      "timestamp": "2024-08-28"
    },
    {
      "source": "Array",
      "target": "Problem 724",
      "value": 1,
      "timestamp": "2024-08-29"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 724",
      "value": 1,
      "timestamp": "2024-08-29"
    },
    {
      "source": "Hash Table",
      "target": "Problem 726",
      "value": 1,
      "timestamp": "2024-08-29"
    },
    {
      "source": "String",
      "target": "Problem 726",
      "value": 1,
      "timestamp": "2024-08-29"
    },
    {
      "source": "Stack",
      "target": "Problem 726",
      "value": 1,
      "timestamp": "2024-08-29"
    },
    {
      "source": "Sorting",
      "target": "Problem 726",
      "value": 1,
      "timestamp": "2024-08-29"
    },
    {
      "source": "Linked List",
      "target": "Problem 725",
      "value": 1,
      "timestamp": "2024-08-29"
    },
    {
      "source": "Math",
      "target": "Problem 728",
      "value": 1,
      "timestamp": "2024-08-30"
    },
    {
      "source": "Array",
      "target": "Problem 729",
      "value": 1,
      "timestamp": "2024-08-30"
    },
    {
      "source": "Binary Search",
      "target": "Problem 729",
      "value": 1,
      "timestamp": "2024-08-30"
    },
    {
      "source": "Design",
      "target": "Problem 729",
      "value": 1,
      "timestamp": "2024-08-30"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 729",
      "value": 1,
      "timestamp": "2024-08-30"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 729",
      "value": 1,
      "timestamp": "2024-08-30"
    },
    {
      "source": "String",
      "target": "Problem 730",
      "value": 1,
      "timestamp": "2024-08-31"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 730",
      "value": 1,
      "timestamp": "2024-08-31"
    },
    {
      "source": "Array",
      "target": "Problem 731",
      "value": 1,
      "timestamp": "2024-08-31"
    },
    {
      "source": "Binary Search",
      "target": "Problem 731",
      "value": 1,
      "timestamp": "2024-08-31"
    },
    {
      "source": "Design",
      "target": "Problem 731",
      "value": 1,
      "timestamp": "2024-08-31"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 731",
      "value": 1,
      "timestamp": "2024-08-31"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 731",
      "value": 1,
      "timestamp": "2024-08-31"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 731",
      "value": 1,
      "timestamp": "2024-08-31"
    },
    {
      "source": "Array",
      "target": "Problem 733",
      "value": 1,
      "timestamp": "2024-08-31"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 733",
      "value": 1,
      "timestamp": "2024-08-31"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 733",
      "value": 1,
      "timestamp": "2024-08-31"
    },
    {
      "source": "Matrix",
      "target": "Problem 733",
      "value": 1,
      "timestamp": "2024-08-31"
    },
    {
      "source": "Array",
      "target": "Problem 735",
      "value": 1,
      "timestamp": "2024-09-01"
    },
    {
      "source": "Stack",
      "target": "Problem 735",
      "value": 1,
      "timestamp": "2024-09-01"
    },
    {
      "source": "Simulation",
      "target": "Problem 735",
      "value": 1,
      "timestamp": "2024-09-01"
    },
    {
      "source": "Hash Table",
      "target": "Problem 736",
      "value": 1,
      "timestamp": "2024-09-02"
    },
    {
      "source": "String",
      "target": "Problem 736",
      "value": 1,
      "timestamp": "2024-09-02"
    },
    {
      "source": "Stack",
      "target": "Problem 736",
      "value": 1,
      "timestamp": "2024-09-02"
    },
    {
      "source": "Recursion",
      "target": "Problem 736",
      "value": 1,
      "timestamp": "2024-09-02"
    },
    {
      "source": "Array",
      "target": "Problem 739",
      "value": 1,
      "timestamp": "2024-09-02"
    },
    {
      "source": "Stack",
      "target": "Problem 739",
      "value": 1,
      "timestamp": "2024-09-02"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 739",
      "value": 1,
      "timestamp": "2024-09-02"
    },
    {
      "source": "Binary Search",
      "target": "Problem 732",
      "value": 1,
      "timestamp": "2024-09-02"
    },
    {
      "source": "Design",
      "target": "Problem 732",
      "value": 1,
      "timestamp": "2024-09-02"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 732",
      "value": 1,
      "timestamp": "2024-09-02"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 732",
      "value": 1,
      "timestamp": "2024-09-02"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 732",
      "value": 1,
      "timestamp": "2024-09-02"
    },
    {
      "source": "Math",
      "target": "Problem 738",
      "value": 1,
      "timestamp": "2024-09-03"
    },
    {
      "source": "Greedy",
      "target": "Problem 738",
      "value": 1,
      "timestamp": "2024-09-03"
    },
    {
      "source": "Array",
      "target": "Problem 741",
      "value": 1,
      "timestamp": "2024-09-03"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 741",
      "value": 1,
      "timestamp": "2024-09-03"
    },
    {
      "source": "Matrix",
      "target": "Problem 741",
      "value": 1,
      "timestamp": "2024-09-03"
    },
    {
      "source": "Array",
      "target": "Problem 740",
      "value": 1,
      "timestamp": "2024-09-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 740",
      "value": 1,
      "timestamp": "2024-09-04"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 740",
      "value": 1,
      "timestamp": "2024-09-04"
    },
    {
      "source": "Array",
      "target": "Problem 744",
      "value": 1,
      "timestamp": "2024-09-04"
    },
    {
      "source": "Binary Search",
      "target": "Problem 744",
      "value": 1,
      "timestamp": "2024-09-04"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 743",
      "value": 1,
      "timestamp": "2024-09-04"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 743",
      "value": 1,
      "timestamp": "2024-09-04"
    },
    {
      "source": "Graph",
      "target": "Problem 743",
      "value": 1,
      "timestamp": "2024-09-04"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 743",
      "value": 1,
      "timestamp": "2024-09-04"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 743",
      "value": 1,
      "timestamp": "2024-09-04"
    },
    {
      "source": "Array",
      "target": "Problem 746",
      "value": 1,
      "timestamp": "2024-09-05"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 746",
      "value": 1,
      "timestamp": "2024-09-05"
    },
    {
      "source": "Array",
      "target": "Problem 745",
      "value": 1,
      "timestamp": "2024-09-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 745",
      "value": 1,
      "timestamp": "2024-09-05"
    },
    {
      "source": "String",
      "target": "Problem 745",
      "value": 1,
      "timestamp": "2024-09-05"
    },
    {
      "source": "Design",
      "target": "Problem 745",
      "value": 1,
      "timestamp": "2024-09-05"
    },
    {
      "source": "Trie",
      "target": "Problem 745",
      "value": 1,
      "timestamp": "2024-09-05"
    },
    {
      "source": "Array",
      "target": "Problem 747",
      "value": 1,
      "timestamp": "2024-09-06"
    },
    {
      "source": "Sorting",
      "target": "Problem 747",
      "value": 1,
      "timestamp": "2024-09-06"
    },
    {
      "source": "Array",
      "target": "Problem 752",
      "value": 1,
      "timestamp": "2024-09-06"
    },
    {
      "source": "Hash Table",
      "target": "Problem 752",
      "value": 1,
      "timestamp": "2024-09-06"
    },
    {
      "source": "String",
      "target": "Problem 752",
      "value": 1,
      "timestamp": "2024-09-06"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 752",
      "value": 1,
      "timestamp": "2024-09-06"
    },
    {
      "source": "Array",
      "target": "Problem 749",
      "value": 1,
      "timestamp": "2024-09-07"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 749",
      "value": 1,
      "timestamp": "2024-09-07"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 749",
      "value": 1,
      "timestamp": "2024-09-07"
    },
    {
      "source": "Matrix",
      "target": "Problem 749",
      "value": 1,
      "timestamp": "2024-09-07"
    },
    {
      "source": "Simulation",
      "target": "Problem 749",
      "value": 1,
      "timestamp": "2024-09-07"
    },
    {
      "source": "Array",
      "target": "Problem 748",
      "value": 1,
      "timestamp": "2024-09-07"
    },
    {
      "source": "Hash Table",
      "target": "Problem 748",
      "value": 1,
      "timestamp": "2024-09-07"
    },
    {
      "source": "String",
      "target": "Problem 748",
      "value": 1,
      "timestamp": "2024-09-07"
    },
    {
      "source": "Math",
      "target": "Problem 754",
      "value": 1,
      "timestamp": "2024-09-07"
    },
    {
      "source": "Binary Search",
      "target": "Problem 754",
      "value": 1,
      "timestamp": "2024-09-07"
    },
    {
      "source": "Array",
      "target": "Problem 757",
      "value": 1,
      "timestamp": "2024-09-08"
    },
    {
      "source": "Greedy",
      "target": "Problem 757",
      "value": 1,
      "timestamp": "2024-09-08"
    },
    {
      "source": "Sorting",
      "target": "Problem 757",
      "value": 1,
      "timestamp": "2024-09-08"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 756",
      "value": 1,
      "timestamp": "2024-09-09"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 756",
      "value": 1,
      "timestamp": "2024-09-09"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 756",
      "value": 1,
      "timestamp": "2024-09-09"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 753",
      "value": 1,
      "timestamp": "2024-09-09"
    },
    {
      "source": "Graph",
      "target": "Problem 753",
      "value": 1,
      "timestamp": "2024-09-09"
    },
    {
      "source": "Eulerian Circuit",
      "target": "Problem 753",
      "value": 1,
      "timestamp": "2024-09-09"
    },
    {
      "source": "String",
      "target": "Problem 761",
      "value": 1,
      "timestamp": "2024-09-10"
    },
    {
      "source": "Recursion",
      "target": "Problem 761",
      "value": 1,
      "timestamp": "2024-09-10"
    },
    {
      "source": "Array",
      "target": "Problem 766",
      "value": 1,
      "timestamp": "2024-09-10"
    },
    {
      "source": "Matrix",
      "target": "Problem 766",
      "value": 1,
      "timestamp": "2024-09-10"
    },
    {
      "source": "Array",
      "target": "Problem 764",
      "value": 1,
      "timestamp": "2024-09-11"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 764",
      "value": 1,
      "timestamp": "2024-09-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 763",
      "value": 1,
      "timestamp": "2024-09-11"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 763",
      "value": 1,
      "timestamp": "2024-09-11"
    },
    {
      "source": "String",
      "target": "Problem 763",
      "value": 1,
      "timestamp": "2024-09-11"
    },
    {
      "source": "Greedy",
      "target": "Problem 763",
      "value": 1,
      "timestamp": "2024-09-11"
    },
    {
      "source": "Greedy",
      "target": "Problem 765",
      "value": 1,
      "timestamp": "2024-09-11"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 765",
      "value": 1,
      "timestamp": "2024-09-11"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 765",
      "value": 1,
      "timestamp": "2024-09-11"
    },
    {
      "source": "Union Find",
      "target": "Problem 765",
      "value": 1,
      "timestamp": "2024-09-11"
    },
    {
      "source": "Graph",
      "target": "Problem 765",
      "value": 1,
      "timestamp": "2024-09-11"
    },
    {
      "source": "Math",
      "target": "Problem 762",
      "value": 1,
      "timestamp": "2024-09-12"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 762",
      "value": 1,
      "timestamp": "2024-09-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 767",
      "value": 1,
      "timestamp": "2024-09-12"
    },
    {
      "source": "String",
      "target": "Problem 767",
      "value": 1,
      "timestamp": "2024-09-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 767",
      "value": 1,
      "timestamp": "2024-09-12"
    },
    {
      "source": "Sorting",
      "target": "Problem 767",
      "value": 1,
      "timestamp": "2024-09-12"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 767",
      "value": 1,
      "timestamp": "2024-09-12"
    },
    {
      "source": "Counting",
      "target": "Problem 767",
      "value": 1,
      "timestamp": "2024-09-12"
    },
    {
      "source": "Array",
      "target": "Problem 768",
      "value": 1,
      "timestamp": "2024-09-12"
    },
    {
      "source": "Stack",
      "target": "Problem 768",
      "value": 1,
      "timestamp": "2024-09-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 768",
      "value": 1,
      "timestamp": "2024-09-12"
    },
    {
      "source": "Sorting",
      "target": "Problem 768",
      "value": 1,
      "timestamp": "2024-09-12"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 768",
      "value": 1,
      "timestamp": "2024-09-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 771",
      "value": 1,
      "timestamp": "2024-09-13"
    },
    {
      "source": "String",
      "target": "Problem 771",
      "value": 1,
      "timestamp": "2024-09-13"
    },
    {
      "source": "Array",
      "target": "Problem 775",
      "value": 1,
      "timestamp": "2024-09-14"
    },
    {
      "source": "Math",
      "target": "Problem 775",
      "value": 1,
      "timestamp": "2024-09-14"
    },
    {
      "source": "Hash Table",
      "target": "Problem 770",
      "value": 1,
      "timestamp": "2024-09-14"
    },
    {
      "source": "Math",
      "target": "Problem 770",
      "value": 1,
      "timestamp": "2024-09-14"
    },
    {
      "source": "String",
      "target": "Problem 770",
      "value": 1,
      "timestamp": "2024-09-14"
    },
    {
      "source": "Stack",
      "target": "Problem 770",
      "value": 1,
      "timestamp": "2024-09-14"
    },
    {
      "source": "Recursion",
      "target": "Problem 770",
      "value": 1,
      "timestamp": "2024-09-14"
    },
    {
      "source": "Array",
      "target": "Problem 773",
      "value": 1,
      "timestamp": "2024-09-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 773",
      "value": 1,
      "timestamp": "2024-09-15"
    },
    {
      "source": "Backtracking",
      "target": "Problem 773",
      "value": 1,
      "timestamp": "2024-09-15"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 773",
      "value": 1,
      "timestamp": "2024-09-15"
    },
    {
      "source": "Memoization",
      "target": "Problem 773",
      "value": 1,
      "timestamp": "2024-09-15"
    },
    {
      "source": "Matrix",
      "target": "Problem 773",
      "value": 1,
      "timestamp": "2024-09-15"
    },
    {
      "source": "Array",
      "target": "Problem 769",
      "value": 1,
      "timestamp": "2024-09-15"
    },
    {
      "source": "Stack",
      "target": "Problem 769",
      "value": 1,
      "timestamp": "2024-09-15"
    },
    {
      "source": "Greedy",
      "target": "Problem 769",
      "value": 1,
      "timestamp": "2024-09-15"
    },
    {
      "source": "Sorting",
      "target": "Problem 769",
      "value": 1,
      "timestamp": "2024-09-15"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 769",
      "value": 1,
      "timestamp": "2024-09-15"
    },
    {
      "source": "Math",
      "target": "Problem 780",
      "value": 1,
      "timestamp": "2024-09-15"
    },
    {
      "source": "String",
      "target": "Problem 784",
      "value": 1,
      "timestamp": "2024-09-16"
    },
    {
      "source": "Backtracking",
      "target": "Problem 784",
      "value": 1,
      "timestamp": "2024-09-16"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 784",
      "value": 1,
      "timestamp": "2024-09-16"
    },
    {
      "source": "Array",
      "target": "Problem 781",
      "value": 1,
      "timestamp": "2024-09-16"
    },
    {
      "source": "Hash Table",
      "target": "Problem 781",
      "value": 1,
      "timestamp": "2024-09-16"
    },
    {
      "source": "Math",
      "target": "Problem 781",
      "value": 1,
      "timestamp": "2024-09-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 781",
      "value": 1,
      "timestamp": "2024-09-16"
    },
    {
      "source": "Array",
      "target": "Problem 782",
      "value": 1,
      "timestamp": "2024-09-16"
    },
    {
      "source": "Math",
      "target": "Problem 782",
      "value": 1,
      "timestamp": "2024-09-16"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 782",
      "value": 1,
      "timestamp": "2024-09-16"
    },
    {
      "source": "Matrix",
      "target": "Problem 782",
      "value": 1,
      "timestamp": "2024-09-16"
    },
    {
      "source": "Math",
      "target": "Problem 779",
      "value": 1,
      "timestamp": "2024-09-17"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 779",
      "value": 1,
      "timestamp": "2024-09-17"
    },
    {
      "source": "Recursion",
      "target": "Problem 779",
      "value": 1,
      "timestamp": "2024-09-17"
    },
    {
      "source": "Array",
      "target": "Problem 778",
      "value": 1,
      "timestamp": "2024-09-17"
    },
    {
      "source": "Binary Search",
      "target": "Problem 778",
      "value": 1,
      "timestamp": "2024-09-17"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 778",
      "value": 1,
      "timestamp": "2024-09-17"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 778",
      "value": 1,
      "timestamp": "2024-09-17"
    },
    {
      "source": "Union Find",
      "target": "Problem 778",
      "value": 1,
      "timestamp": "2024-09-17"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 778",
      "value": 1,
      "timestamp": "2024-09-17"
    },
    {
      "source": "Matrix",
      "target": "Problem 778",
      "value": 1,
      "timestamp": "2024-09-17"
    },
    {
      "source": "Tree",
      "target": "Problem 783",
      "value": 1,
      "timestamp": "2024-09-17"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 783",
      "value": 1,
      "timestamp": "2024-09-17"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 783",
      "value": 1,
      "timestamp": "2024-09-17"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 783",
      "value": 1,
      "timestamp": "2024-09-17"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 783",
      "value": 1,
      "timestamp": "2024-09-17"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 777",
      "value": 1,
      "timestamp": "2024-09-18"
    },
    {
      "source": "String",
      "target": "Problem 777",
      "value": 1,
      "timestamp": "2024-09-18"
    },
    {
      "source": "Array",
      "target": "Problem 786",
      "value": 1,
      "timestamp": "2024-09-18"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 786",
      "value": 1,
      "timestamp": "2024-09-18"
    },
    {
      "source": "Binary Search",
      "target": "Problem 786",
      "value": 1,
      "timestamp": "2024-09-18"
    },
    {
      "source": "Sorting",
      "target": "Problem 786",
      "value": 1,
      "timestamp": "2024-09-18"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 786",
      "value": 1,
      "timestamp": "2024-09-18"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 790",
      "value": 1,
      "timestamp": "2024-09-18"
    },
    {
      "source": "Array",
      "target": "Problem 792",
      "value": 1,
      "timestamp": "2024-09-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 792",
      "value": 1,
      "timestamp": "2024-09-19"
    },
    {
      "source": "String",
      "target": "Problem 792",
      "value": 1,
      "timestamp": "2024-09-19"
    },
    {
      "source": "Binary Search",
      "target": "Problem 792",
      "value": 1,
      "timestamp": "2024-09-19"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 792",
      "value": 1,
      "timestamp": "2024-09-19"
    },
    {
      "source": "Trie",
      "target": "Problem 792",
      "value": 1,
      "timestamp": "2024-09-19"
    },
    {
      "source": "Sorting",
      "target": "Problem 792",
      "value": 1,
      "timestamp": "2024-09-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 791",
      "value": 1,
      "timestamp": "2024-09-19"
    },
    {
      "source": "String",
      "target": "Problem 791",
      "value": 1,
      "timestamp": "2024-09-19"
    },
    {
      "source": "Sorting",
      "target": "Problem 791",
      "value": 1,
      "timestamp": "2024-09-19"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 785",
      "value": 1,
      "timestamp": "2024-09-19"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 785",
      "value": 1,
      "timestamp": "2024-09-19"
    },
    {
      "source": "Union Find",
      "target": "Problem 785",
      "value": 1,
      "timestamp": "2024-09-19"
    },
    {
      "source": "Graph",
      "target": "Problem 785",
      "value": 1,
      "timestamp": "2024-09-19"
    },
    {
      "source": "Math",
      "target": "Problem 788",
      "value": 1,
      "timestamp": "2024-09-20"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 788",
      "value": 1,
      "timestamp": "2024-09-20"
    },
    {
      "source": "Array",
      "target": "Problem 795",
      "value": 1,
      "timestamp": "2024-09-20"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 795",
      "value": 1,
      "timestamp": "2024-09-20"
    },
    {
      "source": "Math",
      "target": "Problem 793",
      "value": 1,
      "timestamp": "2024-09-20"
    },
    {
      "source": "Binary Search",
      "target": "Problem 793",
      "value": 1,
      "timestamp": "2024-09-20"
    },
    {
      "source": "Array",
      "target": "Problem 794",
      "value": 1,
      "timestamp": "2024-09-21"
    },
    {
      "source": "Matrix",
      "target": "Problem 794",
      "value": 1,
      "timestamp": "2024-09-21"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 787",
      "value": 1,
      "timestamp": "2024-09-21"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 787",
      "value": 1,
      "timestamp": "2024-09-21"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 787",
      "value": 1,
      "timestamp": "2024-09-21"
    },
    {
      "source": "Graph",
      "target": "Problem 787",
      "value": 1,
      "timestamp": "2024-09-21"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 787",
      "value": 1,
      "timestamp": "2024-09-21"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 787",
      "value": 1,
      "timestamp": "2024-09-21"
    },
    {
      "source": "Array",
      "target": "Problem 798",
      "value": 1,
      "timestamp": "2024-09-21"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 798",
      "value": 1,
      "timestamp": "2024-09-21"
    },
    {
      "source": "Backtracking",
      "target": "Problem 797",
      "value": 1,
      "timestamp": "2024-09-22"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 797",
      "value": 1,
      "timestamp": "2024-09-22"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 797",
      "value": 1,
      "timestamp": "2024-09-22"
    },
    {
      "source": "Graph",
      "target": "Problem 797",
      "value": 1,
      "timestamp": "2024-09-22"
    },
    {
      "source": "String",
      "target": "Problem 796",
      "value": 1,
      "timestamp": "2024-09-22"
    },
    {
      "source": "String Matching",
      "target": "Problem 796",
      "value": 1,
      "timestamp": "2024-09-22"
    },
    {
      "source": "Array",
      "target": "Problem 801",
      "value": 1,
      "timestamp": "2024-09-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 801",
      "value": 1,
      "timestamp": "2024-09-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 799",
      "value": 1,
      "timestamp": "2024-09-23"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 802",
      "value": 1,
      "timestamp": "2024-09-23"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 802",
      "value": 1,
      "timestamp": "2024-09-23"
    },
    {
      "source": "Graph",
      "target": "Problem 802",
      "value": 1,
      "timestamp": "2024-09-23"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 802",
      "value": 1,
      "timestamp": "2024-09-23"
    },
    {
      "source": "Array",
      "target": "Problem 804",
      "value": 1,
      "timestamp": "2024-09-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 804",
      "value": 1,
      "timestamp": "2024-09-24"
    },
    {
      "source": "String",
      "target": "Problem 804",
      "value": 1,
      "timestamp": "2024-09-24"
    },
    {
      "source": "Array",
      "target": "Problem 803",
      "value": 1,
      "timestamp": "2024-09-24"
    },
    {
      "source": "Union Find",
      "target": "Problem 803",
      "value": 1,
      "timestamp": "2024-09-24"
    },
    {
      "source": "Matrix",
      "target": "Problem 803",
      "value": 1,
      "timestamp": "2024-09-24"
    },
    {
      "source": "Array",
      "target": "Problem 805",
      "value": 1,
      "timestamp": "2024-09-24"
    },
    {
      "source": "Math",
      "target": "Problem 805",
      "value": 1,
      "timestamp": "2024-09-24"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 805",
      "value": 1,
      "timestamp": "2024-09-24"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 805",
      "value": 1,
      "timestamp": "2024-09-24"
    },
    {
      "source": "Bitmask",
      "target": "Problem 805",
      "value": 1,
      "timestamp": "2024-09-24"
    },
    {
      "source": "Array",
      "target": "Problem 789",
      "value": 1,
      "timestamp": "2024-09-25"
    },
    {
      "source": "Math",
      "target": "Problem 789",
      "value": 1,
      "timestamp": "2024-09-25"
    },
    {
      "source": "Array",
      "target": "Problem 809",
      "value": 1,
      "timestamp": "2024-09-25"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 809",
      "value": 1,
      "timestamp": "2024-09-25"
    },
    {
      "source": "String",
      "target": "Problem 809",
      "value": 1,
      "timestamp": "2024-09-25"
    },
    {
      "source": "Array",
      "target": "Problem 806",
      "value": 1,
      "timestamp": "2024-09-25"
    },
    {
      "source": "String",
      "target": "Problem 806",
      "value": 1,
      "timestamp": "2024-09-25"
    },
    {
      "source": "Math",
      "target": "Problem 808",
      "value": 1,
      "timestamp": "2024-09-26"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 808",
      "value": 1,
      "timestamp": "2024-09-26"
    },
    {
      "source": "Probability and Statistics",
      "target": "Problem 808",
      "value": 1,
      "timestamp": "2024-09-26"
    },
    {
      "source": "Array",
      "target": "Problem 807",
      "value": 1,
      "timestamp": "2024-09-26"
    },
    {
      "source": "Greedy",
      "target": "Problem 807",
      "value": 1,
      "timestamp": "2024-09-26"
    },
    {
      "source": "Matrix",
      "target": "Problem 807",
      "value": 1,
      "timestamp": "2024-09-26"
    },
    {
      "source": "Array",
      "target": "Problem 811",
      "value": 1,
      "timestamp": "2024-09-26"
    },
    {
      "source": "Hash Table",
      "target": "Problem 811",
      "value": 1,
      "timestamp": "2024-09-26"
    },
    {
      "source": "String",
      "target": "Problem 811",
      "value": 1,
      "timestamp": "2024-09-26"
    },
    {
      "source": "Counting",
      "target": "Problem 811",
      "value": 1,
      "timestamp": "2024-09-26"
    },
    {
      "source": "Array",
      "target": "Problem 810",
      "value": 1,
      "timestamp": "2024-09-27"
    },
    {
      "source": "Math",
      "target": "Problem 810",
      "value": 1,
      "timestamp": "2024-09-27"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 810",
      "value": 1,
      "timestamp": "2024-09-27"
    },
    {
      "source": "Brainteaser",
      "target": "Problem 810",
      "value": 1,
      "timestamp": "2024-09-27"
    },
    {
      "source": "Game Theory",
      "target": "Problem 810",
      "value": 1,
      "timestamp": "2024-09-27"
    },
    {
      "source": "Array",
      "target": "Problem 812",
      "value": 1,
      "timestamp": "2024-09-27"
    },
    {
      "source": "Math",
      "target": "Problem 812",
      "value": 1,
      "timestamp": "2024-09-27"
    },
    {
      "source": "Geometry",
      "target": "Problem 812",
      "value": 1,
      "timestamp": "2024-09-27"
    },
    {
      "source": "Array",
      "target": "Problem 815",
      "value": 1,
      "timestamp": "2024-09-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 815",
      "value": 1,
      "timestamp": "2024-09-27"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 815",
      "value": 1,
      "timestamp": "2024-09-27"
    },
    {
      "source": "Array",
      "target": "Problem 817",
      "value": 1,
      "timestamp": "2024-09-28"
    },
    {
      "source": "Hash Table",
      "target": "Problem 817",
      "value": 1,
      "timestamp": "2024-09-28"
    },
    {
      "source": "Linked List",
      "target": "Problem 817",
      "value": 1,
      "timestamp": "2024-09-28"
    },
    {
      "source": "Array",
      "target": "Problem 813",
      "value": 1,
      "timestamp": "2024-09-28"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 813",
      "value": 1,
      "timestamp": "2024-09-28"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 813",
      "value": 1,
      "timestamp": "2024-09-28"
    },
    {
      "source": "Tree",
      "target": "Problem 814",
      "value": 1,
      "timestamp": "2024-09-28"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 814",
      "value": 1,
      "timestamp": "2024-09-28"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 814",
      "value": 1,
      "timestamp": "2024-09-28"
    },
    {
      "source": "String",
      "target": "Problem 816",
      "value": 1,
      "timestamp": "2024-09-29"
    },
    {
      "source": "Backtracking",
      "target": "Problem 816",
      "value": 1,
      "timestamp": "2024-09-29"
    },
    {
      "source": "Enumeration",
      "target": "Problem 816",
      "value": 1,
      "timestamp": "2024-09-29"
    },
    {
      "source": "Array",
      "target": "Problem 819",
      "value": 1,
      "timestamp": "2024-09-29"
    },
    {
      "source": "Hash Table",
      "target": "Problem 819",
      "value": 1,
      "timestamp": "2024-09-29"
    },
    {
      "source": "String",
      "target": "Problem 819",
      "value": 1,
      "timestamp": "2024-09-29"
    },
    {
      "source": "Counting",
      "target": "Problem 819",
      "value": 1,
      "timestamp": "2024-09-29"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 818",
      "value": 1,
      "timestamp": "2024-09-29"
    },
    {
      "source": "Array",
      "target": "Problem 820",
      "value": 1,
      "timestamp": "2024-09-30"
    },
    {
      "source": "Hash Table",
      "target": "Problem 820",
      "value": 1,
      "timestamp": "2024-09-30"
    },
    {
      "source": "String",
      "target": "Problem 820",
      "value": 1,
      "timestamp": "2024-09-30"
    },
    {
      "source": "Trie",
      "target": "Problem 820",
      "value": 1,
      "timestamp": "2024-09-30"
    },
    {
      "source": "Array",
      "target": "Problem 822",
      "value": 1,
      "timestamp": "2024-09-30"
    },
    {
      "source": "Hash Table",
      "target": "Problem 822",
      "value": 1,
      "timestamp": "2024-09-30"
    },
    {
      "source": "String",
      "target": "Problem 824",
      "value": 1,
      "timestamp": "2024-09-30"
    },
    {
      "source": "Array",
      "target": "Problem 821",
      "value": 1,
      "timestamp": "2024-10-01"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 821",
      "value": 1,
      "timestamp": "2024-10-01"
    },
    {
      "source": "String",
      "target": "Problem 821",
      "value": 1,
      "timestamp": "2024-10-01"
    },
    {
      "source": "Array",
      "target": "Problem 825",
      "value": 1,
      "timestamp": "2024-10-01"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 825",
      "value": 1,
      "timestamp": "2024-10-01"
    },
    {
      "source": "Binary Search",
      "target": "Problem 825",
      "value": 1,
      "timestamp": "2024-10-01"
    },
    {
      "source": "Sorting",
      "target": "Problem 825",
      "value": 1,
      "timestamp": "2024-10-01"
    },
    {
      "source": "Array",
      "target": "Problem 823",
      "value": 1,
      "timestamp": "2024-10-01"
    },
    {
      "source": "Hash Table",
      "target": "Problem 823",
      "value": 1,
      "timestamp": "2024-10-01"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 823",
      "value": 1,
      "timestamp": "2024-10-01"
    },
    {
      "source": "Sorting",
      "target": "Problem 823",
      "value": 1,
      "timestamp": "2024-10-01"
    },
    {
      "source": "Array",
      "target": "Problem 826",
      "value": 1,
      "timestamp": "2024-10-02"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 826",
      "value": 1,
      "timestamp": "2024-10-02"
    },
    {
      "source": "Binary Search",
      "target": "Problem 826",
      "value": 1,
      "timestamp": "2024-10-02"
    },
    {
      "source": "Greedy",
      "target": "Problem 826",
      "value": 1,
      "timestamp": "2024-10-02"
    },
    {
      "source": "Sorting",
      "target": "Problem 826",
      "value": 1,
      "timestamp": "2024-10-02"
    },
    {
      "source": "Array",
      "target": "Problem 827",
      "value": 1,
      "timestamp": "2024-10-02"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 827",
      "value": 1,
      "timestamp": "2024-10-02"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 827",
      "value": 1,
      "timestamp": "2024-10-02"
    },
    {
      "source": "Union Find",
      "target": "Problem 827",
      "value": 1,
      "timestamp": "2024-10-02"
    },
    {
      "source": "Matrix",
      "target": "Problem 827",
      "value": 1,
      "timestamp": "2024-10-02"
    },
    {
      "source": "Hash Table",
      "target": "Problem 828",
      "value": 1,
      "timestamp": "2024-10-02"
    },
    {
      "source": "String",
      "target": "Problem 828",
      "value": 1,
      "timestamp": "2024-10-02"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 828",
      "value": 1,
      "timestamp": "2024-10-02"
    },
    {
      "source": "Math",
      "target": "Problem 829",
      "value": 1,
      "timestamp": "2024-10-03"
    },
    {
      "source": "Enumeration",
      "target": "Problem 829",
      "value": 1,
      "timestamp": "2024-10-03"
    },
    {
      "source": "String",
      "target": "Problem 831",
      "value": 1,
      "timestamp": "2024-10-03"
    },
    {
      "source": "Array",
      "target": "Problem 833",
      "value": 1,
      "timestamp": "2024-10-03"
    },
    {
      "source": "Hash Table",
      "target": "Problem 833",
      "value": 1,
      "timestamp": "2024-10-03"
    },
    {
      "source": "String",
      "target": "Problem 833",
      "value": 1,
      "timestamp": "2024-10-03"
    },
    {
      "source": "Sorting",
      "target": "Problem 833",
      "value": 1,
      "timestamp": "2024-10-03"
    },
    {
      "source": "Array",
      "target": "Problem 832",
      "value": 1,
      "timestamp": "2024-10-04"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 832",
      "value": 1,
      "timestamp": "2024-10-04"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 832",
      "value": 1,
      "timestamp": "2024-10-04"
    },
    {
      "source": "Matrix",
      "target": "Problem 832",
      "value": 1,
      "timestamp": "2024-10-04"
    },
    {
      "source": "Simulation",
      "target": "Problem 832",
      "value": 1,
      "timestamp": "2024-10-04"
    },
    {
      "source": "String",
      "target": "Problem 830",
      "value": 1,
      "timestamp": "2024-10-04"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 834",
      "value": 1,
      "timestamp": "2024-10-04"
    },
    {
      "source": "Tree",
      "target": "Problem 834",
      "value": 1,
      "timestamp": "2024-10-04"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 834",
      "value": 1,
      "timestamp": "2024-10-04"
    },
    {
      "source": "Graph",
      "target": "Problem 834",
      "value": 1,
      "timestamp": "2024-10-04"
    },
    {
      "source": "Array",
      "target": "Problem 835",
      "value": 1,
      "timestamp": "2024-10-05"
    },
    {
      "source": "Matrix",
      "target": "Problem 835",
      "value": 1,
      "timestamp": "2024-10-05"
    },
    {
      "source": "Array",
      "target": "Problem 840",
      "value": 1,
      "timestamp": "2024-10-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 840",
      "value": 1,
      "timestamp": "2024-10-05"
    },
    {
      "source": "Math",
      "target": "Problem 840",
      "value": 1,
      "timestamp": "2024-10-05"
    },
    {
      "source": "Matrix",
      "target": "Problem 840",
      "value": 1,
      "timestamp": "2024-10-05"
    },
    {
      "source": "Math",
      "target": "Problem 836",
      "value": 1,
      "timestamp": "2024-10-05"
    },
    {
      "source": "Geometry",
      "target": "Problem 836",
      "value": 1,
      "timestamp": "2024-10-05"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 841",
      "value": 1,
      "timestamp": "2024-10-06"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 841",
      "value": 1,
      "timestamp": "2024-10-06"
    },
    {
      "source": "Graph",
      "target": "Problem 841",
      "value": 1,
      "timestamp": "2024-10-06"
    },
    {
      "source": "Array",
      "target": "Problem 843",
      "value": 1,
      "timestamp": "2024-10-06"
    },
    {
      "source": "Math",
      "target": "Problem 843",
      "value": 1,
      "timestamp": "2024-10-06"
    },
    {
      "source": "String",
      "target": "Problem 843",
      "value": 1,
      "timestamp": "2024-10-06"
    },
    {
      "source": "Interactive",
      "target": "Problem 843",
      "value": 1,
      "timestamp": "2024-10-06"
    },
    {
      "source": "Game Theory",
      "target": "Problem 843",
      "value": 1,
      "timestamp": "2024-10-06"
    },
    {
      "source": "String",
      "target": "Problem 842",
      "value": 1,
      "timestamp": "2024-10-06"
    },
    {
      "source": "Backtracking",
      "target": "Problem 842",
      "value": 1,
      "timestamp": "2024-10-06"
    },
    {
      "source": "Array",
      "target": "Problem 839",
      "value": 1,
      "timestamp": "2024-10-07"
    },
    {
      "source": "Hash Table",
      "target": "Problem 839",
      "value": 1,
      "timestamp": "2024-10-07"
    },
    {
      "source": "String",
      "target": "Problem 839",
      "value": 1,
      "timestamp": "2024-10-07"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 839",
      "value": 1,
      "timestamp": "2024-10-07"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 839",
      "value": 1,
      "timestamp": "2024-10-07"
    },
    {
      "source": "Union Find",
      "target": "Problem 839",
      "value": 1,
      "timestamp": "2024-10-07"
    },
    {
      "source": "Math",
      "target": "Problem 837",
      "value": 1,
      "timestamp": "2024-10-07"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 837",
      "value": 1,
      "timestamp": "2024-10-07"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 837",
      "value": 1,
      "timestamp": "2024-10-07"
    },
    {
      "source": "Probability and Statistics",
      "target": "Problem 837",
      "value": 1,
      "timestamp": "2024-10-07"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 838",
      "value": 1,
      "timestamp": "2024-10-07"
    },
    {
      "source": "String",
      "target": "Problem 838",
      "value": 1,
      "timestamp": "2024-10-07"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 838",
      "value": 1,
      "timestamp": "2024-10-07"
    },
    {
      "source": "Array",
      "target": "Problem 845",
      "value": 1,
      "timestamp": "2024-10-08"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 845",
      "value": 1,
      "timestamp": "2024-10-08"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 845",
      "value": 1,
      "timestamp": "2024-10-08"
    },
    {
      "source": "Enumeration",
      "target": "Problem 845",
      "value": 1,
      "timestamp": "2024-10-08"
    },
    {
      "source": "Array",
      "target": "Problem 849",
      "value": 1,
      "timestamp": "2024-10-08"
    },
    {
      "source": "Array",
      "target": "Problem 848",
      "value": 1,
      "timestamp": "2024-10-08"
    },
    {
      "source": "String",
      "target": "Problem 848",
      "value": 1,
      "timestamp": "2024-10-08"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 848",
      "value": 1,
      "timestamp": "2024-10-08"
    },
    {
      "source": "Array",
      "target": "Problem 850",
      "value": 1,
      "timestamp": "2024-10-09"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 850",
      "value": 1,
      "timestamp": "2024-10-09"
    },
    {
      "source": "Line Sweep",
      "target": "Problem 850",
      "value": 1,
      "timestamp": "2024-10-09"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 850",
      "value": 1,
      "timestamp": "2024-10-09"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 847",
      "value": 1,
      "timestamp": "2024-10-09"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 847",
      "value": 1,
      "timestamp": "2024-10-09"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 847",
      "value": 1,
      "timestamp": "2024-10-09"
    },
    {
      "source": "Graph",
      "target": "Problem 847",
      "value": 1,
      "timestamp": "2024-10-09"
    },
    {
      "source": "Bitmask",
      "target": "Problem 847",
      "value": 1,
      "timestamp": "2024-10-09"
    },
    {
      "source": "Array",
      "target": "Problem 851",
      "value": 1,
      "timestamp": "2024-10-09"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 851",
      "value": 1,
      "timestamp": "2024-10-09"
    },
    {
      "source": "Graph",
      "target": "Problem 851",
      "value": 1,
      "timestamp": "2024-10-09"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 851",
      "value": 1,
      "timestamp": "2024-10-09"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 844",
      "value": 1,
      "timestamp": "2024-10-10"
    },
    {
      "source": "String",
      "target": "Problem 844",
      "value": 1,
      "timestamp": "2024-10-10"
    },
    {
      "source": "Stack",
      "target": "Problem 844",
      "value": 1,
      "timestamp": "2024-10-10"
    },
    {
      "source": "Simulation",
      "target": "Problem 844",
      "value": 1,
      "timestamp": "2024-10-10"
    },
    {
      "source": "Array",
      "target": "Problem 846",
      "value": 1,
      "timestamp": "2024-10-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 846",
      "value": 1,
      "timestamp": "2024-10-10"
    },
    {
      "source": "Greedy",
      "target": "Problem 846",
      "value": 1,
      "timestamp": "2024-10-10"
    },
    {
      "source": "Sorting",
      "target": "Problem 846",
      "value": 1,
      "timestamp": "2024-10-10"
    },
    {
      "source": "Array",
      "target": "Problem 852",
      "value": 1,
      "timestamp": "2024-10-10"
    },
    {
      "source": "Binary Search",
      "target": "Problem 852",
      "value": 1,
      "timestamp": "2024-10-10"
    },
    {
      "source": "String",
      "target": "Problem 854",
      "value": 1,
      "timestamp": "2024-10-11"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 854",
      "value": 1,
      "timestamp": "2024-10-11"
    },
    {
      "source": "String",
      "target": "Problem 856",
      "value": 1,
      "timestamp": "2024-10-11"
    },
    {
      "source": "Stack",
      "target": "Problem 856",
      "value": 1,
      "timestamp": "2024-10-11"
    },
    {
      "source": "Math",
      "target": "Problem 858",
      "value": 1,
      "timestamp": "2024-10-11"
    },
    {
      "source": "Geometry",
      "target": "Problem 858",
      "value": 1,
      "timestamp": "2024-10-11"
    },
    {
      "source": "Number Theory",
      "target": "Problem 858",
      "value": 1,
      "timestamp": "2024-10-11"
    },
    {
      "source": "Array",
      "target": "Problem 857",
      "value": 1,
      "timestamp": "2024-10-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 857",
      "value": 1,
      "timestamp": "2024-10-12"
    },
    {
      "source": "Sorting",
      "target": "Problem 857",
      "value": 1,
      "timestamp": "2024-10-12"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 857",
      "value": 1,
      "timestamp": "2024-10-12"
    },
    {
      "source": "Design",
      "target": "Problem 855",
      "value": 1,
      "timestamp": "2024-10-12"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 855",
      "value": 1,
      "timestamp": "2024-10-12"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 855",
      "value": 1,
      "timestamp": "2024-10-12"
    },
    {
      "source": "Array",
      "target": "Problem 853",
      "value": 1,
      "timestamp": "2024-10-12"
    },
    {
      "source": "Stack",
      "target": "Problem 853",
      "value": 1,
      "timestamp": "2024-10-12"
    },
    {
      "source": "Sorting",
      "target": "Problem 853",
      "value": 1,
      "timestamp": "2024-10-12"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 853",
      "value": 1,
      "timestamp": "2024-10-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 859",
      "value": 1,
      "timestamp": "2024-10-13"
    },
    {
      "source": "String",
      "target": "Problem 859",
      "value": 1,
      "timestamp": "2024-10-13"
    },
    {
      "source": "Array",
      "target": "Problem 860",
      "value": 1,
      "timestamp": "2024-10-13"
    },
    {
      "source": "Greedy",
      "target": "Problem 860",
      "value": 1,
      "timestamp": "2024-10-13"
    },
    {
      "source": "Math",
      "target": "Problem 866",
      "value": 1,
      "timestamp": "2024-10-13"
    },
    {
      "source": "Number Theory",
      "target": "Problem 866",
      "value": 1,
      "timestamp": "2024-10-13"
    },
    {
      "source": "Array",
      "target": "Problem 867",
      "value": 1,
      "timestamp": "2024-10-14"
    },
    {
      "source": "Matrix",
      "target": "Problem 867",
      "value": 1,
      "timestamp": "2024-10-14"
    },
    {
      "source": "Simulation",
      "target": "Problem 867",
      "value": 1,
      "timestamp": "2024-10-14"
    },
    {
      "source": "Array",
      "target": "Problem 864",
      "value": 1,
      "timestamp": "2024-10-14"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 864",
      "value": 1,
      "timestamp": "2024-10-14"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 864",
      "value": 1,
      "timestamp": "2024-10-14"
    },
    {
      "source": "Matrix",
      "target": "Problem 864",
      "value": 1,
      "timestamp": "2024-10-14"
    },
    {
      "source": "Hash Table",
      "target": "Problem 863",
      "value": 1,
      "timestamp": "2024-10-14"
    },
    {
      "source": "Tree",
      "target": "Problem 863",
      "value": 1,
      "timestamp": "2024-10-14"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 863",
      "value": 1,
      "timestamp": "2024-10-14"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 863",
      "value": 1,
      "timestamp": "2024-10-14"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 863",
      "value": 1,
      "timestamp": "2024-10-14"
    },
    {
      "source": "Array",
      "target": "Problem 862",
      "value": 1,
      "timestamp": "2024-10-15"
    },
    {
      "source": "Binary Search",
      "target": "Problem 862",
      "value": 1,
      "timestamp": "2024-10-15"
    },
    {
      "source": "Queue",
      "target": "Problem 862",
      "value": 1,
      "timestamp": "2024-10-15"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 862",
      "value": 1,
      "timestamp": "2024-10-15"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 862",
      "value": 1,
      "timestamp": "2024-10-15"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 862",
      "value": 1,
      "timestamp": "2024-10-15"
    },
    {
      "source": "Monotonic Queue",
      "target": "Problem 862",
      "value": 1,
      "timestamp": "2024-10-15"
    },
    {
      "source": "Array",
      "target": "Problem 861",
      "value": 1,
      "timestamp": "2024-10-15"
    },
    {
      "source": "Greedy",
      "target": "Problem 861",
      "value": 1,
      "timestamp": "2024-10-15"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 861",
      "value": 1,
      "timestamp": "2024-10-15"
    },
    {
      "source": "Matrix",
      "target": "Problem 861",
      "value": 1,
      "timestamp": "2024-10-15"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 868",
      "value": 1,
      "timestamp": "2024-10-15"
    },
    {
      "source": "Hash Table",
      "target": "Problem 869",
      "value": 1,
      "timestamp": "2024-10-16"
    },
    {
      "source": "Math",
      "target": "Problem 869",
      "value": 1,
      "timestamp": "2024-10-16"
    },
    {
      "source": "Sorting",
      "target": "Problem 869",
      "value": 1,
      "timestamp": "2024-10-16"
    },
    {
      "source": "Counting",
      "target": "Problem 869",
      "value": 1,
      "timestamp": "2024-10-16"
    },
    {
      "source": "Enumeration",
      "target": "Problem 869",
      "value": 1,
      "timestamp": "2024-10-16"
    },
    {
      "source": "Array",
      "target": "Problem 870",
      "value": 1,
      "timestamp": "2024-10-16"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 870",
      "value": 1,
      "timestamp": "2024-10-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 870",
      "value": 1,
      "timestamp": "2024-10-16"
    },
    {
      "source": "Sorting",
      "target": "Problem 870",
      "value": 1,
      "timestamp": "2024-10-16"
    },
    {
      "source": "Array",
      "target": "Problem 871",
      "value": 1,
      "timestamp": "2024-10-16"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 871",
      "value": 1,
      "timestamp": "2024-10-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 871",
      "value": 1,
      "timestamp": "2024-10-16"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 871",
      "value": 1,
      "timestamp": "2024-10-16"
    },
    {
      "source": "Tree",
      "target": "Problem 872",
      "value": 1,
      "timestamp": "2024-10-17"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 872",
      "value": 1,
      "timestamp": "2024-10-17"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 872",
      "value": 1,
      "timestamp": "2024-10-17"
    },
    {
      "source": "Array",
      "target": "Problem 873",
      "value": 1,
      "timestamp": "2024-10-17"
    },
    {
      "source": "Hash Table",
      "target": "Problem 873",
      "value": 1,
      "timestamp": "2024-10-17"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 873",
      "value": 1,
      "timestamp": "2024-10-17"
    },
    {
      "source": "Array",
      "target": "Problem 874",
      "value": 1,
      "timestamp": "2024-10-17"
    },
    {
      "source": "Hash Table",
      "target": "Problem 874",
      "value": 1,
      "timestamp": "2024-10-17"
    },
    {
      "source": "Simulation",
      "target": "Problem 874",
      "value": 1,
      "timestamp": "2024-10-17"
    },
    {
      "source": "Array",
      "target": "Problem 875",
      "value": 1,
      "timestamp": "2024-10-18"
    },
    {
      "source": "Binary Search",
      "target": "Problem 875",
      "value": 1,
      "timestamp": "2024-10-18"
    },
    {
      "source": "Hash Table",
      "target": "Problem 865",
      "value": 1,
      "timestamp": "2024-10-18"
    },
    {
      "source": "Tree",
      "target": "Problem 865",
      "value": 1,
      "timestamp": "2024-10-18"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 865",
      "value": 1,
      "timestamp": "2024-10-18"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 865",
      "value": 1,
      "timestamp": "2024-10-18"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 865",
      "value": 1,
      "timestamp": "2024-10-18"
    },
    {
      "source": "Math",
      "target": "Problem 878",
      "value": 1,
      "timestamp": "2024-10-18"
    },
    {
      "source": "Binary Search",
      "target": "Problem 878",
      "value": 1,
      "timestamp": "2024-10-18"
    },
    {
      "source": "Linked List",
      "target": "Problem 876",
      "value": 1,
      "timestamp": "2024-10-19"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 876",
      "value": 1,
      "timestamp": "2024-10-19"
    },
    {
      "source": "Array",
      "target": "Problem 877",
      "value": 1,
      "timestamp": "2024-10-19"
    },
    {
      "source": "Math",
      "target": "Problem 877",
      "value": 1,
      "timestamp": "2024-10-19"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 877",
      "value": 1,
      "timestamp": "2024-10-19"
    },
    {
      "source": "Game Theory",
      "target": "Problem 877",
      "value": 1,
      "timestamp": "2024-10-19"
    },
    {
      "source": "Array",
      "target": "Problem 879",
      "value": 1,
      "timestamp": "2024-10-19"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 879",
      "value": 1,
      "timestamp": "2024-10-19"
    },
    {
      "source": "Array",
      "target": "Problem 881",
      "value": 1,
      "timestamp": "2024-10-20"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 881",
      "value": 1,
      "timestamp": "2024-10-20"
    },
    {
      "source": "Greedy",
      "target": "Problem 881",
      "value": 1,
      "timestamp": "2024-10-20"
    },
    {
      "source": "Sorting",
      "target": "Problem 881",
      "value": 1,
      "timestamp": "2024-10-20"
    },
    {
      "source": "Graph",
      "target": "Problem 882",
      "value": 1,
      "timestamp": "2024-10-20"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 882",
      "value": 1,
      "timestamp": "2024-10-20"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 882",
      "value": 1,
      "timestamp": "2024-10-20"
    },
    {
      "source": "String",
      "target": "Problem 880",
      "value": 1,
      "timestamp": "2024-10-20"
    },
    {
      "source": "Stack",
      "target": "Problem 880",
      "value": 1,
      "timestamp": "2024-10-20"
    },
    {
      "source": "Array",
      "target": "Problem 883",
      "value": 1,
      "timestamp": "2024-10-21"
    },
    {
      "source": "Math",
      "target": "Problem 883",
      "value": 1,
      "timestamp": "2024-10-21"
    },
    {
      "source": "Geometry",
      "target": "Problem 883",
      "value": 1,
      "timestamp": "2024-10-21"
    },
    {
      "source": "Matrix",
      "target": "Problem 883",
      "value": 1,
      "timestamp": "2024-10-21"
    },
    {
      "source": "Array",
      "target": "Problem 885",
      "value": 1,
      "timestamp": "2024-10-21"
    },
    {
      "source": "Matrix",
      "target": "Problem 885",
      "value": 1,
      "timestamp": "2024-10-21"
    },
    {
      "source": "Simulation",
      "target": "Problem 885",
      "value": 1,
      "timestamp": "2024-10-21"
    },
    {
      "source": "Hash Table",
      "target": "Problem 884",
      "value": 1,
      "timestamp": "2024-10-21"
    },
    {
      "source": "String",
      "target": "Problem 884",
      "value": 1,
      "timestamp": "2024-10-21"
    },
    {
      "source": "Counting",
      "target": "Problem 884",
      "value": 1,
      "timestamp": "2024-10-21"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 886",
      "value": 1,
      "timestamp": "2024-10-22"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 886",
      "value": 1,
      "timestamp": "2024-10-22"
    },
    {
      "source": "Union Find",
      "target": "Problem 886",
      "value": 1,
      "timestamp": "2024-10-22"
    },
    {
      "source": "Graph",
      "target": "Problem 886",
      "value": 1,
      "timestamp": "2024-10-22"
    },
    {
      "source": "Math",
      "target": "Problem 887",
      "value": 1,
      "timestamp": "2024-10-22"
    },
    {
      "source": "Binary Search",
      "target": "Problem 887",
      "value": 1,
      "timestamp": "2024-10-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 887",
      "value": 1,
      "timestamp": "2024-10-22"
    },
    {
      "source": "Array",
      "target": "Problem 888",
      "value": 1,
      "timestamp": "2024-10-22"
    },
    {
      "source": "Hash Table",
      "target": "Problem 888",
      "value": 1,
      "timestamp": "2024-10-22"
    },
    {
      "source": "Binary Search",
      "target": "Problem 888",
      "value": 1,
      "timestamp": "2024-10-22"
    },
    {
      "source": "Sorting",
      "target": "Problem 888",
      "value": 1,
      "timestamp": "2024-10-22"
    },
    {
      "source": "Array",
      "target": "Problem 891",
      "value": 1,
      "timestamp": "2024-10-23"
    },
    {
      "source": "Math",
      "target": "Problem 891",
      "value": 1,
      "timestamp": "2024-10-23"
    },
    {
      "source": "Sorting",
      "target": "Problem 891",
      "value": 1,
      "timestamp": "2024-10-23"
    },
    {
      "source": "Array",
      "target": "Problem 890",
      "value": 1,
      "timestamp": "2024-10-23"
    },
    {
      "source": "Hash Table",
      "target": "Problem 890",
      "value": 1,
      "timestamp": "2024-10-23"
    },
    {
      "source": "String",
      "target": "Problem 890",
      "value": 1,
      "timestamp": "2024-10-23"
    },
    {
      "source": "Array",
      "target": "Problem 889",
      "value": 1,
      "timestamp": "2024-10-23"
    },
    {
      "source": "Hash Table",
      "target": "Problem 889",
      "value": 1,
      "timestamp": "2024-10-23"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 889",
      "value": 1,
      "timestamp": "2024-10-23"
    },
    {
      "source": "Tree",
      "target": "Problem 889",
      "value": 1,
      "timestamp": "2024-10-23"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 889",
      "value": 1,
      "timestamp": "2024-10-23"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 894",
      "value": 1,
      "timestamp": "2024-10-24"
    },
    {
      "source": "Tree",
      "target": "Problem 894",
      "value": 1,
      "timestamp": "2024-10-24"
    },
    {
      "source": "Recursion",
      "target": "Problem 894",
      "value": 1,
      "timestamp": "2024-10-24"
    },
    {
      "source": "Memoization",
      "target": "Problem 894",
      "value": 1,
      "timestamp": "2024-10-24"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 894",
      "value": 1,
      "timestamp": "2024-10-24"
    },
    {
      "source": "Array",
      "target": "Problem 896",
      "value": 1,
      "timestamp": "2024-10-24"
    },
    {
      "source": "Array",
      "target": "Problem 893",
      "value": 1,
      "timestamp": "2024-10-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 893",
      "value": 1,
      "timestamp": "2024-10-24"
    },
    {
      "source": "String",
      "target": "Problem 893",
      "value": 1,
      "timestamp": "2024-10-24"
    },
    {
      "source": "Sorting",
      "target": "Problem 893",
      "value": 1,
      "timestamp": "2024-10-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 895",
      "value": 1,
      "timestamp": "2024-10-25"
    },
    {
      "source": "Stack",
      "target": "Problem 895",
      "value": 1,
      "timestamp": "2024-10-25"
    },
    {
      "source": "Design",
      "target": "Problem 895",
      "value": 1,
      "timestamp": "2024-10-25"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 895",
      "value": 1,
      "timestamp": "2024-10-25"
    },
    {
      "source": "Array",
      "target": "Problem 892",
      "value": 1,
      "timestamp": "2024-10-25"
    },
    {
      "source": "Math",
      "target": "Problem 892",
      "value": 1,
      "timestamp": "2024-10-25"
    },
    {
      "source": "Geometry",
      "target": "Problem 892",
      "value": 1,
      "timestamp": "2024-10-25"
    },
    {
      "source": "Matrix",
      "target": "Problem 892",
      "value": 1,
      "timestamp": "2024-10-25"
    },
    {
      "source": "Stack",
      "target": "Problem 897",
      "value": 1,
      "timestamp": "2024-10-25"
    },
    {
      "source": "Tree",
      "target": "Problem 897",
      "value": 1,
      "timestamp": "2024-10-25"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 897",
      "value": 1,
      "timestamp": "2024-10-25"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 897",
      "value": 1,
      "timestamp": "2024-10-25"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 897",
      "value": 1,
      "timestamp": "2024-10-25"
    },
    {
      "source": "Array",
      "target": "Problem 898",
      "value": 1,
      "timestamp": "2024-10-26"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 898",
      "value": 1,
      "timestamp": "2024-10-26"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 898",
      "value": 1,
      "timestamp": "2024-10-26"
    },
    {
      "source": "Math",
      "target": "Problem 899",
      "value": 1,
      "timestamp": "2024-10-26"
    },
    {
      "source": "String",
      "target": "Problem 899",
      "value": 1,
      "timestamp": "2024-10-26"
    },
    {
      "source": "Sorting",
      "target": "Problem 899",
      "value": 1,
      "timestamp": "2024-10-26"
    },
    {
      "source": "Array",
      "target": "Problem 900",
      "value": 1,
      "timestamp": "2024-10-26"
    },
    {
      "source": "Design",
      "target": "Problem 900",
      "value": 1,
      "timestamp": "2024-10-26"
    },
    {
      "source": "Counting",
      "target": "Problem 900",
      "value": 1,
      "timestamp": "2024-10-26"
    },
    {
      "source": "Iterator",
      "target": "Problem 900",
      "value": 1,
      "timestamp": "2024-10-26"
    },
    {
      "source": "Array",
      "target": "Problem 904",
      "value": 1,
      "timestamp": "2024-10-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 904",
      "value": 1,
      "timestamp": "2024-10-27"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 904",
      "value": 1,
      "timestamp": "2024-10-27"
    },
    {
      "source": "Stack",
      "target": "Problem 901",
      "value": 1,
      "timestamp": "2024-10-27"
    },
    {
      "source": "Design",
      "target": "Problem 901",
      "value": 1,
      "timestamp": "2024-10-27"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 901",
      "value": 1,
      "timestamp": "2024-10-27"
    },
    {
      "source": "Data Stream",
      "target": "Problem 901",
      "value": 1,
      "timestamp": "2024-10-27"
    },
    {
      "source": "Array",
      "target": "Problem 902",
      "value": 1,
      "timestamp": "2024-10-27"
    },
    {
      "source": "Math",
      "target": "Problem 902",
      "value": 1,
      "timestamp": "2024-10-27"
    },
    {
      "source": "String",
      "target": "Problem 902",
      "value": 1,
      "timestamp": "2024-10-27"
    },
    {
      "source": "Binary Search",
      "target": "Problem 902",
      "value": 1,
      "timestamp": "2024-10-27"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 902",
      "value": 1,
      "timestamp": "2024-10-27"
    },
    {
      "source": "String",
      "target": "Problem 903",
      "value": 1,
      "timestamp": "2024-10-28"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 903",
      "value": 1,
      "timestamp": "2024-10-28"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 903",
      "value": 1,
      "timestamp": "2024-10-28"
    },
    {
      "source": "Array",
      "target": "Problem 905",
      "value": 1,
      "timestamp": "2024-10-28"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 905",
      "value": 1,
      "timestamp": "2024-10-28"
    },
    {
      "source": "Sorting",
      "target": "Problem 905",
      "value": 1,
      "timestamp": "2024-10-28"
    },
    {
      "source": "Math",
      "target": "Problem 906",
      "value": 1,
      "timestamp": "2024-10-28"
    },
    {
      "source": "Enumeration",
      "target": "Problem 906",
      "value": 1,
      "timestamp": "2024-10-28"
    },
    {
      "source": "Array",
      "target": "Problem 907",
      "value": 1,
      "timestamp": "2024-10-29"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 907",
      "value": 1,
      "timestamp": "2024-10-29"
    },
    {
      "source": "Stack",
      "target": "Problem 907",
      "value": 1,
      "timestamp": "2024-10-29"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 907",
      "value": 1,
      "timestamp": "2024-10-29"
    },
    {
      "source": "Array",
      "target": "Problem 910",
      "value": 1,
      "timestamp": "2024-10-29"
    },
    {
      "source": "Math",
      "target": "Problem 910",
      "value": 1,
      "timestamp": "2024-10-29"
    },
    {
      "source": "Greedy",
      "target": "Problem 910",
      "value": 1,
      "timestamp": "2024-10-29"
    },
    {
      "source": "Sorting",
      "target": "Problem 910",
      "value": 1,
      "timestamp": "2024-10-29"
    },
    {
      "source": "Array",
      "target": "Problem 911",
      "value": 1,
      "timestamp": "2024-10-29"
    },
    {
      "source": "Hash Table",
      "target": "Problem 911",
      "value": 1,
      "timestamp": "2024-10-29"
    },
    {
      "source": "Binary Search",
      "target": "Problem 911",
      "value": 1,
      "timestamp": "2024-10-29"
    },
    {
      "source": "Design",
      "target": "Problem 911",
      "value": 1,
      "timestamp": "2024-10-29"
    },
    {
      "source": "Array",
      "target": "Problem 908",
      "value": 1,
      "timestamp": "2024-10-30"
    },
    {
      "source": "Math",
      "target": "Problem 908",
      "value": 1,
      "timestamp": "2024-10-30"
    },
    {
      "source": "Array",
      "target": "Problem 912",
      "value": 1,
      "timestamp": "2024-10-30"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 912",
      "value": 1,
      "timestamp": "2024-10-30"
    },
    {
      "source": "Sorting",
      "target": "Problem 912",
      "value": 1,
      "timestamp": "2024-10-30"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 912",
      "value": 1,
      "timestamp": "2024-10-30"
    },
    {
      "source": "Merge Sort",
      "target": "Problem 912",
      "value": 1,
      "timestamp": "2024-10-30"
    },
    {
      "source": "Bucket Sort",
      "target": "Problem 912",
      "value": 1,
      "timestamp": "2024-10-30"
    },
    {
      "source": "Radix Sort",
      "target": "Problem 912",
      "value": 1,
      "timestamp": "2024-10-30"
    },
    {
      "source": "Counting Sort",
      "target": "Problem 912",
      "value": 1,
      "timestamp": "2024-10-30"
    },
    {
      "source": "Array",
      "target": "Problem 909",
      "value": 1,
      "timestamp": "2024-10-30"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 909",
      "value": 1,
      "timestamp": "2024-10-30"
    },
    {
      "source": "Matrix",
      "target": "Problem 909",
      "value": 1,
      "timestamp": "2024-10-30"
    },
    {
      "source": "Math",
      "target": "Problem 913",
      "value": 1,
      "timestamp": "2024-10-31"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 913",
      "value": 1,
      "timestamp": "2024-10-31"
    },
    {
      "source": "Graph",
      "target": "Problem 913",
      "value": 1,
      "timestamp": "2024-10-31"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 913",
      "value": 1,
      "timestamp": "2024-10-31"
    },
    {
      "source": "Memoization",
      "target": "Problem 913",
      "value": 1,
      "timestamp": "2024-10-31"
    },
    {
      "source": "Game Theory",
      "target": "Problem 913",
      "value": 1,
      "timestamp": "2024-10-31"
    },
    {
      "source": "Array",
      "target": "Problem 914",
      "value": 1,
      "timestamp": "2024-10-31"
    },
    {
      "source": "Hash Table",
      "target": "Problem 914",
      "value": 1,
      "timestamp": "2024-10-31"
    },
    {
      "source": "Math",
      "target": "Problem 914",
      "value": 1,
      "timestamp": "2024-10-31"
    },
    {
      "source": "Counting",
      "target": "Problem 914",
      "value": 1,
      "timestamp": "2024-10-31"
    },
    {
      "source": "Number Theory",
      "target": "Problem 914",
      "value": 1,
      "timestamp": "2024-10-31"
    },
    {
      "source": "Array",
      "target": "Problem 915",
      "value": 1,
      "timestamp": "2024-10-31"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 917",
      "value": 1,
      "timestamp": "2024-11-01"
    },
    {
      "source": "String",
      "target": "Problem 917",
      "value": 1,
      "timestamp": "2024-11-01"
    },
    {
      "source": "Array",
      "target": "Problem 916",
      "value": 1,
      "timestamp": "2024-11-01"
    },
    {
      "source": "Hash Table",
      "target": "Problem 916",
      "value": 1,
      "timestamp": "2024-11-01"
    },
    {
      "source": "String",
      "target": "Problem 916",
      "value": 1,
      "timestamp": "2024-11-01"
    },
    {
      "source": "Tree",
      "target": "Problem 919",
      "value": 1,
      "timestamp": "2024-11-01"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 919",
      "value": 1,
      "timestamp": "2024-11-01"
    },
    {
      "source": "Design",
      "target": "Problem 919",
      "value": 1,
      "timestamp": "2024-11-01"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 919",
      "value": 1,
      "timestamp": "2024-11-01"
    },
    {
      "source": "Math",
      "target": "Problem 920",
      "value": 1,
      "timestamp": "2024-11-02"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 920",
      "value": 1,
      "timestamp": "2024-11-02"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 920",
      "value": 1,
      "timestamp": "2024-11-02"
    },
    {
      "source": "String",
      "target": "Problem 921",
      "value": 1,
      "timestamp": "2024-11-02"
    },
    {
      "source": "Stack",
      "target": "Problem 921",
      "value": 1,
      "timestamp": "2024-11-02"
    },
    {
      "source": "Greedy",
      "target": "Problem 921",
      "value": 1,
      "timestamp": "2024-11-02"
    },
    {
      "source": "Array",
      "target": "Problem 922",
      "value": 1,
      "timestamp": "2024-11-02"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 922",
      "value": 1,
      "timestamp": "2024-11-02"
    },
    {
      "source": "Sorting",
      "target": "Problem 922",
      "value": 1,
      "timestamp": "2024-11-02"
    },
    {
      "source": "Array",
      "target": "Problem 918",
      "value": 1,
      "timestamp": "2024-11-03"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 918",
      "value": 1,
      "timestamp": "2024-11-03"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 918",
      "value": 1,
      "timestamp": "2024-11-03"
    },
    {
      "source": "Queue",
      "target": "Problem 918",
      "value": 1,
      "timestamp": "2024-11-03"
    },
    {
      "source": "Monotonic Queue",
      "target": "Problem 918",
      "value": 1,
      "timestamp": "2024-11-03"
    },
    {
      "source": "Array",
      "target": "Problem 927",
      "value": 1,
      "timestamp": "2024-11-03"
    },
    {
      "source": "Math",
      "target": "Problem 927",
      "value": 1,
      "timestamp": "2024-11-03"
    },
    {
      "source": "String",
      "target": "Problem 926",
      "value": 1,
      "timestamp": "2024-11-03"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 926",
      "value": 1,
      "timestamp": "2024-11-03"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 925",
      "value": 1,
      "timestamp": "2024-11-04"
    },
    {
      "source": "String",
      "target": "Problem 925",
      "value": 1,
      "timestamp": "2024-11-04"
    },
    {
      "source": "Array",
      "target": "Problem 924",
      "value": 1,
      "timestamp": "2024-11-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 924",
      "value": 1,
      "timestamp": "2024-11-04"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 924",
      "value": 1,
      "timestamp": "2024-11-04"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 924",
      "value": 1,
      "timestamp": "2024-11-04"
    },
    {
      "source": "Union Find",
      "target": "Problem 924",
      "value": 1,
      "timestamp": "2024-11-04"
    },
    {
      "source": "Graph",
      "target": "Problem 924",
      "value": 1,
      "timestamp": "2024-11-04"
    },
    {
      "source": "Array",
      "target": "Problem 923",
      "value": 1,
      "timestamp": "2024-11-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 923",
      "value": 1,
      "timestamp": "2024-11-04"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 923",
      "value": 1,
      "timestamp": "2024-11-04"
    },
    {
      "source": "Sorting",
      "target": "Problem 923",
      "value": 1,
      "timestamp": "2024-11-04"
    },
    {
      "source": "Counting",
      "target": "Problem 923",
      "value": 1,
      "timestamp": "2024-11-04"
    },
    {
      "source": "Array",
      "target": "Problem 928",
      "value": 1,
      "timestamp": "2024-11-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 928",
      "value": 1,
      "timestamp": "2024-11-05"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 928",
      "value": 1,
      "timestamp": "2024-11-05"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 928",
      "value": 1,
      "timestamp": "2024-11-05"
    },
    {
      "source": "Union Find",
      "target": "Problem 928",
      "value": 1,
      "timestamp": "2024-11-05"
    },
    {
      "source": "Graph",
      "target": "Problem 928",
      "value": 1,
      "timestamp": "2024-11-05"
    },
    {
      "source": "Array",
      "target": "Problem 929",
      "value": 1,
      "timestamp": "2024-11-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 929",
      "value": 1,
      "timestamp": "2024-11-05"
    },
    {
      "source": "String",
      "target": "Problem 929",
      "value": 1,
      "timestamp": "2024-11-05"
    },
    {
      "source": "Array",
      "target": "Problem 930",
      "value": 1,
      "timestamp": "2024-11-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 930",
      "value": 1,
      "timestamp": "2024-11-05"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 930",
      "value": 1,
      "timestamp": "2024-11-05"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 930",
      "value": 1,
      "timestamp": "2024-11-05"
    },
    {
      "source": "Array",
      "target": "Problem 931",
      "value": 1,
      "timestamp": "2024-11-06"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 931",
      "value": 1,
      "timestamp": "2024-11-06"
    },
    {
      "source": "Matrix",
      "target": "Problem 931",
      "value": 1,
      "timestamp": "2024-11-06"
    },
    {
      "source": "Design",
      "target": "Problem 933",
      "value": 1,
      "timestamp": "2024-11-06"
    },
    {
      "source": "Queue",
      "target": "Problem 933",
      "value": 1,
      "timestamp": "2024-11-06"
    },
    {
      "source": "Data Stream",
      "target": "Problem 933",
      "value": 1,
      "timestamp": "2024-11-06"
    },
    {
      "source": "Array",
      "target": "Problem 934",
      "value": 1,
      "timestamp": "2024-11-06"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 934",
      "value": 1,
      "timestamp": "2024-11-06"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 934",
      "value": 1,
      "timestamp": "2024-11-06"
    },
    {
      "source": "Matrix",
      "target": "Problem 934",
      "value": 1,
      "timestamp": "2024-11-06"
    },
    {
      "source": "Array",
      "target": "Problem 932",
      "value": 1,
      "timestamp": "2024-11-07"
    },
    {
      "source": "Math",
      "target": "Problem 932",
      "value": 1,
      "timestamp": "2024-11-07"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 932",
      "value": 1,
      "timestamp": "2024-11-07"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 935",
      "value": 1,
      "timestamp": "2024-11-07"
    },
    {
      "source": "String",
      "target": "Problem 936",
      "value": 1,
      "timestamp": "2024-11-07"
    },
    {
      "source": "Stack",
      "target": "Problem 936",
      "value": 1,
      "timestamp": "2024-11-07"
    },
    {
      "source": "Greedy",
      "target": "Problem 936",
      "value": 1,
      "timestamp": "2024-11-07"
    },
    {
      "source": "Queue",
      "target": "Problem 936",
      "value": 1,
      "timestamp": "2024-11-07"
    },
    {
      "source": "Array",
      "target": "Problem 937",
      "value": 1,
      "timestamp": "2024-11-08"
    },
    {
      "source": "String",
      "target": "Problem 937",
      "value": 1,
      "timestamp": "2024-11-08"
    },
    {
      "source": "Sorting",
      "target": "Problem 937",
      "value": 1,
      "timestamp": "2024-11-08"
    },
    {
      "source": "Tree",
      "target": "Problem 938",
      "value": 1,
      "timestamp": "2024-11-08"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 938",
      "value": 1,
      "timestamp": "2024-11-08"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 938",
      "value": 1,
      "timestamp": "2024-11-08"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 938",
      "value": 1,
      "timestamp": "2024-11-08"
    },
    {
      "source": "Array",
      "target": "Problem 942",
      "value": 1,
      "timestamp": "2024-11-08"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 942",
      "value": 1,
      "timestamp": "2024-11-08"
    },
    {
      "source": "String",
      "target": "Problem 942",
      "value": 1,
      "timestamp": "2024-11-08"
    },
    {
      "source": "Greedy",
      "target": "Problem 942",
      "value": 1,
      "timestamp": "2024-11-08"
    },
    {
      "source": "Array",
      "target": "Problem 939",
      "value": 1,
      "timestamp": "2024-11-09"
    },
    {
      "source": "Hash Table",
      "target": "Problem 939",
      "value": 1,
      "timestamp": "2024-11-09"
    },
    {
      "source": "Math",
      "target": "Problem 939",
      "value": 1,
      "timestamp": "2024-11-09"
    },
    {
      "source": "Geometry",
      "target": "Problem 939",
      "value": 1,
      "timestamp": "2024-11-09"
    },
    {
      "source": "Sorting",
      "target": "Problem 939",
      "value": 1,
      "timestamp": "2024-11-09"
    },
    {
      "source": "String",
      "target": "Problem 940",
      "value": 1,
      "timestamp": "2024-11-09"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 940",
      "value": 1,
      "timestamp": "2024-11-09"
    },
    {
      "source": "Array",
      "target": "Problem 943",
      "value": 1,
      "timestamp": "2024-11-09"
    },
    {
      "source": "String",
      "target": "Problem 943",
      "value": 1,
      "timestamp": "2024-11-09"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 943",
      "value": 1,
      "timestamp": "2024-11-09"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 943",
      "value": 1,
      "timestamp": "2024-11-09"
    },
    {
      "source": "Bitmask",
      "target": "Problem 943",
      "value": 1,
      "timestamp": "2024-11-09"
    },
    {
      "source": "Array",
      "target": "Problem 941",
      "value": 1,
      "timestamp": "2024-11-10"
    },
    {
      "source": "Array",
      "target": "Problem 945",
      "value": 1,
      "timestamp": "2024-11-10"
    },
    {
      "source": "Greedy",
      "target": "Problem 945",
      "value": 1,
      "timestamp": "2024-11-10"
    },
    {
      "source": "Sorting",
      "target": "Problem 945",
      "value": 1,
      "timestamp": "2024-11-10"
    },
    {
      "source": "Counting",
      "target": "Problem 945",
      "value": 1,
      "timestamp": "2024-11-10"
    },
    {
      "source": "Array",
      "target": "Problem 946",
      "value": 1,
      "timestamp": "2024-11-10"
    },
    {
      "source": "Stack",
      "target": "Problem 946",
      "value": 1,
      "timestamp": "2024-11-10"
    },
    {
      "source": "Simulation",
      "target": "Problem 946",
      "value": 1,
      "timestamp": "2024-11-10"
    },
    {
      "source": "Array",
      "target": "Problem 944",
      "value": 1,
      "timestamp": "2024-11-11"
    },
    {
      "source": "String",
      "target": "Problem 944",
      "value": 1,
      "timestamp": "2024-11-11"
    },
    {
      "source": "Tree",
      "target": "Problem 951",
      "value": 1,
      "timestamp": "2024-11-11"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 951",
      "value": 1,
      "timestamp": "2024-11-11"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 951",
      "value": 1,
      "timestamp": "2024-11-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 947",
      "value": 1,
      "timestamp": "2024-11-11"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 947",
      "value": 1,
      "timestamp": "2024-11-11"
    },
    {
      "source": "Union Find",
      "target": "Problem 947",
      "value": 1,
      "timestamp": "2024-11-11"
    },
    {
      "source": "Graph",
      "target": "Problem 947",
      "value": 1,
      "timestamp": "2024-11-11"
    },
    {
      "source": "Array",
      "target": "Problem 948",
      "value": 1,
      "timestamp": "2024-11-12"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 948",
      "value": 1,
      "timestamp": "2024-11-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 948",
      "value": 1,
      "timestamp": "2024-11-12"
    },
    {
      "source": "Sorting",
      "target": "Problem 948",
      "value": 1,
      "timestamp": "2024-11-12"
    },
    {
      "source": "Array",
      "target": "Problem 950",
      "value": 1,
      "timestamp": "2024-11-12"
    },
    {
      "source": "Queue",
      "target": "Problem 950",
      "value": 1,
      "timestamp": "2024-11-12"
    },
    {
      "source": "Sorting",
      "target": "Problem 950",
      "value": 1,
      "timestamp": "2024-11-12"
    },
    {
      "source": "Simulation",
      "target": "Problem 950",
      "value": 1,
      "timestamp": "2024-11-12"
    },
    {
      "source": "Array",
      "target": "Problem 949",
      "value": 1,
      "timestamp": "2024-11-12"
    },
    {
      "source": "String",
      "target": "Problem 949",
      "value": 1,
      "timestamp": "2024-11-12"
    },
    {
      "source": "Enumeration",
      "target": "Problem 949",
      "value": 1,
      "timestamp": "2024-11-12"
    },
    {
      "source": "Array",
      "target": "Problem 953",
      "value": 1,
      "timestamp": "2024-11-13"
    },
    {
      "source": "Hash Table",
      "target": "Problem 953",
      "value": 1,
      "timestamp": "2024-11-13"
    },
    {
      "source": "String",
      "target": "Problem 953",
      "value": 1,
      "timestamp": "2024-11-13"
    },
    {
      "source": "Array",
      "target": "Problem 952",
      "value": 1,
      "timestamp": "2024-11-13"
    },
    {
      "source": "Hash Table",
      "target": "Problem 952",
      "value": 1,
      "timestamp": "2024-11-13"
    },
    {
      "source": "Math",
      "target": "Problem 952",
      "value": 1,
      "timestamp": "2024-11-13"
    },
    {
      "source": "Union Find",
      "target": "Problem 952",
      "value": 1,
      "timestamp": "2024-11-13"
    },
    {
      "source": "Number Theory",
      "target": "Problem 952",
      "value": 1,
      "timestamp": "2024-11-13"
    },
    {
      "source": "Array",
      "target": "Problem 954",
      "value": 1,
      "timestamp": "2024-11-13"
    },
    {
      "source": "Hash Table",
      "target": "Problem 954",
      "value": 1,
      "timestamp": "2024-11-13"
    },
    {
      "source": "Greedy",
      "target": "Problem 954",
      "value": 1,
      "timestamp": "2024-11-13"
    },
    {
      "source": "Sorting",
      "target": "Problem 954",
      "value": 1,
      "timestamp": "2024-11-13"
    },
    {
      "source": "Array",
      "target": "Problem 956",
      "value": 1,
      "timestamp": "2024-11-14"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 956",
      "value": 1,
      "timestamp": "2024-11-14"
    },
    {
      "source": "Array",
      "target": "Problem 962",
      "value": 1,
      "timestamp": "2024-11-14"
    },
    {
      "source": "Stack",
      "target": "Problem 962",
      "value": 1,
      "timestamp": "2024-11-14"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 962",
      "value": 1,
      "timestamp": "2024-11-14"
    },
    {
      "source": "Array",
      "target": "Problem 957",
      "value": 1,
      "timestamp": "2024-11-14"
    },
    {
      "source": "Hash Table",
      "target": "Problem 957",
      "value": 1,
      "timestamp": "2024-11-14"
    },
    {
      "source": "Math",
      "target": "Problem 957",
      "value": 1,
      "timestamp": "2024-11-14"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 957",
      "value": 1,
      "timestamp": "2024-11-14"
    },
    {
      "source": "Array",
      "target": "Problem 961",
      "value": 1,
      "timestamp": "2024-11-15"
    },
    {
      "source": "Hash Table",
      "target": "Problem 961",
      "value": 1,
      "timestamp": "2024-11-15"
    },
    {
      "source": "Array",
      "target": "Problem 960",
      "value": 1,
      "timestamp": "2024-11-15"
    },
    {
      "source": "String",
      "target": "Problem 960",
      "value": 1,
      "timestamp": "2024-11-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 960",
      "value": 1,
      "timestamp": "2024-11-15"
    },
    {
      "source": "Tree",
      "target": "Problem 958",
      "value": 1,
      "timestamp": "2024-11-15"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 958",
      "value": 1,
      "timestamp": "2024-11-15"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 958",
      "value": 1,
      "timestamp": "2024-11-15"
    },
    {
      "source": "Array",
      "target": "Problem 959",
      "value": 1,
      "timestamp": "2024-11-16"
    },
    {
      "source": "Hash Table",
      "target": "Problem 959",
      "value": 1,
      "timestamp": "2024-11-16"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 959",
      "value": 1,
      "timestamp": "2024-11-16"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 959",
      "value": 1,
      "timestamp": "2024-11-16"
    },
    {
      "source": "Union Find",
      "target": "Problem 959",
      "value": 1,
      "timestamp": "2024-11-16"
    },
    {
      "source": "Matrix",
      "target": "Problem 959",
      "value": 1,
      "timestamp": "2024-11-16"
    },
    {
      "source": "Array",
      "target": "Problem 955",
      "value": 1,
      "timestamp": "2024-11-16"
    },
    {
      "source": "String",
      "target": "Problem 955",
      "value": 1,
      "timestamp": "2024-11-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 955",
      "value": 1,
      "timestamp": "2024-11-16"
    },
    {
      "source": "Math",
      "target": "Problem 964",
      "value": 1,
      "timestamp": "2024-11-16"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 964",
      "value": 1,
      "timestamp": "2024-11-16"
    },
    {
      "source": "Memoization",
      "target": "Problem 964",
      "value": 1,
      "timestamp": "2024-11-16"
    },
    {
      "source": "Array",
      "target": "Problem 966",
      "value": 1,
      "timestamp": "2024-11-17"
    },
    {
      "source": "Hash Table",
      "target": "Problem 966",
      "value": 1,
      "timestamp": "2024-11-17"
    },
    {
      "source": "String",
      "target": "Problem 966",
      "value": 1,
      "timestamp": "2024-11-17"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 968",
      "value": 1,
      "timestamp": "2024-11-17"
    },
    {
      "source": "Tree",
      "target": "Problem 968",
      "value": 1,
      "timestamp": "2024-11-17"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 968",
      "value": 1,
      "timestamp": "2024-11-17"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 968",
      "value": 1,
      "timestamp": "2024-11-17"
    },
    {
      "source": "Tree",
      "target": "Problem 965",
      "value": 1,
      "timestamp": "2024-11-17"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 965",
      "value": 1,
      "timestamp": "2024-11-17"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 965",
      "value": 1,
      "timestamp": "2024-11-17"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 965",
      "value": 1,
      "timestamp": "2024-11-17"
    },
    {
      "source": "Hash Table",
      "target": "Problem 970",
      "value": 1,
      "timestamp": "2024-11-18"
    },
    {
      "source": "Math",
      "target": "Problem 970",
      "value": 1,
      "timestamp": "2024-11-18"
    },
    {
      "source": "Enumeration",
      "target": "Problem 970",
      "value": 1,
      "timestamp": "2024-11-18"
    },
    {
      "source": "Array",
      "target": "Problem 969",
      "value": 1,
      "timestamp": "2024-11-18"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 969",
      "value": 1,
      "timestamp": "2024-11-18"
    },
    {
      "source": "Greedy",
      "target": "Problem 969",
      "value": 1,
      "timestamp": "2024-11-18"
    },
    {
      "source": "Sorting",
      "target": "Problem 969",
      "value": 1,
      "timestamp": "2024-11-18"
    },
    {
      "source": "Backtracking",
      "target": "Problem 967",
      "value": 1,
      "timestamp": "2024-11-18"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 967",
      "value": 1,
      "timestamp": "2024-11-18"
    },
    {
      "source": "Array",
      "target": "Problem 963",
      "value": 1,
      "timestamp": "2024-11-19"
    },
    {
      "source": "Math",
      "target": "Problem 963",
      "value": 1,
      "timestamp": "2024-11-19"
    },
    {
      "source": "Geometry",
      "target": "Problem 963",
      "value": 1,
      "timestamp": "2024-11-19"
    },
    {
      "source": "Math",
      "target": "Problem 972",
      "value": 1,
      "timestamp": "2024-11-19"
    },
    {
      "source": "String",
      "target": "Problem 972",
      "value": 1,
      "timestamp": "2024-11-19"
    },
    {
      "source": "Tree",
      "target": "Problem 971",
      "value": 1,
      "timestamp": "2024-11-19"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 971",
      "value": 1,
      "timestamp": "2024-11-19"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 971",
      "value": 1,
      "timestamp": "2024-11-19"
    },
    {
      "source": "Array",
      "target": "Problem 974",
      "value": 1,
      "timestamp": "2024-11-20"
    },
    {
      "source": "Hash Table",
      "target": "Problem 974",
      "value": 1,
      "timestamp": "2024-11-20"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 974",
      "value": 1,
      "timestamp": "2024-11-20"
    },
    {
      "source": "Array",
      "target": "Problem 975",
      "value": 1,
      "timestamp": "2024-11-20"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 975",
      "value": 1,
      "timestamp": "2024-11-20"
    },
    {
      "source": "Stack",
      "target": "Problem 975",
      "value": 1,
      "timestamp": "2024-11-20"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 975",
      "value": 1,
      "timestamp": "2024-11-20"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 975",
      "value": 1,
      "timestamp": "2024-11-20"
    },
    {
      "source": "Array",
      "target": "Problem 973",
      "value": 1,
      "timestamp": "2024-11-20"
    },
    {
      "source": "Math",
      "target": "Problem 973",
      "value": 1,
      "timestamp": "2024-11-20"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 973",
      "value": 1,
      "timestamp": "2024-11-20"
    },
    {
      "source": "Geometry",
      "target": "Problem 973",
      "value": 1,
      "timestamp": "2024-11-20"
    },
    {
      "source": "Sorting",
      "target": "Problem 973",
      "value": 1,
      "timestamp": "2024-11-20"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 973",
      "value": 1,
      "timestamp": "2024-11-20"
    },
    {
      "source": "Quickselect",
      "target": "Problem 973",
      "value": 1,
      "timestamp": "2024-11-20"
    },
    {
      "source": "Array",
      "target": "Problem 978",
      "value": 1,
      "timestamp": "2024-11-21"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 978",
      "value": 1,
      "timestamp": "2024-11-21"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 978",
      "value": 1,
      "timestamp": "2024-11-21"
    },
    {
      "source": "Array",
      "target": "Problem 977",
      "value": 1,
      "timestamp": "2024-11-21"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 977",
      "value": 1,
      "timestamp": "2024-11-21"
    },
    {
      "source": "Sorting",
      "target": "Problem 977",
      "value": 1,
      "timestamp": "2024-11-21"
    },
    {
      "source": "Array",
      "target": "Problem 976",
      "value": 1,
      "timestamp": "2024-11-21"
    },
    {
      "source": "Math",
      "target": "Problem 976",
      "value": 1,
      "timestamp": "2024-11-21"
    },
    {
      "source": "Greedy",
      "target": "Problem 976",
      "value": 1,
      "timestamp": "2024-11-21"
    },
    {
      "source": "Sorting",
      "target": "Problem 976",
      "value": 1,
      "timestamp": "2024-11-21"
    },
    {
      "source": "Array",
      "target": "Problem 980",
      "value": 1,
      "timestamp": "2024-11-22"
    },
    {
      "source": "Backtracking",
      "target": "Problem 980",
      "value": 1,
      "timestamp": "2024-11-22"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 980",
      "value": 1,
      "timestamp": "2024-11-22"
    },
    {
      "source": "Matrix",
      "target": "Problem 980",
      "value": 1,
      "timestamp": "2024-11-22"
    },
    {
      "source": "Array",
      "target": "Problem 983",
      "value": 1,
      "timestamp": "2024-11-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 983",
      "value": 1,
      "timestamp": "2024-11-22"
    },
    {
      "source": "Array",
      "target": "Problem 982",
      "value": 1,
      "timestamp": "2024-11-22"
    },
    {
      "source": "Hash Table",
      "target": "Problem 982",
      "value": 1,
      "timestamp": "2024-11-22"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 982",
      "value": 1,
      "timestamp": "2024-11-22"
    },
    {
      "source": "Hash Table",
      "target": "Problem 981",
      "value": 1,
      "timestamp": "2024-11-23"
    },
    {
      "source": "String",
      "target": "Problem 981",
      "value": 1,
      "timestamp": "2024-11-23"
    },
    {
      "source": "Binary Search",
      "target": "Problem 981",
      "value": 1,
      "timestamp": "2024-11-23"
    },
    {
      "source": "Design",
      "target": "Problem 981",
      "value": 1,
      "timestamp": "2024-11-23"
    },
    {
      "source": "Tree",
      "target": "Problem 979",
      "value": 1,
      "timestamp": "2024-11-23"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 979",
      "value": 1,
      "timestamp": "2024-11-23"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 979",
      "value": 1,
      "timestamp": "2024-11-23"
    },
    {
      "source": "Array",
      "target": "Problem 985",
      "value": 1,
      "timestamp": "2024-11-23"
    },
    {
      "source": "Simulation",
      "target": "Problem 985",
      "value": 1,
      "timestamp": "2024-11-23"
    },
    {
      "source": "String",
      "target": "Problem 984",
      "value": 1,
      "timestamp": "2024-11-24"
    },
    {
      "source": "Greedy",
      "target": "Problem 984",
      "value": 1,
      "timestamp": "2024-11-24"
    },
    {
      "source": "Math",
      "target": "Problem 991",
      "value": 1,
      "timestamp": "2024-11-24"
    },
    {
      "source": "Greedy",
      "target": "Problem 991",
      "value": 1,
      "timestamp": "2024-11-24"
    },
    {
      "source": "Array",
      "target": "Problem 986",
      "value": 1,
      "timestamp": "2024-11-24"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 986",
      "value": 1,
      "timestamp": "2024-11-24"
    },
    {
      "source": "String",
      "target": "Problem 988",
      "value": 1,
      "timestamp": "2024-11-25"
    },
    {
      "source": "Backtracking",
      "target": "Problem 988",
      "value": 1,
      "timestamp": "2024-11-25"
    },
    {
      "source": "Tree",
      "target": "Problem 988",
      "value": 1,
      "timestamp": "2024-11-25"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 988",
      "value": 1,
      "timestamp": "2024-11-25"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 988",
      "value": 1,
      "timestamp": "2024-11-25"
    },
    {
      "source": "Hash Table",
      "target": "Problem 987",
      "value": 1,
      "timestamp": "2024-11-25"
    },
    {
      "source": "Tree",
      "target": "Problem 987",
      "value": 1,
      "timestamp": "2024-11-25"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 987",
      "value": 1,
      "timestamp": "2024-11-25"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 987",
      "value": 1,
      "timestamp": "2024-11-25"
    },
    {
      "source": "Sorting",
      "target": "Problem 987",
      "value": 1,
      "timestamp": "2024-11-25"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 987",
      "value": 1,
      "timestamp": "2024-11-25"
    },
    {
      "source": "Array",
      "target": "Problem 989",
      "value": 1,
      "timestamp": "2024-11-25"
    },
    {
      "source": "Math",
      "target": "Problem 989",
      "value": 1,
      "timestamp": "2024-11-25"
    },
    {
      "source": "Tree",
      "target": "Problem 993",
      "value": 1,
      "timestamp": "2024-11-26"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 993",
      "value": 1,
      "timestamp": "2024-11-26"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 993",
      "value": 1,
      "timestamp": "2024-11-26"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 993",
      "value": 1,
      "timestamp": "2024-11-26"
    },
    {
      "source": "Array",
      "target": "Problem 990",
      "value": 1,
      "timestamp": "2024-11-26"
    },
    {
      "source": "String",
      "target": "Problem 990",
      "value": 1,
      "timestamp": "2024-11-26"
    },
    {
      "source": "Union Find",
      "target": "Problem 990",
      "value": 1,
      "timestamp": "2024-11-26"
    },
    {
      "source": "Graph",
      "target": "Problem 990",
      "value": 1,
      "timestamp": "2024-11-26"
    },
    {
      "source": "Array",
      "target": "Problem 992",
      "value": 1,
      "timestamp": "2024-11-26"
    },
    {
      "source": "Hash Table",
      "target": "Problem 992",
      "value": 1,
      "timestamp": "2024-11-26"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 992",
      "value": 1,
      "timestamp": "2024-11-26"
    },
    {
      "source": "Counting",
      "target": "Problem 992",
      "value": 1,
      "timestamp": "2024-11-26"
    },
    {
      "source": "Array",
      "target": "Problem 997",
      "value": 1,
      "timestamp": "2024-11-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 997",
      "value": 1,
      "timestamp": "2024-11-27"
    },
    {
      "source": "Graph",
      "target": "Problem 997",
      "value": 1,
      "timestamp": "2024-11-27"
    },
    {
      "source": "Array",
      "target": "Problem 996",
      "value": 1,
      "timestamp": "2024-11-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 996",
      "value": 1,
      "timestamp": "2024-11-27"
    },
    {
      "source": "Math",
      "target": "Problem 996",
      "value": 1,
      "timestamp": "2024-11-27"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 996",
      "value": 1,
      "timestamp": "2024-11-27"
    },
    {
      "source": "Backtracking",
      "target": "Problem 996",
      "value": 1,
      "timestamp": "2024-11-27"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 996",
      "value": 1,
      "timestamp": "2024-11-27"
    },
    {
      "source": "Bitmask",
      "target": "Problem 996",
      "value": 1,
      "timestamp": "2024-11-27"
    },
    {
      "source": "Array",
      "target": "Problem 994",
      "value": 1,
      "timestamp": "2024-11-27"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 994",
      "value": 1,
      "timestamp": "2024-11-27"
    },
    {
      "source": "Matrix",
      "target": "Problem 994",
      "value": 1,
      "timestamp": "2024-11-27"
    },
    {
      "source": "Tree",
      "target": "Problem 998",
      "value": 1,
      "timestamp": "2024-11-28"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 998",
      "value": 1,
      "timestamp": "2024-11-28"
    },
    {
      "source": "Array",
      "target": "Problem 995",
      "value": 1,
      "timestamp": "2024-11-28"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 995",
      "value": 1,
      "timestamp": "2024-11-28"
    },
    {
      "source": "Queue",
      "target": "Problem 995",
      "value": 1,
      "timestamp": "2024-11-28"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 995",
      "value": 1,
      "timestamp": "2024-11-28"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 995",
      "value": 1,
      "timestamp": "2024-11-28"
    },
    {
      "source": "Array",
      "target": "Problem 999",
      "value": 1,
      "timestamp": "2024-11-28"
    },
    {
      "source": "Matrix",
      "target": "Problem 999",
      "value": 1,
      "timestamp": "2024-11-28"
    },
    {
      "source": "Simulation",
      "target": "Problem 999",
      "value": 1,
      "timestamp": "2024-11-28"
    },
    {
      "source": "Array",
      "target": "Problem 1001",
      "value": 1,
      "timestamp": "2024-11-29"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1001",
      "value": 1,
      "timestamp": "2024-11-29"
    },
    {
      "source": "Array",
      "target": "Problem 1002",
      "value": 1,
      "timestamp": "2024-11-29"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1002",
      "value": 1,
      "timestamp": "2024-11-29"
    },
    {
      "source": "String",
      "target": "Problem 1002",
      "value": 1,
      "timestamp": "2024-11-29"
    },
    {
      "source": "Array",
      "target": "Problem 1000",
      "value": 1,
      "timestamp": "2024-11-29"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1000",
      "value": 1,
      "timestamp": "2024-11-29"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1000",
      "value": 1,
      "timestamp": "2024-11-29"
    },
    {
      "source": "String",
      "target": "Problem 1003",
      "value": 1,
      "timestamp": "2024-11-30"
    },
    {
      "source": "Stack",
      "target": "Problem 1003",
      "value": 1,
      "timestamp": "2024-11-30"
    },
    {
      "source": "Math",
      "target": "Problem 1006",
      "value": 1,
      "timestamp": "2024-11-30"
    },
    {
      "source": "Stack",
      "target": "Problem 1006",
      "value": 1,
      "timestamp": "2024-11-30"
    },
    {
      "source": "Simulation",
      "target": "Problem 1006",
      "value": 1,
      "timestamp": "2024-11-30"
    },
    {
      "source": "Array",
      "target": "Problem 1004",
      "value": 1,
      "timestamp": "2024-11-30"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1004",
      "value": 1,
      "timestamp": "2024-11-30"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1004",
      "value": 1,
      "timestamp": "2024-11-30"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1004",
      "value": 1,
      "timestamp": "2024-11-30"
    },
    {
      "source": "Array",
      "target": "Problem 1005",
      "value": 1,
      "timestamp": "2024-12-01"
    },
    {
      "source": "Greedy",
      "target": "Problem 1005",
      "value": 1,
      "timestamp": "2024-12-01"
    },
    {
      "source": "Sorting",
      "target": "Problem 1005",
      "value": 1,
      "timestamp": "2024-12-01"
    },
    {
      "source": "Array",
      "target": "Problem 1010",
      "value": 1,
      "timestamp": "2024-12-01"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1010",
      "value": 1,
      "timestamp": "2024-12-01"
    },
    {
      "source": "Counting",
      "target": "Problem 1010",
      "value": 1,
      "timestamp": "2024-12-01"
    },
    {
      "source": "Array",
      "target": "Problem 1008",
      "value": 1,
      "timestamp": "2024-12-01"
    },
    {
      "source": "Stack",
      "target": "Problem 1008",
      "value": 1,
      "timestamp": "2024-12-01"
    },
    {
      "source": "Tree",
      "target": "Problem 1008",
      "value": 1,
      "timestamp": "2024-12-01"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 1008",
      "value": 1,
      "timestamp": "2024-12-01"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 1008",
      "value": 1,
      "timestamp": "2024-12-01"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1008",
      "value": 1,
      "timestamp": "2024-12-01"
    },
    {
      "source": "Array",
      "target": "Problem 1007",
      "value": 1,
      "timestamp": "2024-12-02"
    },
    {
      "source": "Greedy",
      "target": "Problem 1007",
      "value": 1,
      "timestamp": "2024-12-02"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1009",
      "value": 1,
      "timestamp": "2024-12-02"
    },
    {
      "source": "Array",
      "target": "Problem 1011",
      "value": 1,
      "timestamp": "2024-12-02"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1011",
      "value": 1,
      "timestamp": "2024-12-02"
    },
    {
      "source": "Array",
      "target": "Problem 1013",
      "value": 1,
      "timestamp": "2024-12-03"
    },
    {
      "source": "Greedy",
      "target": "Problem 1013",
      "value": 1,
      "timestamp": "2024-12-03"
    },
    {
      "source": "Array",
      "target": "Problem 1014",
      "value": 1,
      "timestamp": "2024-12-03"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1014",
      "value": 1,
      "timestamp": "2024-12-03"
    },
    {
      "source": "Math",
      "target": "Problem 1012",
      "value": 1,
      "timestamp": "2024-12-03"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1012",
      "value": 1,
      "timestamp": "2024-12-03"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1015",
      "value": 1,
      "timestamp": "2024-12-04"
    },
    {
      "source": "Math",
      "target": "Problem 1015",
      "value": 1,
      "timestamp": "2024-12-04"
    },
    {
      "source": "String",
      "target": "Problem 1016",
      "value": 1,
      "timestamp": "2024-12-04"
    },
    {
      "source": "Array",
      "target": "Problem 1018",
      "value": 1,
      "timestamp": "2024-12-04"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1018",
      "value": 1,
      "timestamp": "2024-12-04"
    },
    {
      "source": "Array",
      "target": "Problem 1019",
      "value": 1,
      "timestamp": "2024-12-05"
    },
    {
      "source": "Linked List",
      "target": "Problem 1019",
      "value": 1,
      "timestamp": "2024-12-05"
    },
    {
      "source": "Stack",
      "target": "Problem 1019",
      "value": 1,
      "timestamp": "2024-12-05"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 1019",
      "value": 1,
      "timestamp": "2024-12-05"
    },
    {
      "source": "String",
      "target": "Problem 1021",
      "value": 1,
      "timestamp": "2024-12-05"
    },
    {
      "source": "Stack",
      "target": "Problem 1021",
      "value": 1,
      "timestamp": "2024-12-05"
    },
    {
      "source": "Tree",
      "target": "Problem 1022",
      "value": 1,
      "timestamp": "2024-12-06"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1022",
      "value": 1,
      "timestamp": "2024-12-06"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1022",
      "value": 1,
      "timestamp": "2024-12-06"
    },
    {
      "source": "Array",
      "target": "Problem 1020",
      "value": 1,
      "timestamp": "2024-12-06"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1020",
      "value": 1,
      "timestamp": "2024-12-06"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1020",
      "value": 1,
      "timestamp": "2024-12-06"
    },
    {
      "source": "Union Find",
      "target": "Problem 1020",
      "value": 1,
      "timestamp": "2024-12-06"
    },
    {
      "source": "Matrix",
      "target": "Problem 1020",
      "value": 1,
      "timestamp": "2024-12-06"
    },
    {
      "source": "Array",
      "target": "Problem 1024",
      "value": 1,
      "timestamp": "2024-12-06"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1024",
      "value": 1,
      "timestamp": "2024-12-06"
    },
    {
      "source": "Greedy",
      "target": "Problem 1024",
      "value": 1,
      "timestamp": "2024-12-06"
    },
    {
      "source": "Array",
      "target": "Problem 1023",
      "value": 1,
      "timestamp": "2024-12-07"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1023",
      "value": 1,
      "timestamp": "2024-12-07"
    },
    {
      "source": "String",
      "target": "Problem 1023",
      "value": 1,
      "timestamp": "2024-12-07"
    },
    {
      "source": "Trie",
      "target": "Problem 1023",
      "value": 1,
      "timestamp": "2024-12-07"
    },
    {
      "source": "String Matching",
      "target": "Problem 1023",
      "value": 1,
      "timestamp": "2024-12-07"
    },
    {
      "source": "String",
      "target": "Problem 1028",
      "value": 1,
      "timestamp": "2024-12-07"
    },
    {
      "source": "Tree",
      "target": "Problem 1028",
      "value": 1,
      "timestamp": "2024-12-07"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1028",
      "value": 1,
      "timestamp": "2024-12-07"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1028",
      "value": 1,
      "timestamp": "2024-12-07"
    },
    {
      "source": "Tree",
      "target": "Problem 1026",
      "value": 1,
      "timestamp": "2024-12-07"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1026",
      "value": 1,
      "timestamp": "2024-12-07"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1026",
      "value": 1,
      "timestamp": "2024-12-07"
    },
    {
      "source": "Array",
      "target": "Problem 1029",
      "value": 1,
      "timestamp": "2024-12-08"
    },
    {
      "source": "Greedy",
      "target": "Problem 1029",
      "value": 1,
      "timestamp": "2024-12-08"
    },
    {
      "source": "Sorting",
      "target": "Problem 1029",
      "value": 1,
      "timestamp": "2024-12-08"
    },
    {
      "source": "Array",
      "target": "Problem 1027",
      "value": 1,
      "timestamp": "2024-12-08"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1027",
      "value": 1,
      "timestamp": "2024-12-08"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1027",
      "value": 1,
      "timestamp": "2024-12-08"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1027",
      "value": 1,
      "timestamp": "2024-12-08"
    },
    {
      "source": "Array",
      "target": "Problem 1030",
      "value": 1,
      "timestamp": "2024-12-08"
    },
    {
      "source": "Math",
      "target": "Problem 1030",
      "value": 1,
      "timestamp": "2024-12-08"
    },
    {
      "source": "Geometry",
      "target": "Problem 1030",
      "value": 1,
      "timestamp": "2024-12-08"
    },
    {
      "source": "Sorting",
      "target": "Problem 1030",
      "value": 1,
      "timestamp": "2024-12-08"
    },
    {
      "source": "Matrix",
      "target": "Problem 1030",
      "value": 1,
      "timestamp": "2024-12-08"
    },
    {
      "source": "Array",
      "target": "Problem 1031",
      "value": 1,
      "timestamp": "2024-12-09"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1031",
      "value": 1,
      "timestamp": "2024-12-09"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1031",
      "value": 1,
      "timestamp": "2024-12-09"
    },
    {
      "source": "Array",
      "target": "Problem 1032",
      "value": 1,
      "timestamp": "2024-12-09"
    },
    {
      "source": "String",
      "target": "Problem 1032",
      "value": 1,
      "timestamp": "2024-12-09"
    },
    {
      "source": "Design",
      "target": "Problem 1032",
      "value": 1,
      "timestamp": "2024-12-09"
    },
    {
      "source": "Trie",
      "target": "Problem 1032",
      "value": 1,
      "timestamp": "2024-12-09"
    },
    {
      "source": "Data Stream",
      "target": "Problem 1032",
      "value": 1,
      "timestamp": "2024-12-09"
    },
    {
      "source": "Math",
      "target": "Problem 1033",
      "value": 1,
      "timestamp": "2024-12-09"
    },
    {
      "source": "Brainteaser",
      "target": "Problem 1033",
      "value": 1,
      "timestamp": "2024-12-09"
    },
    {
      "source": "Array",
      "target": "Problem 1035",
      "value": 1,
      "timestamp": "2024-12-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1035",
      "value": 1,
      "timestamp": "2024-12-10"
    },
    {
      "source": "Array",
      "target": "Problem 1036",
      "value": 1,
      "timestamp": "2024-12-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1036",
      "value": 1,
      "timestamp": "2024-12-10"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1036",
      "value": 1,
      "timestamp": "2024-12-10"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1036",
      "value": 1,
      "timestamp": "2024-12-10"
    },
    {
      "source": "Array",
      "target": "Problem 1037",
      "value": 1,
      "timestamp": "2024-12-10"
    },
    {
      "source": "Math",
      "target": "Problem 1037",
      "value": 1,
      "timestamp": "2024-12-10"
    },
    {
      "source": "Geometry",
      "target": "Problem 1037",
      "value": 1,
      "timestamp": "2024-12-10"
    },
    {
      "source": "Array",
      "target": "Problem 1034",
      "value": 1,
      "timestamp": "2024-12-11"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1034",
      "value": 1,
      "timestamp": "2024-12-11"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1034",
      "value": 1,
      "timestamp": "2024-12-11"
    },
    {
      "source": "Matrix",
      "target": "Problem 1034",
      "value": 1,
      "timestamp": "2024-12-11"
    },
    {
      "source": "Array",
      "target": "Problem 1039",
      "value": 1,
      "timestamp": "2024-12-11"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1039",
      "value": 1,
      "timestamp": "2024-12-11"
    },
    {
      "source": "Tree",
      "target": "Problem 1038",
      "value": 1,
      "timestamp": "2024-12-11"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1038",
      "value": 1,
      "timestamp": "2024-12-11"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 1038",
      "value": 1,
      "timestamp": "2024-12-11"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1038",
      "value": 1,
      "timestamp": "2024-12-11"
    },
    {
      "source": "Math",
      "target": "Problem 1041",
      "value": 1,
      "timestamp": "2024-12-12"
    },
    {
      "source": "String",
      "target": "Problem 1041",
      "value": 1,
      "timestamp": "2024-12-12"
    },
    {
      "source": "Simulation",
      "target": "Problem 1041",
      "value": 1,
      "timestamp": "2024-12-12"
    },
    {
      "source": "Array",
      "target": "Problem 1043",
      "value": 1,
      "timestamp": "2024-12-12"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1043",
      "value": 1,
      "timestamp": "2024-12-12"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1042",
      "value": 1,
      "timestamp": "2024-12-12"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1042",
      "value": 1,
      "timestamp": "2024-12-12"
    },
    {
      "source": "Graph",
      "target": "Problem 1042",
      "value": 1,
      "timestamp": "2024-12-12"
    },
    {
      "source": "Array",
      "target": "Problem 1040",
      "value": 1,
      "timestamp": "2024-12-13"
    },
    {
      "source": "Math",
      "target": "Problem 1040",
      "value": 1,
      "timestamp": "2024-12-13"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1040",
      "value": 1,
      "timestamp": "2024-12-13"
    },
    {
      "source": "Sorting",
      "target": "Problem 1040",
      "value": 1,
      "timestamp": "2024-12-13"
    },
    {
      "source": "String",
      "target": "Problem 1044",
      "value": 1,
      "timestamp": "2024-12-13"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1044",
      "value": 1,
      "timestamp": "2024-12-13"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1044",
      "value": 1,
      "timestamp": "2024-12-13"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 1044",
      "value": 1,
      "timestamp": "2024-12-13"
    },
    {
      "source": "Suffix Array",
      "target": "Problem 1044",
      "value": 1,
      "timestamp": "2024-12-13"
    },
    {
      "source": "Hash Function",
      "target": "Problem 1044",
      "value": 1,
      "timestamp": "2024-12-13"
    },
    {
      "source": "Math",
      "target": "Problem 1025",
      "value": 1,
      "timestamp": "2024-12-13"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1025",
      "value": 1,
      "timestamp": "2024-12-13"
    },
    {
      "source": "Brainteaser",
      "target": "Problem 1025",
      "value": 1,
      "timestamp": "2024-12-13"
    },
    {
      "source": "Game Theory",
      "target": "Problem 1025",
      "value": 1,
      "timestamp": "2024-12-13"
    },
    {
      "source": "Database",
      "target": "Problem 1045",
      "value": 1,
      "timestamp": "2024-12-14"
    },
    {
      "source": "Array",
      "target": "Problem 1046",
      "value": 1,
      "timestamp": "2024-12-14"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1046",
      "value": 1,
      "timestamp": "2024-12-14"
    },
    {
      "source": "Array",
      "target": "Problem 1049",
      "value": 1,
      "timestamp": "2024-12-14"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1049",
      "value": 1,
      "timestamp": "2024-12-14"
    },
    {
      "source": "Array",
      "target": "Problem 1051",
      "value": 1,
      "timestamp": "2024-12-15"
    },
    {
      "source": "Sorting",
      "target": "Problem 1051",
      "value": 1,
      "timestamp": "2024-12-15"
    },
    {
      "source": "Counting Sort",
      "target": "Problem 1051",
      "value": 1,
      "timestamp": "2024-12-15"
    },
    {
      "source": "Array",
      "target": "Problem 1048",
      "value": 1,
      "timestamp": "2024-12-15"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1048",
      "value": 1,
      "timestamp": "2024-12-15"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1048",
      "value": 1,
      "timestamp": "2024-12-15"
    },
    {
      "source": "String",
      "target": "Problem 1048",
      "value": 1,
      "timestamp": "2024-12-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1048",
      "value": 1,
      "timestamp": "2024-12-15"
    },
    {
      "source": "Sorting",
      "target": "Problem 1048",
      "value": 1,
      "timestamp": "2024-12-15"
    },
    {
      "source": "Database",
      "target": "Problem 1050",
      "value": 1,
      "timestamp": "2024-12-15"
    },
    {
      "source": "String",
      "target": "Problem 1047",
      "value": 1,
      "timestamp": "2024-12-16"
    },
    {
      "source": "Stack",
      "target": "Problem 1047",
      "value": 1,
      "timestamp": "2024-12-16"
    },
    {
      "source": "Array",
      "target": "Problem 1052",
      "value": 1,
      "timestamp": "2024-12-16"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1052",
      "value": 1,
      "timestamp": "2024-12-16"
    },
    {
      "source": "Array",
      "target": "Problem 1053",
      "value": 1,
      "timestamp": "2024-12-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 1053",
      "value": 1,
      "timestamp": "2024-12-16"
    },
    {
      "source": "Array",
      "target": "Problem 1054",
      "value": 1,
      "timestamp": "2024-12-17"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1054",
      "value": 1,
      "timestamp": "2024-12-17"
    },
    {
      "source": "Greedy",
      "target": "Problem 1054",
      "value": 1,
      "timestamp": "2024-12-17"
    },
    {
      "source": "Sorting",
      "target": "Problem 1054",
      "value": 1,
      "timestamp": "2024-12-17"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1054",
      "value": 1,
      "timestamp": "2024-12-17"
    },
    {
      "source": "Counting",
      "target": "Problem 1054",
      "value": 1,
      "timestamp": "2024-12-17"
    },
    {
      "source": "String",
      "target": "Problem 1061",
      "value": 1,
      "timestamp": "2024-12-19"
    },
    {
      "source": "Union Find",
      "target": "Problem 1061",
      "value": 1,
      "timestamp": "2024-12-19"
    },
    {
      "source": "Database",
      "target": "Problem 1068",
      "value": 1,
      "timestamp": "2024-12-21"
    },
    {
      "source": "Database",
      "target": "Problem 1070",
      "value": 1,
      "timestamp": "2024-12-22"
    },
    {
      "source": "Array",
      "target": "Problem 1072",
      "value": 1,
      "timestamp": "2024-12-22"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1072",
      "value": 1,
      "timestamp": "2024-12-22"
    },
    {
      "source": "Matrix",
      "target": "Problem 1072",
      "value": 1,
      "timestamp": "2024-12-22"
    },
    {
      "source": "Math",
      "target": "Problem 1071",
      "value": 1,
      "timestamp": "2024-12-23"
    },
    {
      "source": "String",
      "target": "Problem 1071",
      "value": 1,
      "timestamp": "2024-12-23"
    },
    {
      "source": "Database",
      "target": "Problem 1075",
      "value": 1,
      "timestamp": "2024-12-23"
    },
    {
      "source": "Array",
      "target": "Problem 1073",
      "value": 1,
      "timestamp": "2024-12-23"
    },
    {
      "source": "Math",
      "target": "Problem 1073",
      "value": 1,
      "timestamp": "2024-12-23"
    },
    {
      "source": "Array",
      "target": "Problem 1074",
      "value": 1,
      "timestamp": "2024-12-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1074",
      "value": 1,
      "timestamp": "2024-12-24"
    },
    {
      "source": "Matrix",
      "target": "Problem 1074",
      "value": 1,
      "timestamp": "2024-12-24"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1074",
      "value": 1,
      "timestamp": "2024-12-24"
    },
    {
      "source": "Tree",
      "target": "Problem 1080",
      "value": 1,
      "timestamp": "2024-12-24"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1080",
      "value": 1,
      "timestamp": "2024-12-24"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1080",
      "value": 1,
      "timestamp": "2024-12-24"
    },
    {
      "source": "String",
      "target": "Problem 1078",
      "value": 1,
      "timestamp": "2024-12-25"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1079",
      "value": 1,
      "timestamp": "2024-12-25"
    },
    {
      "source": "String",
      "target": "Problem 1079",
      "value": 1,
      "timestamp": "2024-12-25"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1079",
      "value": 1,
      "timestamp": "2024-12-25"
    },
    {
      "source": "Counting",
      "target": "Problem 1079",
      "value": 1,
      "timestamp": "2024-12-25"
    },
    {
      "source": "String",
      "target": "Problem 1081",
      "value": 1,
      "timestamp": "2024-12-26"
    },
    {
      "source": "Stack",
      "target": "Problem 1081",
      "value": 1,
      "timestamp": "2024-12-26"
    },
    {
      "source": "Greedy",
      "target": "Problem 1081",
      "value": 1,
      "timestamp": "2024-12-26"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 1081",
      "value": 1,
      "timestamp": "2024-12-26"
    },
    {
      "source": "Database",
      "target": "Problem 1084",
      "value": 1,
      "timestamp": "2024-12-27"
    },
    {
      "source": "Array",
      "target": "Problem 1089",
      "value": 1,
      "timestamp": "2024-12-28"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1089",
      "value": 1,
      "timestamp": "2024-12-28"
    },
    {
      "source": "String",
      "target": "Problem 1092",
      "value": 1,
      "timestamp": "2024-12-29"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1092",
      "value": 1,
      "timestamp": "2024-12-29"
    },
    {
      "source": "Array",
      "target": "Problem 1090",
      "value": 1,
      "timestamp": "2024-12-29"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1090",
      "value": 1,
      "timestamp": "2024-12-29"
    },
    {
      "source": "Greedy",
      "target": "Problem 1090",
      "value": 1,
      "timestamp": "2024-12-29"
    },
    {
      "source": "Sorting",
      "target": "Problem 1090",
      "value": 1,
      "timestamp": "2024-12-29"
    },
    {
      "source": "Counting",
      "target": "Problem 1090",
      "value": 1,
      "timestamp": "2024-12-29"
    },
    {
      "source": "Array",
      "target": "Problem 1091",
      "value": 1,
      "timestamp": "2024-12-29"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1091",
      "value": 1,
      "timestamp": "2024-12-29"
    },
    {
      "source": "Matrix",
      "target": "Problem 1091",
      "value": 1,
      "timestamp": "2024-12-29"
    },
    {
      "source": "Array",
      "target": "Problem 1093",
      "value": 1,
      "timestamp": "2024-12-30"
    },
    {
      "source": "Math",
      "target": "Problem 1093",
      "value": 1,
      "timestamp": "2024-12-30"
    },
    {
      "source": "Probability and Statistics",
      "target": "Problem 1093",
      "value": 1,
      "timestamp": "2024-12-30"
    },
    {
      "source": "Array",
      "target": "Problem 1094",
      "value": 1,
      "timestamp": "2024-12-30"
    },
    {
      "source": "Sorting",
      "target": "Problem 1094",
      "value": 1,
      "timestamp": "2024-12-30"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1094",
      "value": 1,
      "timestamp": "2024-12-30"
    },
    {
      "source": "Simulation",
      "target": "Problem 1094",
      "value": 1,
      "timestamp": "2024-12-30"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1094",
      "value": 1,
      "timestamp": "2024-12-30"
    },
    {
      "source": "String",
      "target": "Problem 1096",
      "value": 1,
      "timestamp": "2024-12-30"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1096",
      "value": 1,
      "timestamp": "2024-12-30"
    },
    {
      "source": "Stack",
      "target": "Problem 1096",
      "value": 1,
      "timestamp": "2024-12-30"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1096",
      "value": 1,
      "timestamp": "2024-12-30"
    },
    {
      "source": "Array",
      "target": "Problem 1095",
      "value": 1,
      "timestamp": "2025-01-01"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1095",
      "value": 1,
      "timestamp": "2025-01-01"
    },
    {
      "source": "Interactive",
      "target": "Problem 1095",
      "value": 1,
      "timestamp": "2025-01-01"
    },
    {
      "source": "Math",
      "target": "Problem 1103",
      "value": 1,
      "timestamp": "2025-01-02"
    },
    {
      "source": "Simulation",
      "target": "Problem 1103",
      "value": 1,
      "timestamp": "2025-01-02"
    },
    {
      "source": "Math",
      "target": "Problem 1104",
      "value": 1,
      "timestamp": "2025-01-02"
    },
    {
      "source": "Tree",
      "target": "Problem 1104",
      "value": 1,
      "timestamp": "2025-01-02"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1104",
      "value": 1,
      "timestamp": "2025-01-02"
    },
    {
      "source": "Array",
      "target": "Problem 1105",
      "value": 1,
      "timestamp": "2025-01-03"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1105",
      "value": 1,
      "timestamp": "2025-01-03"
    },
    {
      "source": "String",
      "target": "Problem 1106",
      "value": 1,
      "timestamp": "2025-01-03"
    },
    {
      "source": "Stack",
      "target": "Problem 1106",
      "value": 1,
      "timestamp": "2025-01-03"
    },
    {
      "source": "Recursion",
      "target": "Problem 1106",
      "value": 1,
      "timestamp": "2025-01-03"
    },
    {
      "source": "String",
      "target": "Problem 1108",
      "value": 1,
      "timestamp": "2025-01-04"
    },
    {
      "source": "String",
      "target": "Problem 1111",
      "value": 1,
      "timestamp": "2025-01-04"
    },
    {
      "source": "Stack",
      "target": "Problem 1111",
      "value": 1,
      "timestamp": "2025-01-04"
    },
    {
      "source": "Array",
      "target": "Problem 1109",
      "value": 1,
      "timestamp": "2025-01-04"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1109",
      "value": 1,
      "timestamp": "2025-01-04"
    },
    {
      "source": "Array",
      "target": "Problem 1110",
      "value": 1,
      "timestamp": "2025-01-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1110",
      "value": 1,
      "timestamp": "2025-01-05"
    },
    {
      "source": "Tree",
      "target": "Problem 1110",
      "value": 1,
      "timestamp": "2025-01-05"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1110",
      "value": 1,
      "timestamp": "2025-01-05"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1110",
      "value": 1,
      "timestamp": "2025-01-05"
    },
    {
      "source": "Concurrency",
      "target": "Problem 1114",
      "value": 1,
      "timestamp": "2025-01-06"
    },
    {
      "source": "Concurrency",
      "target": "Problem 1115",
      "value": 1,
      "timestamp": "2025-01-06"
    },
    {
      "source": "Concurrency",
      "target": "Problem 1116",
      "value": 1,
      "timestamp": "2025-01-06"
    },
    {
      "source": "Concurrency",
      "target": "Problem 1117",
      "value": 1,
      "timestamp": "2025-01-08"
    },
    {
      "source": "Array",
      "target": "Problem 1124",
      "value": 1,
      "timestamp": "2025-01-08"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1124",
      "value": 1,
      "timestamp": "2025-01-08"
    },
    {
      "source": "Stack",
      "target": "Problem 1124",
      "value": 1,
      "timestamp": "2025-01-08"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 1124",
      "value": 1,
      "timestamp": "2025-01-08"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1124",
      "value": 1,
      "timestamp": "2025-01-08"
    },
    {
      "source": "Array",
      "target": "Problem 1122",
      "value": 1,
      "timestamp": "2025-01-09"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1122",
      "value": 1,
      "timestamp": "2025-01-09"
    },
    {
      "source": "Sorting",
      "target": "Problem 1122",
      "value": 1,
      "timestamp": "2025-01-09"
    },
    {
      "source": "Counting Sort",
      "target": "Problem 1122",
      "value": 1,
      "timestamp": "2025-01-09"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1123",
      "value": 1,
      "timestamp": "2025-01-09"
    },
    {
      "source": "Tree",
      "target": "Problem 1123",
      "value": 1,
      "timestamp": "2025-01-09"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1123",
      "value": 1,
      "timestamp": "2025-01-09"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1123",
      "value": 1,
      "timestamp": "2025-01-09"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1123",
      "value": 1,
      "timestamp": "2025-01-09"
    },
    {
      "source": "Array",
      "target": "Problem 1128",
      "value": 1,
      "timestamp": "2025-01-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1128",
      "value": 1,
      "timestamp": "2025-01-10"
    },
    {
      "source": "Counting",
      "target": "Problem 1128",
      "value": 1,
      "timestamp": "2025-01-10"
    },
    {
      "source": "Array",
      "target": "Problem 1125",
      "value": 1,
      "timestamp": "2025-01-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1125",
      "value": 1,
      "timestamp": "2025-01-10"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1125",
      "value": 1,
      "timestamp": "2025-01-10"
    },
    {
      "source": "Bitmask",
      "target": "Problem 1125",
      "value": 1,
      "timestamp": "2025-01-10"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1129",
      "value": 1,
      "timestamp": "2025-01-11"
    },
    {
      "source": "Graph",
      "target": "Problem 1129",
      "value": 1,
      "timestamp": "2025-01-11"
    },
    {
      "source": "Array",
      "target": "Problem 1130",
      "value": 1,
      "timestamp": "2025-01-11"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1130",
      "value": 1,
      "timestamp": "2025-01-11"
    },
    {
      "source": "Stack",
      "target": "Problem 1130",
      "value": 1,
      "timestamp": "2025-01-11"
    },
    {
      "source": "Greedy",
      "target": "Problem 1130",
      "value": 1,
      "timestamp": "2025-01-11"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 1130",
      "value": 1,
      "timestamp": "2025-01-11"
    },
    {
      "source": "Array",
      "target": "Problem 1131",
      "value": 1,
      "timestamp": "2025-01-12"
    },
    {
      "source": "Math",
      "target": "Problem 1131",
      "value": 1,
      "timestamp": "2025-01-12"
    },
    {
      "source": "Math",
      "target": "Problem 1137",
      "value": 1,
      "timestamp": "2025-01-13"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1137",
      "value": 1,
      "timestamp": "2025-01-13"
    },
    {
      "source": "Memoization",
      "target": "Problem 1137",
      "value": 1,
      "timestamp": "2025-01-13"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1138",
      "value": 1,
      "timestamp": "2025-01-14"
    },
    {
      "source": "String",
      "target": "Problem 1138",
      "value": 1,
      "timestamp": "2025-01-14"
    },
    {
      "source": "Database",
      "target": "Problem 1141",
      "value": 1,
      "timestamp": "2025-01-14"
    },
    {
      "source": "Array",
      "target": "Problem 1139",
      "value": 1,
      "timestamp": "2025-01-14"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1139",
      "value": 1,
      "timestamp": "2025-01-14"
    },
    {
      "source": "Matrix",
      "target": "Problem 1139",
      "value": 1,
      "timestamp": "2025-01-14"
    },
    {
      "source": "String",
      "target": "Problem 1143",
      "value": 1,
      "timestamp": "2025-01-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1143",
      "value": 1,
      "timestamp": "2025-01-15"
    },
    {
      "source": "Array",
      "target": "Problem 1140",
      "value": 1,
      "timestamp": "2025-01-15"
    },
    {
      "source": "Math",
      "target": "Problem 1140",
      "value": 1,
      "timestamp": "2025-01-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1140",
      "value": 1,
      "timestamp": "2025-01-15"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1140",
      "value": 1,
      "timestamp": "2025-01-15"
    },
    {
      "source": "Game Theory",
      "target": "Problem 1140",
      "value": 1,
      "timestamp": "2025-01-15"
    },
    {
      "source": "Array",
      "target": "Problem 1144",
      "value": 1,
      "timestamp": "2025-01-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 1144",
      "value": 1,
      "timestamp": "2025-01-16"
    },
    {
      "source": "Database",
      "target": "Problem 1148",
      "value": 1,
      "timestamp": "2025-01-16"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1147",
      "value": 1,
      "timestamp": "2025-01-16"
    },
    {
      "source": "String",
      "target": "Problem 1147",
      "value": 1,
      "timestamp": "2025-01-16"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1147",
      "value": 1,
      "timestamp": "2025-01-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 1147",
      "value": 1,
      "timestamp": "2025-01-16"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 1147",
      "value": 1,
      "timestamp": "2025-01-16"
    },
    {
      "source": "Hash Function",
      "target": "Problem 1147",
      "value": 1,
      "timestamp": "2025-01-16"
    },
    {
      "source": "Tree",
      "target": "Problem 1145",
      "value": 1,
      "timestamp": "2025-01-17"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1145",
      "value": 1,
      "timestamp": "2025-01-17"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1145",
      "value": 1,
      "timestamp": "2025-01-17"
    },
    {
      "source": "Array",
      "target": "Problem 1146",
      "value": 1,
      "timestamp": "2025-01-17"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1146",
      "value": 1,
      "timestamp": "2025-01-17"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1146",
      "value": 1,
      "timestamp": "2025-01-17"
    },
    {
      "source": "Design",
      "target": "Problem 1146",
      "value": 1,
      "timestamp": "2025-01-17"
    },
    {
      "source": "Array",
      "target": "Problem 1157",
      "value": 1,
      "timestamp": "2025-01-19"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1157",
      "value": 1,
      "timestamp": "2025-01-19"
    },
    {
      "source": "Design",
      "target": "Problem 1157",
      "value": 1,
      "timestamp": "2025-01-19"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 1157",
      "value": 1,
      "timestamp": "2025-01-19"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 1157",
      "value": 1,
      "timestamp": "2025-01-19"
    },
    {
      "source": "Math",
      "target": "Problem 1154",
      "value": 1,
      "timestamp": "2025-01-19"
    },
    {
      "source": "String",
      "target": "Problem 1154",
      "value": 1,
      "timestamp": "2025-01-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1156",
      "value": 1,
      "timestamp": "2025-01-19"
    },
    {
      "source": "String",
      "target": "Problem 1156",
      "value": 1,
      "timestamp": "2025-01-19"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1156",
      "value": 1,
      "timestamp": "2025-01-19"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1155",
      "value": 1,
      "timestamp": "2025-01-20"
    },
    {
      "source": "Array",
      "target": "Problem 1160",
      "value": 1,
      "timestamp": "2025-01-21"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1160",
      "value": 1,
      "timestamp": "2025-01-21"
    },
    {
      "source": "String",
      "target": "Problem 1160",
      "value": 1,
      "timestamp": "2025-01-21"
    },
    {
      "source": "Counting",
      "target": "Problem 1160",
      "value": 1,
      "timestamp": "2025-01-21"
    },
    {
      "source": "Database",
      "target": "Problem 1158",
      "value": 1,
      "timestamp": "2025-01-21"
    },
    {
      "source": "Array",
      "target": "Problem 1162",
      "value": 1,
      "timestamp": "2025-01-21"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1162",
      "value": 1,
      "timestamp": "2025-01-21"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1162",
      "value": 1,
      "timestamp": "2025-01-21"
    },
    {
      "source": "Matrix",
      "target": "Problem 1162",
      "value": 1,
      "timestamp": "2025-01-21"
    },
    {
      "source": "Tree",
      "target": "Problem 1161",
      "value": 1,
      "timestamp": "2025-01-22"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1161",
      "value": 1,
      "timestamp": "2025-01-22"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1161",
      "value": 1,
      "timestamp": "2025-01-22"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1161",
      "value": 1,
      "timestamp": "2025-01-22"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1163",
      "value": 1,
      "timestamp": "2025-01-22"
    },
    {
      "source": "String",
      "target": "Problem 1163",
      "value": 1,
      "timestamp": "2025-01-22"
    },
    {
      "source": "Database",
      "target": "Problem 1164",
      "value": 1,
      "timestamp": "2025-01-22"
    },
    {
      "source": "Array",
      "target": "Problem 1170",
      "value": 1,
      "timestamp": "2025-01-23"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1170",
      "value": 1,
      "timestamp": "2025-01-23"
    },
    {
      "source": "String",
      "target": "Problem 1170",
      "value": 1,
      "timestamp": "2025-01-23"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1170",
      "value": 1,
      "timestamp": "2025-01-23"
    },
    {
      "source": "Sorting",
      "target": "Problem 1170",
      "value": 1,
      "timestamp": "2025-01-23"
    },
    {
      "source": "Array",
      "target": "Problem 1169",
      "value": 1,
      "timestamp": "2025-01-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1169",
      "value": 1,
      "timestamp": "2025-01-24"
    },
    {
      "source": "String",
      "target": "Problem 1169",
      "value": 1,
      "timestamp": "2025-01-24"
    },
    {
      "source": "Sorting",
      "target": "Problem 1169",
      "value": 1,
      "timestamp": "2025-01-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1171",
      "value": 1,
      "timestamp": "2025-01-25"
    },
    {
      "source": "Linked List",
      "target": "Problem 1171",
      "value": 1,
      "timestamp": "2025-01-25"
    },
    {
      "source": "Database",
      "target": "Problem 1174",
      "value": 1,
      "timestamp": "2025-01-25"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1172",
      "value": 1,
      "timestamp": "2025-01-26"
    },
    {
      "source": "Stack",
      "target": "Problem 1172",
      "value": 1,
      "timestamp": "2025-01-26"
    },
    {
      "source": "Design",
      "target": "Problem 1172",
      "value": 1,
      "timestamp": "2025-01-26"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1172",
      "value": 1,
      "timestamp": "2025-01-26"
    },
    {
      "source": "Math",
      "target": "Problem 1175",
      "value": 1,
      "timestamp": "2025-01-26"
    },
    {
      "source": "Array",
      "target": "Problem 1177",
      "value": 1,
      "timestamp": "2025-01-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1177",
      "value": 1,
      "timestamp": "2025-01-27"
    },
    {
      "source": "String",
      "target": "Problem 1177",
      "value": 1,
      "timestamp": "2025-01-27"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1177",
      "value": 1,
      "timestamp": "2025-01-27"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1177",
      "value": 1,
      "timestamp": "2025-01-27"
    },
    {
      "source": "Array",
      "target": "Problem 1178",
      "value": 1,
      "timestamp": "2025-01-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1178",
      "value": 1,
      "timestamp": "2025-01-27"
    },
    {
      "source": "String",
      "target": "Problem 1178",
      "value": 1,
      "timestamp": "2025-01-27"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1178",
      "value": 1,
      "timestamp": "2025-01-27"
    },
    {
      "source": "Trie",
      "target": "Problem 1178",
      "value": 1,
      "timestamp": "2025-01-27"
    },
    {
      "source": "Database",
      "target": "Problem 1179",
      "value": 1,
      "timestamp": "2025-01-27"
    },
    {
      "source": "Array",
      "target": "Problem 1186",
      "value": 1,
      "timestamp": "2025-01-29"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1186",
      "value": 1,
      "timestamp": "2025-01-29"
    },
    {
      "source": "Array",
      "target": "Problem 1187",
      "value": 1,
      "timestamp": "2025-01-29"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1187",
      "value": 1,
      "timestamp": "2025-01-29"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1187",
      "value": 1,
      "timestamp": "2025-01-29"
    },
    {
      "source": "Sorting",
      "target": "Problem 1187",
      "value": 1,
      "timestamp": "2025-01-29"
    },
    {
      "source": "Math",
      "target": "Problem 1185",
      "value": 1,
      "timestamp": "2025-01-29"
    },
    {
      "source": "Array",
      "target": "Problem 1184",
      "value": 1,
      "timestamp": "2025-01-30"
    },
    {
      "source": "String",
      "target": "Problem 1190",
      "value": 1,
      "timestamp": "2025-01-30"
    },
    {
      "source": "Stack",
      "target": "Problem 1190",
      "value": 1,
      "timestamp": "2025-01-30"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1189",
      "value": 1,
      "timestamp": "2025-01-31"
    },
    {
      "source": "String",
      "target": "Problem 1189",
      "value": 1,
      "timestamp": "2025-01-31"
    },
    {
      "source": "Counting",
      "target": "Problem 1189",
      "value": 1,
      "timestamp": "2025-01-31"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1192",
      "value": 1,
      "timestamp": "2025-01-31"
    },
    {
      "source": "Graph",
      "target": "Problem 1192",
      "value": 1,
      "timestamp": "2025-01-31"
    },
    {
      "source": "Biconnected Component",
      "target": "Problem 1192",
      "value": 1,
      "timestamp": "2025-01-31"
    },
    {
      "source": "Concurrency",
      "target": "Problem 1195",
      "value": 1,
      "timestamp": "2025-02-01"
    },
    {
      "source": "Array",
      "target": "Problem 1191",
      "value": 1,
      "timestamp": "2025-02-01"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1191",
      "value": 1,
      "timestamp": "2025-02-01"
    },
    {
      "source": "Database",
      "target": "Problem 1193",
      "value": 1,
      "timestamp": "2025-02-02"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1203",
      "value": 1,
      "timestamp": "2025-02-03"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1203",
      "value": 1,
      "timestamp": "2025-02-03"
    },
    {
      "source": "Graph",
      "target": "Problem 1203",
      "value": 1,
      "timestamp": "2025-02-03"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 1203",
      "value": 1,
      "timestamp": "2025-02-03"
    },
    {
      "source": "Math",
      "target": "Problem 1201",
      "value": 1,
      "timestamp": "2025-02-04"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1201",
      "value": 1,
      "timestamp": "2025-02-04"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 1201",
      "value": 1,
      "timestamp": "2025-02-04"
    },
    {
      "source": "Number Theory",
      "target": "Problem 1201",
      "value": 1,
      "timestamp": "2025-02-04"
    },
    {
      "source": "Array",
      "target": "Problem 1200",
      "value": 1,
      "timestamp": "2025-02-04"
    },
    {
      "source": "Sorting",
      "target": "Problem 1200",
      "value": 1,
      "timestamp": "2025-02-04"
    },
    {
      "source": "Array",
      "target": "Problem 1202",
      "value": 1,
      "timestamp": "2025-02-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1202",
      "value": 1,
      "timestamp": "2025-02-04"
    },
    {
      "source": "String",
      "target": "Problem 1202",
      "value": 1,
      "timestamp": "2025-02-04"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1202",
      "value": 1,
      "timestamp": "2025-02-04"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1202",
      "value": 1,
      "timestamp": "2025-02-04"
    },
    {
      "source": "Union Find",
      "target": "Problem 1202",
      "value": 1,
      "timestamp": "2025-02-04"
    },
    {
      "source": "Sorting",
      "target": "Problem 1202",
      "value": 1,
      "timestamp": "2025-02-04"
    },
    {
      "source": "Linked List",
      "target": "Problem 1206",
      "value": 1,
      "timestamp": "2025-02-05"
    },
    {
      "source": "Design",
      "target": "Problem 1206",
      "value": 1,
      "timestamp": "2025-02-05"
    },
    {
      "source": "Database",
      "target": "Problem 1204",
      "value": 1,
      "timestamp": "2025-02-05"
    },
    {
      "source": "Array",
      "target": "Problem 1207",
      "value": 1,
      "timestamp": "2025-02-06"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1207",
      "value": 1,
      "timestamp": "2025-02-06"
    },
    {
      "source": "String",
      "target": "Problem 1209",
      "value": 1,
      "timestamp": "2025-02-06"
    },
    {
      "source": "Stack",
      "target": "Problem 1209",
      "value": 1,
      "timestamp": "2025-02-06"
    },
    {
      "source": "String",
      "target": "Problem 1208",
      "value": 1,
      "timestamp": "2025-02-06"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1208",
      "value": 1,
      "timestamp": "2025-02-06"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1208",
      "value": 1,
      "timestamp": "2025-02-06"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1208",
      "value": 1,
      "timestamp": "2025-02-06"
    },
    {
      "source": "Database",
      "target": "Problem 1211",
      "value": 1,
      "timestamp": "2025-02-07"
    },
    {
      "source": "Array",
      "target": "Problem 1210",
      "value": 1,
      "timestamp": "2025-02-08"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1210",
      "value": 1,
      "timestamp": "2025-02-08"
    },
    {
      "source": "Matrix",
      "target": "Problem 1210",
      "value": 1,
      "timestamp": "2025-02-08"
    },
    {
      "source": "Array",
      "target": "Problem 1217",
      "value": 1,
      "timestamp": "2025-02-09"
    },
    {
      "source": "Math",
      "target": "Problem 1217",
      "value": 1,
      "timestamp": "2025-02-09"
    },
    {
      "source": "Greedy",
      "target": "Problem 1217",
      "value": 1,
      "timestamp": "2025-02-09"
    },
    {
      "source": "Array",
      "target": "Problem 1218",
      "value": 1,
      "timestamp": "2025-02-09"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1218",
      "value": 1,
      "timestamp": "2025-02-09"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1218",
      "value": 1,
      "timestamp": "2025-02-09"
    },
    {
      "source": "Array",
      "target": "Problem 1219",
      "value": 1,
      "timestamp": "2025-02-10"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1219",
      "value": 1,
      "timestamp": "2025-02-10"
    },
    {
      "source": "Matrix",
      "target": "Problem 1219",
      "value": 1,
      "timestamp": "2025-02-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1220",
      "value": 1,
      "timestamp": "2025-02-10"
    },
    {
      "source": "String",
      "target": "Problem 1221",
      "value": 1,
      "timestamp": "2025-02-10"
    },
    {
      "source": "Greedy",
      "target": "Problem 1221",
      "value": 1,
      "timestamp": "2025-02-10"
    },
    {
      "source": "Counting",
      "target": "Problem 1221",
      "value": 1,
      "timestamp": "2025-02-10"
    },
    {
      "source": "Array",
      "target": "Problem 1223",
      "value": 1,
      "timestamp": "2025-02-11"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1223",
      "value": 1,
      "timestamp": "2025-02-11"
    },
    {
      "source": "Array",
      "target": "Problem 1222",
      "value": 1,
      "timestamp": "2025-02-11"
    },
    {
      "source": "Matrix",
      "target": "Problem 1222",
      "value": 1,
      "timestamp": "2025-02-11"
    },
    {
      "source": "Simulation",
      "target": "Problem 1222",
      "value": 1,
      "timestamp": "2025-02-11"
    },
    {
      "source": "Array",
      "target": "Problem 1224",
      "value": 1,
      "timestamp": "2025-02-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1224",
      "value": 1,
      "timestamp": "2025-02-12"
    },
    {
      "source": "Concurrency",
      "target": "Problem 1226",
      "value": 1,
      "timestamp": "2025-02-12"
    },
    {
      "source": "Math",
      "target": "Problem 1227",
      "value": 1,
      "timestamp": "2025-02-12"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1227",
      "value": 1,
      "timestamp": "2025-02-12"
    },
    {
      "source": "Brainteaser",
      "target": "Problem 1227",
      "value": 1,
      "timestamp": "2025-02-12"
    },
    {
      "source": "Probability and Statistics",
      "target": "Problem 1227",
      "value": 1,
      "timestamp": "2025-02-12"
    },
    {
      "source": "Array",
      "target": "Problem 1232",
      "value": 1,
      "timestamp": "2025-02-14"
    },
    {
      "source": "Math",
      "target": "Problem 1232",
      "value": 1,
      "timestamp": "2025-02-14"
    },
    {
      "source": "Geometry",
      "target": "Problem 1232",
      "value": 1,
      "timestamp": "2025-02-14"
    },
    {
      "source": "Array",
      "target": "Problem 1233",
      "value": 1,
      "timestamp": "2025-02-14"
    },
    {
      "source": "String",
      "target": "Problem 1233",
      "value": 1,
      "timestamp": "2025-02-14"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1233",
      "value": 1,
      "timestamp": "2025-02-14"
    },
    {
      "source": "Trie",
      "target": "Problem 1233",
      "value": 1,
      "timestamp": "2025-02-14"
    },
    {
      "source": "String",
      "target": "Problem 1234",
      "value": 1,
      "timestamp": "2025-02-15"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1234",
      "value": 1,
      "timestamp": "2025-02-15"
    },
    {
      "source": "Array",
      "target": "Problem 1235",
      "value": 1,
      "timestamp": "2025-02-15"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1235",
      "value": 1,
      "timestamp": "2025-02-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1235",
      "value": 1,
      "timestamp": "2025-02-15"
    },
    {
      "source": "Sorting",
      "target": "Problem 1235",
      "value": 1,
      "timestamp": "2025-02-15"
    },
    {
      "source": "Math",
      "target": "Problem 1237",
      "value": 1,
      "timestamp": "2025-02-16"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1237",
      "value": 1,
      "timestamp": "2025-02-16"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1237",
      "value": 1,
      "timestamp": "2025-02-16"
    },
    {
      "source": "Interactive",
      "target": "Problem 1237",
      "value": 1,
      "timestamp": "2025-02-16"
    },
    {
      "source": "Math",
      "target": "Problem 1238",
      "value": 1,
      "timestamp": "2025-02-17"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1238",
      "value": 1,
      "timestamp": "2025-02-17"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1238",
      "value": 1,
      "timestamp": "2025-02-17"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1240",
      "value": 1,
      "timestamp": "2025-02-17"
    },
    {
      "source": "Array",
      "target": "Problem 1239",
      "value": 1,
      "timestamp": "2025-02-18"
    },
    {
      "source": "String",
      "target": "Problem 1239",
      "value": 1,
      "timestamp": "2025-02-18"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1239",
      "value": 1,
      "timestamp": "2025-02-18"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1239",
      "value": 1,
      "timestamp": "2025-02-18"
    },
    {
      "source": "Math",
      "target": "Problem 1247",
      "value": 1,
      "timestamp": "2025-02-19"
    },
    {
      "source": "String",
      "target": "Problem 1247",
      "value": 1,
      "timestamp": "2025-02-19"
    },
    {
      "source": "Greedy",
      "target": "Problem 1247",
      "value": 1,
      "timestamp": "2025-02-19"
    },
    {
      "source": "Array",
      "target": "Problem 1248",
      "value": 1,
      "timestamp": "2025-02-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1248",
      "value": 1,
      "timestamp": "2025-02-19"
    },
    {
      "source": "Math",
      "target": "Problem 1248",
      "value": 1,
      "timestamp": "2025-02-19"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1248",
      "value": 1,
      "timestamp": "2025-02-19"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1248",
      "value": 1,
      "timestamp": "2025-02-19"
    },
    {
      "source": "Array",
      "target": "Problem 1253",
      "value": 1,
      "timestamp": "2025-02-20"
    },
    {
      "source": "Greedy",
      "target": "Problem 1253",
      "value": 1,
      "timestamp": "2025-02-20"
    },
    {
      "source": "Matrix",
      "target": "Problem 1253",
      "value": 1,
      "timestamp": "2025-02-20"
    },
    {
      "source": "Database",
      "target": "Problem 1251",
      "value": 1,
      "timestamp": "2025-02-20"
    },
    {
      "source": "Array",
      "target": "Problem 1252",
      "value": 1,
      "timestamp": "2025-02-20"
    },
    {
      "source": "Math",
      "target": "Problem 1252",
      "value": 1,
      "timestamp": "2025-02-20"
    },
    {
      "source": "Simulation",
      "target": "Problem 1252",
      "value": 1,
      "timestamp": "2025-02-20"
    },
    {
      "source": "String",
      "target": "Problem 1249",
      "value": 1,
      "timestamp": "2025-02-21"
    },
    {
      "source": "Stack",
      "target": "Problem 1249",
      "value": 1,
      "timestamp": "2025-02-21"
    },
    {
      "source": "Array",
      "target": "Problem 1250",
      "value": 1,
      "timestamp": "2025-02-21"
    },
    {
      "source": "Math",
      "target": "Problem 1250",
      "value": 1,
      "timestamp": "2025-02-21"
    },
    {
      "source": "Number Theory",
      "target": "Problem 1250",
      "value": 1,
      "timestamp": "2025-02-21"
    },
    {
      "source": "Array",
      "target": "Problem 1255",
      "value": 1,
      "timestamp": "2025-02-22"
    },
    {
      "source": "String",
      "target": "Problem 1255",
      "value": 1,
      "timestamp": "2025-02-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1255",
      "value": 1,
      "timestamp": "2025-02-22"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1255",
      "value": 1,
      "timestamp": "2025-02-22"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1255",
      "value": 1,
      "timestamp": "2025-02-22"
    },
    {
      "source": "Bitmask",
      "target": "Problem 1255",
      "value": 1,
      "timestamp": "2025-02-22"
    },
    {
      "source": "Array",
      "target": "Problem 1254",
      "value": 1,
      "timestamp": "2025-02-22"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1254",
      "value": 1,
      "timestamp": "2025-02-22"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1254",
      "value": 1,
      "timestamp": "2025-02-22"
    },
    {
      "source": "Union Find",
      "target": "Problem 1254",
      "value": 1,
      "timestamp": "2025-02-22"
    },
    {
      "source": "Matrix",
      "target": "Problem 1254",
      "value": 1,
      "timestamp": "2025-02-22"
    },
    {
      "source": "Array",
      "target": "Problem 1260",
      "value": 1,
      "timestamp": "2025-02-23"
    },
    {
      "source": "Matrix",
      "target": "Problem 1260",
      "value": 1,
      "timestamp": "2025-02-23"
    },
    {
      "source": "Simulation",
      "target": "Problem 1260",
      "value": 1,
      "timestamp": "2025-02-23"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1261",
      "value": 1,
      "timestamp": "2025-02-24"
    },
    {
      "source": "Tree",
      "target": "Problem 1261",
      "value": 1,
      "timestamp": "2025-02-24"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1261",
      "value": 1,
      "timestamp": "2025-02-24"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1261",
      "value": 1,
      "timestamp": "2025-02-24"
    },
    {
      "source": "Design",
      "target": "Problem 1261",
      "value": 1,
      "timestamp": "2025-02-24"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1261",
      "value": 1,
      "timestamp": "2025-02-24"
    },
    {
      "source": "Array",
      "target": "Problem 1262",
      "value": 1,
      "timestamp": "2025-02-24"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1262",
      "value": 1,
      "timestamp": "2025-02-24"
    },
    {
      "source": "Greedy",
      "target": "Problem 1262",
      "value": 1,
      "timestamp": "2025-02-24"
    },
    {
      "source": "Sorting",
      "target": "Problem 1262",
      "value": 1,
      "timestamp": "2025-02-24"
    },
    {
      "source": "Array",
      "target": "Problem 1263",
      "value": 1,
      "timestamp": "2025-02-24"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1263",
      "value": 1,
      "timestamp": "2025-02-24"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1263",
      "value": 1,
      "timestamp": "2025-02-24"
    },
    {
      "source": "Matrix",
      "target": "Problem 1263",
      "value": 1,
      "timestamp": "2025-02-24"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1269",
      "value": 1,
      "timestamp": "2025-02-25"
    },
    {
      "source": "Array",
      "target": "Problem 1268",
      "value": 1,
      "timestamp": "2025-02-26"
    },
    {
      "source": "String",
      "target": "Problem 1268",
      "value": 1,
      "timestamp": "2025-02-26"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1268",
      "value": 1,
      "timestamp": "2025-02-26"
    },
    {
      "source": "Trie",
      "target": "Problem 1268",
      "value": 1,
      "timestamp": "2025-02-26"
    },
    {
      "source": "Sorting",
      "target": "Problem 1268",
      "value": 1,
      "timestamp": "2025-02-26"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1268",
      "value": 1,
      "timestamp": "2025-02-26"
    },
    {
      "source": "Array",
      "target": "Problem 1267",
      "value": 1,
      "timestamp": "2025-02-26"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1267",
      "value": 1,
      "timestamp": "2025-02-26"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1267",
      "value": 1,
      "timestamp": "2025-02-26"
    },
    {
      "source": "Union Find",
      "target": "Problem 1267",
      "value": 1,
      "timestamp": "2025-02-26"
    },
    {
      "source": "Matrix",
      "target": "Problem 1267",
      "value": 1,
      "timestamp": "2025-02-26"
    },
    {
      "source": "Counting",
      "target": "Problem 1267",
      "value": 1,
      "timestamp": "2025-02-26"
    },
    {
      "source": "Array",
      "target": "Problem 1266",
      "value": 1,
      "timestamp": "2025-02-27"
    },
    {
      "source": "Math",
      "target": "Problem 1266",
      "value": 1,
      "timestamp": "2025-02-27"
    },
    {
      "source": "Geometry",
      "target": "Problem 1266",
      "value": 1,
      "timestamp": "2025-02-27"
    },
    {
      "source": "Math",
      "target": "Problem 1276",
      "value": 1,
      "timestamp": "2025-03-01"
    },
    {
      "source": "String",
      "target": "Problem 1278",
      "value": 1,
      "timestamp": "2025-03-01"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1278",
      "value": 1,
      "timestamp": "2025-03-01"
    },
    {
      "source": "Array",
      "target": "Problem 1275",
      "value": 1,
      "timestamp": "2025-03-01"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1275",
      "value": 1,
      "timestamp": "2025-03-01"
    },
    {
      "source": "Matrix",
      "target": "Problem 1275",
      "value": 1,
      "timestamp": "2025-03-01"
    },
    {
      "source": "Simulation",
      "target": "Problem 1275",
      "value": 1,
      "timestamp": "2025-03-01"
    },
    {
      "source": "Array",
      "target": "Problem 1277",
      "value": 1,
      "timestamp": "2025-03-02"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1277",
      "value": 1,
      "timestamp": "2025-03-02"
    },
    {
      "source": "Matrix",
      "target": "Problem 1277",
      "value": 1,
      "timestamp": "2025-03-02"
    },
    {
      "source": "Math",
      "target": "Problem 1281",
      "value": 1,
      "timestamp": "2025-03-02"
    },
    {
      "source": "Database",
      "target": "Problem 1280",
      "value": 1,
      "timestamp": "2025-03-03"
    },
    {
      "source": "Array",
      "target": "Problem 1284",
      "value": 1,
      "timestamp": "2025-03-03"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1284",
      "value": 1,
      "timestamp": "2025-03-03"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1284",
      "value": 1,
      "timestamp": "2025-03-03"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1284",
      "value": 1,
      "timestamp": "2025-03-03"
    },
    {
      "source": "Matrix",
      "target": "Problem 1284",
      "value": 1,
      "timestamp": "2025-03-03"
    },
    {
      "source": "String",
      "target": "Problem 1286",
      "value": 1,
      "timestamp": "2025-03-03"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1286",
      "value": 1,
      "timestamp": "2025-03-03"
    },
    {
      "source": "Design",
      "target": "Problem 1286",
      "value": 1,
      "timestamp": "2025-03-03"
    },
    {
      "source": "Iterator",
      "target": "Problem 1286",
      "value": 1,
      "timestamp": "2025-03-03"
    },
    {
      "source": "Array",
      "target": "Problem 1282",
      "value": 1,
      "timestamp": "2025-03-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1282",
      "value": 1,
      "timestamp": "2025-03-04"
    },
    {
      "source": "Greedy",
      "target": "Problem 1282",
      "value": 1,
      "timestamp": "2025-03-04"
    },
    {
      "source": "Array",
      "target": "Problem 1283",
      "value": 1,
      "timestamp": "2025-03-04"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1283",
      "value": 1,
      "timestamp": "2025-03-04"
    },
    {
      "source": "Linked List",
      "target": "Problem 1290",
      "value": 1,
      "timestamp": "2025-03-05"
    },
    {
      "source": "Math",
      "target": "Problem 1290",
      "value": 1,
      "timestamp": "2025-03-05"
    },
    {
      "source": "Array",
      "target": "Problem 1289",
      "value": 1,
      "timestamp": "2025-03-05"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1289",
      "value": 1,
      "timestamp": "2025-03-05"
    },
    {
      "source": "Matrix",
      "target": "Problem 1289",
      "value": 1,
      "timestamp": "2025-03-05"
    },
    {
      "source": "Enumeration",
      "target": "Problem 1291",
      "value": 1,
      "timestamp": "2025-03-05"
    },
    {
      "source": "Array",
      "target": "Problem 1292",
      "value": 1,
      "timestamp": "2025-03-06"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1292",
      "value": 1,
      "timestamp": "2025-03-06"
    },
    {
      "source": "Matrix",
      "target": "Problem 1292",
      "value": 1,
      "timestamp": "2025-03-06"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1292",
      "value": 1,
      "timestamp": "2025-03-06"
    },
    {
      "source": "Array",
      "target": "Problem 1288",
      "value": 1,
      "timestamp": "2025-03-06"
    },
    {
      "source": "Sorting",
      "target": "Problem 1288",
      "value": 1,
      "timestamp": "2025-03-06"
    },
    {
      "source": "Array",
      "target": "Problem 1293",
      "value": 1,
      "timestamp": "2025-03-06"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1293",
      "value": 1,
      "timestamp": "2025-03-06"
    },
    {
      "source": "Matrix",
      "target": "Problem 1293",
      "value": 1,
      "timestamp": "2025-03-06"
    },
    {
      "source": "Array",
      "target": "Problem 1295",
      "value": 1,
      "timestamp": "2025-03-07"
    },
    {
      "source": "Math",
      "target": "Problem 1295",
      "value": 1,
      "timestamp": "2025-03-07"
    },
    {
      "source": "Array",
      "target": "Problem 1300",
      "value": 1,
      "timestamp": "2025-03-07"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1300",
      "value": 1,
      "timestamp": "2025-03-07"
    },
    {
      "source": "Sorting",
      "target": "Problem 1300",
      "value": 1,
      "timestamp": "2025-03-07"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1297",
      "value": 1,
      "timestamp": "2025-03-08"
    },
    {
      "source": "String",
      "target": "Problem 1297",
      "value": 1,
      "timestamp": "2025-03-08"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1297",
      "value": 1,
      "timestamp": "2025-03-08"
    },
    {
      "source": "Array",
      "target": "Problem 1301",
      "value": 1,
      "timestamp": "2025-03-08"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1301",
      "value": 1,
      "timestamp": "2025-03-08"
    },
    {
      "source": "Matrix",
      "target": "Problem 1301",
      "value": 1,
      "timestamp": "2025-03-08"
    },
    {
      "source": "Array",
      "target": "Problem 1296",
      "value": 1,
      "timestamp": "2025-03-08"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1296",
      "value": 1,
      "timestamp": "2025-03-08"
    },
    {
      "source": "Greedy",
      "target": "Problem 1296",
      "value": 1,
      "timestamp": "2025-03-08"
    },
    {
      "source": "Sorting",
      "target": "Problem 1296",
      "value": 1,
      "timestamp": "2025-03-08"
    },
    {
      "source": "Tree",
      "target": "Problem 1302",
      "value": 1,
      "timestamp": "2025-03-09"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1302",
      "value": 1,
      "timestamp": "2025-03-09"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1302",
      "value": 1,
      "timestamp": "2025-03-09"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1302",
      "value": 1,
      "timestamp": "2025-03-09"
    },
    {
      "source": "Array",
      "target": "Problem 1299",
      "value": 1,
      "timestamp": "2025-03-09"
    },
    {
      "source": "Array",
      "target": "Problem 1298",
      "value": 1,
      "timestamp": "2025-03-10"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1298",
      "value": 1,
      "timestamp": "2025-03-10"
    },
    {
      "source": "Graph",
      "target": "Problem 1298",
      "value": 1,
      "timestamp": "2025-03-10"
    },
    {
      "source": "Array",
      "target": "Problem 1304",
      "value": 1,
      "timestamp": "2025-03-10"
    },
    {
      "source": "Math",
      "target": "Problem 1304",
      "value": 1,
      "timestamp": "2025-03-10"
    },
    {
      "source": "Tree",
      "target": "Problem 1305",
      "value": 1,
      "timestamp": "2025-03-10"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1305",
      "value": 1,
      "timestamp": "2025-03-10"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 1305",
      "value": 1,
      "timestamp": "2025-03-10"
    },
    {
      "source": "Sorting",
      "target": "Problem 1305",
      "value": 1,
      "timestamp": "2025-03-10"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1305",
      "value": 1,
      "timestamp": "2025-03-10"
    },
    {
      "source": "Array",
      "target": "Problem 1306",
      "value": 1,
      "timestamp": "2025-03-11"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1306",
      "value": 1,
      "timestamp": "2025-03-11"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1306",
      "value": 1,
      "timestamp": "2025-03-11"
    },
    {
      "source": "Array",
      "target": "Problem 1310",
      "value": 1,
      "timestamp": "2025-03-11"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1310",
      "value": 1,
      "timestamp": "2025-03-11"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1310",
      "value": 1,
      "timestamp": "2025-03-11"
    },
    {
      "source": "String",
      "target": "Problem 1309",
      "value": 1,
      "timestamp": "2025-03-12"
    },
    {
      "source": "Array",
      "target": "Problem 1307",
      "value": 1,
      "timestamp": "2025-03-12"
    },
    {
      "source": "Math",
      "target": "Problem 1307",
      "value": 1,
      "timestamp": "2025-03-12"
    },
    {
      "source": "String",
      "target": "Problem 1307",
      "value": 1,
      "timestamp": "2025-03-12"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1307",
      "value": 1,
      "timestamp": "2025-03-12"
    },
    {
      "source": "String",
      "target": "Problem 1312",
      "value": 1,
      "timestamp": "2025-03-12"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1312",
      "value": 1,
      "timestamp": "2025-03-12"
    },
    {
      "source": "Array",
      "target": "Problem 1313",
      "value": 1,
      "timestamp": "2025-03-13"
    },
    {
      "source": "Array",
      "target": "Problem 1311",
      "value": 1,
      "timestamp": "2025-03-13"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1311",
      "value": 1,
      "timestamp": "2025-03-13"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1311",
      "value": 1,
      "timestamp": "2025-03-13"
    },
    {
      "source": "Graph",
      "target": "Problem 1311",
      "value": 1,
      "timestamp": "2025-03-13"
    },
    {
      "source": "Sorting",
      "target": "Problem 1311",
      "value": 1,
      "timestamp": "2025-03-13"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1318",
      "value": 1,
      "timestamp": "2025-03-13"
    },
    {
      "source": "Tree",
      "target": "Problem 1315",
      "value": 1,
      "timestamp": "2025-03-14"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1315",
      "value": 1,
      "timestamp": "2025-03-14"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1315",
      "value": 1,
      "timestamp": "2025-03-14"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1315",
      "value": 1,
      "timestamp": "2025-03-14"
    },
    {
      "source": "Math",
      "target": "Problem 1317",
      "value": 1,
      "timestamp": "2025-03-14"
    },
    {
      "source": "Database",
      "target": "Problem 1321",
      "value": 1,
      "timestamp": "2025-03-14"
    },
    {
      "source": "String",
      "target": "Problem 1320",
      "value": 1,
      "timestamp": "2025-03-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1320",
      "value": 1,
      "timestamp": "2025-03-15"
    },
    {
      "source": "String",
      "target": "Problem 1316",
      "value": 1,
      "timestamp": "2025-03-15"
    },
    {
      "source": "Trie",
      "target": "Problem 1316",
      "value": 1,
      "timestamp": "2025-03-15"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 1316",
      "value": 1,
      "timestamp": "2025-03-15"
    },
    {
      "source": "Hash Function",
      "target": "Problem 1316",
      "value": 1,
      "timestamp": "2025-03-15"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1319",
      "value": 1,
      "timestamp": "2025-03-15"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1319",
      "value": 1,
      "timestamp": "2025-03-15"
    },
    {
      "source": "Union Find",
      "target": "Problem 1319",
      "value": 1,
      "timestamp": "2025-03-15"
    },
    {
      "source": "Graph",
      "target": "Problem 1319",
      "value": 1,
      "timestamp": "2025-03-15"
    },
    {
      "source": "Array",
      "target": "Problem 1314",
      "value": 1,
      "timestamp": "2025-03-16"
    },
    {
      "source": "Matrix",
      "target": "Problem 1314",
      "value": 1,
      "timestamp": "2025-03-16"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1314",
      "value": 1,
      "timestamp": "2025-03-16"
    },
    {
      "source": "Math",
      "target": "Problem 1323",
      "value": 1,
      "timestamp": "2025-03-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 1323",
      "value": 1,
      "timestamp": "2025-03-16"
    },
    {
      "source": "Array",
      "target": "Problem 1324",
      "value": 1,
      "timestamp": "2025-03-17"
    },
    {
      "source": "String",
      "target": "Problem 1324",
      "value": 1,
      "timestamp": "2025-03-17"
    },
    {
      "source": "Simulation",
      "target": "Problem 1324",
      "value": 1,
      "timestamp": "2025-03-17"
    },
    {
      "source": "Tree",
      "target": "Problem 1325",
      "value": 1,
      "timestamp": "2025-03-17"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1325",
      "value": 1,
      "timestamp": "2025-03-17"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1325",
      "value": 1,
      "timestamp": "2025-03-17"
    },
    {
      "source": "Array",
      "target": "Problem 1326",
      "value": 1,
      "timestamp": "2025-03-17"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1326",
      "value": 1,
      "timestamp": "2025-03-17"
    },
    {
      "source": "Greedy",
      "target": "Problem 1326",
      "value": 1,
      "timestamp": "2025-03-17"
    },
    {
      "source": "String",
      "target": "Problem 1328",
      "value": 1,
      "timestamp": "2025-03-18"
    },
    {
      "source": "Greedy",
      "target": "Problem 1328",
      "value": 1,
      "timestamp": "2025-03-18"
    },
    {
      "source": "Database",
      "target": "Problem 1327",
      "value": 1,
      "timestamp": "2025-03-18"
    },
    {
      "source": "Array",
      "target": "Problem 1329",
      "value": 1,
      "timestamp": "2025-03-18"
    },
    {
      "source": "Sorting",
      "target": "Problem 1329",
      "value": 1,
      "timestamp": "2025-03-18"
    },
    {
      "source": "Matrix",
      "target": "Problem 1329",
      "value": 1,
      "timestamp": "2025-03-18"
    },
    {
      "source": "Array",
      "target": "Problem 1331",
      "value": 1,
      "timestamp": "2025-03-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1331",
      "value": 1,
      "timestamp": "2025-03-19"
    },
    {
      "source": "Sorting",
      "target": "Problem 1331",
      "value": 1,
      "timestamp": "2025-03-19"
    },
    {
      "source": "Array",
      "target": "Problem 1330",
      "value": 1,
      "timestamp": "2025-03-19"
    },
    {
      "source": "Math",
      "target": "Problem 1330",
      "value": 1,
      "timestamp": "2025-03-19"
    },
    {
      "source": "Greedy",
      "target": "Problem 1330",
      "value": 1,
      "timestamp": "2025-03-19"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1332",
      "value": 1,
      "timestamp": "2025-03-20"
    },
    {
      "source": "String",
      "target": "Problem 1332",
      "value": 1,
      "timestamp": "2025-03-20"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1334",
      "value": 1,
      "timestamp": "2025-03-20"
    },
    {
      "source": "Graph",
      "target": "Problem 1334",
      "value": 1,
      "timestamp": "2025-03-20"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 1334",
      "value": 1,
      "timestamp": "2025-03-20"
    },
    {
      "source": "Array",
      "target": "Problem 1335",
      "value": 1,
      "timestamp": "2025-03-21"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1335",
      "value": 1,
      "timestamp": "2025-03-21"
    },
    {
      "source": "Array",
      "target": "Problem 1337",
      "value": 1,
      "timestamp": "2025-03-21"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1337",
      "value": 1,
      "timestamp": "2025-03-21"
    },
    {
      "source": "Sorting",
      "target": "Problem 1337",
      "value": 1,
      "timestamp": "2025-03-21"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1337",
      "value": 1,
      "timestamp": "2025-03-21"
    },
    {
      "source": "Matrix",
      "target": "Problem 1337",
      "value": 1,
      "timestamp": "2025-03-21"
    },
    {
      "source": "Array",
      "target": "Problem 1338",
      "value": 1,
      "timestamp": "2025-03-21"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1338",
      "value": 1,
      "timestamp": "2025-03-21"
    },
    {
      "source": "Greedy",
      "target": "Problem 1338",
      "value": 1,
      "timestamp": "2025-03-21"
    },
    {
      "source": "Sorting",
      "target": "Problem 1338",
      "value": 1,
      "timestamp": "2025-03-21"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1338",
      "value": 1,
      "timestamp": "2025-03-21"
    },
    {
      "source": "Tree",
      "target": "Problem 1339",
      "value": 1,
      "timestamp": "2025-03-22"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1339",
      "value": 1,
      "timestamp": "2025-03-22"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1339",
      "value": 1,
      "timestamp": "2025-03-22"
    },
    {
      "source": "Array",
      "target": "Problem 1340",
      "value": 1,
      "timestamp": "2025-03-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1340",
      "value": 1,
      "timestamp": "2025-03-22"
    },
    {
      "source": "Sorting",
      "target": "Problem 1340",
      "value": 1,
      "timestamp": "2025-03-22"
    },
    {
      "source": "Database",
      "target": "Problem 1341",
      "value": 1,
      "timestamp": "2025-03-22"
    },
    {
      "source": "Math",
      "target": "Problem 1342",
      "value": 1,
      "timestamp": "2025-03-23"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1342",
      "value": 1,
      "timestamp": "2025-03-23"
    },
    {
      "source": "Array",
      "target": "Problem 1343",
      "value": 1,
      "timestamp": "2025-03-23"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1343",
      "value": 1,
      "timestamp": "2025-03-23"
    },
    {
      "source": "Math",
      "target": "Problem 1344",
      "value": 1,
      "timestamp": "2025-03-23"
    },
    {
      "source": "Array",
      "target": "Problem 1345",
      "value": 1,
      "timestamp": "2025-03-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1345",
      "value": 1,
      "timestamp": "2025-03-24"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1345",
      "value": 1,
      "timestamp": "2025-03-24"
    },
    {
      "source": "Array",
      "target": "Problem 1346",
      "value": 1,
      "timestamp": "2025-03-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1346",
      "value": 1,
      "timestamp": "2025-03-24"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1346",
      "value": 1,
      "timestamp": "2025-03-24"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1346",
      "value": 1,
      "timestamp": "2025-03-24"
    },
    {
      "source": "Sorting",
      "target": "Problem 1346",
      "value": 1,
      "timestamp": "2025-03-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1347",
      "value": 1,
      "timestamp": "2025-03-24"
    },
    {
      "source": "String",
      "target": "Problem 1347",
      "value": 1,
      "timestamp": "2025-03-24"
    },
    {
      "source": "Counting",
      "target": "Problem 1347",
      "value": 1,
      "timestamp": "2025-03-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1348",
      "value": 1,
      "timestamp": "2025-03-25"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1348",
      "value": 1,
      "timestamp": "2025-03-25"
    },
    {
      "source": "Design",
      "target": "Problem 1348",
      "value": 1,
      "timestamp": "2025-03-25"
    },
    {
      "source": "Sorting",
      "target": "Problem 1348",
      "value": 1,
      "timestamp": "2025-03-25"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 1348",
      "value": 1,
      "timestamp": "2025-03-25"
    },
    {
      "source": "Array",
      "target": "Problem 1349",
      "value": 1,
      "timestamp": "2025-03-25"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1349",
      "value": 1,
      "timestamp": "2025-03-25"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1349",
      "value": 1,
      "timestamp": "2025-03-25"
    },
    {
      "source": "Matrix",
      "target": "Problem 1349",
      "value": 1,
      "timestamp": "2025-03-25"
    },
    {
      "source": "Bitmask",
      "target": "Problem 1349",
      "value": 1,
      "timestamp": "2025-03-25"
    },
    {
      "source": "Array",
      "target": "Problem 1352",
      "value": 1,
      "timestamp": "2025-03-26"
    },
    {
      "source": "Math",
      "target": "Problem 1352",
      "value": 1,
      "timestamp": "2025-03-26"
    },
    {
      "source": "Design",
      "target": "Problem 1352",
      "value": 1,
      "timestamp": "2025-03-26"
    },
    {
      "source": "Queue",
      "target": "Problem 1352",
      "value": 1,
      "timestamp": "2025-03-26"
    },
    {
      "source": "Data Stream",
      "target": "Problem 1352",
      "value": 1,
      "timestamp": "2025-03-26"
    },
    {
      "source": "Array",
      "target": "Problem 1351",
      "value": 1,
      "timestamp": "2025-03-26"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1351",
      "value": 1,
      "timestamp": "2025-03-26"
    },
    {
      "source": "Matrix",
      "target": "Problem 1351",
      "value": 1,
      "timestamp": "2025-03-26"
    },
    {
      "source": "Array",
      "target": "Problem 1354",
      "value": 1,
      "timestamp": "2025-03-27"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1354",
      "value": 1,
      "timestamp": "2025-03-27"
    },
    {
      "source": "Array",
      "target": "Problem 1353",
      "value": 1,
      "timestamp": "2025-03-27"
    },
    {
      "source": "Greedy",
      "target": "Problem 1353",
      "value": 1,
      "timestamp": "2025-03-27"
    },
    {
      "source": "Sorting",
      "target": "Problem 1353",
      "value": 1,
      "timestamp": "2025-03-27"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1353",
      "value": 1,
      "timestamp": "2025-03-27"
    },
    {
      "source": "Array",
      "target": "Problem 1356",
      "value": 1,
      "timestamp": "2025-03-27"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1356",
      "value": 1,
      "timestamp": "2025-03-27"
    },
    {
      "source": "Sorting",
      "target": "Problem 1356",
      "value": 1,
      "timestamp": "2025-03-27"
    },
    {
      "source": "Counting",
      "target": "Problem 1356",
      "value": 1,
      "timestamp": "2025-03-27"
    },
    {
      "source": "Math",
      "target": "Problem 1360",
      "value": 1,
      "timestamp": "2025-03-28"
    },
    {
      "source": "String",
      "target": "Problem 1360",
      "value": 1,
      "timestamp": "2025-03-28"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1358",
      "value": 1,
      "timestamp": "2025-03-28"
    },
    {
      "source": "String",
      "target": "Problem 1358",
      "value": 1,
      "timestamp": "2025-03-28"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1358",
      "value": 1,
      "timestamp": "2025-03-28"
    },
    {
      "source": "Math",
      "target": "Problem 1359",
      "value": 1,
      "timestamp": "2025-03-28"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1359",
      "value": 1,
      "timestamp": "2025-03-28"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 1359",
      "value": 1,
      "timestamp": "2025-03-28"
    },
    {
      "source": "Math",
      "target": "Problem 1362",
      "value": 1,
      "timestamp": "2025-03-29"
    },
    {
      "source": "Array",
      "target": "Problem 1363",
      "value": 1,
      "timestamp": "2025-03-29"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1363",
      "value": 1,
      "timestamp": "2025-03-29"
    },
    {
      "source": "Greedy",
      "target": "Problem 1363",
      "value": 1,
      "timestamp": "2025-03-29"
    },
    {
      "source": "Array",
      "target": "Problem 1357",
      "value": 1,
      "timestamp": "2025-03-29"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1357",
      "value": 1,
      "timestamp": "2025-03-29"
    },
    {
      "source": "Design",
      "target": "Problem 1357",
      "value": 1,
      "timestamp": "2025-03-29"
    },
    {
      "source": "Tree",
      "target": "Problem 1361",
      "value": 1,
      "timestamp": "2025-03-30"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1361",
      "value": 1,
      "timestamp": "2025-03-30"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1361",
      "value": 1,
      "timestamp": "2025-03-30"
    },
    {
      "source": "Union Find",
      "target": "Problem 1361",
      "value": 1,
      "timestamp": "2025-03-30"
    },
    {
      "source": "Graph",
      "target": "Problem 1361",
      "value": 1,
      "timestamp": "2025-03-30"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1361",
      "value": 1,
      "timestamp": "2025-03-30"
    },
    {
      "source": "Array",
      "target": "Problem 1366",
      "value": 1,
      "timestamp": "2025-03-30"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1366",
      "value": 1,
      "timestamp": "2025-03-30"
    },
    {
      "source": "String",
      "target": "Problem 1366",
      "value": 1,
      "timestamp": "2025-03-30"
    },
    {
      "source": "Sorting",
      "target": "Problem 1366",
      "value": 1,
      "timestamp": "2025-03-30"
    },
    {
      "source": "Counting",
      "target": "Problem 1366",
      "value": 1,
      "timestamp": "2025-03-30"
    },
    {
      "source": "Linked List",
      "target": "Problem 1367",
      "value": 1,
      "timestamp": "2025-03-31"
    },
    {
      "source": "Tree",
      "target": "Problem 1367",
      "value": 1,
      "timestamp": "2025-03-31"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1367",
      "value": 1,
      "timestamp": "2025-03-31"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1367",
      "value": 1,
      "timestamp": "2025-03-31"
    },
    {
      "source": "Array",
      "target": "Problem 1365",
      "value": 1,
      "timestamp": "2025-03-31"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1365",
      "value": 1,
      "timestamp": "2025-03-31"
    },
    {
      "source": "Sorting",
      "target": "Problem 1365",
      "value": 1,
      "timestamp": "2025-03-31"
    },
    {
      "source": "Counting",
      "target": "Problem 1365",
      "value": 1,
      "timestamp": "2025-03-31"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1370",
      "value": 1,
      "timestamp": "2025-03-31"
    },
    {
      "source": "String",
      "target": "Problem 1370",
      "value": 1,
      "timestamp": "2025-03-31"
    },
    {
      "source": "Counting",
      "target": "Problem 1370",
      "value": 1,
      "timestamp": "2025-03-31"
    },
    {
      "source": "Array",
      "target": "Problem 1368",
      "value": 1,
      "timestamp": "2025-04-01"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1368",
      "value": 1,
      "timestamp": "2025-04-01"
    },
    {
      "source": "Graph",
      "target": "Problem 1368",
      "value": 1,
      "timestamp": "2025-04-01"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1368",
      "value": 1,
      "timestamp": "2025-04-01"
    },
    {
      "source": "Matrix",
      "target": "Problem 1368",
      "value": 1,
      "timestamp": "2025-04-01"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 1368",
      "value": 1,
      "timestamp": "2025-04-01"
    },
    {
      "source": "String",
      "target": "Problem 1374",
      "value": 1,
      "timestamp": "2025-04-01"
    },
    {
      "source": "Array",
      "target": "Problem 1375",
      "value": 1,
      "timestamp": "2025-04-02"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1372",
      "value": 1,
      "timestamp": "2025-04-02"
    },
    {
      "source": "Tree",
      "target": "Problem 1372",
      "value": 1,
      "timestamp": "2025-04-02"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1372",
      "value": 1,
      "timestamp": "2025-04-02"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1372",
      "value": 1,
      "timestamp": "2025-04-02"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1373",
      "value": 1,
      "timestamp": "2025-04-02"
    },
    {
      "source": "Tree",
      "target": "Problem 1373",
      "value": 1,
      "timestamp": "2025-04-02"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1373",
      "value": 1,
      "timestamp": "2025-04-02"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 1373",
      "value": 1,
      "timestamp": "2025-04-02"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1373",
      "value": 1,
      "timestamp": "2025-04-02"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1371",
      "value": 1,
      "timestamp": "2025-04-03"
    },
    {
      "source": "String",
      "target": "Problem 1371",
      "value": 1,
      "timestamp": "2025-04-03"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1371",
      "value": 1,
      "timestamp": "2025-04-03"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1371",
      "value": 1,
      "timestamp": "2025-04-03"
    },
    {
      "source": "Tree",
      "target": "Problem 1377",
      "value": 1,
      "timestamp": "2025-04-03"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1377",
      "value": 1,
      "timestamp": "2025-04-03"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1377",
      "value": 1,
      "timestamp": "2025-04-03"
    },
    {
      "source": "Graph",
      "target": "Problem 1377",
      "value": 1,
      "timestamp": "2025-04-03"
    },
    {
      "source": "Database",
      "target": "Problem 1378",
      "value": 1,
      "timestamp": "2025-04-03"
    },
    {
      "source": "Tree",
      "target": "Problem 1376",
      "value": 1,
      "timestamp": "2025-04-04"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1376",
      "value": 1,
      "timestamp": "2025-04-04"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1376",
      "value": 1,
      "timestamp": "2025-04-04"
    },
    {
      "source": "Array",
      "target": "Problem 1380",
      "value": 1,
      "timestamp": "2025-04-04"
    },
    {
      "source": "Matrix",
      "target": "Problem 1380",
      "value": 1,
      "timestamp": "2025-04-04"
    },
    {
      "source": "Array",
      "target": "Problem 1383",
      "value": 1,
      "timestamp": "2025-04-05"
    },
    {
      "source": "Greedy",
      "target": "Problem 1383",
      "value": 1,
      "timestamp": "2025-04-05"
    },
    {
      "source": "Sorting",
      "target": "Problem 1383",
      "value": 1,
      "timestamp": "2025-04-05"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1383",
      "value": 1,
      "timestamp": "2025-04-05"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 1382",
      "value": 1,
      "timestamp": "2025-04-05"
    },
    {
      "source": "Greedy",
      "target": "Problem 1382",
      "value": 1,
      "timestamp": "2025-04-05"
    },
    {
      "source": "Tree",
      "target": "Problem 1382",
      "value": 1,
      "timestamp": "2025-04-05"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1382",
      "value": 1,
      "timestamp": "2025-04-05"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 1382",
      "value": 1,
      "timestamp": "2025-04-05"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1382",
      "value": 1,
      "timestamp": "2025-04-05"
    },
    {
      "source": "Tree",
      "target": "Problem 1379",
      "value": 1,
      "timestamp": "2025-04-05"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1379",
      "value": 1,
      "timestamp": "2025-04-05"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1379",
      "value": 1,
      "timestamp": "2025-04-05"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1379",
      "value": 1,
      "timestamp": "2025-04-05"
    },
    {
      "source": "Array",
      "target": "Problem 1385",
      "value": 1,
      "timestamp": "2025-04-06"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1385",
      "value": 1,
      "timestamp": "2025-04-06"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1385",
      "value": 1,
      "timestamp": "2025-04-06"
    },
    {
      "source": "Sorting",
      "target": "Problem 1385",
      "value": 1,
      "timestamp": "2025-04-06"
    },
    {
      "source": "Array",
      "target": "Problem 1381",
      "value": 1,
      "timestamp": "2025-04-06"
    },
    {
      "source": "Stack",
      "target": "Problem 1381",
      "value": 1,
      "timestamp": "2025-04-06"
    },
    {
      "source": "Design",
      "target": "Problem 1381",
      "value": 1,
      "timestamp": "2025-04-06"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1387",
      "value": 1,
      "timestamp": "2025-04-06"
    },
    {
      "source": "Memoization",
      "target": "Problem 1387",
      "value": 1,
      "timestamp": "2025-04-06"
    },
    {
      "source": "Sorting",
      "target": "Problem 1387",
      "value": 1,
      "timestamp": "2025-04-06"
    },
    {
      "source": "Array",
      "target": "Problem 1388",
      "value": 1,
      "timestamp": "2025-04-07"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1388",
      "value": 1,
      "timestamp": "2025-04-07"
    },
    {
      "source": "Greedy",
      "target": "Problem 1388",
      "value": 1,
      "timestamp": "2025-04-07"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1388",
      "value": 1,
      "timestamp": "2025-04-07"
    },
    {
      "source": "Array",
      "target": "Problem 1386",
      "value": 1,
      "timestamp": "2025-04-07"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1386",
      "value": 1,
      "timestamp": "2025-04-07"
    },
    {
      "source": "Greedy",
      "target": "Problem 1386",
      "value": 1,
      "timestamp": "2025-04-07"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1386",
      "value": 1,
      "timestamp": "2025-04-07"
    },
    {
      "source": "Array",
      "target": "Problem 1389",
      "value": 1,
      "timestamp": "2025-04-07"
    },
    {
      "source": "Simulation",
      "target": "Problem 1389",
      "value": 1,
      "timestamp": "2025-04-07"
    },
    {
      "source": "Array",
      "target": "Problem 1391",
      "value": 1,
      "timestamp": "2025-04-08"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1391",
      "value": 1,
      "timestamp": "2025-04-08"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1391",
      "value": 1,
      "timestamp": "2025-04-08"
    },
    {
      "source": "Union Find",
      "target": "Problem 1391",
      "value": 1,
      "timestamp": "2025-04-08"
    },
    {
      "source": "Matrix",
      "target": "Problem 1391",
      "value": 1,
      "timestamp": "2025-04-08"
    },
    {
      "source": "Array",
      "target": "Problem 1390",
      "value": 1,
      "timestamp": "2025-04-08"
    },
    {
      "source": "Math",
      "target": "Problem 1390",
      "value": 1,
      "timestamp": "2025-04-08"
    },
    {
      "source": "Array",
      "target": "Problem 1394",
      "value": 1,
      "timestamp": "2025-04-08"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1394",
      "value": 1,
      "timestamp": "2025-04-08"
    },
    {
      "source": "Counting",
      "target": "Problem 1394",
      "value": 1,
      "timestamp": "2025-04-08"
    },
    {
      "source": "Array",
      "target": "Problem 1395",
      "value": 1,
      "timestamp": "2025-04-09"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1395",
      "value": 1,
      "timestamp": "2025-04-09"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 1395",
      "value": 1,
      "timestamp": "2025-04-09"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 1395",
      "value": 1,
      "timestamp": "2025-04-09"
    },
    {
      "source": "String",
      "target": "Problem 1392",
      "value": 1,
      "timestamp": "2025-04-09"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 1392",
      "value": 1,
      "timestamp": "2025-04-09"
    },
    {
      "source": "String Matching",
      "target": "Problem 1392",
      "value": 1,
      "timestamp": "2025-04-09"
    },
    {
      "source": "Hash Function",
      "target": "Problem 1392",
      "value": 1,
      "timestamp": "2025-04-09"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1396",
      "value": 1,
      "timestamp": "2025-04-10"
    },
    {
      "source": "String",
      "target": "Problem 1396",
      "value": 1,
      "timestamp": "2025-04-10"
    },
    {
      "source": "Design",
      "target": "Problem 1396",
      "value": 1,
      "timestamp": "2025-04-10"
    },
    {
      "source": "String",
      "target": "Problem 1397",
      "value": 1,
      "timestamp": "2025-04-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1397",
      "value": 1,
      "timestamp": "2025-04-10"
    },
    {
      "source": "String Matching",
      "target": "Problem 1397",
      "value": 1,
      "timestamp": "2025-04-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1399",
      "value": 1,
      "timestamp": "2025-04-11"
    },
    {
      "source": "Math",
      "target": "Problem 1399",
      "value": 1,
      "timestamp": "2025-04-11"
    },
    {
      "source": "Math",
      "target": "Problem 1401",
      "value": 1,
      "timestamp": "2025-04-11"
    },
    {
      "source": "Geometry",
      "target": "Problem 1401",
      "value": 1,
      "timestamp": "2025-04-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1400",
      "value": 1,
      "timestamp": "2025-04-12"
    },
    {
      "source": "String",
      "target": "Problem 1400",
      "value": 1,
      "timestamp": "2025-04-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 1400",
      "value": 1,
      "timestamp": "2025-04-12"
    },
    {
      "source": "Counting",
      "target": "Problem 1400",
      "value": 1,
      "timestamp": "2025-04-12"
    },
    {
      "source": "Array",
      "target": "Problem 1402",
      "value": 1,
      "timestamp": "2025-04-12"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1402",
      "value": 1,
      "timestamp": "2025-04-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 1402",
      "value": 1,
      "timestamp": "2025-04-12"
    },
    {
      "source": "Sorting",
      "target": "Problem 1402",
      "value": 1,
      "timestamp": "2025-04-12"
    },
    {
      "source": "String",
      "target": "Problem 1404",
      "value": 1,
      "timestamp": "2025-04-12"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1404",
      "value": 1,
      "timestamp": "2025-04-12"
    },
    {
      "source": "String",
      "target": "Problem 1405",
      "value": 1,
      "timestamp": "2025-04-13"
    },
    {
      "source": "Greedy",
      "target": "Problem 1405",
      "value": 1,
      "timestamp": "2025-04-13"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1405",
      "value": 1,
      "timestamp": "2025-04-13"
    },
    {
      "source": "Database",
      "target": "Problem 1407",
      "value": 1,
      "timestamp": "2025-04-13"
    },
    {
      "source": "Array",
      "target": "Problem 1408",
      "value": 1,
      "timestamp": "2025-04-13"
    },
    {
      "source": "String",
      "target": "Problem 1408",
      "value": 1,
      "timestamp": "2025-04-13"
    },
    {
      "source": "String Matching",
      "target": "Problem 1408",
      "value": 1,
      "timestamp": "2025-04-13"
    },
    {
      "source": "Array",
      "target": "Problem 1406",
      "value": 1,
      "timestamp": "2025-04-14"
    },
    {
      "source": "Math",
      "target": "Problem 1406",
      "value": 1,
      "timestamp": "2025-04-14"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1406",
      "value": 1,
      "timestamp": "2025-04-14"
    },
    {
      "source": "Game Theory",
      "target": "Problem 1406",
      "value": 1,
      "timestamp": "2025-04-14"
    },
    {
      "source": "Array",
      "target": "Problem 1413",
      "value": 1,
      "timestamp": "2025-04-15"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1413",
      "value": 1,
      "timestamp": "2025-04-15"
    },
    {
      "source": "Array",
      "target": "Problem 1409",
      "value": 1,
      "timestamp": "2025-04-15"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 1409",
      "value": 1,
      "timestamp": "2025-04-15"
    },
    {
      "source": "Simulation",
      "target": "Problem 1409",
      "value": 1,
      "timestamp": "2025-04-15"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1410",
      "value": 1,
      "timestamp": "2025-04-15"
    },
    {
      "source": "String",
      "target": "Problem 1410",
      "value": 1,
      "timestamp": "2025-04-15"
    },
    {
      "source": "Math",
      "target": "Problem 1414",
      "value": 1,
      "timestamp": "2025-04-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 1414",
      "value": 1,
      "timestamp": "2025-04-16"
    },
    {
      "source": "String",
      "target": "Problem 1416",
      "value": 1,
      "timestamp": "2025-04-16"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1416",
      "value": 1,
      "timestamp": "2025-04-16"
    },
    {
      "source": "String",
      "target": "Problem 1415",
      "value": 1,
      "timestamp": "2025-04-16"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1415",
      "value": 1,
      "timestamp": "2025-04-16"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1420",
      "value": 1,
      "timestamp": "2025-04-17"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1420",
      "value": 1,
      "timestamp": "2025-04-17"
    },
    {
      "source": "Array",
      "target": "Problem 1418",
      "value": 1,
      "timestamp": "2025-04-17"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1418",
      "value": 1,
      "timestamp": "2025-04-17"
    },
    {
      "source": "String",
      "target": "Problem 1418",
      "value": 1,
      "timestamp": "2025-04-17"
    },
    {
      "source": "Sorting",
      "target": "Problem 1418",
      "value": 1,
      "timestamp": "2025-04-17"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 1418",
      "value": 1,
      "timestamp": "2025-04-17"
    },
    {
      "source": "String",
      "target": "Problem 1417",
      "value": 1,
      "timestamp": "2025-04-18"
    },
    {
      "source": "String",
      "target": "Problem 1419",
      "value": 1,
      "timestamp": "2025-04-18"
    },
    {
      "source": "Counting",
      "target": "Problem 1419",
      "value": 1,
      "timestamp": "2025-04-18"
    },
    {
      "source": "String",
      "target": "Problem 1422",
      "value": 1,
      "timestamp": "2025-04-18"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1422",
      "value": 1,
      "timestamp": "2025-04-18"
    },
    {
      "source": "Array",
      "target": "Problem 1423",
      "value": 1,
      "timestamp": "2025-04-19"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1423",
      "value": 1,
      "timestamp": "2025-04-19"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1423",
      "value": 1,
      "timestamp": "2025-04-19"
    },
    {
      "source": "Array",
      "target": "Problem 1424",
      "value": 1,
      "timestamp": "2025-04-19"
    },
    {
      "source": "Sorting",
      "target": "Problem 1424",
      "value": 1,
      "timestamp": "2025-04-19"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1424",
      "value": 1,
      "timestamp": "2025-04-19"
    },
    {
      "source": "Array",
      "target": "Problem 1425",
      "value": 1,
      "timestamp": "2025-04-21"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1425",
      "value": 1,
      "timestamp": "2025-04-21"
    },
    {
      "source": "Queue",
      "target": "Problem 1425",
      "value": 1,
      "timestamp": "2025-04-21"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1425",
      "value": 1,
      "timestamp": "2025-04-21"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1425",
      "value": 1,
      "timestamp": "2025-04-21"
    },
    {
      "source": "Monotonic Queue",
      "target": "Problem 1425",
      "value": 1,
      "timestamp": "2025-04-21"
    },
    {
      "source": "Math",
      "target": "Problem 1432",
      "value": 1,
      "timestamp": "2025-04-22"
    },
    {
      "source": "Greedy",
      "target": "Problem 1432",
      "value": 1,
      "timestamp": "2025-04-22"
    },
    {
      "source": "String",
      "target": "Problem 1433",
      "value": 1,
      "timestamp": "2025-04-22"
    },
    {
      "source": "Greedy",
      "target": "Problem 1433",
      "value": 1,
      "timestamp": "2025-04-22"
    },
    {
      "source": "Sorting",
      "target": "Problem 1433",
      "value": 1,
      "timestamp": "2025-04-22"
    },
    {
      "source": "Array",
      "target": "Problem 1434",
      "value": 1,
      "timestamp": "2025-04-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1434",
      "value": 1,
      "timestamp": "2025-04-22"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1434",
      "value": 1,
      "timestamp": "2025-04-22"
    },
    {
      "source": "Bitmask",
      "target": "Problem 1434",
      "value": 1,
      "timestamp": "2025-04-22"
    },
    {
      "source": "Array",
      "target": "Problem 1431",
      "value": 1,
      "timestamp": "2025-04-23"
    },
    {
      "source": "Array",
      "target": "Problem 1436",
      "value": 1,
      "timestamp": "2025-04-23"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1436",
      "value": 1,
      "timestamp": "2025-04-23"
    },
    {
      "source": "String",
      "target": "Problem 1436",
      "value": 1,
      "timestamp": "2025-04-23"
    },
    {
      "source": "Array",
      "target": "Problem 1438",
      "value": 1,
      "timestamp": "2025-04-23"
    },
    {
      "source": "Queue",
      "target": "Problem 1438",
      "value": 1,
      "timestamp": "2025-04-23"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1438",
      "value": 1,
      "timestamp": "2025-04-23"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1438",
      "value": 1,
      "timestamp": "2025-04-23"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 1438",
      "value": 1,
      "timestamp": "2025-04-23"
    },
    {
      "source": "Monotonic Queue",
      "target": "Problem 1438",
      "value": 1,
      "timestamp": "2025-04-23"
    },
    {
      "source": "Array",
      "target": "Problem 1442",
      "value": 1,
      "timestamp": "2025-04-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1442",
      "value": 1,
      "timestamp": "2025-04-24"
    },
    {
      "source": "Math",
      "target": "Problem 1442",
      "value": 1,
      "timestamp": "2025-04-24"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1442",
      "value": 1,
      "timestamp": "2025-04-24"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1442",
      "value": 1,
      "timestamp": "2025-04-24"
    },
    {
      "source": "Array",
      "target": "Problem 1439",
      "value": 1,
      "timestamp": "2025-04-25"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1439",
      "value": 1,
      "timestamp": "2025-04-25"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1439",
      "value": 1,
      "timestamp": "2025-04-25"
    },
    {
      "source": "Matrix",
      "target": "Problem 1439",
      "value": 1,
      "timestamp": "2025-04-25"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1443",
      "value": 1,
      "timestamp": "2025-04-25"
    },
    {
      "source": "Tree",
      "target": "Problem 1443",
      "value": 1,
      "timestamp": "2025-04-25"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1443",
      "value": 1,
      "timestamp": "2025-04-25"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1443",
      "value": 1,
      "timestamp": "2025-04-25"
    },
    {
      "source": "String",
      "target": "Problem 1446",
      "value": 1,
      "timestamp": "2025-04-26"
    },
    {
      "source": "Array",
      "target": "Problem 1444",
      "value": 1,
      "timestamp": "2025-04-26"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1444",
      "value": 1,
      "timestamp": "2025-04-26"
    },
    {
      "source": "Memoization",
      "target": "Problem 1444",
      "value": 1,
      "timestamp": "2025-04-26"
    },
    {
      "source": "Matrix",
      "target": "Problem 1444",
      "value": 1,
      "timestamp": "2025-04-26"
    },
    {
      "source": "Array",
      "target": "Problem 1441",
      "value": 1,
      "timestamp": "2025-04-26"
    },
    {
      "source": "Stack",
      "target": "Problem 1441",
      "value": 1,
      "timestamp": "2025-04-26"
    },
    {
      "source": "Simulation",
      "target": "Problem 1441",
      "value": 1,
      "timestamp": "2025-04-26"
    },
    {
      "source": "Array",
      "target": "Problem 1449",
      "value": 1,
      "timestamp": "2025-04-27"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1449",
      "value": 1,
      "timestamp": "2025-04-27"
    },
    {
      "source": "String",
      "target": "Problem 1451",
      "value": 1,
      "timestamp": "2025-04-27"
    },
    {
      "source": "Sorting",
      "target": "Problem 1451",
      "value": 1,
      "timestamp": "2025-04-27"
    },
    {
      "source": "Array",
      "target": "Problem 1452",
      "value": 1,
      "timestamp": "2025-04-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1452",
      "value": 1,
      "timestamp": "2025-04-27"
    },
    {
      "source": "String",
      "target": "Problem 1452",
      "value": 1,
      "timestamp": "2025-04-27"
    },
    {
      "source": "Array",
      "target": "Problem 1453",
      "value": 1,
      "timestamp": "2025-04-28"
    },
    {
      "source": "Math",
      "target": "Problem 1453",
      "value": 1,
      "timestamp": "2025-04-28"
    },
    {
      "source": "Geometry",
      "target": "Problem 1453",
      "value": 1,
      "timestamp": "2025-04-28"
    },
    {
      "source": "Math",
      "target": "Problem 1447",
      "value": 1,
      "timestamp": "2025-04-28"
    },
    {
      "source": "String",
      "target": "Problem 1447",
      "value": 1,
      "timestamp": "2025-04-28"
    },
    {
      "source": "Number Theory",
      "target": "Problem 1447",
      "value": 1,
      "timestamp": "2025-04-28"
    },
    {
      "source": "Tree",
      "target": "Problem 1448",
      "value": 1,
      "timestamp": "2025-04-28"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1448",
      "value": 1,
      "timestamp": "2025-04-28"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1448",
      "value": 1,
      "timestamp": "2025-04-28"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1448",
      "value": 1,
      "timestamp": "2025-04-28"
    },
    {
      "source": "Array",
      "target": "Problem 1450",
      "value": 1,
      "timestamp": "2025-04-29"
    },
    {
      "source": "Array",
      "target": "Problem 1458",
      "value": 1,
      "timestamp": "2025-04-30"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1458",
      "value": 1,
      "timestamp": "2025-04-30"
    },
    {
      "source": "String",
      "target": "Problem 1456",
      "value": 1,
      "timestamp": "2025-04-30"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1456",
      "value": 1,
      "timestamp": "2025-04-30"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1455",
      "value": 1,
      "timestamp": "2025-04-30"
    },
    {
      "source": "String",
      "target": "Problem 1455",
      "value": 1,
      "timestamp": "2025-04-30"
    },
    {
      "source": "String Matching",
      "target": "Problem 1455",
      "value": 1,
      "timestamp": "2025-04-30"
    },
    {
      "source": "Array",
      "target": "Problem 1460",
      "value": 1,
      "timestamp": "2025-05-01"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1460",
      "value": 1,
      "timestamp": "2025-05-01"
    },
    {
      "source": "Sorting",
      "target": "Problem 1460",
      "value": 1,
      "timestamp": "2025-05-01"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1457",
      "value": 1,
      "timestamp": "2025-05-01"
    },
    {
      "source": "Tree",
      "target": "Problem 1457",
      "value": 1,
      "timestamp": "2025-05-01"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1457",
      "value": 1,
      "timestamp": "2025-05-01"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1457",
      "value": 1,
      "timestamp": "2025-05-01"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1457",
      "value": 1,
      "timestamp": "2025-05-01"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1461",
      "value": 1,
      "timestamp": "2025-05-01"
    },
    {
      "source": "String",
      "target": "Problem 1461",
      "value": 1,
      "timestamp": "2025-05-01"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1461",
      "value": 1,
      "timestamp": "2025-05-01"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 1461",
      "value": 1,
      "timestamp": "2025-05-01"
    },
    {
      "source": "Hash Function",
      "target": "Problem 1461",
      "value": 1,
      "timestamp": "2025-05-01"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1462",
      "value": 1,
      "timestamp": "2025-05-02"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1462",
      "value": 1,
      "timestamp": "2025-05-02"
    },
    {
      "source": "Graph",
      "target": "Problem 1462",
      "value": 1,
      "timestamp": "2025-05-02"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 1462",
      "value": 1,
      "timestamp": "2025-05-02"
    },
    {
      "source": "Array",
      "target": "Problem 1463",
      "value": 1,
      "timestamp": "2025-05-02"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1463",
      "value": 1,
      "timestamp": "2025-05-02"
    },
    {
      "source": "Matrix",
      "target": "Problem 1463",
      "value": 1,
      "timestamp": "2025-05-02"
    },
    {
      "source": "Array",
      "target": "Problem 1464",
      "value": 1,
      "timestamp": "2025-05-03"
    },
    {
      "source": "Sorting",
      "target": "Problem 1464",
      "value": 1,
      "timestamp": "2025-05-03"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1464",
      "value": 1,
      "timestamp": "2025-05-03"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1466",
      "value": 1,
      "timestamp": "2025-05-03"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1466",
      "value": 1,
      "timestamp": "2025-05-03"
    },
    {
      "source": "Graph",
      "target": "Problem 1466",
      "value": 1,
      "timestamp": "2025-05-03"
    },
    {
      "source": "Array",
      "target": "Problem 1467",
      "value": 1,
      "timestamp": "2025-05-04"
    },
    {
      "source": "Math",
      "target": "Problem 1467",
      "value": 1,
      "timestamp": "2025-05-04"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1467",
      "value": 1,
      "timestamp": "2025-05-04"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1467",
      "value": 1,
      "timestamp": "2025-05-04"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 1467",
      "value": 1,
      "timestamp": "2025-05-04"
    },
    {
      "source": "Probability and Statistics",
      "target": "Problem 1467",
      "value": 1,
      "timestamp": "2025-05-04"
    },
    {
      "source": "Array",
      "target": "Problem 1465",
      "value": 1,
      "timestamp": "2025-05-04"
    },
    {
      "source": "Greedy",
      "target": "Problem 1465",
      "value": 1,
      "timestamp": "2025-05-04"
    },
    {
      "source": "Sorting",
      "target": "Problem 1465",
      "value": 1,
      "timestamp": "2025-05-04"
    },
    {
      "source": "Array",
      "target": "Problem 1470",
      "value": 1,
      "timestamp": "2025-05-04"
    },
    {
      "source": "Array",
      "target": "Problem 1471",
      "value": 1,
      "timestamp": "2025-05-05"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1471",
      "value": 1,
      "timestamp": "2025-05-05"
    },
    {
      "source": "Sorting",
      "target": "Problem 1471",
      "value": 1,
      "timestamp": "2025-05-05"
    },
    {
      "source": "Array",
      "target": "Problem 1472",
      "value": 1,
      "timestamp": "2025-05-05"
    },
    {
      "source": "Linked List",
      "target": "Problem 1472",
      "value": 1,
      "timestamp": "2025-05-05"
    },
    {
      "source": "Stack",
      "target": "Problem 1472",
      "value": 1,
      "timestamp": "2025-05-05"
    },
    {
      "source": "Design",
      "target": "Problem 1472",
      "value": 1,
      "timestamp": "2025-05-05"
    },
    {
      "source": "Doubly-Linked List",
      "target": "Problem 1472",
      "value": 1,
      "timestamp": "2025-05-05"
    },
    {
      "source": "Data Stream",
      "target": "Problem 1472",
      "value": 1,
      "timestamp": "2025-05-05"
    },
    {
      "source": "Array",
      "target": "Problem 1473",
      "value": 1,
      "timestamp": "2025-05-06"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1473",
      "value": 1,
      "timestamp": "2025-05-06"
    },
    {
      "source": "Array",
      "target": "Problem 1475",
      "value": 1,
      "timestamp": "2025-05-06"
    },
    {
      "source": "Stack",
      "target": "Problem 1475",
      "value": 1,
      "timestamp": "2025-05-06"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 1475",
      "value": 1,
      "timestamp": "2025-05-06"
    },
    {
      "source": "Array",
      "target": "Problem 1476",
      "value": 1,
      "timestamp": "2025-05-06"
    },
    {
      "source": "Design",
      "target": "Problem 1476",
      "value": 1,
      "timestamp": "2025-05-06"
    },
    {
      "source": "Matrix",
      "target": "Problem 1476",
      "value": 1,
      "timestamp": "2025-05-06"
    },
    {
      "source": "Array",
      "target": "Problem 1477",
      "value": 1,
      "timestamp": "2025-05-07"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1477",
      "value": 1,
      "timestamp": "2025-05-07"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1477",
      "value": 1,
      "timestamp": "2025-05-07"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1477",
      "value": 1,
      "timestamp": "2025-05-07"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1477",
      "value": 1,
      "timestamp": "2025-05-07"
    },
    {
      "source": "Array",
      "target": "Problem 1478",
      "value": 1,
      "timestamp": "2025-05-07"
    },
    {
      "source": "Math",
      "target": "Problem 1478",
      "value": 1,
      "timestamp": "2025-05-07"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1478",
      "value": 1,
      "timestamp": "2025-05-07"
    },
    {
      "source": "Sorting",
      "target": "Problem 1478",
      "value": 1,
      "timestamp": "2025-05-07"
    },
    {
      "source": "Array",
      "target": "Problem 1480",
      "value": 1,
      "timestamp": "2025-05-08"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1480",
      "value": 1,
      "timestamp": "2025-05-08"
    },
    {
      "source": "Array",
      "target": "Problem 1482",
      "value": 1,
      "timestamp": "2025-05-08"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1482",
      "value": 1,
      "timestamp": "2025-05-08"
    },
    {
      "source": "Array",
      "target": "Problem 1481",
      "value": 1,
      "timestamp": "2025-05-08"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1481",
      "value": 1,
      "timestamp": "2025-05-08"
    },
    {
      "source": "Greedy",
      "target": "Problem 1481",
      "value": 1,
      "timestamp": "2025-05-08"
    },
    {
      "source": "Sorting",
      "target": "Problem 1481",
      "value": 1,
      "timestamp": "2025-05-08"
    },
    {
      "source": "Counting",
      "target": "Problem 1481",
      "value": 1,
      "timestamp": "2025-05-08"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1483",
      "value": 1,
      "timestamp": "2025-05-09"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1483",
      "value": 1,
      "timestamp": "2025-05-09"
    },
    {
      "source": "Tree",
      "target": "Problem 1483",
      "value": 1,
      "timestamp": "2025-05-09"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1483",
      "value": 1,
      "timestamp": "2025-05-09"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1483",
      "value": 1,
      "timestamp": "2025-05-09"
    },
    {
      "source": "Design",
      "target": "Problem 1483",
      "value": 1,
      "timestamp": "2025-05-09"
    },
    {
      "source": "Math",
      "target": "Problem 1486",
      "value": 1,
      "timestamp": "2025-05-09"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1486",
      "value": 1,
      "timestamp": "2025-05-09"
    },
    {
      "source": "Array",
      "target": "Problem 1487",
      "value": 1,
      "timestamp": "2025-05-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1487",
      "value": 1,
      "timestamp": "2025-05-10"
    },
    {
      "source": "String",
      "target": "Problem 1487",
      "value": 1,
      "timestamp": "2025-05-10"
    },
    {
      "source": "Database",
      "target": "Problem 1484",
      "value": 1,
      "timestamp": "2025-05-10"
    },
    {
      "source": "Union Find",
      "target": "Problem 1489",
      "value": 1,
      "timestamp": "2025-05-10"
    },
    {
      "source": "Graph",
      "target": "Problem 1489",
      "value": 1,
      "timestamp": "2025-05-10"
    },
    {
      "source": "Sorting",
      "target": "Problem 1489",
      "value": 1,
      "timestamp": "2025-05-10"
    },
    {
      "source": "Minimum Spanning Tree",
      "target": "Problem 1489",
      "value": 1,
      "timestamp": "2025-05-10"
    },
    {
      "source": "Strongly Connected Component",
      "target": "Problem 1489",
      "value": 1,
      "timestamp": "2025-05-10"
    },
    {
      "source": "Array",
      "target": "Problem 1488",
      "value": 1,
      "timestamp": "2025-05-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1488",
      "value": 1,
      "timestamp": "2025-05-11"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1488",
      "value": 1,
      "timestamp": "2025-05-11"
    },
    {
      "source": "Greedy",
      "target": "Problem 1488",
      "value": 1,
      "timestamp": "2025-05-11"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1488",
      "value": 1,
      "timestamp": "2025-05-11"
    },
    {
      "source": "Array",
      "target": "Problem 1491",
      "value": 1,
      "timestamp": "2025-05-11"
    },
    {
      "source": "Sorting",
      "target": "Problem 1491",
      "value": 1,
      "timestamp": "2025-05-11"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1494",
      "value": 1,
      "timestamp": "2025-05-12"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1494",
      "value": 1,
      "timestamp": "2025-05-12"
    },
    {
      "source": "Graph",
      "target": "Problem 1494",
      "value": 1,
      "timestamp": "2025-05-12"
    },
    {
      "source": "Bitmask",
      "target": "Problem 1494",
      "value": 1,
      "timestamp": "2025-05-12"
    },
    {
      "source": "Array",
      "target": "Problem 1497",
      "value": 1,
      "timestamp": "2025-05-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1497",
      "value": 1,
      "timestamp": "2025-05-12"
    },
    {
      "source": "Counting",
      "target": "Problem 1497",
      "value": 1,
      "timestamp": "2025-05-12"
    },
    {
      "source": "Math",
      "target": "Problem 1492",
      "value": 1,
      "timestamp": "2025-05-13"
    },
    {
      "source": "Number Theory",
      "target": "Problem 1492",
      "value": 1,
      "timestamp": "2025-05-13"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1496",
      "value": 1,
      "timestamp": "2025-05-13"
    },
    {
      "source": "String",
      "target": "Problem 1496",
      "value": 1,
      "timestamp": "2025-05-13"
    },
    {
      "source": "Array",
      "target": "Problem 1498",
      "value": 1,
      "timestamp": "2025-05-14"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1498",
      "value": 1,
      "timestamp": "2025-05-14"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1498",
      "value": 1,
      "timestamp": "2025-05-14"
    },
    {
      "source": "Sorting",
      "target": "Problem 1498",
      "value": 1,
      "timestamp": "2025-05-14"
    },
    {
      "source": "Array",
      "target": "Problem 1499",
      "value": 1,
      "timestamp": "2025-05-14"
    },
    {
      "source": "Queue",
      "target": "Problem 1499",
      "value": 1,
      "timestamp": "2025-05-14"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1499",
      "value": 1,
      "timestamp": "2025-05-14"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1499",
      "value": 1,
      "timestamp": "2025-05-14"
    },
    {
      "source": "Monotonic Queue",
      "target": "Problem 1499",
      "value": 1,
      "timestamp": "2025-05-14"
    },
    {
      "source": "Array",
      "target": "Problem 1504",
      "value": 1,
      "timestamp": "2025-05-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1504",
      "value": 1,
      "timestamp": "2025-05-15"
    },
    {
      "source": "Stack",
      "target": "Problem 1504",
      "value": 1,
      "timestamp": "2025-05-15"
    },
    {
      "source": "Matrix",
      "target": "Problem 1504",
      "value": 1,
      "timestamp": "2025-05-15"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 1504",
      "value": 1,
      "timestamp": "2025-05-15"
    },
    {
      "source": "Array",
      "target": "Problem 1502",
      "value": 1,
      "timestamp": "2025-05-15"
    },
    {
      "source": "Sorting",
      "target": "Problem 1502",
      "value": 1,
      "timestamp": "2025-05-15"
    },
    {
      "source": "Array",
      "target": "Problem 1503",
      "value": 1,
      "timestamp": "2025-05-16"
    },
    {
      "source": "Brainteaser",
      "target": "Problem 1503",
      "value": 1,
      "timestamp": "2025-05-16"
    },
    {
      "source": "Simulation",
      "target": "Problem 1503",
      "value": 1,
      "timestamp": "2025-05-16"
    },
    {
      "source": "String",
      "target": "Problem 1505",
      "value": 1,
      "timestamp": "2025-05-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 1505",
      "value": 1,
      "timestamp": "2025-05-16"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 1505",
      "value": 1,
      "timestamp": "2025-05-16"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 1505",
      "value": 1,
      "timestamp": "2025-05-16"
    },
    {
      "source": "Math",
      "target": "Problem 1513",
      "value": 1,
      "timestamp": "2025-05-16"
    },
    {
      "source": "String",
      "target": "Problem 1513",
      "value": 1,
      "timestamp": "2025-05-16"
    },
    {
      "source": "Math",
      "target": "Problem 1510",
      "value": 1,
      "timestamp": "2025-05-17"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1510",
      "value": 1,
      "timestamp": "2025-05-17"
    },
    {
      "source": "Game Theory",
      "target": "Problem 1510",
      "value": 1,
      "timestamp": "2025-05-17"
    },
    {
      "source": "Array",
      "target": "Problem 1508",
      "value": 1,
      "timestamp": "2025-05-17"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1508",
      "value": 1,
      "timestamp": "2025-05-17"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1508",
      "value": 1,
      "timestamp": "2025-05-17"
    },
    {
      "source": "Sorting",
      "target": "Problem 1508",
      "value": 1,
      "timestamp": "2025-05-17"
    },
    {
      "source": "String",
      "target": "Problem 1507",
      "value": 1,
      "timestamp": "2025-05-18"
    },
    {
      "source": "Array",
      "target": "Problem 1509",
      "value": 1,
      "timestamp": "2025-05-18"
    },
    {
      "source": "Greedy",
      "target": "Problem 1509",
      "value": 1,
      "timestamp": "2025-05-18"
    },
    {
      "source": "Sorting",
      "target": "Problem 1509",
      "value": 1,
      "timestamp": "2025-05-18"
    },
    {
      "source": "Array",
      "target": "Problem 1512",
      "value": 1,
      "timestamp": "2025-05-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1512",
      "value": 1,
      "timestamp": "2025-05-19"
    },
    {
      "source": "Math",
      "target": "Problem 1512",
      "value": 1,
      "timestamp": "2025-05-19"
    },
    {
      "source": "Counting",
      "target": "Problem 1512",
      "value": 1,
      "timestamp": "2025-05-19"
    },
    {
      "source": "Array",
      "target": "Problem 1514",
      "value": 1,
      "timestamp": "2025-05-19"
    },
    {
      "source": "Graph",
      "target": "Problem 1514",
      "value": 1,
      "timestamp": "2025-05-19"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1514",
      "value": 1,
      "timestamp": "2025-05-19"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 1514",
      "value": 1,
      "timestamp": "2025-05-19"
    },
    {
      "source": "Array",
      "target": "Problem 1515",
      "value": 1,
      "timestamp": "2025-05-19"
    },
    {
      "source": "Math",
      "target": "Problem 1515",
      "value": 1,
      "timestamp": "2025-05-19"
    },
    {
      "source": "Geometry",
      "target": "Problem 1515",
      "value": 1,
      "timestamp": "2025-05-19"
    },
    {
      "source": "Randomized",
      "target": "Problem 1515",
      "value": 1,
      "timestamp": "2025-05-19"
    },
    {
      "source": "Database",
      "target": "Problem 1517",
      "value": 1,
      "timestamp": "2025-05-20"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1519",
      "value": 1,
      "timestamp": "2025-05-20"
    },
    {
      "source": "Tree",
      "target": "Problem 1519",
      "value": 1,
      "timestamp": "2025-05-20"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1519",
      "value": 1,
      "timestamp": "2025-05-20"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1519",
      "value": 1,
      "timestamp": "2025-05-20"
    },
    {
      "source": "Counting",
      "target": "Problem 1519",
      "value": 1,
      "timestamp": "2025-05-20"
    },
    {
      "source": "Math",
      "target": "Problem 1518",
      "value": 1,
      "timestamp": "2025-05-21"
    },
    {
      "source": "Simulation",
      "target": "Problem 1518",
      "value": 1,
      "timestamp": "2025-05-21"
    },
    {
      "source": "String",
      "target": "Problem 1520",
      "value": 1,
      "timestamp": "2025-05-21"
    },
    {
      "source": "Greedy",
      "target": "Problem 1520",
      "value": 1,
      "timestamp": "2025-05-21"
    },
    {
      "source": "Array",
      "target": "Problem 1521",
      "value": 1,
      "timestamp": "2025-05-21"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1521",
      "value": 1,
      "timestamp": "2025-05-21"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1521",
      "value": 1,
      "timestamp": "2025-05-21"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 1521",
      "value": 1,
      "timestamp": "2025-05-21"
    },
    {
      "source": "Math",
      "target": "Problem 1523",
      "value": 1,
      "timestamp": "2025-05-22"
    },
    {
      "source": "Array",
      "target": "Problem 1524",
      "value": 1,
      "timestamp": "2025-05-22"
    },
    {
      "source": "Math",
      "target": "Problem 1524",
      "value": 1,
      "timestamp": "2025-05-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1524",
      "value": 1,
      "timestamp": "2025-05-22"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1524",
      "value": 1,
      "timestamp": "2025-05-22"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1525",
      "value": 1,
      "timestamp": "2025-05-23"
    },
    {
      "source": "String",
      "target": "Problem 1525",
      "value": 1,
      "timestamp": "2025-05-23"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1525",
      "value": 1,
      "timestamp": "2025-05-23"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1525",
      "value": 1,
      "timestamp": "2025-05-23"
    },
    {
      "source": "Array",
      "target": "Problem 1526",
      "value": 1,
      "timestamp": "2025-05-23"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1526",
      "value": 1,
      "timestamp": "2025-05-23"
    },
    {
      "source": "Stack",
      "target": "Problem 1526",
      "value": 1,
      "timestamp": "2025-05-23"
    },
    {
      "source": "Greedy",
      "target": "Problem 1526",
      "value": 1,
      "timestamp": "2025-05-23"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 1526",
      "value": 1,
      "timestamp": "2025-05-23"
    },
    {
      "source": "Array",
      "target": "Problem 1528",
      "value": 1,
      "timestamp": "2025-05-23"
    },
    {
      "source": "String",
      "target": "Problem 1528",
      "value": 1,
      "timestamp": "2025-05-23"
    },
    {
      "source": "Database",
      "target": "Problem 1527",
      "value": 1,
      "timestamp": "2025-05-24"
    },
    {
      "source": "String",
      "target": "Problem 1529",
      "value": 1,
      "timestamp": "2025-05-24"
    },
    {
      "source": "Greedy",
      "target": "Problem 1529",
      "value": 1,
      "timestamp": "2025-05-24"
    },
    {
      "source": "Tree",
      "target": "Problem 1530",
      "value": 1,
      "timestamp": "2025-05-24"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1530",
      "value": 1,
      "timestamp": "2025-05-24"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1530",
      "value": 1,
      "timestamp": "2025-05-24"
    },
    {
      "source": "String",
      "target": "Problem 1531",
      "value": 1,
      "timestamp": "2025-05-25"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1531",
      "value": 1,
      "timestamp": "2025-05-25"
    },
    {
      "source": "Array",
      "target": "Problem 1535",
      "value": 1,
      "timestamp": "2025-05-26"
    },
    {
      "source": "Simulation",
      "target": "Problem 1535",
      "value": 1,
      "timestamp": "2025-05-26"
    },
    {
      "source": "Array",
      "target": "Problem 1536",
      "value": 1,
      "timestamp": "2025-05-26"
    },
    {
      "source": "Greedy",
      "target": "Problem 1536",
      "value": 1,
      "timestamp": "2025-05-26"
    },
    {
      "source": "Matrix",
      "target": "Problem 1536",
      "value": 1,
      "timestamp": "2025-05-26"
    },
    {
      "source": "Array",
      "target": "Problem 1537",
      "value": 1,
      "timestamp": "2025-05-26"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1537",
      "value": 1,
      "timestamp": "2025-05-26"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1537",
      "value": 1,
      "timestamp": "2025-05-26"
    },
    {
      "source": "Greedy",
      "target": "Problem 1537",
      "value": 1,
      "timestamp": "2025-05-26"
    },
    {
      "source": "Array",
      "target": "Problem 1534",
      "value": 1,
      "timestamp": "2025-05-27"
    },
    {
      "source": "Enumeration",
      "target": "Problem 1534",
      "value": 1,
      "timestamp": "2025-05-27"
    },
    {
      "source": "Array",
      "target": "Problem 1539",
      "value": 1,
      "timestamp": "2025-05-27"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1539",
      "value": 1,
      "timestamp": "2025-05-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1540",
      "value": 1,
      "timestamp": "2025-05-28"
    },
    {
      "source": "String",
      "target": "Problem 1540",
      "value": 1,
      "timestamp": "2025-05-28"
    },
    {
      "source": "String",
      "target": "Problem 1541",
      "value": 1,
      "timestamp": "2025-05-28"
    },
    {
      "source": "Stack",
      "target": "Problem 1541",
      "value": 1,
      "timestamp": "2025-05-28"
    },
    {
      "source": "Greedy",
      "target": "Problem 1541",
      "value": 1,
      "timestamp": "2025-05-28"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1542",
      "value": 1,
      "timestamp": "2025-05-28"
    },
    {
      "source": "String",
      "target": "Problem 1542",
      "value": 1,
      "timestamp": "2025-05-28"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1542",
      "value": 1,
      "timestamp": "2025-05-28"
    },
    {
      "source": "String",
      "target": "Problem 1544",
      "value": 1,
      "timestamp": "2025-05-29"
    },
    {
      "source": "Stack",
      "target": "Problem 1544",
      "value": 1,
      "timestamp": "2025-05-29"
    },
    {
      "source": "String",
      "target": "Problem 1545",
      "value": 1,
      "timestamp": "2025-05-30"
    },
    {
      "source": "Recursion",
      "target": "Problem 1545",
      "value": 1,
      "timestamp": "2025-05-30"
    },
    {
      "source": "Simulation",
      "target": "Problem 1545",
      "value": 1,
      "timestamp": "2025-05-30"
    },
    {
      "source": "Array",
      "target": "Problem 1547",
      "value": 1,
      "timestamp": "2025-05-30"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1547",
      "value": 1,
      "timestamp": "2025-05-30"
    },
    {
      "source": "Sorting",
      "target": "Problem 1547",
      "value": 1,
      "timestamp": "2025-05-30"
    },
    {
      "source": "Array",
      "target": "Problem 1546",
      "value": 1,
      "timestamp": "2025-05-30"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1546",
      "value": 1,
      "timestamp": "2025-05-30"
    },
    {
      "source": "Greedy",
      "target": "Problem 1546",
      "value": 1,
      "timestamp": "2025-05-30"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1546",
      "value": 1,
      "timestamp": "2025-05-30"
    },
    {
      "source": "Array",
      "target": "Problem 1552",
      "value": 1,
      "timestamp": "2025-05-31"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1552",
      "value": 1,
      "timestamp": "2025-05-31"
    },
    {
      "source": "Sorting",
      "target": "Problem 1552",
      "value": 1,
      "timestamp": "2025-05-31"
    },
    {
      "source": "Array",
      "target": "Problem 1550",
      "value": 1,
      "timestamp": "2025-05-31"
    },
    {
      "source": "Math",
      "target": "Problem 1551",
      "value": 1,
      "timestamp": "2025-06-01"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1553",
      "value": 1,
      "timestamp": "2025-06-01"
    },
    {
      "source": "Memoization",
      "target": "Problem 1553",
      "value": 1,
      "timestamp": "2025-06-01"
    },
    {
      "source": "String",
      "target": "Problem 1556",
      "value": 1,
      "timestamp": "2025-06-02"
    },
    {
      "source": "Array",
      "target": "Problem 1560",
      "value": 1,
      "timestamp": "2025-06-02"
    },
    {
      "source": "Simulation",
      "target": "Problem 1560",
      "value": 1,
      "timestamp": "2025-06-02"
    },
    {
      "source": "Array",
      "target": "Problem 1558",
      "value": 1,
      "timestamp": "2025-06-03"
    },
    {
      "source": "Greedy",
      "target": "Problem 1558",
      "value": 1,
      "timestamp": "2025-06-03"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1558",
      "value": 1,
      "timestamp": "2025-06-03"
    },
    {
      "source": "Array",
      "target": "Problem 1559",
      "value": 1,
      "timestamp": "2025-06-03"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1559",
      "value": 1,
      "timestamp": "2025-06-03"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1559",
      "value": 1,
      "timestamp": "2025-06-03"
    },
    {
      "source": "Union Find",
      "target": "Problem 1559",
      "value": 1,
      "timestamp": "2025-06-03"
    },
    {
      "source": "Matrix",
      "target": "Problem 1559",
      "value": 1,
      "timestamp": "2025-06-03"
    },
    {
      "source": "Array",
      "target": "Problem 1561",
      "value": 1,
      "timestamp": "2025-06-03"
    },
    {
      "source": "Math",
      "target": "Problem 1561",
      "value": 1,
      "timestamp": "2025-06-03"
    },
    {
      "source": "Greedy",
      "target": "Problem 1561",
      "value": 1,
      "timestamp": "2025-06-03"
    },
    {
      "source": "Sorting",
      "target": "Problem 1561",
      "value": 1,
      "timestamp": "2025-06-03"
    },
    {
      "source": "Game Theory",
      "target": "Problem 1561",
      "value": 1,
      "timestamp": "2025-06-03"
    },
    {
      "source": "Array",
      "target": "Problem 1562",
      "value": 1,
      "timestamp": "2025-06-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1562",
      "value": 1,
      "timestamp": "2025-06-04"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1562",
      "value": 1,
      "timestamp": "2025-06-04"
    },
    {
      "source": "Simulation",
      "target": "Problem 1562",
      "value": 1,
      "timestamp": "2025-06-04"
    },
    {
      "source": "Array",
      "target": "Problem 1563",
      "value": 1,
      "timestamp": "2025-06-04"
    },
    {
      "source": "Math",
      "target": "Problem 1563",
      "value": 1,
      "timestamp": "2025-06-04"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1563",
      "value": 1,
      "timestamp": "2025-06-04"
    },
    {
      "source": "Game Theory",
      "target": "Problem 1563",
      "value": 1,
      "timestamp": "2025-06-04"
    },
    {
      "source": "Graph",
      "target": "Problem 1557",
      "value": 1,
      "timestamp": "2025-06-04"
    },
    {
      "source": "Array",
      "target": "Problem 1567",
      "value": 1,
      "timestamp": "2025-06-05"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1567",
      "value": 1,
      "timestamp": "2025-06-05"
    },
    {
      "source": "Greedy",
      "target": "Problem 1567",
      "value": 1,
      "timestamp": "2025-06-05"
    },
    {
      "source": "Array",
      "target": "Problem 1566",
      "value": 1,
      "timestamp": "2025-06-05"
    },
    {
      "source": "Enumeration",
      "target": "Problem 1566",
      "value": 1,
      "timestamp": "2025-06-05"
    },
    {
      "source": "Array",
      "target": "Problem 1568",
      "value": 1,
      "timestamp": "2025-06-06"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1568",
      "value": 1,
      "timestamp": "2025-06-06"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1568",
      "value": 1,
      "timestamp": "2025-06-06"
    },
    {
      "source": "Matrix",
      "target": "Problem 1568",
      "value": 1,
      "timestamp": "2025-06-06"
    },
    {
      "source": "Strongly Connected Component",
      "target": "Problem 1568",
      "value": 1,
      "timestamp": "2025-06-06"
    },
    {
      "source": "Array",
      "target": "Problem 1569",
      "value": 1,
      "timestamp": "2025-06-07"
    },
    {
      "source": "Math",
      "target": "Problem 1569",
      "value": 1,
      "timestamp": "2025-06-07"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 1569",
      "value": 1,
      "timestamp": "2025-06-07"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1569",
      "value": 1,
      "timestamp": "2025-06-07"
    },
    {
      "source": "Tree",
      "target": "Problem 1569",
      "value": 1,
      "timestamp": "2025-06-07"
    },
    {
      "source": "Union Find",
      "target": "Problem 1569",
      "value": 1,
      "timestamp": "2025-06-07"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 1569",
      "value": 1,
      "timestamp": "2025-06-07"
    },
    {
      "source": "Memoization",
      "target": "Problem 1569",
      "value": 1,
      "timestamp": "2025-06-07"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 1569",
      "value": 1,
      "timestamp": "2025-06-07"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1569",
      "value": 1,
      "timestamp": "2025-06-07"
    },
    {
      "source": "Array",
      "target": "Problem 1574",
      "value": 1,
      "timestamp": "2025-06-07"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1574",
      "value": 1,
      "timestamp": "2025-06-07"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1574",
      "value": 1,
      "timestamp": "2025-06-07"
    },
    {
      "source": "Stack",
      "target": "Problem 1574",
      "value": 1,
      "timestamp": "2025-06-07"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 1574",
      "value": 1,
      "timestamp": "2025-06-07"
    },
    {
      "source": "Array",
      "target": "Problem 1575",
      "value": 1,
      "timestamp": "2025-06-08"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1575",
      "value": 1,
      "timestamp": "2025-06-08"
    },
    {
      "source": "Memoization",
      "target": "Problem 1575",
      "value": 1,
      "timestamp": "2025-06-08"
    },
    {
      "source": "Math",
      "target": "Problem 1573",
      "value": 1,
      "timestamp": "2025-06-08"
    },
    {
      "source": "String",
      "target": "Problem 1573",
      "value": 1,
      "timestamp": "2025-06-08"
    },
    {
      "source": "Array",
      "target": "Problem 1572",
      "value": 1,
      "timestamp": "2025-06-08"
    },
    {
      "source": "Matrix",
      "target": "Problem 1572",
      "value": 1,
      "timestamp": "2025-06-08"
    },
    {
      "source": "Union Find",
      "target": "Problem 1579",
      "value": 1,
      "timestamp": "2025-06-09"
    },
    {
      "source": "Graph",
      "target": "Problem 1579",
      "value": 1,
      "timestamp": "2025-06-09"
    },
    {
      "source": "Array",
      "target": "Problem 1577",
      "value": 1,
      "timestamp": "2025-06-09"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1577",
      "value": 1,
      "timestamp": "2025-06-09"
    },
    {
      "source": "Math",
      "target": "Problem 1577",
      "value": 1,
      "timestamp": "2025-06-09"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1577",
      "value": 1,
      "timestamp": "2025-06-09"
    },
    {
      "source": "Array",
      "target": "Problem 1578",
      "value": 1,
      "timestamp": "2025-06-10"
    },
    {
      "source": "String",
      "target": "Problem 1578",
      "value": 1,
      "timestamp": "2025-06-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1578",
      "value": 1,
      "timestamp": "2025-06-10"
    },
    {
      "source": "Greedy",
      "target": "Problem 1578",
      "value": 1,
      "timestamp": "2025-06-10"
    },
    {
      "source": "Array",
      "target": "Problem 1582",
      "value": 1,
      "timestamp": "2025-06-10"
    },
    {
      "source": "Matrix",
      "target": "Problem 1582",
      "value": 1,
      "timestamp": "2025-06-10"
    },
    {
      "source": "Database",
      "target": "Problem 1581",
      "value": 1,
      "timestamp": "2025-06-10"
    },
    {
      "source": "Array",
      "target": "Problem 1583",
      "value": 1,
      "timestamp": "2025-06-11"
    },
    {
      "source": "Simulation",
      "target": "Problem 1583",
      "value": 1,
      "timestamp": "2025-06-11"
    },
    {
      "source": "Array",
      "target": "Problem 1584",
      "value": 1,
      "timestamp": "2025-06-12"
    },
    {
      "source": "Union Find",
      "target": "Problem 1584",
      "value": 1,
      "timestamp": "2025-06-12"
    },
    {
      "source": "Graph",
      "target": "Problem 1584",
      "value": 1,
      "timestamp": "2025-06-12"
    },
    {
      "source": "Minimum Spanning Tree",
      "target": "Problem 1584",
      "value": 1,
      "timestamp": "2025-06-12"
    },
    {
      "source": "String",
      "target": "Problem 1585",
      "value": 1,
      "timestamp": "2025-06-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 1585",
      "value": 1,
      "timestamp": "2025-06-12"
    },
    {
      "source": "Sorting",
      "target": "Problem 1585",
      "value": 1,
      "timestamp": "2025-06-12"
    },
    {
      "source": "Database",
      "target": "Problem 1587",
      "value": 1,
      "timestamp": "2025-06-12"
    },
    {
      "source": "Array",
      "target": "Problem 1589",
      "value": 1,
      "timestamp": "2025-06-13"
    },
    {
      "source": "Greedy",
      "target": "Problem 1589",
      "value": 1,
      "timestamp": "2025-06-13"
    },
    {
      "source": "Sorting",
      "target": "Problem 1589",
      "value": 1,
      "timestamp": "2025-06-13"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1589",
      "value": 1,
      "timestamp": "2025-06-13"
    },
    {
      "source": "Array",
      "target": "Problem 1588",
      "value": 1,
      "timestamp": "2025-06-13"
    },
    {
      "source": "Math",
      "target": "Problem 1588",
      "value": 1,
      "timestamp": "2025-06-13"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1588",
      "value": 1,
      "timestamp": "2025-06-13"
    },
    {
      "source": "Array",
      "target": "Problem 1590",
      "value": 1,
      "timestamp": "2025-06-13"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1590",
      "value": 1,
      "timestamp": "2025-06-13"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1590",
      "value": 1,
      "timestamp": "2025-06-13"
    },
    {
      "source": "Array",
      "target": "Problem 1591",
      "value": 1,
      "timestamp": "2025-06-14"
    },
    {
      "source": "Graph",
      "target": "Problem 1591",
      "value": 1,
      "timestamp": "2025-06-14"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 1591",
      "value": 1,
      "timestamp": "2025-06-14"
    },
    {
      "source": "Matrix",
      "target": "Problem 1591",
      "value": 1,
      "timestamp": "2025-06-14"
    },
    {
      "source": "String",
      "target": "Problem 1592",
      "value": 1,
      "timestamp": "2025-06-14"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1593",
      "value": 1,
      "timestamp": "2025-06-14"
    },
    {
      "source": "String",
      "target": "Problem 1593",
      "value": 1,
      "timestamp": "2025-06-14"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1593",
      "value": 1,
      "timestamp": "2025-06-14"
    },
    {
      "source": "Array",
      "target": "Problem 1594",
      "value": 1,
      "timestamp": "2025-06-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1594",
      "value": 1,
      "timestamp": "2025-06-15"
    },
    {
      "source": "Matrix",
      "target": "Problem 1594",
      "value": 1,
      "timestamp": "2025-06-15"
    },
    {
      "source": "Array",
      "target": "Problem 1595",
      "value": 1,
      "timestamp": "2025-06-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1595",
      "value": 1,
      "timestamp": "2025-06-15"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1595",
      "value": 1,
      "timestamp": "2025-06-15"
    },
    {
      "source": "Matrix",
      "target": "Problem 1595",
      "value": 1,
      "timestamp": "2025-06-15"
    },
    {
      "source": "Bitmask",
      "target": "Problem 1595",
      "value": 1,
      "timestamp": "2025-06-15"
    },
    {
      "source": "Array",
      "target": "Problem 1598",
      "value": 1,
      "timestamp": "2025-06-16"
    },
    {
      "source": "String",
      "target": "Problem 1598",
      "value": 1,
      "timestamp": "2025-06-16"
    },
    {
      "source": "Stack",
      "target": "Problem 1598",
      "value": 1,
      "timestamp": "2025-06-16"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1600",
      "value": 1,
      "timestamp": "2025-06-16"
    },
    {
      "source": "Tree",
      "target": "Problem 1600",
      "value": 1,
      "timestamp": "2025-06-16"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1600",
      "value": 1,
      "timestamp": "2025-06-16"
    },
    {
      "source": "Design",
      "target": "Problem 1600",
      "value": 1,
      "timestamp": "2025-06-16"
    },
    {
      "source": "Array",
      "target": "Problem 1601",
      "value": 1,
      "timestamp": "2025-06-16"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1601",
      "value": 1,
      "timestamp": "2025-06-16"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1601",
      "value": 1,
      "timestamp": "2025-06-16"
    },
    {
      "source": "Enumeration",
      "target": "Problem 1601",
      "value": 1,
      "timestamp": "2025-06-16"
    },
    {
      "source": "Design",
      "target": "Problem 1603",
      "value": 1,
      "timestamp": "2025-06-17"
    },
    {
      "source": "Simulation",
      "target": "Problem 1603",
      "value": 1,
      "timestamp": "2025-06-17"
    },
    {
      "source": "Counting",
      "target": "Problem 1603",
      "value": 1,
      "timestamp": "2025-06-17"
    },
    {
      "source": "Array",
      "target": "Problem 1599",
      "value": 1,
      "timestamp": "2025-06-18"
    },
    {
      "source": "Simulation",
      "target": "Problem 1599",
      "value": 1,
      "timestamp": "2025-06-18"
    },
    {
      "source": "Array",
      "target": "Problem 1604",
      "value": 1,
      "timestamp": "2025-06-18"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1604",
      "value": 1,
      "timestamp": "2025-06-18"
    },
    {
      "source": "String",
      "target": "Problem 1604",
      "value": 1,
      "timestamp": "2025-06-18"
    },
    {
      "source": "Sorting",
      "target": "Problem 1604",
      "value": 1,
      "timestamp": "2025-06-18"
    },
    {
      "source": "Array",
      "target": "Problem 1606",
      "value": 1,
      "timestamp": "2025-06-18"
    },
    {
      "source": "Greedy",
      "target": "Problem 1606",
      "value": 1,
      "timestamp": "2025-06-18"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1606",
      "value": 1,
      "timestamp": "2025-06-18"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 1606",
      "value": 1,
      "timestamp": "2025-06-18"
    },
    {
      "source": "Array",
      "target": "Problem 1605",
      "value": 1,
      "timestamp": "2025-06-19"
    },
    {
      "source": "Greedy",
      "target": "Problem 1605",
      "value": 1,
      "timestamp": "2025-06-19"
    },
    {
      "source": "Matrix",
      "target": "Problem 1605",
      "value": 1,
      "timestamp": "2025-06-19"
    },
    {
      "source": "Array",
      "target": "Problem 1608",
      "value": 1,
      "timestamp": "2025-06-19"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1608",
      "value": 1,
      "timestamp": "2025-06-19"
    },
    {
      "source": "Sorting",
      "target": "Problem 1608",
      "value": 1,
      "timestamp": "2025-06-19"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1611",
      "value": 1,
      "timestamp": "2025-06-20"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1611",
      "value": 1,
      "timestamp": "2025-06-20"
    },
    {
      "source": "Memoization",
      "target": "Problem 1611",
      "value": 1,
      "timestamp": "2025-06-20"
    },
    {
      "source": "Array",
      "target": "Problem 1610",
      "value": 1,
      "timestamp": "2025-06-20"
    },
    {
      "source": "Math",
      "target": "Problem 1610",
      "value": 1,
      "timestamp": "2025-06-20"
    },
    {
      "source": "Geometry",
      "target": "Problem 1610",
      "value": 1,
      "timestamp": "2025-06-20"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1610",
      "value": 1,
      "timestamp": "2025-06-20"
    },
    {
      "source": "Sorting",
      "target": "Problem 1610",
      "value": 1,
      "timestamp": "2025-06-20"
    },
    {
      "source": "Tree",
      "target": "Problem 1609",
      "value": 1,
      "timestamp": "2025-06-20"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1609",
      "value": 1,
      "timestamp": "2025-06-20"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1609",
      "value": 1,
      "timestamp": "2025-06-20"
    },
    {
      "source": "String",
      "target": "Problem 1614",
      "value": 1,
      "timestamp": "2025-06-21"
    },
    {
      "source": "Stack",
      "target": "Problem 1614",
      "value": 1,
      "timestamp": "2025-06-21"
    },
    {
      "source": "Array",
      "target": "Problem 1619",
      "value": 1,
      "timestamp": "2025-06-22"
    },
    {
      "source": "Sorting",
      "target": "Problem 1619",
      "value": 1,
      "timestamp": "2025-06-22"
    },
    {
      "source": "Graph",
      "target": "Problem 1615",
      "value": 1,
      "timestamp": "2025-06-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1617",
      "value": 1,
      "timestamp": "2025-06-23"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1617",
      "value": 1,
      "timestamp": "2025-06-23"
    },
    {
      "source": "Tree",
      "target": "Problem 1617",
      "value": 1,
      "timestamp": "2025-06-23"
    },
    {
      "source": "Enumeration",
      "target": "Problem 1617",
      "value": 1,
      "timestamp": "2025-06-23"
    },
    {
      "source": "Bitmask",
      "target": "Problem 1617",
      "value": 1,
      "timestamp": "2025-06-23"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1616",
      "value": 1,
      "timestamp": "2025-06-23"
    },
    {
      "source": "String",
      "target": "Problem 1616",
      "value": 1,
      "timestamp": "2025-06-23"
    },
    {
      "source": "Array",
      "target": "Problem 1620",
      "value": 1,
      "timestamp": "2025-06-23"
    },
    {
      "source": "Enumeration",
      "target": "Problem 1620",
      "value": 1,
      "timestamp": "2025-06-23"
    },
    {
      "source": "Math",
      "target": "Problem 1621",
      "value": 1,
      "timestamp": "2025-06-24"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1621",
      "value": 1,
      "timestamp": "2025-06-24"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 1621",
      "value": 1,
      "timestamp": "2025-06-24"
    },
    {
      "source": "Math",
      "target": "Problem 1622",
      "value": 1,
      "timestamp": "2025-06-24"
    },
    {
      "source": "Design",
      "target": "Problem 1622",
      "value": 1,
      "timestamp": "2025-06-24"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 1622",
      "value": 1,
      "timestamp": "2025-06-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1624",
      "value": 1,
      "timestamp": "2025-06-25"
    },
    {
      "source": "String",
      "target": "Problem 1624",
      "value": 1,
      "timestamp": "2025-06-25"
    },
    {
      "source": "String",
      "target": "Problem 1625",
      "value": 1,
      "timestamp": "2025-06-25"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1625",
      "value": 1,
      "timestamp": "2025-06-25"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1625",
      "value": 1,
      "timestamp": "2025-06-25"
    },
    {
      "source": "Enumeration",
      "target": "Problem 1625",
      "value": 1,
      "timestamp": "2025-06-25"
    },
    {
      "source": "Array",
      "target": "Problem 1626",
      "value": 1,
      "timestamp": "2025-06-26"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1626",
      "value": 1,
      "timestamp": "2025-06-26"
    },
    {
      "source": "Sorting",
      "target": "Problem 1626",
      "value": 1,
      "timestamp": "2025-06-26"
    },
    {
      "source": "Array",
      "target": "Problem 1629",
      "value": 1,
      "timestamp": "2025-06-26"
    },
    {
      "source": "String",
      "target": "Problem 1629",
      "value": 1,
      "timestamp": "2025-06-26"
    },
    {
      "source": "Array",
      "target": "Problem 1627",
      "value": 1,
      "timestamp": "2025-06-26"
    },
    {
      "source": "Math",
      "target": "Problem 1627",
      "value": 1,
      "timestamp": "2025-06-26"
    },
    {
      "source": "Union Find",
      "target": "Problem 1627",
      "value": 1,
      "timestamp": "2025-06-26"
    },
    {
      "source": "Number Theory",
      "target": "Problem 1627",
      "value": 1,
      "timestamp": "2025-06-26"
    },
    {
      "source": "Array",
      "target": "Problem 1630",
      "value": 1,
      "timestamp": "2025-06-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1630",
      "value": 1,
      "timestamp": "2025-06-27"
    },
    {
      "source": "Sorting",
      "target": "Problem 1630",
      "value": 1,
      "timestamp": "2025-06-27"
    },
    {
      "source": "Array",
      "target": "Problem 1631",
      "value": 1,
      "timestamp": "2025-06-27"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1631",
      "value": 1,
      "timestamp": "2025-06-27"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1631",
      "value": 1,
      "timestamp": "2025-06-27"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1631",
      "value": 1,
      "timestamp": "2025-06-27"
    },
    {
      "source": "Union Find",
      "target": "Problem 1631",
      "value": 1,
      "timestamp": "2025-06-27"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1631",
      "value": 1,
      "timestamp": "2025-06-27"
    },
    {
      "source": "Matrix",
      "target": "Problem 1631",
      "value": 1,
      "timestamp": "2025-06-27"
    },
    {
      "source": "Database",
      "target": "Problem 1633",
      "value": 1,
      "timestamp": "2025-06-27"
    },
    {
      "source": "Array",
      "target": "Problem 1632",
      "value": 1,
      "timestamp": "2025-06-28"
    },
    {
      "source": "Union Find",
      "target": "Problem 1632",
      "value": 1,
      "timestamp": "2025-06-28"
    },
    {
      "source": "Graph",
      "target": "Problem 1632",
      "value": 1,
      "timestamp": "2025-06-28"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 1632",
      "value": 1,
      "timestamp": "2025-06-28"
    },
    {
      "source": "Sorting",
      "target": "Problem 1632",
      "value": 1,
      "timestamp": "2025-06-28"
    },
    {
      "source": "Matrix",
      "target": "Problem 1632",
      "value": 1,
      "timestamp": "2025-06-28"
    },
    {
      "source": "Array",
      "target": "Problem 1636",
      "value": 1,
      "timestamp": "2025-06-29"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1636",
      "value": 1,
      "timestamp": "2025-06-29"
    },
    {
      "source": "Sorting",
      "target": "Problem 1636",
      "value": 1,
      "timestamp": "2025-06-29"
    },
    {
      "source": "Array",
      "target": "Problem 1639",
      "value": 1,
      "timestamp": "2025-06-29"
    },
    {
      "source": "String",
      "target": "Problem 1639",
      "value": 1,
      "timestamp": "2025-06-29"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1639",
      "value": 1,
      "timestamp": "2025-06-29"
    },
    {
      "source": "Array",
      "target": "Problem 1640",
      "value": 1,
      "timestamp": "2025-06-29"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1640",
      "value": 1,
      "timestamp": "2025-06-29"
    },
    {
      "source": "Array",
      "target": "Problem 1637",
      "value": 1,
      "timestamp": "2025-06-30"
    },
    {
      "source": "Sorting",
      "target": "Problem 1637",
      "value": 1,
      "timestamp": "2025-06-30"
    },
    {
      "source": "Math",
      "target": "Problem 1641",
      "value": 1,
      "timestamp": "2025-06-30"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1641",
      "value": 1,
      "timestamp": "2025-06-30"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 1641",
      "value": 1,
      "timestamp": "2025-06-30"
    },
    {
      "source": "Array",
      "target": "Problem 1642",
      "value": 1,
      "timestamp": "2025-06-30"
    },
    {
      "source": "Greedy",
      "target": "Problem 1642",
      "value": 1,
      "timestamp": "2025-06-30"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1642",
      "value": 1,
      "timestamp": "2025-06-30"
    },
    {
      "source": "Array",
      "target": "Problem 1643",
      "value": 1,
      "timestamp": "2025-07-01"
    },
    {
      "source": "Math",
      "target": "Problem 1643",
      "value": 1,
      "timestamp": "2025-07-01"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1643",
      "value": 1,
      "timestamp": "2025-07-01"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 1643",
      "value": 1,
      "timestamp": "2025-07-01"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1638",
      "value": 1,
      "timestamp": "2025-07-01"
    },
    {
      "source": "String",
      "target": "Problem 1638",
      "value": 1,
      "timestamp": "2025-07-01"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1638",
      "value": 1,
      "timestamp": "2025-07-01"
    },
    {
      "source": "Enumeration",
      "target": "Problem 1638",
      "value": 1,
      "timestamp": "2025-07-01"
    },
    {
      "source": "Array",
      "target": "Problem 1646",
      "value": 1,
      "timestamp": "2025-07-02"
    },
    {
      "source": "Simulation",
      "target": "Problem 1646",
      "value": 1,
      "timestamp": "2025-07-02"
    },
    {
      "source": "Array",
      "target": "Problem 1648",
      "value": 1,
      "timestamp": "2025-07-02"
    },
    {
      "source": "Math",
      "target": "Problem 1648",
      "value": 1,
      "timestamp": "2025-07-02"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1648",
      "value": 1,
      "timestamp": "2025-07-02"
    },
    {
      "source": "Greedy",
      "target": "Problem 1648",
      "value": 1,
      "timestamp": "2025-07-02"
    },
    {
      "source": "Sorting",
      "target": "Problem 1648",
      "value": 1,
      "timestamp": "2025-07-02"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1648",
      "value": 1,
      "timestamp": "2025-07-02"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1647",
      "value": 1,
      "timestamp": "2025-07-03"
    },
    {
      "source": "String",
      "target": "Problem 1647",
      "value": 1,
      "timestamp": "2025-07-03"
    },
    {
      "source": "Greedy",
      "target": "Problem 1647",
      "value": 1,
      "timestamp": "2025-07-03"
    },
    {
      "source": "Sorting",
      "target": "Problem 1647",
      "value": 1,
      "timestamp": "2025-07-03"
    },
    {
      "source": "Array",
      "target": "Problem 1649",
      "value": 1,
      "timestamp": "2025-07-03"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1649",
      "value": 1,
      "timestamp": "2025-07-03"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 1649",
      "value": 1,
      "timestamp": "2025-07-03"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 1649",
      "value": 1,
      "timestamp": "2025-07-03"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 1649",
      "value": 1,
      "timestamp": "2025-07-03"
    },
    {
      "source": "Merge Sort",
      "target": "Problem 1649",
      "value": 1,
      "timestamp": "2025-07-03"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 1649",
      "value": 1,
      "timestamp": "2025-07-03"
    },
    {
      "source": "Array",
      "target": "Problem 1652",
      "value": 1,
      "timestamp": "2025-07-04"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1652",
      "value": 1,
      "timestamp": "2025-07-04"
    },
    {
      "source": "String",
      "target": "Problem 1653",
      "value": 1,
      "timestamp": "2025-07-04"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1653",
      "value": 1,
      "timestamp": "2025-07-04"
    },
    {
      "source": "Stack",
      "target": "Problem 1653",
      "value": 1,
      "timestamp": "2025-07-04"
    },
    {
      "source": "Array",
      "target": "Problem 1654",
      "value": 1,
      "timestamp": "2025-07-05"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1654",
      "value": 1,
      "timestamp": "2025-07-05"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1654",
      "value": 1,
      "timestamp": "2025-07-05"
    },
    {
      "source": "Array",
      "target": "Problem 1656",
      "value": 1,
      "timestamp": "2025-07-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1656",
      "value": 1,
      "timestamp": "2025-07-05"
    },
    {
      "source": "Design",
      "target": "Problem 1656",
      "value": 1,
      "timestamp": "2025-07-05"
    },
    {
      "source": "Data Stream",
      "target": "Problem 1656",
      "value": 1,
      "timestamp": "2025-07-05"
    },
    {
      "source": "Array",
      "target": "Problem 1655",
      "value": 1,
      "timestamp": "2025-07-05"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1655",
      "value": 1,
      "timestamp": "2025-07-05"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1655",
      "value": 1,
      "timestamp": "2025-07-05"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1655",
      "value": 1,
      "timestamp": "2025-07-05"
    },
    {
      "source": "Bitmask",
      "target": "Problem 1655",
      "value": 1,
      "timestamp": "2025-07-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1657",
      "value": 1,
      "timestamp": "2025-07-06"
    },
    {
      "source": "String",
      "target": "Problem 1657",
      "value": 1,
      "timestamp": "2025-07-06"
    },
    {
      "source": "Sorting",
      "target": "Problem 1657",
      "value": 1,
      "timestamp": "2025-07-06"
    },
    {
      "source": "Counting",
      "target": "Problem 1657",
      "value": 1,
      "timestamp": "2025-07-06"
    },
    {
      "source": "Array",
      "target": "Problem 1658",
      "value": 1,
      "timestamp": "2025-07-06"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1658",
      "value": 1,
      "timestamp": "2025-07-06"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1658",
      "value": 1,
      "timestamp": "2025-07-06"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1658",
      "value": 1,
      "timestamp": "2025-07-06"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1658",
      "value": 1,
      "timestamp": "2025-07-06"
    },
    {
      "source": "Database",
      "target": "Problem 1661",
      "value": 1,
      "timestamp": "2025-07-07"
    },
    {
      "source": "String",
      "target": "Problem 1663",
      "value": 1,
      "timestamp": "2025-07-07"
    },
    {
      "source": "Greedy",
      "target": "Problem 1663",
      "value": 1,
      "timestamp": "2025-07-07"
    },
    {
      "source": "Array",
      "target": "Problem 1662",
      "value": 1,
      "timestamp": "2025-07-07"
    },
    {
      "source": "String",
      "target": "Problem 1662",
      "value": 1,
      "timestamp": "2025-07-07"
    },
    {
      "source": "Array",
      "target": "Problem 1664",
      "value": 1,
      "timestamp": "2025-07-08"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1664",
      "value": 1,
      "timestamp": "2025-07-08"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1659",
      "value": 1,
      "timestamp": "2025-07-08"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1659",
      "value": 1,
      "timestamp": "2025-07-08"
    },
    {
      "source": "Memoization",
      "target": "Problem 1659",
      "value": 1,
      "timestamp": "2025-07-08"
    },
    {
      "source": "Bitmask",
      "target": "Problem 1659",
      "value": 1,
      "timestamp": "2025-07-08"
    },
    {
      "source": "Array",
      "target": "Problem 1665",
      "value": 1,
      "timestamp": "2025-07-09"
    },
    {
      "source": "Greedy",
      "target": "Problem 1665",
      "value": 1,
      "timestamp": "2025-07-09"
    },
    {
      "source": "Sorting",
      "target": "Problem 1665",
      "value": 1,
      "timestamp": "2025-07-09"
    },
    {
      "source": "Database",
      "target": "Problem 1667",
      "value": 1,
      "timestamp": "2025-07-09"
    },
    {
      "source": "String",
      "target": "Problem 1668",
      "value": 1,
      "timestamp": "2025-07-09"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1668",
      "value": 1,
      "timestamp": "2025-07-09"
    },
    {
      "source": "String Matching",
      "target": "Problem 1668",
      "value": 1,
      "timestamp": "2025-07-09"
    },
    {
      "source": "Linked List",
      "target": "Problem 1669",
      "value": 1,
      "timestamp": "2025-07-10"
    },
    {
      "source": "Array",
      "target": "Problem 1671",
      "value": 1,
      "timestamp": "2025-07-10"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1671",
      "value": 1,
      "timestamp": "2025-07-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1671",
      "value": 1,
      "timestamp": "2025-07-10"
    },
    {
      "source": "Greedy",
      "target": "Problem 1671",
      "value": 1,
      "timestamp": "2025-07-10"
    },
    {
      "source": "Array",
      "target": "Problem 1670",
      "value": 1,
      "timestamp": "2025-07-10"
    },
    {
      "source": "Linked List",
      "target": "Problem 1670",
      "value": 1,
      "timestamp": "2025-07-10"
    },
    {
      "source": "Design",
      "target": "Problem 1670",
      "value": 1,
      "timestamp": "2025-07-10"
    },
    {
      "source": "Queue",
      "target": "Problem 1670",
      "value": 1,
      "timestamp": "2025-07-10"
    },
    {
      "source": "Data Stream",
      "target": "Problem 1670",
      "value": 1,
      "timestamp": "2025-07-10"
    },
    {
      "source": "Array",
      "target": "Problem 1675",
      "value": 1,
      "timestamp": "2025-07-11"
    },
    {
      "source": "Greedy",
      "target": "Problem 1675",
      "value": 1,
      "timestamp": "2025-07-11"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1675",
      "value": 1,
      "timestamp": "2025-07-11"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 1675",
      "value": 1,
      "timestamp": "2025-07-11"
    },
    {
      "source": "Array",
      "target": "Problem 1673",
      "value": 1,
      "timestamp": "2025-07-11"
    },
    {
      "source": "Stack",
      "target": "Problem 1673",
      "value": 1,
      "timestamp": "2025-07-11"
    },
    {
      "source": "Greedy",
      "target": "Problem 1673",
      "value": 1,
      "timestamp": "2025-07-11"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 1673",
      "value": 1,
      "timestamp": "2025-07-11"
    },
    {
      "source": "Array",
      "target": "Problem 1672",
      "value": 1,
      "timestamp": "2025-07-12"
    },
    {
      "source": "Matrix",
      "target": "Problem 1672",
      "value": 1,
      "timestamp": "2025-07-12"
    },
    {
      "source": "Array",
      "target": "Problem 1674",
      "value": 1,
      "timestamp": "2025-07-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1674",
      "value": 1,
      "timestamp": "2025-07-12"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1674",
      "value": 1,
      "timestamp": "2025-07-12"
    },
    {
      "source": "Array",
      "target": "Problem 1679",
      "value": 1,
      "timestamp": "2025-07-13"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1679",
      "value": 1,
      "timestamp": "2025-07-13"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1679",
      "value": 1,
      "timestamp": "2025-07-13"
    },
    {
      "source": "Sorting",
      "target": "Problem 1679",
      "value": 1,
      "timestamp": "2025-07-13"
    },
    {
      "source": "Database",
      "target": "Problem 1683",
      "value": 1,
      "timestamp": "2025-07-13"
    },
    {
      "source": "String",
      "target": "Problem 1678",
      "value": 1,
      "timestamp": "2025-07-13"
    },
    {
      "source": "Array",
      "target": "Problem 1681",
      "value": 1,
      "timestamp": "2025-07-14"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1681",
      "value": 1,
      "timestamp": "2025-07-14"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1681",
      "value": 1,
      "timestamp": "2025-07-14"
    },
    {
      "source": "Bitmask",
      "target": "Problem 1681",
      "value": 1,
      "timestamp": "2025-07-14"
    },
    {
      "source": "Math",
      "target": "Problem 1680",
      "value": 1,
      "timestamp": "2025-07-14"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1680",
      "value": 1,
      "timestamp": "2025-07-14"
    },
    {
      "source": "Simulation",
      "target": "Problem 1680",
      "value": 1,
      "timestamp": "2025-07-14"
    },
    {
      "source": "Array",
      "target": "Problem 1685",
      "value": 1,
      "timestamp": "2025-07-15"
    },
    {
      "source": "Math",
      "target": "Problem 1685",
      "value": 1,
      "timestamp": "2025-07-15"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1685",
      "value": 1,
      "timestamp": "2025-07-15"
    },
    {
      "source": "Array",
      "target": "Problem 1684",
      "value": 1,
      "timestamp": "2025-07-15"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1684",
      "value": 1,
      "timestamp": "2025-07-15"
    },
    {
      "source": "String",
      "target": "Problem 1684",
      "value": 1,
      "timestamp": "2025-07-15"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1684",
      "value": 1,
      "timestamp": "2025-07-15"
    },
    {
      "source": "Counting",
      "target": "Problem 1684",
      "value": 1,
      "timestamp": "2025-07-15"
    },
    {
      "source": "Math",
      "target": "Problem 1688",
      "value": 1,
      "timestamp": "2025-07-15"
    },
    {
      "source": "Simulation",
      "target": "Problem 1688",
      "value": 1,
      "timestamp": "2025-07-15"
    },
    {
      "source": "Array",
      "target": "Problem 1686",
      "value": 1,
      "timestamp": "2025-07-16"
    },
    {
      "source": "Math",
      "target": "Problem 1686",
      "value": 1,
      "timestamp": "2025-07-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 1686",
      "value": 1,
      "timestamp": "2025-07-16"
    },
    {
      "source": "Sorting",
      "target": "Problem 1686",
      "value": 1,
      "timestamp": "2025-07-16"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1686",
      "value": 1,
      "timestamp": "2025-07-16"
    },
    {
      "source": "Game Theory",
      "target": "Problem 1686",
      "value": 1,
      "timestamp": "2025-07-16"
    },
    {
      "source": "Array",
      "target": "Problem 1687",
      "value": 1,
      "timestamp": "2025-07-16"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1687",
      "value": 1,
      "timestamp": "2025-07-16"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 1687",
      "value": 1,
      "timestamp": "2025-07-16"
    },
    {
      "source": "Queue",
      "target": "Problem 1687",
      "value": 1,
      "timestamp": "2025-07-16"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1687",
      "value": 1,
      "timestamp": "2025-07-16"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1687",
      "value": 1,
      "timestamp": "2025-07-16"
    },
    {
      "source": "Monotonic Queue",
      "target": "Problem 1687",
      "value": 1,
      "timestamp": "2025-07-16"
    },
    {
      "source": "String",
      "target": "Problem 1689",
      "value": 1,
      "timestamp": "2025-07-17"
    },
    {
      "source": "Greedy",
      "target": "Problem 1689",
      "value": 1,
      "timestamp": "2025-07-17"
    },
    {
      "source": "Array",
      "target": "Problem 1691",
      "value": 1,
      "timestamp": "2025-07-17"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1691",
      "value": 1,
      "timestamp": "2025-07-17"
    },
    {
      "source": "Sorting",
      "target": "Problem 1691",
      "value": 1,
      "timestamp": "2025-07-17"
    },
    {
      "source": "Array",
      "target": "Problem 1690",
      "value": 1,
      "timestamp": "2025-07-17"
    },
    {
      "source": "Math",
      "target": "Problem 1690",
      "value": 1,
      "timestamp": "2025-07-17"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1690",
      "value": 1,
      "timestamp": "2025-07-17"
    },
    {
      "source": "Game Theory",
      "target": "Problem 1690",
      "value": 1,
      "timestamp": "2025-07-17"
    },
    {
      "source": "String",
      "target": "Problem 1694",
      "value": 1,
      "timestamp": "2025-07-18"
    },
    {
      "source": "Array",
      "target": "Problem 1696",
      "value": 1,
      "timestamp": "2025-07-18"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1696",
      "value": 1,
      "timestamp": "2025-07-18"
    },
    {
      "source": "Queue",
      "target": "Problem 1696",
      "value": 1,
      "timestamp": "2025-07-18"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1696",
      "value": 1,
      "timestamp": "2025-07-18"
    },
    {
      "source": "Monotonic Queue",
      "target": "Problem 1696",
      "value": 1,
      "timestamp": "2025-07-18"
    },
    {
      "source": "Array",
      "target": "Problem 1695",
      "value": 1,
      "timestamp": "2025-07-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1695",
      "value": 1,
      "timestamp": "2025-07-19"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1695",
      "value": 1,
      "timestamp": "2025-07-19"
    },
    {
      "source": "Database",
      "target": "Problem 1693",
      "value": 1,
      "timestamp": "2025-07-19"
    },
    {
      "source": "Array",
      "target": "Problem 1697",
      "value": 1,
      "timestamp": "2025-07-20"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1697",
      "value": 1,
      "timestamp": "2025-07-20"
    },
    {
      "source": "Union Find",
      "target": "Problem 1697",
      "value": 1,
      "timestamp": "2025-07-20"
    },
    {
      "source": "Graph",
      "target": "Problem 1697",
      "value": 1,
      "timestamp": "2025-07-20"
    },
    {
      "source": "Sorting",
      "target": "Problem 1697",
      "value": 1,
      "timestamp": "2025-07-20"
    },
    {
      "source": "Array",
      "target": "Problem 1700",
      "value": 1,
      "timestamp": "2025-07-20"
    },
    {
      "source": "Stack",
      "target": "Problem 1700",
      "value": 1,
      "timestamp": "2025-07-20"
    },
    {
      "source": "Queue",
      "target": "Problem 1700",
      "value": 1,
      "timestamp": "2025-07-20"
    },
    {
      "source": "Simulation",
      "target": "Problem 1700",
      "value": 1,
      "timestamp": "2025-07-20"
    },
    {
      "source": "Array",
      "target": "Problem 1701",
      "value": 1,
      "timestamp": "2025-07-20"
    },
    {
      "source": "Simulation",
      "target": "Problem 1701",
      "value": 1,
      "timestamp": "2025-07-20"
    },
    {
      "source": "Array",
      "target": "Problem 1707",
      "value": 1,
      "timestamp": "2025-07-21"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1707",
      "value": 1,
      "timestamp": "2025-07-21"
    },
    {
      "source": "Trie",
      "target": "Problem 1707",
      "value": 1,
      "timestamp": "2025-07-21"
    },
    {
      "source": "String",
      "target": "Problem 1704",
      "value": 1,
      "timestamp": "2025-07-21"
    },
    {
      "source": "Counting",
      "target": "Problem 1704",
      "value": 1,
      "timestamp": "2025-07-21"
    },
    {
      "source": "String",
      "target": "Problem 1702",
      "value": 1,
      "timestamp": "2025-07-22"
    },
    {
      "source": "Greedy",
      "target": "Problem 1702",
      "value": 1,
      "timestamp": "2025-07-22"
    },
    {
      "source": "Array",
      "target": "Problem 1706",
      "value": 1,
      "timestamp": "2025-07-22"
    },
    {
      "source": "Matrix",
      "target": "Problem 1706",
      "value": 1,
      "timestamp": "2025-07-22"
    },
    {
      "source": "Simulation",
      "target": "Problem 1706",
      "value": 1,
      "timestamp": "2025-07-22"
    },
    {
      "source": "Array",
      "target": "Problem 1703",
      "value": 1,
      "timestamp": "2025-07-22"
    },
    {
      "source": "Greedy",
      "target": "Problem 1703",
      "value": 1,
      "timestamp": "2025-07-22"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1703",
      "value": 1,
      "timestamp": "2025-07-22"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1703",
      "value": 1,
      "timestamp": "2025-07-22"
    },
    {
      "source": "Array",
      "target": "Problem 1705",
      "value": 1,
      "timestamp": "2025-07-23"
    },
    {
      "source": "Greedy",
      "target": "Problem 1705",
      "value": 1,
      "timestamp": "2025-07-23"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1705",
      "value": 1,
      "timestamp": "2025-07-23"
    },
    {
      "source": "Array",
      "target": "Problem 1713",
      "value": 1,
      "timestamp": "2025-07-23"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1713",
      "value": 1,
      "timestamp": "2025-07-23"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1713",
      "value": 1,
      "timestamp": "2025-07-23"
    },
    {
      "source": "Greedy",
      "target": "Problem 1713",
      "value": 1,
      "timestamp": "2025-07-23"
    },
    {
      "source": "Array",
      "target": "Problem 1711",
      "value": 1,
      "timestamp": "2025-07-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1711",
      "value": 1,
      "timestamp": "2025-07-24"
    },
    {
      "source": "Array",
      "target": "Problem 1712",
      "value": 1,
      "timestamp": "2025-07-24"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1712",
      "value": 1,
      "timestamp": "2025-07-24"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1712",
      "value": 1,
      "timestamp": "2025-07-24"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1712",
      "value": 1,
      "timestamp": "2025-07-24"
    },
    {
      "source": "Array",
      "target": "Problem 1710",
      "value": 1,
      "timestamp": "2025-07-24"
    },
    {
      "source": "Greedy",
      "target": "Problem 1710",
      "value": 1,
      "timestamp": "2025-07-24"
    },
    {
      "source": "Sorting",
      "target": "Problem 1710",
      "value": 1,
      "timestamp": "2025-07-24"
    },
    {
      "source": "Math",
      "target": "Problem 1716",
      "value": 1,
      "timestamp": "2025-07-25"
    },
    {
      "source": "Array",
      "target": "Problem 1718",
      "value": 1,
      "timestamp": "2025-07-26"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1718",
      "value": 1,
      "timestamp": "2025-07-26"
    },
    {
      "source": "String",
      "target": "Problem 1717",
      "value": 1,
      "timestamp": "2025-07-26"
    },
    {
      "source": "Stack",
      "target": "Problem 1717",
      "value": 1,
      "timestamp": "2025-07-26"
    },
    {
      "source": "Greedy",
      "target": "Problem 1717",
      "value": 1,
      "timestamp": "2025-07-26"
    },
    {
      "source": "Linked List",
      "target": "Problem 1721",
      "value": 1,
      "timestamp": "2025-07-26"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1721",
      "value": 1,
      "timestamp": "2025-07-26"
    },
    {
      "source": "Tree",
      "target": "Problem 1719",
      "value": 1,
      "timestamp": "2025-07-27"
    },
    {
      "source": "Graph",
      "target": "Problem 1719",
      "value": 1,
      "timestamp": "2025-07-27"
    },
    {
      "source": "Array",
      "target": "Problem 1722",
      "value": 1,
      "timestamp": "2025-07-27"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1722",
      "value": 1,
      "timestamp": "2025-07-27"
    },
    {
      "source": "Union Find",
      "target": "Problem 1722",
      "value": 1,
      "timestamp": "2025-07-27"
    },
    {
      "source": "Array",
      "target": "Problem 1720",
      "value": 1,
      "timestamp": "2025-07-27"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1720",
      "value": 1,
      "timestamp": "2025-07-27"
    },
    {
      "source": "Array",
      "target": "Problem 1723",
      "value": 1,
      "timestamp": "2025-07-28"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1723",
      "value": 1,
      "timestamp": "2025-07-28"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1723",
      "value": 1,
      "timestamp": "2025-07-28"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1723",
      "value": 1,
      "timestamp": "2025-07-28"
    },
    {
      "source": "Bitmask",
      "target": "Problem 1723",
      "value": 1,
      "timestamp": "2025-07-28"
    },
    {
      "source": "Array",
      "target": "Problem 1727",
      "value": 1,
      "timestamp": "2025-07-28"
    },
    {
      "source": "Greedy",
      "target": "Problem 1727",
      "value": 1,
      "timestamp": "2025-07-28"
    },
    {
      "source": "Sorting",
      "target": "Problem 1727",
      "value": 1,
      "timestamp": "2025-07-28"
    },
    {
      "source": "Matrix",
      "target": "Problem 1727",
      "value": 1,
      "timestamp": "2025-07-28"
    },
    {
      "source": "Array",
      "target": "Problem 1725",
      "value": 1,
      "timestamp": "2025-07-29"
    },
    {
      "source": "Array",
      "target": "Problem 1726",
      "value": 1,
      "timestamp": "2025-07-29"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1726",
      "value": 1,
      "timestamp": "2025-07-29"
    },
    {
      "source": "Counting",
      "target": "Problem 1726",
      "value": 1,
      "timestamp": "2025-07-29"
    },
    {
      "source": "Database",
      "target": "Problem 1729",
      "value": 1,
      "timestamp": "2025-07-30"
    },
    {
      "source": "Array",
      "target": "Problem 1728",
      "value": 1,
      "timestamp": "2025-07-30"
    },
    {
      "source": "Math",
      "target": "Problem 1728",
      "value": 1,
      "timestamp": "2025-07-30"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1728",
      "value": 1,
      "timestamp": "2025-07-30"
    },
    {
      "source": "Graph",
      "target": "Problem 1728",
      "value": 1,
      "timestamp": "2025-07-30"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 1728",
      "value": 1,
      "timestamp": "2025-07-30"
    },
    {
      "source": "Memoization",
      "target": "Problem 1728",
      "value": 1,
      "timestamp": "2025-07-30"
    },
    {
      "source": "Matrix",
      "target": "Problem 1728",
      "value": 1,
      "timestamp": "2025-07-30"
    },
    {
      "source": "Game Theory",
      "target": "Problem 1728",
      "value": 1,
      "timestamp": "2025-07-30"
    },
    {
      "source": "Database",
      "target": "Problem 1731",
      "value": 1,
      "timestamp": "2025-07-30"
    },
    {
      "source": "Array",
      "target": "Problem 1732",
      "value": 1,
      "timestamp": "2025-07-31"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1732",
      "value": 1,
      "timestamp": "2025-07-31"
    },
    {
      "source": "Array",
      "target": "Problem 1734",
      "value": 1,
      "timestamp": "2025-07-31"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1734",
      "value": 1,
      "timestamp": "2025-07-31"
    },
    {
      "source": "String",
      "target": "Problem 1736",
      "value": 1,
      "timestamp": "2025-07-31"
    },
    {
      "source": "Greedy",
      "target": "Problem 1736",
      "value": 1,
      "timestamp": "2025-07-31"
    },
    {
      "source": "Array",
      "target": "Problem 1733",
      "value": 1,
      "timestamp": "2025-08-01"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1733",
      "value": 1,
      "timestamp": "2025-08-01"
    },
    {
      "source": "Greedy",
      "target": "Problem 1733",
      "value": 1,
      "timestamp": "2025-08-01"
    },
    {
      "source": "Array",
      "target": "Problem 1735",
      "value": 1,
      "timestamp": "2025-08-01"
    },
    {
      "source": "Math",
      "target": "Problem 1735",
      "value": 1,
      "timestamp": "2025-08-01"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1735",
      "value": 1,
      "timestamp": "2025-08-01"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 1735",
      "value": 1,
      "timestamp": "2025-08-01"
    },
    {
      "source": "Number Theory",
      "target": "Problem 1735",
      "value": 1,
      "timestamp": "2025-08-01"
    },
    {
      "source": "Array",
      "target": "Problem 1738",
      "value": 1,
      "timestamp": "2025-08-01"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 1738",
      "value": 1,
      "timestamp": "2025-08-01"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1738",
      "value": 1,
      "timestamp": "2025-08-01"
    },
    {
      "source": "Sorting",
      "target": "Problem 1738",
      "value": 1,
      "timestamp": "2025-08-01"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1738",
      "value": 1,
      "timestamp": "2025-08-01"
    },
    {
      "source": "Matrix",
      "target": "Problem 1738",
      "value": 1,
      "timestamp": "2025-08-01"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1738",
      "value": 1,
      "timestamp": "2025-08-01"
    },
    {
      "source": "Quickselect",
      "target": "Problem 1738",
      "value": 1,
      "timestamp": "2025-08-01"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1737",
      "value": 1,
      "timestamp": "2025-08-02"
    },
    {
      "source": "String",
      "target": "Problem 1737",
      "value": 1,
      "timestamp": "2025-08-02"
    },
    {
      "source": "Counting",
      "target": "Problem 1737",
      "value": 1,
      "timestamp": "2025-08-02"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1737",
      "value": 1,
      "timestamp": "2025-08-02"
    },
    {
      "source": "Math",
      "target": "Problem 1739",
      "value": 1,
      "timestamp": "2025-08-02"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1739",
      "value": 1,
      "timestamp": "2025-08-02"
    },
    {
      "source": "Greedy",
      "target": "Problem 1739",
      "value": 1,
      "timestamp": "2025-08-02"
    },
    {
      "source": "Array",
      "target": "Problem 1744",
      "value": 1,
      "timestamp": "2025-08-03"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1744",
      "value": 1,
      "timestamp": "2025-08-03"
    },
    {
      "source": "String",
      "target": "Problem 1745",
      "value": 1,
      "timestamp": "2025-08-03"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1745",
      "value": 1,
      "timestamp": "2025-08-03"
    },
    {
      "source": "Database",
      "target": "Problem 1741",
      "value": 1,
      "timestamp": "2025-08-04"
    },
    {
      "source": "Array",
      "target": "Problem 1743",
      "value": 1,
      "timestamp": "2025-08-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1743",
      "value": 1,
      "timestamp": "2025-08-04"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1743",
      "value": 1,
      "timestamp": "2025-08-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1742",
      "value": 1,
      "timestamp": "2025-08-04"
    },
    {
      "source": "Math",
      "target": "Problem 1742",
      "value": 1,
      "timestamp": "2025-08-04"
    },
    {
      "source": "Counting",
      "target": "Problem 1742",
      "value": 1,
      "timestamp": "2025-08-04"
    },
    {
      "source": "Array",
      "target": "Problem 1748",
      "value": 1,
      "timestamp": "2025-08-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1748",
      "value": 1,
      "timestamp": "2025-08-05"
    },
    {
      "source": "Counting",
      "target": "Problem 1748",
      "value": 1,
      "timestamp": "2025-08-05"
    },
    {
      "source": "Array",
      "target": "Problem 1749",
      "value": 1,
      "timestamp": "2025-08-05"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1749",
      "value": 1,
      "timestamp": "2025-08-05"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1750",
      "value": 1,
      "timestamp": "2025-08-06"
    },
    {
      "source": "String",
      "target": "Problem 1750",
      "value": 1,
      "timestamp": "2025-08-06"
    },
    {
      "source": "Array",
      "target": "Problem 1751",
      "value": 1,
      "timestamp": "2025-08-06"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1751",
      "value": 1,
      "timestamp": "2025-08-06"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1751",
      "value": 1,
      "timestamp": "2025-08-06"
    },
    {
      "source": "Sorting",
      "target": "Problem 1751",
      "value": 1,
      "timestamp": "2025-08-06"
    },
    {
      "source": "Math",
      "target": "Problem 1753",
      "value": 1,
      "timestamp": "2025-08-06"
    },
    {
      "source": "Greedy",
      "target": "Problem 1753",
      "value": 1,
      "timestamp": "2025-08-06"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1753",
      "value": 1,
      "timestamp": "2025-08-06"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1754",
      "value": 1,
      "timestamp": "2025-08-07"
    },
    {
      "source": "String",
      "target": "Problem 1754",
      "value": 1,
      "timestamp": "2025-08-07"
    },
    {
      "source": "Greedy",
      "target": "Problem 1754",
      "value": 1,
      "timestamp": "2025-08-07"
    },
    {
      "source": "Array",
      "target": "Problem 1752",
      "value": 1,
      "timestamp": "2025-08-07"
    },
    {
      "source": "Array",
      "target": "Problem 1760",
      "value": 1,
      "timestamp": "2025-08-08"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1760",
      "value": 1,
      "timestamp": "2025-08-08"
    },
    {
      "source": "String",
      "target": "Problem 1758",
      "value": 1,
      "timestamp": "2025-08-08"
    },
    {
      "source": "Database",
      "target": "Problem 1757",
      "value": 1,
      "timestamp": "2025-08-09"
    },
    {
      "source": "Math",
      "target": "Problem 1759",
      "value": 1,
      "timestamp": "2025-08-09"
    },
    {
      "source": "String",
      "target": "Problem 1759",
      "value": 1,
      "timestamp": "2025-08-09"
    },
    {
      "source": "Array",
      "target": "Problem 1755",
      "value": 1,
      "timestamp": "2025-08-09"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1755",
      "value": 1,
      "timestamp": "2025-08-09"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1755",
      "value": 1,
      "timestamp": "2025-08-09"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1755",
      "value": 1,
      "timestamp": "2025-08-09"
    },
    {
      "source": "Bitmask",
      "target": "Problem 1755",
      "value": 1,
      "timestamp": "2025-08-09"
    },
    {
      "source": "Graph",
      "target": "Problem 1761",
      "value": 1,
      "timestamp": "2025-08-10"
    },
    {
      "source": "Array",
      "target": "Problem 1770",
      "value": 1,
      "timestamp": "2025-08-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1770",
      "value": 1,
      "timestamp": "2025-08-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1763",
      "value": 1,
      "timestamp": "2025-08-10"
    },
    {
      "source": "String",
      "target": "Problem 1763",
      "value": 1,
      "timestamp": "2025-08-10"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 1763",
      "value": 1,
      "timestamp": "2025-08-10"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1763",
      "value": 1,
      "timestamp": "2025-08-10"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1763",
      "value": 1,
      "timestamp": "2025-08-10"
    },
    {
      "source": "Array",
      "target": "Problem 1765",
      "value": 1,
      "timestamp": "2025-08-11"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1765",
      "value": 1,
      "timestamp": "2025-08-11"
    },
    {
      "source": "Matrix",
      "target": "Problem 1765",
      "value": 1,
      "timestamp": "2025-08-11"
    },
    {
      "source": "Array",
      "target": "Problem 1769",
      "value": 1,
      "timestamp": "2025-08-11"
    },
    {
      "source": "String",
      "target": "Problem 1769",
      "value": 1,
      "timestamp": "2025-08-11"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1769",
      "value": 1,
      "timestamp": "2025-08-11"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1768",
      "value": 1,
      "timestamp": "2025-08-11"
    },
    {
      "source": "String",
      "target": "Problem 1768",
      "value": 1,
      "timestamp": "2025-08-11"
    },
    {
      "source": "Array",
      "target": "Problem 1766",
      "value": 1,
      "timestamp": "2025-08-12"
    },
    {
      "source": "Math",
      "target": "Problem 1766",
      "value": 1,
      "timestamp": "2025-08-12"
    },
    {
      "source": "Tree",
      "target": "Problem 1766",
      "value": 1,
      "timestamp": "2025-08-12"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1766",
      "value": 1,
      "timestamp": "2025-08-12"
    },
    {
      "source": "Number Theory",
      "target": "Problem 1766",
      "value": 1,
      "timestamp": "2025-08-12"
    },
    {
      "source": "Array",
      "target": "Problem 1764",
      "value": 1,
      "timestamp": "2025-08-12"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1764",
      "value": 1,
      "timestamp": "2025-08-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 1764",
      "value": 1,
      "timestamp": "2025-08-12"
    },
    {
      "source": "String Matching",
      "target": "Problem 1764",
      "value": 1,
      "timestamp": "2025-08-12"
    },
    {
      "source": "String",
      "target": "Problem 1771",
      "value": 1,
      "timestamp": "2025-08-13"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1771",
      "value": 1,
      "timestamp": "2025-08-13"
    },
    {
      "source": "Array",
      "target": "Problem 1773",
      "value": 1,
      "timestamp": "2025-08-13"
    },
    {
      "source": "String",
      "target": "Problem 1773",
      "value": 1,
      "timestamp": "2025-08-13"
    },
    {
      "source": "Array",
      "target": "Problem 1775",
      "value": 1,
      "timestamp": "2025-08-14"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1775",
      "value": 1,
      "timestamp": "2025-08-14"
    },
    {
      "source": "Greedy",
      "target": "Problem 1775",
      "value": 1,
      "timestamp": "2025-08-14"
    },
    {
      "source": "Counting",
      "target": "Problem 1775",
      "value": 1,
      "timestamp": "2025-08-14"
    },
    {
      "source": "Array",
      "target": "Problem 1774",
      "value": 1,
      "timestamp": "2025-08-14"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1774",
      "value": 1,
      "timestamp": "2025-08-14"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1774",
      "value": 1,
      "timestamp": "2025-08-14"
    },
    {
      "source": "Array",
      "target": "Problem 1776",
      "value": 1,
      "timestamp": "2025-08-14"
    },
    {
      "source": "Math",
      "target": "Problem 1776",
      "value": 1,
      "timestamp": "2025-08-14"
    },
    {
      "source": "Stack",
      "target": "Problem 1776",
      "value": 1,
      "timestamp": "2025-08-14"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1776",
      "value": 1,
      "timestamp": "2025-08-14"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 1776",
      "value": 1,
      "timestamp": "2025-08-14"
    },
    {
      "source": "Array",
      "target": "Problem 1779",
      "value": 1,
      "timestamp": "2025-08-15"
    },
    {
      "source": "Array",
      "target": "Problem 1785",
      "value": 1,
      "timestamp": "2025-08-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 1785",
      "value": 1,
      "timestamp": "2025-08-16"
    },
    {
      "source": "Math",
      "target": "Problem 1780",
      "value": 1,
      "timestamp": "2025-08-16"
    },
    {
      "source": "Array",
      "target": "Problem 1782",
      "value": 1,
      "timestamp": "2025-08-17"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1782",
      "value": 1,
      "timestamp": "2025-08-17"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1782",
      "value": 1,
      "timestamp": "2025-08-17"
    },
    {
      "source": "Graph",
      "target": "Problem 1782",
      "value": 1,
      "timestamp": "2025-08-17"
    },
    {
      "source": "Sorting",
      "target": "Problem 1782",
      "value": 1,
      "timestamp": "2025-08-17"
    },
    {
      "source": "String",
      "target": "Problem 1784",
      "value": 1,
      "timestamp": "2025-08-17"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1781",
      "value": 1,
      "timestamp": "2025-08-17"
    },
    {
      "source": "String",
      "target": "Problem 1781",
      "value": 1,
      "timestamp": "2025-08-17"
    },
    {
      "source": "Counting",
      "target": "Problem 1781",
      "value": 1,
      "timestamp": "2025-08-17"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1786",
      "value": 1,
      "timestamp": "2025-08-18"
    },
    {
      "source": "Graph",
      "target": "Problem 1786",
      "value": 1,
      "timestamp": "2025-08-18"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 1786",
      "value": 1,
      "timestamp": "2025-08-18"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1786",
      "value": 1,
      "timestamp": "2025-08-18"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 1786",
      "value": 1,
      "timestamp": "2025-08-18"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1790",
      "value": 1,
      "timestamp": "2025-08-18"
    },
    {
      "source": "String",
      "target": "Problem 1790",
      "value": 1,
      "timestamp": "2025-08-18"
    },
    {
      "source": "Counting",
      "target": "Problem 1790",
      "value": 1,
      "timestamp": "2025-08-18"
    },
    {
      "source": "Array",
      "target": "Problem 1787",
      "value": 1,
      "timestamp": "2025-08-19"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1787",
      "value": 1,
      "timestamp": "2025-08-19"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1787",
      "value": 1,
      "timestamp": "2025-08-19"
    },
    {
      "source": "Database",
      "target": "Problem 1789",
      "value": 1,
      "timestamp": "2025-08-19"
    },
    {
      "source": "Graph",
      "target": "Problem 1791",
      "value": 1,
      "timestamp": "2025-08-19"
    },
    {
      "source": "Array",
      "target": "Problem 1792",
      "value": 1,
      "timestamp": "2025-08-20"
    },
    {
      "source": "Greedy",
      "target": "Problem 1792",
      "value": 1,
      "timestamp": "2025-08-20"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1792",
      "value": 1,
      "timestamp": "2025-08-20"
    },
    {
      "source": "Array",
      "target": "Problem 1793",
      "value": 1,
      "timestamp": "2025-08-20"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1793",
      "value": 1,
      "timestamp": "2025-08-20"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1793",
      "value": 1,
      "timestamp": "2025-08-20"
    },
    {
      "source": "Stack",
      "target": "Problem 1793",
      "value": 1,
      "timestamp": "2025-08-20"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 1793",
      "value": 1,
      "timestamp": "2025-08-20"
    },
    {
      "source": "Array",
      "target": "Problem 1800",
      "value": 1,
      "timestamp": "2025-08-21"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1797",
      "value": 1,
      "timestamp": "2025-08-21"
    },
    {
      "source": "Linked List",
      "target": "Problem 1797",
      "value": 1,
      "timestamp": "2025-08-21"
    },
    {
      "source": "Design",
      "target": "Problem 1797",
      "value": 1,
      "timestamp": "2025-08-21"
    },
    {
      "source": "Doubly-Linked List",
      "target": "Problem 1797",
      "value": 1,
      "timestamp": "2025-08-21"
    },
    {
      "source": "Array",
      "target": "Problem 1801",
      "value": 1,
      "timestamp": "2025-08-21"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1801",
      "value": 1,
      "timestamp": "2025-08-21"
    },
    {
      "source": "Simulation",
      "target": "Problem 1801",
      "value": 1,
      "timestamp": "2025-08-21"
    },
    {
      "source": "Array",
      "target": "Problem 1799",
      "value": 1,
      "timestamp": "2025-08-22"
    },
    {
      "source": "Math",
      "target": "Problem 1799",
      "value": 1,
      "timestamp": "2025-08-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1799",
      "value": 1,
      "timestamp": "2025-08-22"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1799",
      "value": 1,
      "timestamp": "2025-08-22"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1799",
      "value": 1,
      "timestamp": "2025-08-22"
    },
    {
      "source": "Number Theory",
      "target": "Problem 1799",
      "value": 1,
      "timestamp": "2025-08-22"
    },
    {
      "source": "Bitmask",
      "target": "Problem 1799",
      "value": 1,
      "timestamp": "2025-08-22"
    },
    {
      "source": "Database",
      "target": "Problem 1795",
      "value": 1,
      "timestamp": "2025-08-22"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1796",
      "value": 1,
      "timestamp": "2025-08-22"
    },
    {
      "source": "String",
      "target": "Problem 1796",
      "value": 1,
      "timestamp": "2025-08-22"
    },
    {
      "source": "Array",
      "target": "Problem 1798",
      "value": 1,
      "timestamp": "2025-08-23"
    },
    {
      "source": "Greedy",
      "target": "Problem 1798",
      "value": 1,
      "timestamp": "2025-08-23"
    },
    {
      "source": "Sorting",
      "target": "Problem 1798",
      "value": 1,
      "timestamp": "2025-08-23"
    },
    {
      "source": "Array",
      "target": "Problem 1803",
      "value": 1,
      "timestamp": "2025-08-23"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1803",
      "value": 1,
      "timestamp": "2025-08-23"
    },
    {
      "source": "Trie",
      "target": "Problem 1803",
      "value": 1,
      "timestamp": "2025-08-23"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1802",
      "value": 1,
      "timestamp": "2025-08-24"
    },
    {
      "source": "Greedy",
      "target": "Problem 1802",
      "value": 1,
      "timestamp": "2025-08-24"
    },
    {
      "source": "Array",
      "target": "Problem 1806",
      "value": 1,
      "timestamp": "2025-08-24"
    },
    {
      "source": "Math",
      "target": "Problem 1806",
      "value": 1,
      "timestamp": "2025-08-24"
    },
    {
      "source": "Simulation",
      "target": "Problem 1806",
      "value": 1,
      "timestamp": "2025-08-24"
    },
    {
      "source": "Math",
      "target": "Problem 1808",
      "value": 1,
      "timestamp": "2025-08-24"
    },
    {
      "source": "Recursion",
      "target": "Problem 1808",
      "value": 1,
      "timestamp": "2025-08-24"
    },
    {
      "source": "Number Theory",
      "target": "Problem 1808",
      "value": 1,
      "timestamp": "2025-08-24"
    },
    {
      "source": "Array",
      "target": "Problem 1807",
      "value": 1,
      "timestamp": "2025-08-25"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1807",
      "value": 1,
      "timestamp": "2025-08-25"
    },
    {
      "source": "String",
      "target": "Problem 1807",
      "value": 1,
      "timestamp": "2025-08-25"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1805",
      "value": 1,
      "timestamp": "2025-08-25"
    },
    {
      "source": "String",
      "target": "Problem 1805",
      "value": 1,
      "timestamp": "2025-08-25"
    },
    {
      "source": "Array",
      "target": "Problem 1814",
      "value": 1,
      "timestamp": "2025-08-26"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1814",
      "value": 1,
      "timestamp": "2025-08-26"
    },
    {
      "source": "Math",
      "target": "Problem 1814",
      "value": 1,
      "timestamp": "2025-08-26"
    },
    {
      "source": "Counting",
      "target": "Problem 1814",
      "value": 1,
      "timestamp": "2025-08-26"
    },
    {
      "source": "Math",
      "target": "Problem 1812",
      "value": 1,
      "timestamp": "2025-08-27"
    },
    {
      "source": "String",
      "target": "Problem 1812",
      "value": 1,
      "timestamp": "2025-08-27"
    },
    {
      "source": "Array",
      "target": "Problem 1813",
      "value": 1,
      "timestamp": "2025-08-27"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1813",
      "value": 1,
      "timestamp": "2025-08-27"
    },
    {
      "source": "String",
      "target": "Problem 1813",
      "value": 1,
      "timestamp": "2025-08-27"
    },
    {
      "source": "Array",
      "target": "Problem 1816",
      "value": 1,
      "timestamp": "2025-08-27"
    },
    {
      "source": "String",
      "target": "Problem 1816",
      "value": 1,
      "timestamp": "2025-08-27"
    },
    {
      "source": "Array",
      "target": "Problem 1815",
      "value": 1,
      "timestamp": "2025-08-28"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1815",
      "value": 1,
      "timestamp": "2025-08-28"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1815",
      "value": 1,
      "timestamp": "2025-08-28"
    },
    {
      "source": "Memoization",
      "target": "Problem 1815",
      "value": 1,
      "timestamp": "2025-08-28"
    },
    {
      "source": "Bitmask",
      "target": "Problem 1815",
      "value": 1,
      "timestamp": "2025-08-28"
    },
    {
      "source": "Array",
      "target": "Problem 1817",
      "value": 1,
      "timestamp": "2025-08-28"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1817",
      "value": 1,
      "timestamp": "2025-08-28"
    },
    {
      "source": "Array",
      "target": "Problem 1819",
      "value": 1,
      "timestamp": "2025-08-29"
    },
    {
      "source": "Math",
      "target": "Problem 1819",
      "value": 1,
      "timestamp": "2025-08-29"
    },
    {
      "source": "Counting",
      "target": "Problem 1819",
      "value": 1,
      "timestamp": "2025-08-29"
    },
    {
      "source": "Number Theory",
      "target": "Problem 1819",
      "value": 1,
      "timestamp": "2025-08-29"
    },
    {
      "source": "Array",
      "target": "Problem 1822",
      "value": 1,
      "timestamp": "2025-08-29"
    },
    {
      "source": "Math",
      "target": "Problem 1822",
      "value": 1,
      "timestamp": "2025-08-29"
    },
    {
      "source": "Array",
      "target": "Problem 1824",
      "value": 1,
      "timestamp": "2025-08-30"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1824",
      "value": 1,
      "timestamp": "2025-08-30"
    },
    {
      "source": "Greedy",
      "target": "Problem 1824",
      "value": 1,
      "timestamp": "2025-08-30"
    },
    {
      "source": "Array",
      "target": "Problem 1818",
      "value": 1,
      "timestamp": "2025-08-30"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1818",
      "value": 1,
      "timestamp": "2025-08-30"
    },
    {
      "source": "Sorting",
      "target": "Problem 1818",
      "value": 1,
      "timestamp": "2025-08-30"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 1818",
      "value": 1,
      "timestamp": "2025-08-30"
    },
    {
      "source": "Array",
      "target": "Problem 1823",
      "value": 1,
      "timestamp": "2025-08-30"
    },
    {
      "source": "Math",
      "target": "Problem 1823",
      "value": 1,
      "timestamp": "2025-08-30"
    },
    {
      "source": "Recursion",
      "target": "Problem 1823",
      "value": 1,
      "timestamp": "2025-08-30"
    },
    {
      "source": "Queue",
      "target": "Problem 1823",
      "value": 1,
      "timestamp": "2025-08-30"
    },
    {
      "source": "Simulation",
      "target": "Problem 1823",
      "value": 1,
      "timestamp": "2025-08-30"
    },
    {
      "source": "Array",
      "target": "Problem 1828",
      "value": 1,
      "timestamp": "2025-08-31"
    },
    {
      "source": "Math",
      "target": "Problem 1828",
      "value": 1,
      "timestamp": "2025-08-31"
    },
    {
      "source": "Geometry",
      "target": "Problem 1828",
      "value": 1,
      "timestamp": "2025-08-31"
    },
    {
      "source": "Design",
      "target": "Problem 1825",
      "value": 1,
      "timestamp": "2025-08-31"
    },
    {
      "source": "Queue",
      "target": "Problem 1825",
      "value": 1,
      "timestamp": "2025-08-31"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1825",
      "value": 1,
      "timestamp": "2025-08-31"
    },
    {
      "source": "Data Stream",
      "target": "Problem 1825",
      "value": 1,
      "timestamp": "2025-08-31"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 1825",
      "value": 1,
      "timestamp": "2025-08-31"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1832",
      "value": 1,
      "timestamp": "2025-08-31"
    },
    {
      "source": "String",
      "target": "Problem 1832",
      "value": 1,
      "timestamp": "2025-08-31"
    },
    {
      "source": "Math",
      "target": "Problem 1830",
      "value": 1,
      "timestamp": "2025-09-01"
    },
    {
      "source": "String",
      "target": "Problem 1830",
      "value": 1,
      "timestamp": "2025-09-01"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 1830",
      "value": 1,
      "timestamp": "2025-09-01"
    },
    {
      "source": "Array",
      "target": "Problem 1827",
      "value": 1,
      "timestamp": "2025-09-01"
    },
    {
      "source": "Greedy",
      "target": "Problem 1827",
      "value": 1,
      "timestamp": "2025-09-01"
    },
    {
      "source": "Array",
      "target": "Problem 1829",
      "value": 1,
      "timestamp": "2025-09-02"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1829",
      "value": 1,
      "timestamp": "2025-09-02"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1829",
      "value": 1,
      "timestamp": "2025-09-02"
    },
    {
      "source": "Array",
      "target": "Problem 1833",
      "value": 1,
      "timestamp": "2025-09-02"
    },
    {
      "source": "Greedy",
      "target": "Problem 1833",
      "value": 1,
      "timestamp": "2025-09-02"
    },
    {
      "source": "Sorting",
      "target": "Problem 1833",
      "value": 1,
      "timestamp": "2025-09-02"
    },
    {
      "source": "Counting Sort",
      "target": "Problem 1833",
      "value": 1,
      "timestamp": "2025-09-02"
    },
    {
      "source": "Array",
      "target": "Problem 1835",
      "value": 1,
      "timestamp": "2025-09-03"
    },
    {
      "source": "Math",
      "target": "Problem 1835",
      "value": 1,
      "timestamp": "2025-09-03"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1835",
      "value": 1,
      "timestamp": "2025-09-03"
    },
    {
      "source": "Array",
      "target": "Problem 1834",
      "value": 1,
      "timestamp": "2025-09-03"
    },
    {
      "source": "Sorting",
      "target": "Problem 1834",
      "value": 1,
      "timestamp": "2025-09-03"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1834",
      "value": 1,
      "timestamp": "2025-09-03"
    },
    {
      "source": "String",
      "target": "Problem 1839",
      "value": 1,
      "timestamp": "2025-09-04"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1839",
      "value": 1,
      "timestamp": "2025-09-04"
    },
    {
      "source": "Math",
      "target": "Problem 1837",
      "value": 1,
      "timestamp": "2025-09-04"
    },
    {
      "source": "Array",
      "target": "Problem 1838",
      "value": 1,
      "timestamp": "2025-09-04"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1838",
      "value": 1,
      "timestamp": "2025-09-04"
    },
    {
      "source": "Greedy",
      "target": "Problem 1838",
      "value": 1,
      "timestamp": "2025-09-04"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1838",
      "value": 1,
      "timestamp": "2025-09-04"
    },
    {
      "source": "Sorting",
      "target": "Problem 1838",
      "value": 1,
      "timestamp": "2025-09-04"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1838",
      "value": 1,
      "timestamp": "2025-09-04"
    },
    {
      "source": "Array",
      "target": "Problem 1840",
      "value": 1,
      "timestamp": "2025-09-05"
    },
    {
      "source": "Math",
      "target": "Problem 1840",
      "value": 1,
      "timestamp": "2025-09-05"
    },
    {
      "source": "Sorting",
      "target": "Problem 1840",
      "value": 1,
      "timestamp": "2025-09-05"
    },
    {
      "source": "Design",
      "target": "Problem 1845",
      "value": 1,
      "timestamp": "2025-09-05"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1845",
      "value": 1,
      "timestamp": "2025-09-05"
    },
    {
      "source": "String",
      "target": "Problem 1844",
      "value": 1,
      "timestamp": "2025-09-06"
    },
    {
      "source": "Array",
      "target": "Problem 1847",
      "value": 1,
      "timestamp": "2025-09-07"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1847",
      "value": 1,
      "timestamp": "2025-09-07"
    },
    {
      "source": "Sorting",
      "target": "Problem 1847",
      "value": 1,
      "timestamp": "2025-09-07"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 1847",
      "value": 1,
      "timestamp": "2025-09-07"
    },
    {
      "source": "Array",
      "target": "Problem 1846",
      "value": 1,
      "timestamp": "2025-09-07"
    },
    {
      "source": "Greedy",
      "target": "Problem 1846",
      "value": 1,
      "timestamp": "2025-09-07"
    },
    {
      "source": "Sorting",
      "target": "Problem 1846",
      "value": 1,
      "timestamp": "2025-09-07"
    },
    {
      "source": "Array",
      "target": "Problem 1848",
      "value": 1,
      "timestamp": "2025-09-07"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1850",
      "value": 1,
      "timestamp": "2025-09-08"
    },
    {
      "source": "String",
      "target": "Problem 1850",
      "value": 1,
      "timestamp": "2025-09-08"
    },
    {
      "source": "Greedy",
      "target": "Problem 1850",
      "value": 1,
      "timestamp": "2025-09-08"
    },
    {
      "source": "String",
      "target": "Problem 1849",
      "value": 1,
      "timestamp": "2025-09-09"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1849",
      "value": 1,
      "timestamp": "2025-09-09"
    },
    {
      "source": "Array",
      "target": "Problem 1854",
      "value": 1,
      "timestamp": "2025-09-09"
    },
    {
      "source": "Counting",
      "target": "Problem 1854",
      "value": 1,
      "timestamp": "2025-09-09"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1854",
      "value": 1,
      "timestamp": "2025-09-09"
    },
    {
      "source": "Array",
      "target": "Problem 1851",
      "value": 1,
      "timestamp": "2025-09-09"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1851",
      "value": 1,
      "timestamp": "2025-09-09"
    },
    {
      "source": "Line Sweep",
      "target": "Problem 1851",
      "value": 1,
      "timestamp": "2025-09-09"
    },
    {
      "source": "Sorting",
      "target": "Problem 1851",
      "value": 1,
      "timestamp": "2025-09-09"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1851",
      "value": 1,
      "timestamp": "2025-09-09"
    },
    {
      "source": "Array",
      "target": "Problem 1855",
      "value": 1,
      "timestamp": "2025-09-10"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1855",
      "value": 1,
      "timestamp": "2025-09-10"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1855",
      "value": 1,
      "timestamp": "2025-09-10"
    },
    {
      "source": "Array",
      "target": "Problem 1856",
      "value": 1,
      "timestamp": "2025-09-10"
    },
    {
      "source": "Stack",
      "target": "Problem 1856",
      "value": 1,
      "timestamp": "2025-09-10"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 1856",
      "value": 1,
      "timestamp": "2025-09-10"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1856",
      "value": 1,
      "timestamp": "2025-09-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1857",
      "value": 1,
      "timestamp": "2025-09-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1857",
      "value": 1,
      "timestamp": "2025-09-10"
    },
    {
      "source": "Graph",
      "target": "Problem 1857",
      "value": 1,
      "timestamp": "2025-09-10"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 1857",
      "value": 1,
      "timestamp": "2025-09-10"
    },
    {
      "source": "Memoization",
      "target": "Problem 1857",
      "value": 1,
      "timestamp": "2025-09-10"
    },
    {
      "source": "Counting",
      "target": "Problem 1857",
      "value": 1,
      "timestamp": "2025-09-10"
    },
    {
      "source": "Math",
      "target": "Problem 1860",
      "value": 1,
      "timestamp": "2025-09-11"
    },
    {
      "source": "Simulation",
      "target": "Problem 1860",
      "value": 1,
      "timestamp": "2025-09-11"
    },
    {
      "source": "Array",
      "target": "Problem 1861",
      "value": 1,
      "timestamp": "2025-09-11"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1861",
      "value": 1,
      "timestamp": "2025-09-11"
    },
    {
      "source": "Matrix",
      "target": "Problem 1861",
      "value": 1,
      "timestamp": "2025-09-11"
    },
    {
      "source": "String",
      "target": "Problem 1859",
      "value": 1,
      "timestamp": "2025-09-12"
    },
    {
      "source": "Sorting",
      "target": "Problem 1859",
      "value": 1,
      "timestamp": "2025-09-12"
    },
    {
      "source": "String",
      "target": "Problem 1864",
      "value": 1,
      "timestamp": "2025-09-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 1864",
      "value": 1,
      "timestamp": "2025-09-12"
    },
    {
      "source": "Array",
      "target": "Problem 1862",
      "value": 1,
      "timestamp": "2025-09-12"
    },
    {
      "source": "Math",
      "target": "Problem 1862",
      "value": 1,
      "timestamp": "2025-09-12"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1862",
      "value": 1,
      "timestamp": "2025-09-12"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1862",
      "value": 1,
      "timestamp": "2025-09-12"
    },
    {
      "source": "Array",
      "target": "Problem 1865",
      "value": 1,
      "timestamp": "2025-09-13"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1865",
      "value": 1,
      "timestamp": "2025-09-13"
    },
    {
      "source": "Design",
      "target": "Problem 1865",
      "value": 1,
      "timestamp": "2025-09-13"
    },
    {
      "source": "Array",
      "target": "Problem 1863",
      "value": 1,
      "timestamp": "2025-09-13"
    },
    {
      "source": "Math",
      "target": "Problem 1863",
      "value": 1,
      "timestamp": "2025-09-13"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1863",
      "value": 1,
      "timestamp": "2025-09-13"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1863",
      "value": 1,
      "timestamp": "2025-09-13"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 1863",
      "value": 1,
      "timestamp": "2025-09-13"
    },
    {
      "source": "Enumeration",
      "target": "Problem 1863",
      "value": 1,
      "timestamp": "2025-09-13"
    },
    {
      "source": "String",
      "target": "Problem 1869",
      "value": 1,
      "timestamp": "2025-09-14"
    },
    {
      "source": "Math",
      "target": "Problem 1866",
      "value": 1,
      "timestamp": "2025-09-14"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1866",
      "value": 1,
      "timestamp": "2025-09-14"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 1866",
      "value": 1,
      "timestamp": "2025-09-14"
    },
    {
      "source": "String",
      "target": "Problem 1871",
      "value": 1,
      "timestamp": "2025-09-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1871",
      "value": 1,
      "timestamp": "2025-09-15"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1871",
      "value": 1,
      "timestamp": "2025-09-15"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1871",
      "value": 1,
      "timestamp": "2025-09-15"
    },
    {
      "source": "Array",
      "target": "Problem 1872",
      "value": 1,
      "timestamp": "2025-09-15"
    },
    {
      "source": "Math",
      "target": "Problem 1872",
      "value": 1,
      "timestamp": "2025-09-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1872",
      "value": 1,
      "timestamp": "2025-09-15"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1872",
      "value": 1,
      "timestamp": "2025-09-15"
    },
    {
      "source": "Game Theory",
      "target": "Problem 1872",
      "value": 1,
      "timestamp": "2025-09-15"
    },
    {
      "source": "Array",
      "target": "Problem 1870",
      "value": 1,
      "timestamp": "2025-09-15"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1870",
      "value": 1,
      "timestamp": "2025-09-15"
    },
    {
      "source": "Database",
      "target": "Problem 1873",
      "value": 1,
      "timestamp": "2025-09-16"
    },
    {
      "source": "Array",
      "target": "Problem 1877",
      "value": 1,
      "timestamp": "2025-09-16"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1877",
      "value": 1,
      "timestamp": "2025-09-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 1877",
      "value": 1,
      "timestamp": "2025-09-16"
    },
    {
      "source": "Sorting",
      "target": "Problem 1877",
      "value": 1,
      "timestamp": "2025-09-16"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1876",
      "value": 1,
      "timestamp": "2025-09-17"
    },
    {
      "source": "String",
      "target": "Problem 1876",
      "value": 1,
      "timestamp": "2025-09-17"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1876",
      "value": 1,
      "timestamp": "2025-09-17"
    },
    {
      "source": "Counting",
      "target": "Problem 1876",
      "value": 1,
      "timestamp": "2025-09-17"
    },
    {
      "source": "String",
      "target": "Problem 1880",
      "value": 1,
      "timestamp": "2025-09-17"
    },
    {
      "source": "Array",
      "target": "Problem 1878",
      "value": 1,
      "timestamp": "2025-09-18"
    },
    {
      "source": "Math",
      "target": "Problem 1878",
      "value": 1,
      "timestamp": "2025-09-18"
    },
    {
      "source": "Sorting",
      "target": "Problem 1878",
      "value": 1,
      "timestamp": "2025-09-18"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1878",
      "value": 1,
      "timestamp": "2025-09-18"
    },
    {
      "source": "Matrix",
      "target": "Problem 1878",
      "value": 1,
      "timestamp": "2025-09-18"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1878",
      "value": 1,
      "timestamp": "2025-09-18"
    },
    {
      "source": "String",
      "target": "Problem 1881",
      "value": 1,
      "timestamp": "2025-09-18"
    },
    {
      "source": "Greedy",
      "target": "Problem 1881",
      "value": 1,
      "timestamp": "2025-09-18"
    },
    {
      "source": "Array",
      "target": "Problem 1879",
      "value": 1,
      "timestamp": "2025-09-18"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1879",
      "value": 1,
      "timestamp": "2025-09-18"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1879",
      "value": 1,
      "timestamp": "2025-09-18"
    },
    {
      "source": "Bitmask",
      "target": "Problem 1879",
      "value": 1,
      "timestamp": "2025-09-18"
    },
    {
      "source": "Math",
      "target": "Problem 1884",
      "value": 1,
      "timestamp": "2025-09-19"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1884",
      "value": 1,
      "timestamp": "2025-09-19"
    },
    {
      "source": "Array",
      "target": "Problem 1882",
      "value": 1,
      "timestamp": "2025-09-19"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1882",
      "value": 1,
      "timestamp": "2025-09-19"
    },
    {
      "source": "Array",
      "target": "Problem 1883",
      "value": 1,
      "timestamp": "2025-09-19"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1883",
      "value": 1,
      "timestamp": "2025-09-19"
    },
    {
      "source": "Array",
      "target": "Problem 1887",
      "value": 1,
      "timestamp": "2025-09-20"
    },
    {
      "source": "Sorting",
      "target": "Problem 1887",
      "value": 1,
      "timestamp": "2025-09-20"
    },
    {
      "source": "Array",
      "target": "Problem 1886",
      "value": 1,
      "timestamp": "2025-09-20"
    },
    {
      "source": "Matrix",
      "target": "Problem 1886",
      "value": 1,
      "timestamp": "2025-09-20"
    },
    {
      "source": "Array",
      "target": "Problem 1889",
      "value": 1,
      "timestamp": "2025-09-20"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1889",
      "value": 1,
      "timestamp": "2025-09-20"
    },
    {
      "source": "Sorting",
      "target": "Problem 1889",
      "value": 1,
      "timestamp": "2025-09-20"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1889",
      "value": 1,
      "timestamp": "2025-09-20"
    },
    {
      "source": "String",
      "target": "Problem 1888",
      "value": 1,
      "timestamp": "2025-09-21"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1888",
      "value": 1,
      "timestamp": "2025-09-21"
    },
    {
      "source": "Greedy",
      "target": "Problem 1888",
      "value": 1,
      "timestamp": "2025-09-21"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1888",
      "value": 1,
      "timestamp": "2025-09-21"
    },
    {
      "source": "Database",
      "target": "Problem 1890",
      "value": 1,
      "timestamp": "2025-09-22"
    },
    {
      "source": "Array",
      "target": "Problem 1893",
      "value": 1,
      "timestamp": "2025-09-22"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1893",
      "value": 1,
      "timestamp": "2025-09-22"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1893",
      "value": 1,
      "timestamp": "2025-09-22"
    },
    {
      "source": "Array",
      "target": "Problem 1895",
      "value": 1,
      "timestamp": "2025-09-22"
    },
    {
      "source": "Matrix",
      "target": "Problem 1895",
      "value": 1,
      "timestamp": "2025-09-22"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1895",
      "value": 1,
      "timestamp": "2025-09-22"
    },
    {
      "source": "Math",
      "target": "Problem 1896",
      "value": 1,
      "timestamp": "2025-09-23"
    },
    {
      "source": "String",
      "target": "Problem 1896",
      "value": 1,
      "timestamp": "2025-09-23"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1896",
      "value": 1,
      "timestamp": "2025-09-23"
    },
    {
      "source": "Stack",
      "target": "Problem 1896",
      "value": 1,
      "timestamp": "2025-09-23"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1897",
      "value": 1,
      "timestamp": "2025-09-23"
    },
    {
      "source": "String",
      "target": "Problem 1897",
      "value": 1,
      "timestamp": "2025-09-23"
    },
    {
      "source": "Counting",
      "target": "Problem 1897",
      "value": 1,
      "timestamp": "2025-09-23"
    },
    {
      "source": "Array",
      "target": "Problem 1898",
      "value": 1,
      "timestamp": "2025-09-24"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1898",
      "value": 1,
      "timestamp": "2025-09-24"
    },
    {
      "source": "String",
      "target": "Problem 1898",
      "value": 1,
      "timestamp": "2025-09-24"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1898",
      "value": 1,
      "timestamp": "2025-09-24"
    },
    {
      "source": "Array",
      "target": "Problem 1899",
      "value": 1,
      "timestamp": "2025-09-24"
    },
    {
      "source": "Greedy",
      "target": "Problem 1899",
      "value": 1,
      "timestamp": "2025-09-24"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1900",
      "value": 1,
      "timestamp": "2025-09-25"
    },
    {
      "source": "Memoization",
      "target": "Problem 1900",
      "value": 1,
      "timestamp": "2025-09-25"
    },
    {
      "source": "Math",
      "target": "Problem 1903",
      "value": 1,
      "timestamp": "2025-09-25"
    },
    {
      "source": "String",
      "target": "Problem 1903",
      "value": 1,
      "timestamp": "2025-09-25"
    },
    {
      "source": "Greedy",
      "target": "Problem 1903",
      "value": 1,
      "timestamp": "2025-09-25"
    },
    {
      "source": "Array",
      "target": "Problem 1901",
      "value": 1,
      "timestamp": "2025-09-25"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1901",
      "value": 1,
      "timestamp": "2025-09-25"
    },
    {
      "source": "Matrix",
      "target": "Problem 1901",
      "value": 1,
      "timestamp": "2025-09-25"
    },
    {
      "source": "Array",
      "target": "Problem 1894",
      "value": 1,
      "timestamp": "2025-09-26"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1894",
      "value": 1,
      "timestamp": "2025-09-26"
    },
    {
      "source": "Simulation",
      "target": "Problem 1894",
      "value": 1,
      "timestamp": "2025-09-26"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1894",
      "value": 1,
      "timestamp": "2025-09-26"
    },
    {
      "source": "Math",
      "target": "Problem 1904",
      "value": 1,
      "timestamp": "2025-09-26"
    },
    {
      "source": "String",
      "target": "Problem 1904",
      "value": 1,
      "timestamp": "2025-09-26"
    },
    {
      "source": "Array",
      "target": "Problem 1905",
      "value": 1,
      "timestamp": "2025-09-26"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1905",
      "value": 1,
      "timestamp": "2025-09-26"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1905",
      "value": 1,
      "timestamp": "2025-09-26"
    },
    {
      "source": "Union Find",
      "target": "Problem 1905",
      "value": 1,
      "timestamp": "2025-09-26"
    },
    {
      "source": "Matrix",
      "target": "Problem 1905",
      "value": 1,
      "timestamp": "2025-09-26"
    },
    {
      "source": "Array",
      "target": "Problem 1906",
      "value": 1,
      "timestamp": "2025-09-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1906",
      "value": 1,
      "timestamp": "2025-09-27"
    },
    {
      "source": "Array",
      "target": "Problem 1909",
      "value": 1,
      "timestamp": "2025-09-27"
    },
    {
      "source": "Database",
      "target": "Problem 1907",
      "value": 1,
      "timestamp": "2025-09-28"
    },
    {
      "source": "Array",
      "target": "Problem 1913",
      "value": 1,
      "timestamp": "2025-09-28"
    },
    {
      "source": "Sorting",
      "target": "Problem 1913",
      "value": 1,
      "timestamp": "2025-09-28"
    },
    {
      "source": "Array",
      "target": "Problem 1914",
      "value": 1,
      "timestamp": "2025-09-28"
    },
    {
      "source": "Matrix",
      "target": "Problem 1914",
      "value": 1,
      "timestamp": "2025-09-28"
    },
    {
      "source": "Simulation",
      "target": "Problem 1914",
      "value": 1,
      "timestamp": "2025-09-28"
    },
    {
      "source": "String",
      "target": "Problem 1910",
      "value": 1,
      "timestamp": "2025-09-29"
    },
    {
      "source": "Stack",
      "target": "Problem 1910",
      "value": 1,
      "timestamp": "2025-09-29"
    },
    {
      "source": "Simulation",
      "target": "Problem 1910",
      "value": 1,
      "timestamp": "2025-09-29"
    },
    {
      "source": "Array",
      "target": "Problem 1912",
      "value": 1,
      "timestamp": "2025-09-29"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1912",
      "value": 1,
      "timestamp": "2025-09-29"
    },
    {
      "source": "Design",
      "target": "Problem 1912",
      "value": 1,
      "timestamp": "2025-09-29"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1912",
      "value": 1,
      "timestamp": "2025-09-29"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 1912",
      "value": 1,
      "timestamp": "2025-09-29"
    },
    {
      "source": "Array",
      "target": "Problem 1911",
      "value": 1,
      "timestamp": "2025-09-29"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1911",
      "value": 1,
      "timestamp": "2025-09-29"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1915",
      "value": 1,
      "timestamp": "2025-09-30"
    },
    {
      "source": "String",
      "target": "Problem 1915",
      "value": 1,
      "timestamp": "2025-09-30"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1915",
      "value": 1,
      "timestamp": "2025-09-30"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1915",
      "value": 1,
      "timestamp": "2025-09-30"
    },
    {
      "source": "Math",
      "target": "Problem 1922",
      "value": 1,
      "timestamp": "2025-10-01"
    },
    {
      "source": "Recursion",
      "target": "Problem 1922",
      "value": 1,
      "timestamp": "2025-10-01"
    },
    {
      "source": "Array",
      "target": "Problem 1921",
      "value": 1,
      "timestamp": "2025-10-01"
    },
    {
      "source": "Greedy",
      "target": "Problem 1921",
      "value": 1,
      "timestamp": "2025-10-01"
    },
    {
      "source": "Sorting",
      "target": "Problem 1921",
      "value": 1,
      "timestamp": "2025-10-01"
    },
    {
      "source": "Array",
      "target": "Problem 1920",
      "value": 1,
      "timestamp": "2025-10-02"
    },
    {
      "source": "Simulation",
      "target": "Problem 1920",
      "value": 1,
      "timestamp": "2025-10-02"
    },
    {
      "source": "Array",
      "target": "Problem 1923",
      "value": 1,
      "timestamp": "2025-10-02"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1923",
      "value": 1,
      "timestamp": "2025-10-02"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 1923",
      "value": 1,
      "timestamp": "2025-10-02"
    },
    {
      "source": "Suffix Array",
      "target": "Problem 1923",
      "value": 1,
      "timestamp": "2025-10-02"
    },
    {
      "source": "Hash Function",
      "target": "Problem 1923",
      "value": 1,
      "timestamp": "2025-10-02"
    },
    {
      "source": "Math",
      "target": "Problem 1925",
      "value": 1,
      "timestamp": "2025-10-03"
    },
    {
      "source": "Enumeration",
      "target": "Problem 1925",
      "value": 1,
      "timestamp": "2025-10-03"
    },
    {
      "source": "Math",
      "target": "Problem 1916",
      "value": 1,
      "timestamp": "2025-10-03"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1916",
      "value": 1,
      "timestamp": "2025-10-03"
    },
    {
      "source": "Tree",
      "target": "Problem 1916",
      "value": 1,
      "timestamp": "2025-10-03"
    },
    {
      "source": "Graph",
      "target": "Problem 1916",
      "value": 1,
      "timestamp": "2025-10-03"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 1916",
      "value": 1,
      "timestamp": "2025-10-03"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 1916",
      "value": 1,
      "timestamp": "2025-10-03"
    },
    {
      "source": "Math",
      "target": "Problem 1927",
      "value": 1,
      "timestamp": "2025-10-03"
    },
    {
      "source": "String",
      "target": "Problem 1927",
      "value": 1,
      "timestamp": "2025-10-03"
    },
    {
      "source": "Greedy",
      "target": "Problem 1927",
      "value": 1,
      "timestamp": "2025-10-03"
    },
    {
      "source": "Game Theory",
      "target": "Problem 1927",
      "value": 1,
      "timestamp": "2025-10-03"
    },
    {
      "source": "Array",
      "target": "Problem 1928",
      "value": 1,
      "timestamp": "2025-10-04"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1928",
      "value": 1,
      "timestamp": "2025-10-04"
    },
    {
      "source": "Graph",
      "target": "Problem 1928",
      "value": 1,
      "timestamp": "2025-10-04"
    },
    {
      "source": "Array",
      "target": "Problem 1926",
      "value": 1,
      "timestamp": "2025-10-04"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1926",
      "value": 1,
      "timestamp": "2025-10-04"
    },
    {
      "source": "Matrix",
      "target": "Problem 1926",
      "value": 1,
      "timestamp": "2025-10-04"
    },
    {
      "source": "Array",
      "target": "Problem 1929",
      "value": 1,
      "timestamp": "2025-10-04"
    },
    {
      "source": "Simulation",
      "target": "Problem 1929",
      "value": 1,
      "timestamp": "2025-10-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1930",
      "value": 1,
      "timestamp": "2025-10-05"
    },
    {
      "source": "String",
      "target": "Problem 1930",
      "value": 1,
      "timestamp": "2025-10-05"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1930",
      "value": 1,
      "timestamp": "2025-10-05"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1930",
      "value": 1,
      "timestamp": "2025-10-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1932",
      "value": 1,
      "timestamp": "2025-10-05"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1932",
      "value": 1,
      "timestamp": "2025-10-05"
    },
    {
      "source": "Tree",
      "target": "Problem 1932",
      "value": 1,
      "timestamp": "2025-10-05"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1932",
      "value": 1,
      "timestamp": "2025-10-05"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 1932",
      "value": 1,
      "timestamp": "2025-10-05"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1931",
      "value": 1,
      "timestamp": "2025-10-05"
    },
    {
      "source": "Array",
      "target": "Problem 1936",
      "value": 1,
      "timestamp": "2025-10-06"
    },
    {
      "source": "Greedy",
      "target": "Problem 1936",
      "value": 1,
      "timestamp": "2025-10-06"
    },
    {
      "source": "Array",
      "target": "Problem 1937",
      "value": 1,
      "timestamp": "2025-10-06"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1937",
      "value": 1,
      "timestamp": "2025-10-06"
    },
    {
      "source": "Matrix",
      "target": "Problem 1937",
      "value": 1,
      "timestamp": "2025-10-06"
    },
    {
      "source": "Array",
      "target": "Problem 1938",
      "value": 1,
      "timestamp": "2025-10-07"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1938",
      "value": 1,
      "timestamp": "2025-10-07"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1938",
      "value": 1,
      "timestamp": "2025-10-07"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1938",
      "value": 1,
      "timestamp": "2025-10-07"
    },
    {
      "source": "Trie",
      "target": "Problem 1938",
      "value": 1,
      "timestamp": "2025-10-07"
    },
    {
      "source": "Database",
      "target": "Problem 1934",
      "value": 1,
      "timestamp": "2025-10-07"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1935",
      "value": 1,
      "timestamp": "2025-10-07"
    },
    {
      "source": "String",
      "target": "Problem 1935",
      "value": 1,
      "timestamp": "2025-10-07"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1941",
      "value": 1,
      "timestamp": "2025-10-08"
    },
    {
      "source": "String",
      "target": "Problem 1941",
      "value": 1,
      "timestamp": "2025-10-08"
    },
    {
      "source": "Counting",
      "target": "Problem 1941",
      "value": 1,
      "timestamp": "2025-10-08"
    },
    {
      "source": "Array",
      "target": "Problem 1942",
      "value": 1,
      "timestamp": "2025-10-09"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1942",
      "value": 1,
      "timestamp": "2025-10-09"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1942",
      "value": 1,
      "timestamp": "2025-10-09"
    },
    {
      "source": "Array",
      "target": "Problem 1944",
      "value": 1,
      "timestamp": "2025-10-09"
    },
    {
      "source": "Stack",
      "target": "Problem 1944",
      "value": 1,
      "timestamp": "2025-10-09"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 1944",
      "value": 1,
      "timestamp": "2025-10-09"
    },
    {
      "source": "Array",
      "target": "Problem 1943",
      "value": 1,
      "timestamp": "2025-10-09"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1943",
      "value": 1,
      "timestamp": "2025-10-09"
    },
    {
      "source": "Sorting",
      "target": "Problem 1943",
      "value": 1,
      "timestamp": "2025-10-09"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1943",
      "value": 1,
      "timestamp": "2025-10-09"
    },
    {
      "source": "String",
      "target": "Problem 1945",
      "value": 1,
      "timestamp": "2025-10-10"
    },
    {
      "source": "Simulation",
      "target": "Problem 1945",
      "value": 1,
      "timestamp": "2025-10-10"
    },
    {
      "source": "Array",
      "target": "Problem 1947",
      "value": 1,
      "timestamp": "2025-10-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1947",
      "value": 1,
      "timestamp": "2025-10-10"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1947",
      "value": 1,
      "timestamp": "2025-10-10"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1947",
      "value": 1,
      "timestamp": "2025-10-10"
    },
    {
      "source": "Bitmask",
      "target": "Problem 1947",
      "value": 1,
      "timestamp": "2025-10-10"
    },
    {
      "source": "Array",
      "target": "Problem 1946",
      "value": 1,
      "timestamp": "2025-10-10"
    },
    {
      "source": "String",
      "target": "Problem 1946",
      "value": 1,
      "timestamp": "2025-10-10"
    },
    {
      "source": "Greedy",
      "target": "Problem 1946",
      "value": 1,
      "timestamp": "2025-10-10"
    },
    {
      "source": "Array",
      "target": "Problem 1948",
      "value": 1,
      "timestamp": "2025-10-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1948",
      "value": 1,
      "timestamp": "2025-10-11"
    },
    {
      "source": "String",
      "target": "Problem 1948",
      "value": 1,
      "timestamp": "2025-10-11"
    },
    {
      "source": "Trie",
      "target": "Problem 1948",
      "value": 1,
      "timestamp": "2025-10-11"
    },
    {
      "source": "Hash Function",
      "target": "Problem 1948",
      "value": 1,
      "timestamp": "2025-10-11"
    },
    {
      "source": "Array",
      "target": "Problem 1953",
      "value": 1,
      "timestamp": "2025-10-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 1953",
      "value": 1,
      "timestamp": "2025-10-12"
    },
    {
      "source": "Math",
      "target": "Problem 1952",
      "value": 1,
      "timestamp": "2025-10-12"
    },
    {
      "source": "Enumeration",
      "target": "Problem 1952",
      "value": 1,
      "timestamp": "2025-10-12"
    },
    {
      "source": "Number Theory",
      "target": "Problem 1952",
      "value": 1,
      "timestamp": "2025-10-12"
    },
    {
      "source": "Array",
      "target": "Problem 1955",
      "value": 1,
      "timestamp": "2025-10-13"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1955",
      "value": 1,
      "timestamp": "2025-10-13"
    },
    {
      "source": "String",
      "target": "Problem 1957",
      "value": 1,
      "timestamp": "2025-10-13"
    },
    {
      "source": "Math",
      "target": "Problem 1954",
      "value": 1,
      "timestamp": "2025-10-14"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1954",
      "value": 1,
      "timestamp": "2025-10-14"
    },
    {
      "source": "Array",
      "target": "Problem 1958",
      "value": 1,
      "timestamp": "2025-10-14"
    },
    {
      "source": "Matrix",
      "target": "Problem 1958",
      "value": 1,
      "timestamp": "2025-10-14"
    },
    {
      "source": "Enumeration",
      "target": "Problem 1958",
      "value": 1,
      "timestamp": "2025-10-14"
    },
    {
      "source": "Array",
      "target": "Problem 1962",
      "value": 1,
      "timestamp": "2025-10-14"
    },
    {
      "source": "Greedy",
      "target": "Problem 1962",
      "value": 1,
      "timestamp": "2025-10-14"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1962",
      "value": 1,
      "timestamp": "2025-10-14"
    },
    {
      "source": "Array",
      "target": "Problem 1959",
      "value": 1,
      "timestamp": "2025-10-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1959",
      "value": 1,
      "timestamp": "2025-10-15"
    },
    {
      "source": "Array",
      "target": "Problem 1961",
      "value": 1,
      "timestamp": "2025-10-15"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1961",
      "value": 1,
      "timestamp": "2025-10-15"
    },
    {
      "source": "String",
      "target": "Problem 1961",
      "value": 1,
      "timestamp": "2025-10-15"
    },
    {
      "source": "String",
      "target": "Problem 1960",
      "value": 1,
      "timestamp": "2025-10-15"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 1960",
      "value": 1,
      "timestamp": "2025-10-15"
    },
    {
      "source": "Hash Function",
      "target": "Problem 1960",
      "value": 1,
      "timestamp": "2025-10-15"
    },
    {
      "source": "Array",
      "target": "Problem 1964",
      "value": 1,
      "timestamp": "2025-10-16"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1964",
      "value": 1,
      "timestamp": "2025-10-16"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 1964",
      "value": 1,
      "timestamp": "2025-10-16"
    },
    {
      "source": "Database",
      "target": "Problem 1965",
      "value": 1,
      "timestamp": "2025-10-16"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 1963",
      "value": 1,
      "timestamp": "2025-10-17"
    },
    {
      "source": "String",
      "target": "Problem 1963",
      "value": 1,
      "timestamp": "2025-10-17"
    },
    {
      "source": "Stack",
      "target": "Problem 1963",
      "value": 1,
      "timestamp": "2025-10-17"
    },
    {
      "source": "Greedy",
      "target": "Problem 1963",
      "value": 1,
      "timestamp": "2025-10-17"
    },
    {
      "source": "Array",
      "target": "Problem 1967",
      "value": 1,
      "timestamp": "2025-10-17"
    },
    {
      "source": "String",
      "target": "Problem 1967",
      "value": 1,
      "timestamp": "2025-10-17"
    },
    {
      "source": "Math",
      "target": "Problem 1969",
      "value": 1,
      "timestamp": "2025-10-17"
    },
    {
      "source": "Greedy",
      "target": "Problem 1969",
      "value": 1,
      "timestamp": "2025-10-17"
    },
    {
      "source": "Recursion",
      "target": "Problem 1969",
      "value": 1,
      "timestamp": "2025-10-17"
    },
    {
      "source": "Array",
      "target": "Problem 1968",
      "value": 1,
      "timestamp": "2025-10-18"
    },
    {
      "source": "Greedy",
      "target": "Problem 1968",
      "value": 1,
      "timestamp": "2025-10-18"
    },
    {
      "source": "Sorting",
      "target": "Problem 1968",
      "value": 1,
      "timestamp": "2025-10-18"
    },
    {
      "source": "Array",
      "target": "Problem 1970",
      "value": 1,
      "timestamp": "2025-10-18"
    },
    {
      "source": "Binary Search",
      "target": "Problem 1970",
      "value": 1,
      "timestamp": "2025-10-18"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1970",
      "value": 1,
      "timestamp": "2025-10-18"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1970",
      "value": 1,
      "timestamp": "2025-10-18"
    },
    {
      "source": "Union Find",
      "target": "Problem 1970",
      "value": 1,
      "timestamp": "2025-10-18"
    },
    {
      "source": "Matrix",
      "target": "Problem 1970",
      "value": 1,
      "timestamp": "2025-10-18"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1971",
      "value": 1,
      "timestamp": "2025-10-18"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1971",
      "value": 1,
      "timestamp": "2025-10-18"
    },
    {
      "source": "Union Find",
      "target": "Problem 1971",
      "value": 1,
      "timestamp": "2025-10-18"
    },
    {
      "source": "Graph",
      "target": "Problem 1971",
      "value": 1,
      "timestamp": "2025-10-18"
    },
    {
      "source": "String",
      "target": "Problem 1974",
      "value": 1,
      "timestamp": "2025-10-19"
    },
    {
      "source": "Greedy",
      "target": "Problem 1974",
      "value": 1,
      "timestamp": "2025-10-19"
    },
    {
      "source": "Array",
      "target": "Problem 1975",
      "value": 1,
      "timestamp": "2025-10-20"
    },
    {
      "source": "Greedy",
      "target": "Problem 1975",
      "value": 1,
      "timestamp": "2025-10-20"
    },
    {
      "source": "Matrix",
      "target": "Problem 1975",
      "value": 1,
      "timestamp": "2025-10-20"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1976",
      "value": 1,
      "timestamp": "2025-10-20"
    },
    {
      "source": "Graph",
      "target": "Problem 1976",
      "value": 1,
      "timestamp": "2025-10-20"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 1976",
      "value": 1,
      "timestamp": "2025-10-20"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 1976",
      "value": 1,
      "timestamp": "2025-10-20"
    },
    {
      "source": "String",
      "target": "Problem 1977",
      "value": 1,
      "timestamp": "2025-10-20"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1977",
      "value": 1,
      "timestamp": "2025-10-20"
    },
    {
      "source": "Suffix Array",
      "target": "Problem 1977",
      "value": 1,
      "timestamp": "2025-10-20"
    },
    {
      "source": "Database",
      "target": "Problem 1978",
      "value": 1,
      "timestamp": "2025-10-21"
    },
    {
      "source": "Array",
      "target": "Problem 1979",
      "value": 1,
      "timestamp": "2025-10-21"
    },
    {
      "source": "Math",
      "target": "Problem 1979",
      "value": 1,
      "timestamp": "2025-10-21"
    },
    {
      "source": "Number Theory",
      "target": "Problem 1979",
      "value": 1,
      "timestamp": "2025-10-21"
    },
    {
      "source": "Array",
      "target": "Problem 1980",
      "value": 1,
      "timestamp": "2025-10-21"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1980",
      "value": 1,
      "timestamp": "2025-10-21"
    },
    {
      "source": "String",
      "target": "Problem 1980",
      "value": 1,
      "timestamp": "2025-10-21"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1980",
      "value": 1,
      "timestamp": "2025-10-21"
    },
    {
      "source": "Array",
      "target": "Problem 1982",
      "value": 1,
      "timestamp": "2025-10-22"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 1982",
      "value": 1,
      "timestamp": "2025-10-22"
    },
    {
      "source": "Array",
      "target": "Problem 1981",
      "value": 1,
      "timestamp": "2025-10-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1981",
      "value": 1,
      "timestamp": "2025-10-22"
    },
    {
      "source": "Matrix",
      "target": "Problem 1981",
      "value": 1,
      "timestamp": "2025-10-22"
    },
    {
      "source": "Array",
      "target": "Problem 1984",
      "value": 1,
      "timestamp": "2025-10-23"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 1984",
      "value": 1,
      "timestamp": "2025-10-23"
    },
    {
      "source": "Sorting",
      "target": "Problem 1984",
      "value": 1,
      "timestamp": "2025-10-23"
    },
    {
      "source": "Array",
      "target": "Problem 1986",
      "value": 1,
      "timestamp": "2025-10-23"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1986",
      "value": 1,
      "timestamp": "2025-10-23"
    },
    {
      "source": "Backtracking",
      "target": "Problem 1986",
      "value": 1,
      "timestamp": "2025-10-23"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1986",
      "value": 1,
      "timestamp": "2025-10-23"
    },
    {
      "source": "Bitmask",
      "target": "Problem 1986",
      "value": 1,
      "timestamp": "2025-10-23"
    },
    {
      "source": "String",
      "target": "Problem 1987",
      "value": 1,
      "timestamp": "2025-10-23"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1987",
      "value": 1,
      "timestamp": "2025-10-23"
    },
    {
      "source": "Array",
      "target": "Problem 1985",
      "value": 1,
      "timestamp": "2025-10-24"
    },
    {
      "source": "String",
      "target": "Problem 1985",
      "value": 1,
      "timestamp": "2025-10-24"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 1985",
      "value": 1,
      "timestamp": "2025-10-24"
    },
    {
      "source": "Sorting",
      "target": "Problem 1985",
      "value": 1,
      "timestamp": "2025-10-24"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 1985",
      "value": 1,
      "timestamp": "2025-10-24"
    },
    {
      "source": "Quickselect",
      "target": "Problem 1985",
      "value": 1,
      "timestamp": "2025-10-24"
    },
    {
      "source": "Array",
      "target": "Problem 1991",
      "value": 1,
      "timestamp": "2025-10-25"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 1991",
      "value": 1,
      "timestamp": "2025-10-25"
    },
    {
      "source": "Array",
      "target": "Problem 1992",
      "value": 1,
      "timestamp": "2025-10-25"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1992",
      "value": 1,
      "timestamp": "2025-10-25"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1992",
      "value": 1,
      "timestamp": "2025-10-25"
    },
    {
      "source": "Matrix",
      "target": "Problem 1992",
      "value": 1,
      "timestamp": "2025-10-25"
    },
    {
      "source": "Array",
      "target": "Problem 1996",
      "value": 1,
      "timestamp": "2025-10-26"
    },
    {
      "source": "Stack",
      "target": "Problem 1996",
      "value": 1,
      "timestamp": "2025-10-26"
    },
    {
      "source": "Greedy",
      "target": "Problem 1996",
      "value": 1,
      "timestamp": "2025-10-26"
    },
    {
      "source": "Sorting",
      "target": "Problem 1996",
      "value": 1,
      "timestamp": "2025-10-26"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 1996",
      "value": 1,
      "timestamp": "2025-10-26"
    },
    {
      "source": "Array",
      "target": "Problem 1998",
      "value": 1,
      "timestamp": "2025-10-26"
    },
    {
      "source": "Math",
      "target": "Problem 1998",
      "value": 1,
      "timestamp": "2025-10-26"
    },
    {
      "source": "Union Find",
      "target": "Problem 1998",
      "value": 1,
      "timestamp": "2025-10-26"
    },
    {
      "source": "Sorting",
      "target": "Problem 1998",
      "value": 1,
      "timestamp": "2025-10-26"
    },
    {
      "source": "Number Theory",
      "target": "Problem 1998",
      "value": 1,
      "timestamp": "2025-10-26"
    },
    {
      "source": "Array",
      "target": "Problem 1995",
      "value": 1,
      "timestamp": "2025-10-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1995",
      "value": 1,
      "timestamp": "2025-10-27"
    },
    {
      "source": "Enumeration",
      "target": "Problem 1995",
      "value": 1,
      "timestamp": "2025-10-27"
    },
    {
      "source": "Array",
      "target": "Problem 1997",
      "value": 1,
      "timestamp": "2025-10-27"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1997",
      "value": 1,
      "timestamp": "2025-10-27"
    },
    {
      "source": "Array",
      "target": "Problem 1994",
      "value": 1,
      "timestamp": "2025-10-27"
    },
    {
      "source": "Math",
      "target": "Problem 1994",
      "value": 1,
      "timestamp": "2025-10-27"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 1994",
      "value": 1,
      "timestamp": "2025-10-27"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 1994",
      "value": 1,
      "timestamp": "2025-10-27"
    },
    {
      "source": "Bitmask",
      "target": "Problem 1994",
      "value": 1,
      "timestamp": "2025-10-27"
    },
    {
      "source": "Array",
      "target": "Problem 1993",
      "value": 1,
      "timestamp": "2025-10-28"
    },
    {
      "source": "Hash Table",
      "target": "Problem 1993",
      "value": 1,
      "timestamp": "2025-10-28"
    },
    {
      "source": "Tree",
      "target": "Problem 1993",
      "value": 1,
      "timestamp": "2025-10-28"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 1993",
      "value": 1,
      "timestamp": "2025-10-28"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 1993",
      "value": 1,
      "timestamp": "2025-10-28"
    },
    {
      "source": "Design",
      "target": "Problem 1993",
      "value": 1,
      "timestamp": "2025-10-28"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2000",
      "value": 1,
      "timestamp": "2025-10-28"
    },
    {
      "source": "String",
      "target": "Problem 2000",
      "value": 1,
      "timestamp": "2025-10-28"
    },
    {
      "source": "Stack",
      "target": "Problem 2000",
      "value": 1,
      "timestamp": "2025-10-28"
    },
    {
      "source": "Array",
      "target": "Problem 2007",
      "value": 1,
      "timestamp": "2025-10-29"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2007",
      "value": 1,
      "timestamp": "2025-10-29"
    },
    {
      "source": "Greedy",
      "target": "Problem 2007",
      "value": 1,
      "timestamp": "2025-10-29"
    },
    {
      "source": "Sorting",
      "target": "Problem 2007",
      "value": 1,
      "timestamp": "2025-10-29"
    },
    {
      "source": "String",
      "target": "Problem 2002",
      "value": 1,
      "timestamp": "2025-10-29"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2002",
      "value": 1,
      "timestamp": "2025-10-29"
    },
    {
      "source": "Backtracking",
      "target": "Problem 2002",
      "value": 1,
      "timestamp": "2025-10-29"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2002",
      "value": 1,
      "timestamp": "2025-10-29"
    },
    {
      "source": "Bitmask",
      "target": "Problem 2002",
      "value": 1,
      "timestamp": "2025-10-29"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2003",
      "value": 1,
      "timestamp": "2025-10-30"
    },
    {
      "source": "Tree",
      "target": "Problem 2003",
      "value": 1,
      "timestamp": "2025-10-30"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2003",
      "value": 1,
      "timestamp": "2025-10-30"
    },
    {
      "source": "Union Find",
      "target": "Problem 2003",
      "value": 1,
      "timestamp": "2025-10-30"
    },
    {
      "source": "Array",
      "target": "Problem 2001",
      "value": 1,
      "timestamp": "2025-10-30"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2001",
      "value": 1,
      "timestamp": "2025-10-30"
    },
    {
      "source": "Math",
      "target": "Problem 2001",
      "value": 1,
      "timestamp": "2025-10-30"
    },
    {
      "source": "Counting",
      "target": "Problem 2001",
      "value": 1,
      "timestamp": "2025-10-30"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2001",
      "value": 1,
      "timestamp": "2025-10-30"
    },
    {
      "source": "Array",
      "target": "Problem 2006",
      "value": 1,
      "timestamp": "2025-10-30"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2006",
      "value": 1,
      "timestamp": "2025-10-30"
    },
    {
      "source": "Counting",
      "target": "Problem 2006",
      "value": 1,
      "timestamp": "2025-10-30"
    },
    {
      "source": "Array",
      "target": "Problem 2008",
      "value": 1,
      "timestamp": "2025-10-31"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2008",
      "value": 1,
      "timestamp": "2025-10-31"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2008",
      "value": 1,
      "timestamp": "2025-10-31"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2008",
      "value": 1,
      "timestamp": "2025-10-31"
    },
    {
      "source": "Sorting",
      "target": "Problem 2008",
      "value": 1,
      "timestamp": "2025-10-31"
    },
    {
      "source": "Array",
      "target": "Problem 2013",
      "value": 1,
      "timestamp": "2025-10-31"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2013",
      "value": 1,
      "timestamp": "2025-10-31"
    },
    {
      "source": "Design",
      "target": "Problem 2013",
      "value": 1,
      "timestamp": "2025-10-31"
    },
    {
      "source": "Counting",
      "target": "Problem 2013",
      "value": 1,
      "timestamp": "2025-10-31"
    },
    {
      "source": "Array",
      "target": "Problem 2012",
      "value": 1,
      "timestamp": "2025-10-31"
    },
    {
      "source": "Array",
      "target": "Problem 2011",
      "value": 1,
      "timestamp": "2025-11-01"
    },
    {
      "source": "String",
      "target": "Problem 2011",
      "value": 1,
      "timestamp": "2025-11-01"
    },
    {
      "source": "Simulation",
      "target": "Problem 2011",
      "value": 1,
      "timestamp": "2025-11-01"
    },
    {
      "source": "Array",
      "target": "Problem 2009",
      "value": 1,
      "timestamp": "2025-11-01"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2009",
      "value": 1,
      "timestamp": "2025-11-01"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2009",
      "value": 1,
      "timestamp": "2025-11-01"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2009",
      "value": 1,
      "timestamp": "2025-11-01"
    },
    {
      "source": "String",
      "target": "Problem 2014",
      "value": 1,
      "timestamp": "2025-11-02"
    },
    {
      "source": "Backtracking",
      "target": "Problem 2014",
      "value": 1,
      "timestamp": "2025-11-02"
    },
    {
      "source": "Greedy",
      "target": "Problem 2014",
      "value": 1,
      "timestamp": "2025-11-02"
    },
    {
      "source": "Counting",
      "target": "Problem 2014",
      "value": 1,
      "timestamp": "2025-11-02"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2014",
      "value": 1,
      "timestamp": "2025-11-02"
    },
    {
      "source": "Array",
      "target": "Problem 2017",
      "value": 1,
      "timestamp": "2025-11-02"
    },
    {
      "source": "Matrix",
      "target": "Problem 2017",
      "value": 1,
      "timestamp": "2025-11-02"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2017",
      "value": 1,
      "timestamp": "2025-11-02"
    },
    {
      "source": "Array",
      "target": "Problem 2019",
      "value": 1,
      "timestamp": "2025-11-03"
    },
    {
      "source": "Math",
      "target": "Problem 2019",
      "value": 1,
      "timestamp": "2025-11-03"
    },
    {
      "source": "String",
      "target": "Problem 2019",
      "value": 1,
      "timestamp": "2025-11-03"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2019",
      "value": 1,
      "timestamp": "2025-11-03"
    },
    {
      "source": "Stack",
      "target": "Problem 2019",
      "value": 1,
      "timestamp": "2025-11-03"
    },
    {
      "source": "Memoization",
      "target": "Problem 2019",
      "value": 1,
      "timestamp": "2025-11-03"
    },
    {
      "source": "Array",
      "target": "Problem 2018",
      "value": 1,
      "timestamp": "2025-11-03"
    },
    {
      "source": "Matrix",
      "target": "Problem 2018",
      "value": 1,
      "timestamp": "2025-11-03"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2018",
      "value": 1,
      "timestamp": "2025-11-03"
    },
    {
      "source": "Array",
      "target": "Problem 2023",
      "value": 1,
      "timestamp": "2025-11-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2023",
      "value": 1,
      "timestamp": "2025-11-04"
    },
    {
      "source": "String",
      "target": "Problem 2023",
      "value": 1,
      "timestamp": "2025-11-04"
    },
    {
      "source": "Counting",
      "target": "Problem 2023",
      "value": 1,
      "timestamp": "2025-11-04"
    },
    {
      "source": "Array",
      "target": "Problem 2022",
      "value": 1,
      "timestamp": "2025-11-05"
    },
    {
      "source": "Matrix",
      "target": "Problem 2022",
      "value": 1,
      "timestamp": "2025-11-05"
    },
    {
      "source": "Simulation",
      "target": "Problem 2022",
      "value": 1,
      "timestamp": "2025-11-05"
    },
    {
      "source": "Array",
      "target": "Problem 2025",
      "value": 1,
      "timestamp": "2025-11-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2025",
      "value": 1,
      "timestamp": "2025-11-05"
    },
    {
      "source": "Counting",
      "target": "Problem 2025",
      "value": 1,
      "timestamp": "2025-11-05"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2025",
      "value": 1,
      "timestamp": "2025-11-05"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2025",
      "value": 1,
      "timestamp": "2025-11-05"
    },
    {
      "source": "String",
      "target": "Problem 2024",
      "value": 1,
      "timestamp": "2025-11-05"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2024",
      "value": 1,
      "timestamp": "2025-11-05"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2024",
      "value": 1,
      "timestamp": "2025-11-05"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2024",
      "value": 1,
      "timestamp": "2025-11-05"
    },
    {
      "source": "String",
      "target": "Problem 2030",
      "value": 1,
      "timestamp": "2025-11-06"
    },
    {
      "source": "Stack",
      "target": "Problem 2030",
      "value": 1,
      "timestamp": "2025-11-06"
    },
    {
      "source": "Greedy",
      "target": "Problem 2030",
      "value": 1,
      "timestamp": "2025-11-06"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 2030",
      "value": 1,
      "timestamp": "2025-11-06"
    },
    {
      "source": "String",
      "target": "Problem 2027",
      "value": 1,
      "timestamp": "2025-11-07"
    },
    {
      "source": "Greedy",
      "target": "Problem 2027",
      "value": 1,
      "timestamp": "2025-11-07"
    },
    {
      "source": "Array",
      "target": "Problem 2028",
      "value": 1,
      "timestamp": "2025-11-07"
    },
    {
      "source": "Math",
      "target": "Problem 2028",
      "value": 1,
      "timestamp": "2025-11-07"
    },
    {
      "source": "Simulation",
      "target": "Problem 2028",
      "value": 1,
      "timestamp": "2025-11-07"
    },
    {
      "source": "Array",
      "target": "Problem 2029",
      "value": 1,
      "timestamp": "2025-11-07"
    },
    {
      "source": "Math",
      "target": "Problem 2029",
      "value": 1,
      "timestamp": "2025-11-07"
    },
    {
      "source": "Greedy",
      "target": "Problem 2029",
      "value": 1,
      "timestamp": "2025-11-07"
    },
    {
      "source": "Counting",
      "target": "Problem 2029",
      "value": 1,
      "timestamp": "2025-11-07"
    },
    {
      "source": "Game Theory",
      "target": "Problem 2029",
      "value": 1,
      "timestamp": "2025-11-07"
    },
    {
      "source": "Array",
      "target": "Problem 2033",
      "value": 1,
      "timestamp": "2025-11-08"
    },
    {
      "source": "Math",
      "target": "Problem 2033",
      "value": 1,
      "timestamp": "2025-11-08"
    },
    {
      "source": "Sorting",
      "target": "Problem 2033",
      "value": 1,
      "timestamp": "2025-11-08"
    },
    {
      "source": "Matrix",
      "target": "Problem 2033",
      "value": 1,
      "timestamp": "2025-11-08"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2034",
      "value": 1,
      "timestamp": "2025-11-08"
    },
    {
      "source": "Design",
      "target": "Problem 2034",
      "value": 1,
      "timestamp": "2025-11-08"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2034",
      "value": 1,
      "timestamp": "2025-11-08"
    },
    {
      "source": "Data Stream",
      "target": "Problem 2034",
      "value": 1,
      "timestamp": "2025-11-08"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2034",
      "value": 1,
      "timestamp": "2025-11-08"
    },
    {
      "source": "Array",
      "target": "Problem 2032",
      "value": 1,
      "timestamp": "2025-11-09"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2032",
      "value": 1,
      "timestamp": "2025-11-09"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2032",
      "value": 1,
      "timestamp": "2025-11-09"
    },
    {
      "source": "Array",
      "target": "Problem 2035",
      "value": 1,
      "timestamp": "2025-11-09"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2035",
      "value": 1,
      "timestamp": "2025-11-09"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2035",
      "value": 1,
      "timestamp": "2025-11-09"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2035",
      "value": 1,
      "timestamp": "2025-11-09"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2035",
      "value": 1,
      "timestamp": "2025-11-09"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2035",
      "value": 1,
      "timestamp": "2025-11-09"
    },
    {
      "source": "Bitmask",
      "target": "Problem 2035",
      "value": 1,
      "timestamp": "2025-11-09"
    },
    {
      "source": "Array",
      "target": "Problem 2037",
      "value": 1,
      "timestamp": "2025-11-09"
    },
    {
      "source": "Greedy",
      "target": "Problem 2037",
      "value": 1,
      "timestamp": "2025-11-09"
    },
    {
      "source": "Sorting",
      "target": "Problem 2037",
      "value": 1,
      "timestamp": "2025-11-09"
    },
    {
      "source": "Counting Sort",
      "target": "Problem 2037",
      "value": 1,
      "timestamp": "2025-11-09"
    },
    {
      "source": "Math",
      "target": "Problem 2038",
      "value": 1,
      "timestamp": "2025-11-10"
    },
    {
      "source": "String",
      "target": "Problem 2038",
      "value": 1,
      "timestamp": "2025-11-10"
    },
    {
      "source": "Greedy",
      "target": "Problem 2038",
      "value": 1,
      "timestamp": "2025-11-10"
    },
    {
      "source": "Game Theory",
      "target": "Problem 2038",
      "value": 1,
      "timestamp": "2025-11-10"
    },
    {
      "source": "Array",
      "target": "Problem 2039",
      "value": 1,
      "timestamp": "2025-11-10"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2039",
      "value": 1,
      "timestamp": "2025-11-10"
    },
    {
      "source": "Graph",
      "target": "Problem 2039",
      "value": 1,
      "timestamp": "2025-11-10"
    },
    {
      "source": "Array",
      "target": "Problem 2040",
      "value": 1,
      "timestamp": "2025-11-10"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2040",
      "value": 1,
      "timestamp": "2025-11-10"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2045",
      "value": 1,
      "timestamp": "2025-11-11"
    },
    {
      "source": "Graph",
      "target": "Problem 2045",
      "value": 1,
      "timestamp": "2025-11-11"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 2045",
      "value": 1,
      "timestamp": "2025-11-11"
    },
    {
      "source": "Array",
      "target": "Problem 2043",
      "value": 1,
      "timestamp": "2025-11-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2043",
      "value": 1,
      "timestamp": "2025-11-11"
    },
    {
      "source": "Design",
      "target": "Problem 2043",
      "value": 1,
      "timestamp": "2025-11-11"
    },
    {
      "source": "Simulation",
      "target": "Problem 2043",
      "value": 1,
      "timestamp": "2025-11-11"
    },
    {
      "source": "Array",
      "target": "Problem 2044",
      "value": 1,
      "timestamp": "2025-11-12"
    },
    {
      "source": "Backtracking",
      "target": "Problem 2044",
      "value": 1,
      "timestamp": "2025-11-12"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2044",
      "value": 1,
      "timestamp": "2025-11-12"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2044",
      "value": 1,
      "timestamp": "2025-11-12"
    },
    {
      "source": "String",
      "target": "Problem 2042",
      "value": 1,
      "timestamp": "2025-11-12"
    },
    {
      "source": "String",
      "target": "Problem 2047",
      "value": 1,
      "timestamp": "2025-11-13"
    },
    {
      "source": "Math",
      "target": "Problem 2048",
      "value": 1,
      "timestamp": "2025-11-13"
    },
    {
      "source": "Backtracking",
      "target": "Problem 2048",
      "value": 1,
      "timestamp": "2025-11-13"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2048",
      "value": 1,
      "timestamp": "2025-11-13"
    },
    {
      "source": "Array",
      "target": "Problem 2049",
      "value": 1,
      "timestamp": "2025-11-13"
    },
    {
      "source": "Tree",
      "target": "Problem 2049",
      "value": 1,
      "timestamp": "2025-11-13"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2049",
      "value": 1,
      "timestamp": "2025-11-13"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 2049",
      "value": 1,
      "timestamp": "2025-11-13"
    },
    {
      "source": "Array",
      "target": "Problem 2054",
      "value": 1,
      "timestamp": "2025-11-14"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2054",
      "value": 1,
      "timestamp": "2025-11-14"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2054",
      "value": 1,
      "timestamp": "2025-11-14"
    },
    {
      "source": "Sorting",
      "target": "Problem 2054",
      "value": 1,
      "timestamp": "2025-11-14"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2054",
      "value": 1,
      "timestamp": "2025-11-14"
    },
    {
      "source": "Array",
      "target": "Problem 2053",
      "value": 1,
      "timestamp": "2025-11-15"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2053",
      "value": 1,
      "timestamp": "2025-11-15"
    },
    {
      "source": "String",
      "target": "Problem 2053",
      "value": 1,
      "timestamp": "2025-11-15"
    },
    {
      "source": "Counting",
      "target": "Problem 2053",
      "value": 1,
      "timestamp": "2025-11-15"
    },
    {
      "source": "Array",
      "target": "Problem 2050",
      "value": 1,
      "timestamp": "2025-11-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2050",
      "value": 1,
      "timestamp": "2025-11-15"
    },
    {
      "source": "Graph",
      "target": "Problem 2050",
      "value": 1,
      "timestamp": "2025-11-15"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 2050",
      "value": 1,
      "timestamp": "2025-11-15"
    },
    {
      "source": "Array",
      "target": "Problem 2055",
      "value": 1,
      "timestamp": "2025-11-15"
    },
    {
      "source": "String",
      "target": "Problem 2055",
      "value": 1,
      "timestamp": "2025-11-15"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2055",
      "value": 1,
      "timestamp": "2025-11-15"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2055",
      "value": 1,
      "timestamp": "2025-11-15"
    },
    {
      "source": "Linked List",
      "target": "Problem 2058",
      "value": 1,
      "timestamp": "2025-11-16"
    },
    {
      "source": "Array",
      "target": "Problem 2057",
      "value": 1,
      "timestamp": "2025-11-16"
    },
    {
      "source": "Array",
      "target": "Problem 2059",
      "value": 1,
      "timestamp": "2025-11-16"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2059",
      "value": 1,
      "timestamp": "2025-11-16"
    },
    {
      "source": "Array",
      "target": "Problem 2056",
      "value": 1,
      "timestamp": "2025-11-17"
    },
    {
      "source": "String",
      "target": "Problem 2056",
      "value": 1,
      "timestamp": "2025-11-17"
    },
    {
      "source": "Backtracking",
      "target": "Problem 2056",
      "value": 1,
      "timestamp": "2025-11-17"
    },
    {
      "source": "Simulation",
      "target": "Problem 2056",
      "value": 1,
      "timestamp": "2025-11-17"
    },
    {
      "source": "String",
      "target": "Problem 2060",
      "value": 1,
      "timestamp": "2025-11-17"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2060",
      "value": 1,
      "timestamp": "2025-11-17"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2062",
      "value": 1,
      "timestamp": "2025-11-18"
    },
    {
      "source": "String",
      "target": "Problem 2062",
      "value": 1,
      "timestamp": "2025-11-18"
    },
    {
      "source": "Math",
      "target": "Problem 2063",
      "value": 1,
      "timestamp": "2025-11-18"
    },
    {
      "source": "String",
      "target": "Problem 2063",
      "value": 1,
      "timestamp": "2025-11-18"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2063",
      "value": 1,
      "timestamp": "2025-11-18"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 2063",
      "value": 1,
      "timestamp": "2025-11-18"
    },
    {
      "source": "Array",
      "target": "Problem 2065",
      "value": 1,
      "timestamp": "2025-11-19"
    },
    {
      "source": "Backtracking",
      "target": "Problem 2065",
      "value": 1,
      "timestamp": "2025-11-19"
    },
    {
      "source": "Graph",
      "target": "Problem 2065",
      "value": 1,
      "timestamp": "2025-11-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2068",
      "value": 1,
      "timestamp": "2025-11-19"
    },
    {
      "source": "String",
      "target": "Problem 2068",
      "value": 1,
      "timestamp": "2025-11-19"
    },
    {
      "source": "Counting",
      "target": "Problem 2068",
      "value": 1,
      "timestamp": "2025-11-19"
    },
    {
      "source": "Array",
      "target": "Problem 2064",
      "value": 1,
      "timestamp": "2025-11-19"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2064",
      "value": 1,
      "timestamp": "2025-11-19"
    },
    {
      "source": "Greedy",
      "target": "Problem 2064",
      "value": 1,
      "timestamp": "2025-11-19"
    },
    {
      "source": "Array",
      "target": "Problem 2070",
      "value": 1,
      "timestamp": "2025-11-20"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2070",
      "value": 1,
      "timestamp": "2025-11-20"
    },
    {
      "source": "Sorting",
      "target": "Problem 2070",
      "value": 1,
      "timestamp": "2025-11-20"
    },
    {
      "source": "Design",
      "target": "Problem 2069",
      "value": 1,
      "timestamp": "2025-11-20"
    },
    {
      "source": "Simulation",
      "target": "Problem 2069",
      "value": 1,
      "timestamp": "2025-11-20"
    },
    {
      "source": "Array",
      "target": "Problem 2071",
      "value": 1,
      "timestamp": "2025-11-21"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2071",
      "value": 1,
      "timestamp": "2025-11-21"
    },
    {
      "source": "Greedy",
      "target": "Problem 2071",
      "value": 1,
      "timestamp": "2025-11-21"
    },
    {
      "source": "Queue",
      "target": "Problem 2071",
      "value": 1,
      "timestamp": "2025-11-21"
    },
    {
      "source": "Sorting",
      "target": "Problem 2071",
      "value": 1,
      "timestamp": "2025-11-21"
    },
    {
      "source": "Monotonic Queue",
      "target": "Problem 2071",
      "value": 1,
      "timestamp": "2025-11-21"
    },
    {
      "source": "String",
      "target": "Problem 2075",
      "value": 1,
      "timestamp": "2025-11-21"
    },
    {
      "source": "Simulation",
      "target": "Problem 2075",
      "value": 1,
      "timestamp": "2025-11-21"
    },
    {
      "source": "Union Find",
      "target": "Problem 2076",
      "value": 1,
      "timestamp": "2025-11-22"
    },
    {
      "source": "Graph",
      "target": "Problem 2076",
      "value": 1,
      "timestamp": "2025-11-22"
    },
    {
      "source": "Array",
      "target": "Problem 2073",
      "value": 1,
      "timestamp": "2025-11-22"
    },
    {
      "source": "Queue",
      "target": "Problem 2073",
      "value": 1,
      "timestamp": "2025-11-22"
    },
    {
      "source": "Simulation",
      "target": "Problem 2073",
      "value": 1,
      "timestamp": "2025-11-22"
    },
    {
      "source": "Linked List",
      "target": "Problem 2074",
      "value": 1,
      "timestamp": "2025-11-23"
    },
    {
      "source": "Array",
      "target": "Problem 2078",
      "value": 1,
      "timestamp": "2025-11-23"
    },
    {
      "source": "Greedy",
      "target": "Problem 2078",
      "value": 1,
      "timestamp": "2025-11-23"
    },
    {
      "source": "Array",
      "target": "Problem 2079",
      "value": 1,
      "timestamp": "2025-11-23"
    },
    {
      "source": "Simulation",
      "target": "Problem 2079",
      "value": 1,
      "timestamp": "2025-11-23"
    },
    {
      "source": "Math",
      "target": "Problem 2081",
      "value": 1,
      "timestamp": "2025-11-24"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2081",
      "value": 1,
      "timestamp": "2025-11-24"
    },
    {
      "source": "Array",
      "target": "Problem 2080",
      "value": 1,
      "timestamp": "2025-11-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2080",
      "value": 1,
      "timestamp": "2025-11-24"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2080",
      "value": 1,
      "timestamp": "2025-11-24"
    },
    {
      "source": "Design",
      "target": "Problem 2080",
      "value": 1,
      "timestamp": "2025-11-24"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 2080",
      "value": 1,
      "timestamp": "2025-11-24"
    },
    {
      "source": "Array",
      "target": "Problem 2085",
      "value": 1,
      "timestamp": "2025-11-25"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2085",
      "value": 1,
      "timestamp": "2025-11-25"
    },
    {
      "source": "String",
      "target": "Problem 2085",
      "value": 1,
      "timestamp": "2025-11-25"
    },
    {
      "source": "Counting",
      "target": "Problem 2085",
      "value": 1,
      "timestamp": "2025-11-25"
    },
    {
      "source": "Array",
      "target": "Problem 2087",
      "value": 1,
      "timestamp": "2025-11-26"
    },
    {
      "source": "Greedy",
      "target": "Problem 2087",
      "value": 1,
      "timestamp": "2025-11-26"
    },
    {
      "source": "String",
      "target": "Problem 2086",
      "value": 1,
      "timestamp": "2025-11-26"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2086",
      "value": 1,
      "timestamp": "2025-11-26"
    },
    {
      "source": "Greedy",
      "target": "Problem 2086",
      "value": 1,
      "timestamp": "2025-11-26"
    },
    {
      "source": "Array",
      "target": "Problem 2088",
      "value": 1,
      "timestamp": "2025-11-26"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2088",
      "value": 1,
      "timestamp": "2025-11-26"
    },
    {
      "source": "Matrix",
      "target": "Problem 2088",
      "value": 1,
      "timestamp": "2025-11-26"
    },
    {
      "source": "Array",
      "target": "Problem 2089",
      "value": 1,
      "timestamp": "2025-11-27"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2089",
      "value": 1,
      "timestamp": "2025-11-27"
    },
    {
      "source": "Sorting",
      "target": "Problem 2089",
      "value": 1,
      "timestamp": "2025-11-27"
    },
    {
      "source": "Array",
      "target": "Problem 2090",
      "value": 1,
      "timestamp": "2025-11-27"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2090",
      "value": 1,
      "timestamp": "2025-11-27"
    },
    {
      "source": "Array",
      "target": "Problem 2091",
      "value": 1,
      "timestamp": "2025-11-27"
    },
    {
      "source": "Greedy",
      "target": "Problem 2091",
      "value": 1,
      "timestamp": "2025-11-27"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2092",
      "value": 1,
      "timestamp": "2025-11-28"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2092",
      "value": 1,
      "timestamp": "2025-11-28"
    },
    {
      "source": "Union Find",
      "target": "Problem 2092",
      "value": 1,
      "timestamp": "2025-11-28"
    },
    {
      "source": "Graph",
      "target": "Problem 2092",
      "value": 1,
      "timestamp": "2025-11-28"
    },
    {
      "source": "Sorting",
      "target": "Problem 2092",
      "value": 1,
      "timestamp": "2025-11-28"
    },
    {
      "source": "Array",
      "target": "Problem 2094",
      "value": 1,
      "timestamp": "2025-11-28"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2094",
      "value": 1,
      "timestamp": "2025-11-28"
    },
    {
      "source": "Sorting",
      "target": "Problem 2094",
      "value": 1,
      "timestamp": "2025-11-28"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2094",
      "value": 1,
      "timestamp": "2025-11-28"
    },
    {
      "source": "Linked List",
      "target": "Problem 2095",
      "value": 1,
      "timestamp": "2025-11-29"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2095",
      "value": 1,
      "timestamp": "2025-11-29"
    },
    {
      "source": "String",
      "target": "Problem 2096",
      "value": 1,
      "timestamp": "2025-11-29"
    },
    {
      "source": "Tree",
      "target": "Problem 2096",
      "value": 1,
      "timestamp": "2025-11-29"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2096",
      "value": 1,
      "timestamp": "2025-11-29"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 2096",
      "value": 1,
      "timestamp": "2025-11-29"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2097",
      "value": 1,
      "timestamp": "2025-11-29"
    },
    {
      "source": "Graph",
      "target": "Problem 2097",
      "value": 1,
      "timestamp": "2025-11-29"
    },
    {
      "source": "Eulerian Circuit",
      "target": "Problem 2097",
      "value": 1,
      "timestamp": "2025-11-29"
    },
    {
      "source": "Array",
      "target": "Problem 2100",
      "value": 1,
      "timestamp": "2025-11-30"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2100",
      "value": 1,
      "timestamp": "2025-11-30"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2100",
      "value": 1,
      "timestamp": "2025-11-30"
    },
    {
      "source": "Array",
      "target": "Problem 2099",
      "value": 1,
      "timestamp": "2025-11-30"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2099",
      "value": 1,
      "timestamp": "2025-11-30"
    },
    {
      "source": "Sorting",
      "target": "Problem 2099",
      "value": 1,
      "timestamp": "2025-11-30"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2099",
      "value": 1,
      "timestamp": "2025-11-30"
    },
    {
      "source": "Array",
      "target": "Problem 2101",
      "value": 1,
      "timestamp": "2025-12-01"
    },
    {
      "source": "Math",
      "target": "Problem 2101",
      "value": 1,
      "timestamp": "2025-12-01"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2101",
      "value": 1,
      "timestamp": "2025-12-01"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2101",
      "value": 1,
      "timestamp": "2025-12-01"
    },
    {
      "source": "Graph",
      "target": "Problem 2101",
      "value": 1,
      "timestamp": "2025-12-01"
    },
    {
      "source": "Geometry",
      "target": "Problem 2101",
      "value": 1,
      "timestamp": "2025-12-01"
    },
    {
      "source": "Design",
      "target": "Problem 2102",
      "value": 1,
      "timestamp": "2025-12-01"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2102",
      "value": 1,
      "timestamp": "2025-12-01"
    },
    {
      "source": "Data Stream",
      "target": "Problem 2102",
      "value": 1,
      "timestamp": "2025-12-01"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2102",
      "value": 1,
      "timestamp": "2025-12-01"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2103",
      "value": 1,
      "timestamp": "2025-12-01"
    },
    {
      "source": "String",
      "target": "Problem 2103",
      "value": 1,
      "timestamp": "2025-12-01"
    },
    {
      "source": "Array",
      "target": "Problem 2106",
      "value": 1,
      "timestamp": "2025-12-02"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2106",
      "value": 1,
      "timestamp": "2025-12-02"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2106",
      "value": 1,
      "timestamp": "2025-12-02"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2106",
      "value": 1,
      "timestamp": "2025-12-02"
    },
    {
      "source": "Array",
      "target": "Problem 2105",
      "value": 1,
      "timestamp": "2025-12-02"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2105",
      "value": 1,
      "timestamp": "2025-12-02"
    },
    {
      "source": "Simulation",
      "target": "Problem 2105",
      "value": 1,
      "timestamp": "2025-12-02"
    },
    {
      "source": "Array",
      "target": "Problem 2104",
      "value": 1,
      "timestamp": "2025-12-02"
    },
    {
      "source": "Stack",
      "target": "Problem 2104",
      "value": 1,
      "timestamp": "2025-12-02"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 2104",
      "value": 1,
      "timestamp": "2025-12-02"
    },
    {
      "source": "Array",
      "target": "Problem 2108",
      "value": 1,
      "timestamp": "2025-12-03"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2108",
      "value": 1,
      "timestamp": "2025-12-03"
    },
    {
      "source": "String",
      "target": "Problem 2108",
      "value": 1,
      "timestamp": "2025-12-03"
    },
    {
      "source": "Array",
      "target": "Problem 2109",
      "value": 1,
      "timestamp": "2025-12-03"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2109",
      "value": 1,
      "timestamp": "2025-12-03"
    },
    {
      "source": "String",
      "target": "Problem 2109",
      "value": 1,
      "timestamp": "2025-12-03"
    },
    {
      "source": "Simulation",
      "target": "Problem 2109",
      "value": 1,
      "timestamp": "2025-12-03"
    },
    {
      "source": "Array",
      "target": "Problem 2110",
      "value": 1,
      "timestamp": "2025-12-04"
    },
    {
      "source": "Math",
      "target": "Problem 2110",
      "value": 1,
      "timestamp": "2025-12-04"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2110",
      "value": 1,
      "timestamp": "2025-12-04"
    },
    {
      "source": "String",
      "target": "Problem 2116",
      "value": 1,
      "timestamp": "2025-12-04"
    },
    {
      "source": "Stack",
      "target": "Problem 2116",
      "value": 1,
      "timestamp": "2025-12-04"
    },
    {
      "source": "Greedy",
      "target": "Problem 2116",
      "value": 1,
      "timestamp": "2025-12-04"
    },
    {
      "source": "Array",
      "target": "Problem 2115",
      "value": 1,
      "timestamp": "2025-12-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2115",
      "value": 1,
      "timestamp": "2025-12-05"
    },
    {
      "source": "String",
      "target": "Problem 2115",
      "value": 1,
      "timestamp": "2025-12-05"
    },
    {
      "source": "Graph",
      "target": "Problem 2115",
      "value": 1,
      "timestamp": "2025-12-05"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 2115",
      "value": 1,
      "timestamp": "2025-12-05"
    },
    {
      "source": "Array",
      "target": "Problem 2111",
      "value": 1,
      "timestamp": "2025-12-05"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2111",
      "value": 1,
      "timestamp": "2025-12-05"
    },
    {
      "source": "Array",
      "target": "Problem 2114",
      "value": 1,
      "timestamp": "2025-12-06"
    },
    {
      "source": "String",
      "target": "Problem 2114",
      "value": 1,
      "timestamp": "2025-12-06"
    },
    {
      "source": "Math",
      "target": "Problem 2117",
      "value": 1,
      "timestamp": "2025-12-06"
    },
    {
      "source": "Math",
      "target": "Problem 2119",
      "value": 1,
      "timestamp": "2025-12-07"
    },
    {
      "source": "Array",
      "target": "Problem 2121",
      "value": 1,
      "timestamp": "2025-12-07"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2121",
      "value": 1,
      "timestamp": "2025-12-07"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2121",
      "value": 1,
      "timestamp": "2025-12-07"
    },
    {
      "source": "String",
      "target": "Problem 2120",
      "value": 1,
      "timestamp": "2025-12-07"
    },
    {
      "source": "Simulation",
      "target": "Problem 2120",
      "value": 1,
      "timestamp": "2025-12-07"
    },
    {
      "source": "Array",
      "target": "Problem 2122",
      "value": 1,
      "timestamp": "2025-12-08"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2122",
      "value": 1,
      "timestamp": "2025-12-08"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2122",
      "value": 1,
      "timestamp": "2025-12-08"
    },
    {
      "source": "Sorting",
      "target": "Problem 2122",
      "value": 1,
      "timestamp": "2025-12-08"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2122",
      "value": 1,
      "timestamp": "2025-12-08"
    },
    {
      "source": "String",
      "target": "Problem 2129",
      "value": 1,
      "timestamp": "2025-12-09"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2127",
      "value": 1,
      "timestamp": "2025-12-09"
    },
    {
      "source": "Graph",
      "target": "Problem 2127",
      "value": 1,
      "timestamp": "2025-12-09"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 2127",
      "value": 1,
      "timestamp": "2025-12-09"
    },
    {
      "source": "Array",
      "target": "Problem 2126",
      "value": 1,
      "timestamp": "2025-12-10"
    },
    {
      "source": "Greedy",
      "target": "Problem 2126",
      "value": 1,
      "timestamp": "2025-12-10"
    },
    {
      "source": "Sorting",
      "target": "Problem 2126",
      "value": 1,
      "timestamp": "2025-12-10"
    },
    {
      "source": "Array",
      "target": "Problem 2125",
      "value": 1,
      "timestamp": "2025-12-10"
    },
    {
      "source": "Math",
      "target": "Problem 2125",
      "value": 1,
      "timestamp": "2025-12-10"
    },
    {
      "source": "String",
      "target": "Problem 2125",
      "value": 1,
      "timestamp": "2025-12-10"
    },
    {
      "source": "Matrix",
      "target": "Problem 2125",
      "value": 1,
      "timestamp": "2025-12-10"
    },
    {
      "source": "Array",
      "target": "Problem 2132",
      "value": 1,
      "timestamp": "2025-12-11"
    },
    {
      "source": "Greedy",
      "target": "Problem 2132",
      "value": 1,
      "timestamp": "2025-12-11"
    },
    {
      "source": "Matrix",
      "target": "Problem 2132",
      "value": 1,
      "timestamp": "2025-12-11"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2132",
      "value": 1,
      "timestamp": "2025-12-11"
    },
    {
      "source": "Array",
      "target": "Problem 2136",
      "value": 1,
      "timestamp": "2025-12-11"
    },
    {
      "source": "Greedy",
      "target": "Problem 2136",
      "value": 1,
      "timestamp": "2025-12-11"
    },
    {
      "source": "Sorting",
      "target": "Problem 2136",
      "value": 1,
      "timestamp": "2025-12-11"
    },
    {
      "source": "Array",
      "target": "Problem 2131",
      "value": 1,
      "timestamp": "2025-12-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2131",
      "value": 1,
      "timestamp": "2025-12-12"
    },
    {
      "source": "String",
      "target": "Problem 2131",
      "value": 1,
      "timestamp": "2025-12-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 2131",
      "value": 1,
      "timestamp": "2025-12-12"
    },
    {
      "source": "Counting",
      "target": "Problem 2131",
      "value": 1,
      "timestamp": "2025-12-12"
    },
    {
      "source": "Array",
      "target": "Problem 2135",
      "value": 1,
      "timestamp": "2025-12-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2135",
      "value": 1,
      "timestamp": "2025-12-12"
    },
    {
      "source": "String",
      "target": "Problem 2135",
      "value": 1,
      "timestamp": "2025-12-12"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2135",
      "value": 1,
      "timestamp": "2025-12-12"
    },
    {
      "source": "Sorting",
      "target": "Problem 2135",
      "value": 1,
      "timestamp": "2025-12-12"
    },
    {
      "source": "Array",
      "target": "Problem 2133",
      "value": 1,
      "timestamp": "2025-12-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2133",
      "value": 1,
      "timestamp": "2025-12-12"
    },
    {
      "source": "Matrix",
      "target": "Problem 2133",
      "value": 1,
      "timestamp": "2025-12-12"
    },
    {
      "source": "Math",
      "target": "Problem 2139",
      "value": 1,
      "timestamp": "2025-12-13"
    },
    {
      "source": "Greedy",
      "target": "Problem 2139",
      "value": 1,
      "timestamp": "2025-12-13"
    },
    {
      "source": "Array",
      "target": "Problem 2141",
      "value": 1,
      "timestamp": "2025-12-13"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2141",
      "value": 1,
      "timestamp": "2025-12-13"
    },
    {
      "source": "Greedy",
      "target": "Problem 2141",
      "value": 1,
      "timestamp": "2025-12-13"
    },
    {
      "source": "Sorting",
      "target": "Problem 2141",
      "value": 1,
      "timestamp": "2025-12-13"
    },
    {
      "source": "Array",
      "target": "Problem 2140",
      "value": 1,
      "timestamp": "2025-12-14"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2140",
      "value": 1,
      "timestamp": "2025-12-14"
    },
    {
      "source": "Array",
      "target": "Problem 2144",
      "value": 1,
      "timestamp": "2025-12-14"
    },
    {
      "source": "Greedy",
      "target": "Problem 2144",
      "value": 1,
      "timestamp": "2025-12-14"
    },
    {
      "source": "Sorting",
      "target": "Problem 2144",
      "value": 1,
      "timestamp": "2025-12-14"
    },
    {
      "source": "String",
      "target": "Problem 2138",
      "value": 1,
      "timestamp": "2025-12-15"
    },
    {
      "source": "Simulation",
      "target": "Problem 2138",
      "value": 1,
      "timestamp": "2025-12-15"
    },
    {
      "source": "Array",
      "target": "Problem 2145",
      "value": 1,
      "timestamp": "2025-12-15"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2145",
      "value": 1,
      "timestamp": "2025-12-15"
    },
    {
      "source": "Math",
      "target": "Problem 2147",
      "value": 1,
      "timestamp": "2025-12-15"
    },
    {
      "source": "String",
      "target": "Problem 2147",
      "value": 1,
      "timestamp": "2025-12-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2147",
      "value": 1,
      "timestamp": "2025-12-15"
    },
    {
      "source": "Array",
      "target": "Problem 2149",
      "value": 1,
      "timestamp": "2025-12-16"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2149",
      "value": 1,
      "timestamp": "2025-12-16"
    },
    {
      "source": "Simulation",
      "target": "Problem 2149",
      "value": 1,
      "timestamp": "2025-12-16"
    },
    {
      "source": "Array",
      "target": "Problem 2146",
      "value": 1,
      "timestamp": "2025-12-16"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2146",
      "value": 1,
      "timestamp": "2025-12-16"
    },
    {
      "source": "Sorting",
      "target": "Problem 2146",
      "value": 1,
      "timestamp": "2025-12-16"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2146",
      "value": 1,
      "timestamp": "2025-12-16"
    },
    {
      "source": "Matrix",
      "target": "Problem 2146",
      "value": 1,
      "timestamp": "2025-12-16"
    },
    {
      "source": "Array",
      "target": "Problem 2148",
      "value": 1,
      "timestamp": "2025-12-16"
    },
    {
      "source": "Sorting",
      "target": "Problem 2148",
      "value": 1,
      "timestamp": "2025-12-16"
    },
    {
      "source": "Counting",
      "target": "Problem 2148",
      "value": 1,
      "timestamp": "2025-12-16"
    },
    {
      "source": "Linked List",
      "target": "Problem 2130",
      "value": 1,
      "timestamp": "2025-12-17"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2130",
      "value": 1,
      "timestamp": "2025-12-17"
    },
    {
      "source": "Stack",
      "target": "Problem 2130",
      "value": 1,
      "timestamp": "2025-12-17"
    },
    {
      "source": "Array",
      "target": "Problem 2151",
      "value": 1,
      "timestamp": "2025-12-17"
    },
    {
      "source": "Backtracking",
      "target": "Problem 2151",
      "value": 1,
      "timestamp": "2025-12-17"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2151",
      "value": 1,
      "timestamp": "2025-12-17"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2151",
      "value": 1,
      "timestamp": "2025-12-17"
    },
    {
      "source": "Array",
      "target": "Problem 2150",
      "value": 1,
      "timestamp": "2025-12-17"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2150",
      "value": 1,
      "timestamp": "2025-12-17"
    },
    {
      "source": "Counting",
      "target": "Problem 2150",
      "value": 1,
      "timestamp": "2025-12-17"
    },
    {
      "source": "Array",
      "target": "Problem 2155",
      "value": 1,
      "timestamp": "2025-12-18"
    },
    {
      "source": "String",
      "target": "Problem 2156",
      "value": 1,
      "timestamp": "2025-12-19"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2156",
      "value": 1,
      "timestamp": "2025-12-19"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 2156",
      "value": 1,
      "timestamp": "2025-12-19"
    },
    {
      "source": "Hash Function",
      "target": "Problem 2156",
      "value": 1,
      "timestamp": "2025-12-19"
    },
    {
      "source": "Array",
      "target": "Problem 2154",
      "value": 1,
      "timestamp": "2025-12-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2154",
      "value": 1,
      "timestamp": "2025-12-19"
    },
    {
      "source": "Sorting",
      "target": "Problem 2154",
      "value": 1,
      "timestamp": "2025-12-19"
    },
    {
      "source": "Simulation",
      "target": "Problem 2154",
      "value": 1,
      "timestamp": "2025-12-19"
    },
    {
      "source": "String",
      "target": "Problem 2157",
      "value": 1,
      "timestamp": "2025-12-19"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2157",
      "value": 1,
      "timestamp": "2025-12-19"
    },
    {
      "source": "Union Find",
      "target": "Problem 2157",
      "value": 1,
      "timestamp": "2025-12-19"
    },
    {
      "source": "Math",
      "target": "Problem 2160",
      "value": 1,
      "timestamp": "2025-12-20"
    },
    {
      "source": "Greedy",
      "target": "Problem 2160",
      "value": 1,
      "timestamp": "2025-12-20"
    },
    {
      "source": "Sorting",
      "target": "Problem 2160",
      "value": 1,
      "timestamp": "2025-12-20"
    },
    {
      "source": "Math",
      "target": "Problem 2162",
      "value": 1,
      "timestamp": "2025-12-21"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2162",
      "value": 1,
      "timestamp": "2025-12-21"
    },
    {
      "source": "Array",
      "target": "Problem 2163",
      "value": 1,
      "timestamp": "2025-12-21"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2163",
      "value": 1,
      "timestamp": "2025-12-21"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2163",
      "value": 1,
      "timestamp": "2025-12-21"
    },
    {
      "source": "Array",
      "target": "Problem 2161",
      "value": 1,
      "timestamp": "2025-12-21"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2161",
      "value": 1,
      "timestamp": "2025-12-21"
    },
    {
      "source": "Simulation",
      "target": "Problem 2161",
      "value": 1,
      "timestamp": "2025-12-21"
    },
    {
      "source": "Array",
      "target": "Problem 2164",
      "value": 1,
      "timestamp": "2025-12-22"
    },
    {
      "source": "Sorting",
      "target": "Problem 2164",
      "value": 1,
      "timestamp": "2025-12-22"
    },
    {
      "source": "Math",
      "target": "Problem 2165",
      "value": 1,
      "timestamp": "2025-12-22"
    },
    {
      "source": "Sorting",
      "target": "Problem 2165",
      "value": 1,
      "timestamp": "2025-12-22"
    },
    {
      "source": "String",
      "target": "Problem 2167",
      "value": 1,
      "timestamp": "2025-12-23"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2167",
      "value": 1,
      "timestamp": "2025-12-23"
    },
    {
      "source": "Array",
      "target": "Problem 2172",
      "value": 1,
      "timestamp": "2025-12-23"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2172",
      "value": 1,
      "timestamp": "2025-12-23"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2172",
      "value": 1,
      "timestamp": "2025-12-23"
    },
    {
      "source": "Bitmask",
      "target": "Problem 2172",
      "value": 1,
      "timestamp": "2025-12-23"
    },
    {
      "source": "Array",
      "target": "Problem 2166",
      "value": 1,
      "timestamp": "2025-12-23"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2166",
      "value": 1,
      "timestamp": "2025-12-23"
    },
    {
      "source": "String",
      "target": "Problem 2166",
      "value": 1,
      "timestamp": "2025-12-23"
    },
    {
      "source": "Design",
      "target": "Problem 2166",
      "value": 1,
      "timestamp": "2025-12-23"
    },
    {
      "source": "Math",
      "target": "Problem 2169",
      "value": 1,
      "timestamp": "2025-12-24"
    },
    {
      "source": "Simulation",
      "target": "Problem 2169",
      "value": 1,
      "timestamp": "2025-12-24"
    },
    {
      "source": "Array",
      "target": "Problem 2170",
      "value": 1,
      "timestamp": "2025-12-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2170",
      "value": 1,
      "timestamp": "2025-12-24"
    },
    {
      "source": "Greedy",
      "target": "Problem 2170",
      "value": 1,
      "timestamp": "2025-12-24"
    },
    {
      "source": "Counting",
      "target": "Problem 2170",
      "value": 1,
      "timestamp": "2025-12-24"
    },
    {
      "source": "Array",
      "target": "Problem 2171",
      "value": 1,
      "timestamp": "2025-12-24"
    },
    {
      "source": "Greedy",
      "target": "Problem 2171",
      "value": 1,
      "timestamp": "2025-12-24"
    },
    {
      "source": "Sorting",
      "target": "Problem 2171",
      "value": 1,
      "timestamp": "2025-12-24"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2171",
      "value": 1,
      "timestamp": "2025-12-24"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2171",
      "value": 1,
      "timestamp": "2025-12-24"
    },
    {
      "source": "Array",
      "target": "Problem 2176",
      "value": 1,
      "timestamp": "2025-12-25"
    },
    {
      "source": "Math",
      "target": "Problem 2178",
      "value": 1,
      "timestamp": "2025-12-25"
    },
    {
      "source": "Backtracking",
      "target": "Problem 2178",
      "value": 1,
      "timestamp": "2025-12-25"
    },
    {
      "source": "Greedy",
      "target": "Problem 2178",
      "value": 1,
      "timestamp": "2025-12-25"
    },
    {
      "source": "Math",
      "target": "Problem 2180",
      "value": 1,
      "timestamp": "2025-12-26"
    },
    {
      "source": "Simulation",
      "target": "Problem 2180",
      "value": 1,
      "timestamp": "2025-12-26"
    },
    {
      "source": "Array",
      "target": "Problem 2179",
      "value": 1,
      "timestamp": "2025-12-27"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2179",
      "value": 1,
      "timestamp": "2025-12-27"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 2179",
      "value": 1,
      "timestamp": "2025-12-27"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 2179",
      "value": 1,
      "timestamp": "2025-12-27"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 2179",
      "value": 1,
      "timestamp": "2025-12-27"
    },
    {
      "source": "Merge Sort",
      "target": "Problem 2179",
      "value": 1,
      "timestamp": "2025-12-27"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2179",
      "value": 1,
      "timestamp": "2025-12-27"
    },
    {
      "source": "Math",
      "target": "Problem 2177",
      "value": 1,
      "timestamp": "2025-12-27"
    },
    {
      "source": "Simulation",
      "target": "Problem 2177",
      "value": 1,
      "timestamp": "2025-12-27"
    },
    {
      "source": "Linked List",
      "target": "Problem 2181",
      "value": 1,
      "timestamp": "2025-12-27"
    },
    {
      "source": "Simulation",
      "target": "Problem 2181",
      "value": 1,
      "timestamp": "2025-12-27"
    },
    {
      "source": "Array",
      "target": "Problem 2183",
      "value": 1,
      "timestamp": "2025-12-28"
    },
    {
      "source": "Math",
      "target": "Problem 2183",
      "value": 1,
      "timestamp": "2025-12-28"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2183",
      "value": 1,
      "timestamp": "2025-12-28"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2182",
      "value": 1,
      "timestamp": "2025-12-28"
    },
    {
      "source": "String",
      "target": "Problem 2182",
      "value": 1,
      "timestamp": "2025-12-28"
    },
    {
      "source": "Greedy",
      "target": "Problem 2182",
      "value": 1,
      "timestamp": "2025-12-28"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2182",
      "value": 1,
      "timestamp": "2025-12-28"
    },
    {
      "source": "Counting",
      "target": "Problem 2182",
      "value": 1,
      "timestamp": "2025-12-28"
    },
    {
      "source": "Array",
      "target": "Problem 2187",
      "value": 1,
      "timestamp": "2025-12-29"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2187",
      "value": 1,
      "timestamp": "2025-12-29"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2186",
      "value": 1,
      "timestamp": "2025-12-29"
    },
    {
      "source": "String",
      "target": "Problem 2186",
      "value": 1,
      "timestamp": "2025-12-29"
    },
    {
      "source": "Counting",
      "target": "Problem 2186",
      "value": 1,
      "timestamp": "2025-12-29"
    },
    {
      "source": "Array",
      "target": "Problem 2188",
      "value": 1,
      "timestamp": "2025-12-29"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2188",
      "value": 1,
      "timestamp": "2025-12-29"
    },
    {
      "source": "Array",
      "target": "Problem 2185",
      "value": 1,
      "timestamp": "2025-12-30"
    },
    {
      "source": "String",
      "target": "Problem 2185",
      "value": 1,
      "timestamp": "2025-12-30"
    },
    {
      "source": "String Matching",
      "target": "Problem 2185",
      "value": 1,
      "timestamp": "2025-12-30"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2193",
      "value": 1,
      "timestamp": "2025-12-30"
    },
    {
      "source": "String",
      "target": "Problem 2193",
      "value": 1,
      "timestamp": "2025-12-30"
    },
    {
      "source": "Greedy",
      "target": "Problem 2193",
      "value": 1,
      "timestamp": "2025-12-30"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 2193",
      "value": 1,
      "timestamp": "2025-12-30"
    },
    {
      "source": "Array",
      "target": "Problem 2190",
      "value": 1,
      "timestamp": "2025-12-31"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2190",
      "value": 1,
      "timestamp": "2025-12-31"
    },
    {
      "source": "Counting",
      "target": "Problem 2190",
      "value": 1,
      "timestamp": "2025-12-31"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2192",
      "value": 1,
      "timestamp": "2025-12-31"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2192",
      "value": 1,
      "timestamp": "2025-12-31"
    },
    {
      "source": "Graph",
      "target": "Problem 2192",
      "value": 1,
      "timestamp": "2025-12-31"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 2192",
      "value": 1,
      "timestamp": "2025-12-31"
    },
    {
      "source": "Array",
      "target": "Problem 2195",
      "value": 1,
      "timestamp": "2025-12-31"
    },
    {
      "source": "Math",
      "target": "Problem 2195",
      "value": 1,
      "timestamp": "2025-12-31"
    },
    {
      "source": "Greedy",
      "target": "Problem 2195",
      "value": 1,
      "timestamp": "2025-12-31"
    },
    {
      "source": "Sorting",
      "target": "Problem 2195",
      "value": 1,
      "timestamp": "2025-12-31"
    },
    {
      "source": "Array",
      "target": "Problem 2191",
      "value": 1,
      "timestamp": "2026-01-01"
    },
    {
      "source": "Sorting",
      "target": "Problem 2191",
      "value": 1,
      "timestamp": "2026-01-01"
    },
    {
      "source": "Array",
      "target": "Problem 2196",
      "value": 1,
      "timestamp": "2026-01-01"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2196",
      "value": 1,
      "timestamp": "2026-01-01"
    },
    {
      "source": "Tree",
      "target": "Problem 2196",
      "value": 1,
      "timestamp": "2026-01-01"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 2196",
      "value": 1,
      "timestamp": "2026-01-01"
    },
    {
      "source": "Array",
      "target": "Problem 2197",
      "value": 1,
      "timestamp": "2026-01-01"
    },
    {
      "source": "Math",
      "target": "Problem 2197",
      "value": 1,
      "timestamp": "2026-01-01"
    },
    {
      "source": "Stack",
      "target": "Problem 2197",
      "value": 1,
      "timestamp": "2026-01-01"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2197",
      "value": 1,
      "timestamp": "2026-01-01"
    },
    {
      "source": "String",
      "target": "Problem 2194",
      "value": 1,
      "timestamp": "2026-01-02"
    },
    {
      "source": "Array",
      "target": "Problem 2200",
      "value": 1,
      "timestamp": "2026-01-02"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2200",
      "value": 1,
      "timestamp": "2026-01-02"
    },
    {
      "source": "Array",
      "target": "Problem 2201",
      "value": 1,
      "timestamp": "2026-01-02"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2201",
      "value": 1,
      "timestamp": "2026-01-02"
    },
    {
      "source": "Simulation",
      "target": "Problem 2201",
      "value": 1,
      "timestamp": "2026-01-02"
    },
    {
      "source": "Array",
      "target": "Problem 2202",
      "value": 1,
      "timestamp": "2026-01-03"
    },
    {
      "source": "Greedy",
      "target": "Problem 2202",
      "value": 1,
      "timestamp": "2026-01-03"
    },
    {
      "source": "Graph",
      "target": "Problem 2203",
      "value": 1,
      "timestamp": "2026-01-04"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 2203",
      "value": 1,
      "timestamp": "2026-01-04"
    },
    {
      "source": "String",
      "target": "Problem 2209",
      "value": 1,
      "timestamp": "2026-01-05"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2209",
      "value": 1,
      "timestamp": "2026-01-05"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2209",
      "value": 1,
      "timestamp": "2026-01-05"
    },
    {
      "source": "Array",
      "target": "Problem 2208",
      "value": 1,
      "timestamp": "2026-01-05"
    },
    {
      "source": "Greedy",
      "target": "Problem 2208",
      "value": 1,
      "timestamp": "2026-01-05"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2208",
      "value": 1,
      "timestamp": "2026-01-05"
    },
    {
      "source": "Array",
      "target": "Problem 2210",
      "value": 1,
      "timestamp": "2026-01-05"
    },
    {
      "source": "String",
      "target": "Problem 2211",
      "value": 1,
      "timestamp": "2026-01-06"
    },
    {
      "source": "Stack",
      "target": "Problem 2211",
      "value": 1,
      "timestamp": "2026-01-06"
    },
    {
      "source": "Simulation",
      "target": "Problem 2211",
      "value": 1,
      "timestamp": "2026-01-06"
    },
    {
      "source": "Array",
      "target": "Problem 2212",
      "value": 1,
      "timestamp": "2026-01-06"
    },
    {
      "source": "Backtracking",
      "target": "Problem 2212",
      "value": 1,
      "timestamp": "2026-01-06"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2212",
      "value": 1,
      "timestamp": "2026-01-06"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2212",
      "value": 1,
      "timestamp": "2026-01-06"
    },
    {
      "source": "Array",
      "target": "Problem 2206",
      "value": 1,
      "timestamp": "2026-01-06"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2206",
      "value": 1,
      "timestamp": "2026-01-06"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2206",
      "value": 1,
      "timestamp": "2026-01-06"
    },
    {
      "source": "Counting",
      "target": "Problem 2206",
      "value": 1,
      "timestamp": "2026-01-06"
    },
    {
      "source": "String",
      "target": "Problem 2207",
      "value": 1,
      "timestamp": "2026-01-07"
    },
    {
      "source": "Greedy",
      "target": "Problem 2207",
      "value": 1,
      "timestamp": "2026-01-07"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2207",
      "value": 1,
      "timestamp": "2026-01-07"
    },
    {
      "source": "Array",
      "target": "Problem 2213",
      "value": 1,
      "timestamp": "2026-01-07"
    },
    {
      "source": "String",
      "target": "Problem 2213",
      "value": 1,
      "timestamp": "2026-01-07"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 2213",
      "value": 1,
      "timestamp": "2026-01-07"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2213",
      "value": 1,
      "timestamp": "2026-01-07"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2220",
      "value": 1,
      "timestamp": "2026-01-08"
    },
    {
      "source": "Array",
      "target": "Problem 2217",
      "value": 1,
      "timestamp": "2026-01-08"
    },
    {
      "source": "Math",
      "target": "Problem 2217",
      "value": 1,
      "timestamp": "2026-01-08"
    },
    {
      "source": "Array",
      "target": "Problem 2215",
      "value": 1,
      "timestamp": "2026-01-09"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2215",
      "value": 1,
      "timestamp": "2026-01-09"
    },
    {
      "source": "Array",
      "target": "Problem 2216",
      "value": 1,
      "timestamp": "2026-01-09"
    },
    {
      "source": "Stack",
      "target": "Problem 2216",
      "value": 1,
      "timestamp": "2026-01-09"
    },
    {
      "source": "Greedy",
      "target": "Problem 2216",
      "value": 1,
      "timestamp": "2026-01-09"
    },
    {
      "source": "Array",
      "target": "Problem 2221",
      "value": 1,
      "timestamp": "2026-01-09"
    },
    {
      "source": "Math",
      "target": "Problem 2221",
      "value": 1,
      "timestamp": "2026-01-09"
    },
    {
      "source": "Simulation",
      "target": "Problem 2221",
      "value": 1,
      "timestamp": "2026-01-09"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 2221",
      "value": 1,
      "timestamp": "2026-01-09"
    },
    {
      "source": "Array",
      "target": "Problem 2218",
      "value": 1,
      "timestamp": "2026-01-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2218",
      "value": 1,
      "timestamp": "2026-01-10"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2218",
      "value": 1,
      "timestamp": "2026-01-10"
    },
    {
      "source": "String",
      "target": "Problem 2222",
      "value": 1,
      "timestamp": "2026-01-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2222",
      "value": 1,
      "timestamp": "2026-01-10"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2222",
      "value": 1,
      "timestamp": "2026-01-10"
    },
    {
      "source": "String",
      "target": "Problem 2223",
      "value": 1,
      "timestamp": "2026-01-10"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2223",
      "value": 1,
      "timestamp": "2026-01-10"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 2223",
      "value": 1,
      "timestamp": "2026-01-10"
    },
    {
      "source": "Suffix Array",
      "target": "Problem 2223",
      "value": 1,
      "timestamp": "2026-01-10"
    },
    {
      "source": "String Matching",
      "target": "Problem 2223",
      "value": 1,
      "timestamp": "2026-01-10"
    },
    {
      "source": "Hash Function",
      "target": "Problem 2223",
      "value": 1,
      "timestamp": "2026-01-10"
    },
    {
      "source": "String",
      "target": "Problem 2224",
      "value": 1,
      "timestamp": "2026-01-11"
    },
    {
      "source": "Greedy",
      "target": "Problem 2224",
      "value": 1,
      "timestamp": "2026-01-11"
    },
    {
      "source": "Array",
      "target": "Problem 2225",
      "value": 1,
      "timestamp": "2026-01-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2225",
      "value": 1,
      "timestamp": "2026-01-11"
    },
    {
      "source": "Sorting",
      "target": "Problem 2225",
      "value": 1,
      "timestamp": "2026-01-11"
    },
    {
      "source": "Counting",
      "target": "Problem 2225",
      "value": 1,
      "timestamp": "2026-01-11"
    },
    {
      "source": "Array",
      "target": "Problem 2226",
      "value": 1,
      "timestamp": "2026-01-11"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2226",
      "value": 1,
      "timestamp": "2026-01-11"
    },
    {
      "source": "Array",
      "target": "Problem 2227",
      "value": 1,
      "timestamp": "2026-01-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2227",
      "value": 1,
      "timestamp": "2026-01-12"
    },
    {
      "source": "String",
      "target": "Problem 2227",
      "value": 1,
      "timestamp": "2026-01-12"
    },
    {
      "source": "Design",
      "target": "Problem 2227",
      "value": 1,
      "timestamp": "2026-01-12"
    },
    {
      "source": "Trie",
      "target": "Problem 2227",
      "value": 1,
      "timestamp": "2026-01-12"
    },
    {
      "source": "Sorting",
      "target": "Problem 2231",
      "value": 1,
      "timestamp": "2026-01-13"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2231",
      "value": 1,
      "timestamp": "2026-01-13"
    },
    {
      "source": "String",
      "target": "Problem 2232",
      "value": 1,
      "timestamp": "2026-01-13"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2232",
      "value": 1,
      "timestamp": "2026-01-13"
    },
    {
      "source": "Array",
      "target": "Problem 2234",
      "value": 1,
      "timestamp": "2026-01-14"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2234",
      "value": 1,
      "timestamp": "2026-01-14"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2234",
      "value": 1,
      "timestamp": "2026-01-14"
    },
    {
      "source": "Greedy",
      "target": "Problem 2234",
      "value": 1,
      "timestamp": "2026-01-14"
    },
    {
      "source": "Sorting",
      "target": "Problem 2234",
      "value": 1,
      "timestamp": "2026-01-14"
    },
    {
      "source": "Math",
      "target": "Problem 2235",
      "value": 1,
      "timestamp": "2026-01-14"
    },
    {
      "source": "Array",
      "target": "Problem 2233",
      "value": 1,
      "timestamp": "2026-01-14"
    },
    {
      "source": "Greedy",
      "target": "Problem 2233",
      "value": 1,
      "timestamp": "2026-01-14"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2233",
      "value": 1,
      "timestamp": "2026-01-14"
    },
    {
      "source": "Tree",
      "target": "Problem 2236",
      "value": 1,
      "timestamp": "2026-01-15"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 2236",
      "value": 1,
      "timestamp": "2026-01-15"
    },
    {
      "source": "Array",
      "target": "Problem 2239",
      "value": 1,
      "timestamp": "2026-01-16"
    },
    {
      "source": "Array",
      "target": "Problem 2241",
      "value": 1,
      "timestamp": "2026-01-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 2241",
      "value": 1,
      "timestamp": "2026-01-16"
    },
    {
      "source": "Design",
      "target": "Problem 2241",
      "value": 1,
      "timestamp": "2026-01-16"
    },
    {
      "source": "String",
      "target": "Problem 2243",
      "value": 1,
      "timestamp": "2026-01-16"
    },
    {
      "source": "Simulation",
      "target": "Problem 2243",
      "value": 1,
      "timestamp": "2026-01-16"
    },
    {
      "source": "Math",
      "target": "Problem 2240",
      "value": 1,
      "timestamp": "2026-01-17"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2240",
      "value": 1,
      "timestamp": "2026-01-17"
    },
    {
      "source": "Array",
      "target": "Problem 2242",
      "value": 1,
      "timestamp": "2026-01-17"
    },
    {
      "source": "Graph",
      "target": "Problem 2242",
      "value": 1,
      "timestamp": "2026-01-17"
    },
    {
      "source": "Sorting",
      "target": "Problem 2242",
      "value": 1,
      "timestamp": "2026-01-17"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2242",
      "value": 1,
      "timestamp": "2026-01-17"
    },
    {
      "source": "Array",
      "target": "Problem 2244",
      "value": 1,
      "timestamp": "2026-01-17"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2244",
      "value": 1,
      "timestamp": "2026-01-17"
    },
    {
      "source": "Greedy",
      "target": "Problem 2244",
      "value": 1,
      "timestamp": "2026-01-17"
    },
    {
      "source": "Counting",
      "target": "Problem 2244",
      "value": 1,
      "timestamp": "2026-01-17"
    },
    {
      "source": "Array",
      "target": "Problem 2245",
      "value": 1,
      "timestamp": "2026-01-18"
    },
    {
      "source": "Matrix",
      "target": "Problem 2245",
      "value": 1,
      "timestamp": "2026-01-18"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2245",
      "value": 1,
      "timestamp": "2026-01-18"
    },
    {
      "source": "Array",
      "target": "Problem 2250",
      "value": 1,
      "timestamp": "2026-01-18"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2250",
      "value": 1,
      "timestamp": "2026-01-18"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 2250",
      "value": 1,
      "timestamp": "2026-01-18"
    },
    {
      "source": "Sorting",
      "target": "Problem 2250",
      "value": 1,
      "timestamp": "2026-01-18"
    },
    {
      "source": "Array",
      "target": "Problem 2246",
      "value": 1,
      "timestamp": "2026-01-18"
    },
    {
      "source": "String",
      "target": "Problem 2246",
      "value": 1,
      "timestamp": "2026-01-18"
    },
    {
      "source": "Tree",
      "target": "Problem 2246",
      "value": 1,
      "timestamp": "2026-01-18"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2246",
      "value": 1,
      "timestamp": "2026-01-18"
    },
    {
      "source": "Graph",
      "target": "Problem 2246",
      "value": 1,
      "timestamp": "2026-01-18"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 2246",
      "value": 1,
      "timestamp": "2026-01-18"
    },
    {
      "source": "Array",
      "target": "Problem 2249",
      "value": 1,
      "timestamp": "2026-01-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2249",
      "value": 1,
      "timestamp": "2026-01-19"
    },
    {
      "source": "Math",
      "target": "Problem 2249",
      "value": 1,
      "timestamp": "2026-01-19"
    },
    {
      "source": "Geometry",
      "target": "Problem 2249",
      "value": 1,
      "timestamp": "2026-01-19"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2249",
      "value": 1,
      "timestamp": "2026-01-19"
    },
    {
      "source": "Array",
      "target": "Problem 2248",
      "value": 1,
      "timestamp": "2026-01-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2248",
      "value": 1,
      "timestamp": "2026-01-19"
    },
    {
      "source": "Sorting",
      "target": "Problem 2248",
      "value": 1,
      "timestamp": "2026-01-19"
    },
    {
      "source": "Counting",
      "target": "Problem 2248",
      "value": 1,
      "timestamp": "2026-01-19"
    },
    {
      "source": "Array",
      "target": "Problem 2251",
      "value": 1,
      "timestamp": "2026-01-20"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2251",
      "value": 1,
      "timestamp": "2026-01-20"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2251",
      "value": 1,
      "timestamp": "2026-01-20"
    },
    {
      "source": "Sorting",
      "target": "Problem 2251",
      "value": 1,
      "timestamp": "2026-01-20"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2251",
      "value": 1,
      "timestamp": "2026-01-20"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2251",
      "value": 1,
      "timestamp": "2026-01-20"
    },
    {
      "source": "String",
      "target": "Problem 2259",
      "value": 1,
      "timestamp": "2026-01-21"
    },
    {
      "source": "Greedy",
      "target": "Problem 2259",
      "value": 1,
      "timestamp": "2026-01-21"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2259",
      "value": 1,
      "timestamp": "2026-01-21"
    },
    {
      "source": "Array",
      "target": "Problem 2260",
      "value": 1,
      "timestamp": "2026-01-21"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2260",
      "value": 1,
      "timestamp": "2026-01-21"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2260",
      "value": 1,
      "timestamp": "2026-01-21"
    },
    {
      "source": "Array",
      "target": "Problem 2256",
      "value": 1,
      "timestamp": "2026-01-22"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2256",
      "value": 1,
      "timestamp": "2026-01-22"
    },
    {
      "source": "Array",
      "target": "Problem 2255",
      "value": 1,
      "timestamp": "2026-01-22"
    },
    {
      "source": "String",
      "target": "Problem 2255",
      "value": 1,
      "timestamp": "2026-01-22"
    },
    {
      "source": "Array",
      "target": "Problem 2257",
      "value": 1,
      "timestamp": "2026-01-22"
    },
    {
      "source": "Matrix",
      "target": "Problem 2257",
      "value": 1,
      "timestamp": "2026-01-22"
    },
    {
      "source": "Simulation",
      "target": "Problem 2257",
      "value": 1,
      "timestamp": "2026-01-22"
    },
    {
      "source": "Array",
      "target": "Problem 2258",
      "value": 1,
      "timestamp": "2026-01-23"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2258",
      "value": 1,
      "timestamp": "2026-01-23"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2258",
      "value": 1,
      "timestamp": "2026-01-23"
    },
    {
      "source": "Matrix",
      "target": "Problem 2258",
      "value": 1,
      "timestamp": "2026-01-23"
    },
    {
      "source": "Array",
      "target": "Problem 2261",
      "value": 1,
      "timestamp": "2026-01-23"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2261",
      "value": 1,
      "timestamp": "2026-01-23"
    },
    {
      "source": "Trie",
      "target": "Problem 2261",
      "value": 1,
      "timestamp": "2026-01-23"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 2261",
      "value": 1,
      "timestamp": "2026-01-23"
    },
    {
      "source": "Hash Function",
      "target": "Problem 2261",
      "value": 1,
      "timestamp": "2026-01-23"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2261",
      "value": 1,
      "timestamp": "2026-01-23"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2262",
      "value": 1,
      "timestamp": "2026-01-24"
    },
    {
      "source": "String",
      "target": "Problem 2262",
      "value": 1,
      "timestamp": "2026-01-24"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2262",
      "value": 1,
      "timestamp": "2026-01-24"
    },
    {
      "source": "String",
      "target": "Problem 2264",
      "value": 1,
      "timestamp": "2026-01-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2266",
      "value": 1,
      "timestamp": "2026-01-24"
    },
    {
      "source": "Math",
      "target": "Problem 2266",
      "value": 1,
      "timestamp": "2026-01-24"
    },
    {
      "source": "String",
      "target": "Problem 2266",
      "value": 1,
      "timestamp": "2026-01-24"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2266",
      "value": 1,
      "timestamp": "2026-01-24"
    },
    {
      "source": "Tree",
      "target": "Problem 2265",
      "value": 1,
      "timestamp": "2026-01-25"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2265",
      "value": 1,
      "timestamp": "2026-01-25"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 2265",
      "value": 1,
      "timestamp": "2026-01-25"
    },
    {
      "source": "Array",
      "target": "Problem 2267",
      "value": 1,
      "timestamp": "2026-01-25"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2267",
      "value": 1,
      "timestamp": "2026-01-25"
    },
    {
      "source": "Matrix",
      "target": "Problem 2267",
      "value": 1,
      "timestamp": "2026-01-25"
    },
    {
      "source": "Array",
      "target": "Problem 2274",
      "value": 1,
      "timestamp": "2026-01-26"
    },
    {
      "source": "Sorting",
      "target": "Problem 2274",
      "value": 1,
      "timestamp": "2026-01-26"
    },
    {
      "source": "Array",
      "target": "Problem 2270",
      "value": 1,
      "timestamp": "2026-01-26"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2270",
      "value": 1,
      "timestamp": "2026-01-26"
    },
    {
      "source": "Math",
      "target": "Problem 2269",
      "value": 1,
      "timestamp": "2026-01-26"
    },
    {
      "source": "String",
      "target": "Problem 2269",
      "value": 1,
      "timestamp": "2026-01-26"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2269",
      "value": 1,
      "timestamp": "2026-01-26"
    },
    {
      "source": "Array",
      "target": "Problem 2272",
      "value": 1,
      "timestamp": "2026-01-27"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2272",
      "value": 1,
      "timestamp": "2026-01-27"
    },
    {
      "source": "Array",
      "target": "Problem 2273",
      "value": 1,
      "timestamp": "2026-01-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2273",
      "value": 1,
      "timestamp": "2026-01-27"
    },
    {
      "source": "String",
      "target": "Problem 2273",
      "value": 1,
      "timestamp": "2026-01-27"
    },
    {
      "source": "Sorting",
      "target": "Problem 2273",
      "value": 1,
      "timestamp": "2026-01-27"
    },
    {
      "source": "Array",
      "target": "Problem 2271",
      "value": 1,
      "timestamp": "2026-01-27"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2271",
      "value": 1,
      "timestamp": "2026-01-27"
    },
    {
      "source": "Greedy",
      "target": "Problem 2271",
      "value": 1,
      "timestamp": "2026-01-27"
    },
    {
      "source": "Sorting",
      "target": "Problem 2271",
      "value": 1,
      "timestamp": "2026-01-27"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2271",
      "value": 1,
      "timestamp": "2026-01-27"
    },
    {
      "source": "Array",
      "target": "Problem 2275",
      "value": 1,
      "timestamp": "2026-01-28"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2275",
      "value": 1,
      "timestamp": "2026-01-28"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2275",
      "value": 1,
      "timestamp": "2026-01-28"
    },
    {
      "source": "Counting",
      "target": "Problem 2275",
      "value": 1,
      "timestamp": "2026-01-28"
    },
    {
      "source": "Design",
      "target": "Problem 2276",
      "value": 1,
      "timestamp": "2026-01-28"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 2276",
      "value": 1,
      "timestamp": "2026-01-28"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2276",
      "value": 1,
      "timestamp": "2026-01-28"
    },
    {
      "source": "Array",
      "target": "Problem 2280",
      "value": 1,
      "timestamp": "2026-01-29"
    },
    {
      "source": "Math",
      "target": "Problem 2280",
      "value": 1,
      "timestamp": "2026-01-29"
    },
    {
      "source": "Geometry",
      "target": "Problem 2280",
      "value": 1,
      "timestamp": "2026-01-29"
    },
    {
      "source": "Sorting",
      "target": "Problem 2280",
      "value": 1,
      "timestamp": "2026-01-29"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2280",
      "value": 1,
      "timestamp": "2026-01-29"
    },
    {
      "source": "Array",
      "target": "Problem 2279",
      "value": 1,
      "timestamp": "2026-01-29"
    },
    {
      "source": "Greedy",
      "target": "Problem 2279",
      "value": 1,
      "timestamp": "2026-01-29"
    },
    {
      "source": "Sorting",
      "target": "Problem 2279",
      "value": 1,
      "timestamp": "2026-01-29"
    },
    {
      "source": "String",
      "target": "Problem 2278",
      "value": 1,
      "timestamp": "2026-01-30"
    },
    {
      "source": "Array",
      "target": "Problem 2281",
      "value": 1,
      "timestamp": "2026-01-30"
    },
    {
      "source": "Stack",
      "target": "Problem 2281",
      "value": 1,
      "timestamp": "2026-01-30"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 2281",
      "value": 1,
      "timestamp": "2026-01-30"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2281",
      "value": 1,
      "timestamp": "2026-01-30"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2283",
      "value": 1,
      "timestamp": "2026-01-30"
    },
    {
      "source": "String",
      "target": "Problem 2283",
      "value": 1,
      "timestamp": "2026-01-30"
    },
    {
      "source": "Counting",
      "target": "Problem 2283",
      "value": 1,
      "timestamp": "2026-01-30"
    },
    {
      "source": "Array",
      "target": "Problem 2284",
      "value": 1,
      "timestamp": "2026-01-31"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2284",
      "value": 1,
      "timestamp": "2026-01-31"
    },
    {
      "source": "String",
      "target": "Problem 2284",
      "value": 1,
      "timestamp": "2026-01-31"
    },
    {
      "source": "Counting",
      "target": "Problem 2284",
      "value": 1,
      "timestamp": "2026-01-31"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2286",
      "value": 1,
      "timestamp": "2026-01-31"
    },
    {
      "source": "Design",
      "target": "Problem 2286",
      "value": 1,
      "timestamp": "2026-01-31"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 2286",
      "value": 1,
      "timestamp": "2026-01-31"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 2286",
      "value": 1,
      "timestamp": "2026-01-31"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2287",
      "value": 1,
      "timestamp": "2026-02-01"
    },
    {
      "source": "String",
      "target": "Problem 2287",
      "value": 1,
      "timestamp": "2026-02-01"
    },
    {
      "source": "Counting",
      "target": "Problem 2287",
      "value": 1,
      "timestamp": "2026-02-01"
    },
    {
      "source": "Greedy",
      "target": "Problem 2285",
      "value": 1,
      "timestamp": "2026-02-01"
    },
    {
      "source": "Graph",
      "target": "Problem 2285",
      "value": 1,
      "timestamp": "2026-02-01"
    },
    {
      "source": "Sorting",
      "target": "Problem 2285",
      "value": 1,
      "timestamp": "2026-02-01"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2285",
      "value": 1,
      "timestamp": "2026-02-01"
    },
    {
      "source": "Array",
      "target": "Problem 2289",
      "value": 1,
      "timestamp": "2026-02-01"
    },
    {
      "source": "Linked List",
      "target": "Problem 2289",
      "value": 1,
      "timestamp": "2026-02-01"
    },
    {
      "source": "Stack",
      "target": "Problem 2289",
      "value": 1,
      "timestamp": "2026-02-01"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 2289",
      "value": 1,
      "timestamp": "2026-02-01"
    },
    {
      "source": "Array",
      "target": "Problem 2290",
      "value": 1,
      "timestamp": "2026-02-02"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2290",
      "value": 1,
      "timestamp": "2026-02-02"
    },
    {
      "source": "Graph",
      "target": "Problem 2290",
      "value": 1,
      "timestamp": "2026-02-02"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2290",
      "value": 1,
      "timestamp": "2026-02-02"
    },
    {
      "source": "Matrix",
      "target": "Problem 2290",
      "value": 1,
      "timestamp": "2026-02-02"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 2290",
      "value": 1,
      "timestamp": "2026-02-02"
    },
    {
      "source": "String",
      "target": "Problem 2288",
      "value": 1,
      "timestamp": "2026-02-02"
    },
    {
      "source": "Linked List",
      "target": "Problem 2296",
      "value": 1,
      "timestamp": "2026-02-03"
    },
    {
      "source": "String",
      "target": "Problem 2296",
      "value": 1,
      "timestamp": "2026-02-03"
    },
    {
      "source": "Stack",
      "target": "Problem 2296",
      "value": 1,
      "timestamp": "2026-02-03"
    },
    {
      "source": "Design",
      "target": "Problem 2296",
      "value": 1,
      "timestamp": "2026-02-03"
    },
    {
      "source": "Simulation",
      "target": "Problem 2296",
      "value": 1,
      "timestamp": "2026-02-03"
    },
    {
      "source": "Doubly-Linked List",
      "target": "Problem 2296",
      "value": 1,
      "timestamp": "2026-02-03"
    },
    {
      "source": "Array",
      "target": "Problem 2294",
      "value": 1,
      "timestamp": "2026-02-03"
    },
    {
      "source": "Greedy",
      "target": "Problem 2294",
      "value": 1,
      "timestamp": "2026-02-03"
    },
    {
      "source": "Sorting",
      "target": "Problem 2294",
      "value": 1,
      "timestamp": "2026-02-03"
    },
    {
      "source": "Array",
      "target": "Problem 2295",
      "value": 1,
      "timestamp": "2026-02-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2295",
      "value": 1,
      "timestamp": "2026-02-04"
    },
    {
      "source": "Simulation",
      "target": "Problem 2295",
      "value": 1,
      "timestamp": "2026-02-04"
    },
    {
      "source": "String",
      "target": "Problem 2299",
      "value": 1,
      "timestamp": "2026-02-04"
    },
    {
      "source": "Array",
      "target": "Problem 2293",
      "value": 1,
      "timestamp": "2026-02-05"
    },
    {
      "source": "Simulation",
      "target": "Problem 2293",
      "value": 1,
      "timestamp": "2026-02-05"
    },
    {
      "source": "Array",
      "target": "Problem 2303",
      "value": 1,
      "timestamp": "2026-02-05"
    },
    {
      "source": "Simulation",
      "target": "Problem 2303",
      "value": 1,
      "timestamp": "2026-02-05"
    },
    {
      "source": "Array",
      "target": "Problem 2301",
      "value": 1,
      "timestamp": "2026-02-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2301",
      "value": 1,
      "timestamp": "2026-02-05"
    },
    {
      "source": "String",
      "target": "Problem 2301",
      "value": 1,
      "timestamp": "2026-02-05"
    },
    {
      "source": "String Matching",
      "target": "Problem 2301",
      "value": 1,
      "timestamp": "2026-02-05"
    },
    {
      "source": "Array",
      "target": "Problem 2302",
      "value": 1,
      "timestamp": "2026-02-06"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2302",
      "value": 1,
      "timestamp": "2026-02-06"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2302",
      "value": 1,
      "timestamp": "2026-02-06"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2302",
      "value": 1,
      "timestamp": "2026-02-06"
    },
    {
      "source": "Array",
      "target": "Problem 2305",
      "value": 1,
      "timestamp": "2026-02-06"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2305",
      "value": 1,
      "timestamp": "2026-02-06"
    },
    {
      "source": "Backtracking",
      "target": "Problem 2305",
      "value": 1,
      "timestamp": "2026-02-06"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2305",
      "value": 1,
      "timestamp": "2026-02-06"
    },
    {
      "source": "Bitmask",
      "target": "Problem 2305",
      "value": 1,
      "timestamp": "2026-02-06"
    },
    {
      "source": "Array",
      "target": "Problem 2300",
      "value": 1,
      "timestamp": "2026-02-06"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2300",
      "value": 1,
      "timestamp": "2026-02-06"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2300",
      "value": 1,
      "timestamp": "2026-02-06"
    },
    {
      "source": "Sorting",
      "target": "Problem 2300",
      "value": 1,
      "timestamp": "2026-02-06"
    },
    {
      "source": "Array",
      "target": "Problem 2304",
      "value": 1,
      "timestamp": "2026-02-07"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2304",
      "value": 1,
      "timestamp": "2026-02-07"
    },
    {
      "source": "Matrix",
      "target": "Problem 2304",
      "value": 1,
      "timestamp": "2026-02-07"
    },
    {
      "source": "Array",
      "target": "Problem 2306",
      "value": 1,
      "timestamp": "2026-02-07"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2306",
      "value": 1,
      "timestamp": "2026-02-07"
    },
    {
      "source": "String",
      "target": "Problem 2306",
      "value": 1,
      "timestamp": "2026-02-07"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2306",
      "value": 1,
      "timestamp": "2026-02-07"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2306",
      "value": 1,
      "timestamp": "2026-02-07"
    },
    {
      "source": "Array",
      "target": "Problem 2312",
      "value": 1,
      "timestamp": "2026-02-08"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2312",
      "value": 1,
      "timestamp": "2026-02-08"
    },
    {
      "source": "Memoization",
      "target": "Problem 2312",
      "value": 1,
      "timestamp": "2026-02-08"
    },
    {
      "source": "Math",
      "target": "Problem 2310",
      "value": 1,
      "timestamp": "2026-02-09"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2310",
      "value": 1,
      "timestamp": "2026-02-09"
    },
    {
      "source": "Greedy",
      "target": "Problem 2310",
      "value": 1,
      "timestamp": "2026-02-09"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2310",
      "value": 1,
      "timestamp": "2026-02-09"
    },
    {
      "source": "String",
      "target": "Problem 2311",
      "value": 1,
      "timestamp": "2026-02-09"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2311",
      "value": 1,
      "timestamp": "2026-02-09"
    },
    {
      "source": "Greedy",
      "target": "Problem 2311",
      "value": 1,
      "timestamp": "2026-02-09"
    },
    {
      "source": "Memoization",
      "target": "Problem 2311",
      "value": 1,
      "timestamp": "2026-02-09"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2309",
      "value": 1,
      "timestamp": "2026-02-10"
    },
    {
      "source": "String",
      "target": "Problem 2309",
      "value": 1,
      "timestamp": "2026-02-10"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2309",
      "value": 1,
      "timestamp": "2026-02-10"
    },
    {
      "source": "String",
      "target": "Problem 2315",
      "value": 1,
      "timestamp": "2026-02-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2318",
      "value": 1,
      "timestamp": "2026-02-10"
    },
    {
      "source": "Memoization",
      "target": "Problem 2318",
      "value": 1,
      "timestamp": "2026-02-10"
    },
    {
      "source": "Array",
      "target": "Problem 2317",
      "value": 1,
      "timestamp": "2026-02-11"
    },
    {
      "source": "Math",
      "target": "Problem 2317",
      "value": 1,
      "timestamp": "2026-02-11"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2317",
      "value": 1,
      "timestamp": "2026-02-11"
    },
    {
      "source": "Array",
      "target": "Problem 2319",
      "value": 1,
      "timestamp": "2026-02-11"
    },
    {
      "source": "Matrix",
      "target": "Problem 2319",
      "value": 1,
      "timestamp": "2026-02-11"
    },
    {
      "source": "Array",
      "target": "Problem 2321",
      "value": 1,
      "timestamp": "2026-02-11"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2321",
      "value": 1,
      "timestamp": "2026-02-11"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2320",
      "value": 1,
      "timestamp": "2026-02-12"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2316",
      "value": 1,
      "timestamp": "2026-02-12"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2316",
      "value": 1,
      "timestamp": "2026-02-12"
    },
    {
      "source": "Union Find",
      "target": "Problem 2316",
      "value": 1,
      "timestamp": "2026-02-12"
    },
    {
      "source": "Graph",
      "target": "Problem 2316",
      "value": 1,
      "timestamp": "2026-02-12"
    },
    {
      "source": "Array",
      "target": "Problem 2322",
      "value": 1,
      "timestamp": "2026-02-13"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2322",
      "value": 1,
      "timestamp": "2026-02-13"
    },
    {
      "source": "Tree",
      "target": "Problem 2322",
      "value": 1,
      "timestamp": "2026-02-13"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2322",
      "value": 1,
      "timestamp": "2026-02-13"
    },
    {
      "source": "Array",
      "target": "Problem 2326",
      "value": 1,
      "timestamp": "2026-02-13"
    },
    {
      "source": "Linked List",
      "target": "Problem 2326",
      "value": 1,
      "timestamp": "2026-02-13"
    },
    {
      "source": "Matrix",
      "target": "Problem 2326",
      "value": 1,
      "timestamp": "2026-02-13"
    },
    {
      "source": "Simulation",
      "target": "Problem 2326",
      "value": 1,
      "timestamp": "2026-02-13"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2325",
      "value": 1,
      "timestamp": "2026-02-14"
    },
    {
      "source": "String",
      "target": "Problem 2325",
      "value": 1,
      "timestamp": "2026-02-14"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2327",
      "value": 1,
      "timestamp": "2026-02-15"
    },
    {
      "source": "Queue",
      "target": "Problem 2327",
      "value": 1,
      "timestamp": "2026-02-15"
    },
    {
      "source": "Simulation",
      "target": "Problem 2327",
      "value": 1,
      "timestamp": "2026-02-15"
    },
    {
      "source": "Tree",
      "target": "Problem 2331",
      "value": 1,
      "timestamp": "2026-02-15"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2331",
      "value": 1,
      "timestamp": "2026-02-15"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 2331",
      "value": 1,
      "timestamp": "2026-02-15"
    },
    {
      "source": "Array",
      "target": "Problem 2328",
      "value": 1,
      "timestamp": "2026-02-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2328",
      "value": 1,
      "timestamp": "2026-02-15"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2328",
      "value": 1,
      "timestamp": "2026-02-15"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2328",
      "value": 1,
      "timestamp": "2026-02-15"
    },
    {
      "source": "Graph",
      "target": "Problem 2328",
      "value": 1,
      "timestamp": "2026-02-15"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 2328",
      "value": 1,
      "timestamp": "2026-02-15"
    },
    {
      "source": "Memoization",
      "target": "Problem 2328",
      "value": 1,
      "timestamp": "2026-02-15"
    },
    {
      "source": "Matrix",
      "target": "Problem 2328",
      "value": 1,
      "timestamp": "2026-02-15"
    },
    {
      "source": "Array",
      "target": "Problem 2334",
      "value": 1,
      "timestamp": "2026-02-16"
    },
    {
      "source": "Stack",
      "target": "Problem 2334",
      "value": 1,
      "timestamp": "2026-02-16"
    },
    {
      "source": "Union Find",
      "target": "Problem 2334",
      "value": 1,
      "timestamp": "2026-02-16"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 2334",
      "value": 1,
      "timestamp": "2026-02-16"
    },
    {
      "source": "Array",
      "target": "Problem 2333",
      "value": 1,
      "timestamp": "2026-02-16"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2333",
      "value": 1,
      "timestamp": "2026-02-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 2333",
      "value": 1,
      "timestamp": "2026-02-16"
    },
    {
      "source": "Sorting",
      "target": "Problem 2333",
      "value": 1,
      "timestamp": "2026-02-16"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2333",
      "value": 1,
      "timestamp": "2026-02-16"
    },
    {
      "source": "Array",
      "target": "Problem 2332",
      "value": 1,
      "timestamp": "2026-02-16"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2332",
      "value": 1,
      "timestamp": "2026-02-16"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2332",
      "value": 1,
      "timestamp": "2026-02-16"
    },
    {
      "source": "Sorting",
      "target": "Problem 2332",
      "value": 1,
      "timestamp": "2026-02-16"
    },
    {
      "source": "Array",
      "target": "Problem 2335",
      "value": 1,
      "timestamp": "2026-02-17"
    },
    {
      "source": "Greedy",
      "target": "Problem 2335",
      "value": 1,
      "timestamp": "2026-02-17"
    },
    {
      "source": "Sorting",
      "target": "Problem 2335",
      "value": 1,
      "timestamp": "2026-02-17"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2335",
      "value": 1,
      "timestamp": "2026-02-17"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2336",
      "value": 1,
      "timestamp": "2026-02-17"
    },
    {
      "source": "Design",
      "target": "Problem 2336",
      "value": 1,
      "timestamp": "2026-02-17"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2336",
      "value": 1,
      "timestamp": "2026-02-17"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2336",
      "value": 1,
      "timestamp": "2026-02-17"
    },
    {
      "source": "Math",
      "target": "Problem 2338",
      "value": 1,
      "timestamp": "2026-02-17"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2338",
      "value": 1,
      "timestamp": "2026-02-17"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 2338",
      "value": 1,
      "timestamp": "2026-02-17"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2338",
      "value": 1,
      "timestamp": "2026-02-17"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2337",
      "value": 1,
      "timestamp": "2026-02-18"
    },
    {
      "source": "String",
      "target": "Problem 2337",
      "value": 1,
      "timestamp": "2026-02-18"
    },
    {
      "source": "Array",
      "target": "Problem 2341",
      "value": 1,
      "timestamp": "2026-02-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2341",
      "value": 1,
      "timestamp": "2026-02-19"
    },
    {
      "source": "Counting",
      "target": "Problem 2341",
      "value": 1,
      "timestamp": "2026-02-19"
    },
    {
      "source": "Array",
      "target": "Problem 2342",
      "value": 1,
      "timestamp": "2026-02-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2342",
      "value": 1,
      "timestamp": "2026-02-19"
    },
    {
      "source": "Sorting",
      "target": "Problem 2342",
      "value": 1,
      "timestamp": "2026-02-19"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2342",
      "value": 1,
      "timestamp": "2026-02-19"
    },
    {
      "source": "Array",
      "target": "Problem 2348",
      "value": 1,
      "timestamp": "2026-02-20"
    },
    {
      "source": "Math",
      "target": "Problem 2348",
      "value": 1,
      "timestamp": "2026-02-20"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2349",
      "value": 1,
      "timestamp": "2026-02-20"
    },
    {
      "source": "Design",
      "target": "Problem 2349",
      "value": 1,
      "timestamp": "2026-02-20"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2349",
      "value": 1,
      "timestamp": "2026-02-20"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2349",
      "value": 1,
      "timestamp": "2026-02-20"
    },
    {
      "source": "Array",
      "target": "Problem 2347",
      "value": 1,
      "timestamp": "2026-02-21"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2347",
      "value": 1,
      "timestamp": "2026-02-21"
    },
    {
      "source": "Counting",
      "target": "Problem 2347",
      "value": 1,
      "timestamp": "2026-02-21"
    },
    {
      "source": "Array",
      "target": "Problem 2344",
      "value": 1,
      "timestamp": "2026-02-21"
    },
    {
      "source": "Math",
      "target": "Problem 2344",
      "value": 1,
      "timestamp": "2026-02-21"
    },
    {
      "source": "Sorting",
      "target": "Problem 2344",
      "value": 1,
      "timestamp": "2026-02-21"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2344",
      "value": 1,
      "timestamp": "2026-02-21"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2344",
      "value": 1,
      "timestamp": "2026-02-21"
    },
    {
      "source": "Array",
      "target": "Problem 2343",
      "value": 1,
      "timestamp": "2026-02-21"
    },
    {
      "source": "String",
      "target": "Problem 2343",
      "value": 1,
      "timestamp": "2026-02-21"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 2343",
      "value": 1,
      "timestamp": "2026-02-21"
    },
    {
      "source": "Sorting",
      "target": "Problem 2343",
      "value": 1,
      "timestamp": "2026-02-21"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2343",
      "value": 1,
      "timestamp": "2026-02-21"
    },
    {
      "source": "Radix Sort",
      "target": "Problem 2343",
      "value": 1,
      "timestamp": "2026-02-21"
    },
    {
      "source": "Quickselect",
      "target": "Problem 2343",
      "value": 1,
      "timestamp": "2026-02-21"
    },
    {
      "source": "Array",
      "target": "Problem 2350",
      "value": 1,
      "timestamp": "2026-02-22"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2350",
      "value": 1,
      "timestamp": "2026-02-22"
    },
    {
      "source": "Greedy",
      "target": "Problem 2350",
      "value": 1,
      "timestamp": "2026-02-22"
    },
    {
      "source": "Array",
      "target": "Problem 2352",
      "value": 1,
      "timestamp": "2026-02-22"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2352",
      "value": 1,
      "timestamp": "2026-02-22"
    },
    {
      "source": "Matrix",
      "target": "Problem 2352",
      "value": 1,
      "timestamp": "2026-02-22"
    },
    {
      "source": "Simulation",
      "target": "Problem 2352",
      "value": 1,
      "timestamp": "2026-02-22"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2351",
      "value": 1,
      "timestamp": "2026-02-22"
    },
    {
      "source": "String",
      "target": "Problem 2351",
      "value": 1,
      "timestamp": "2026-02-22"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2351",
      "value": 1,
      "timestamp": "2026-02-22"
    },
    {
      "source": "Counting",
      "target": "Problem 2351",
      "value": 1,
      "timestamp": "2026-02-22"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2353",
      "value": 1,
      "timestamp": "2026-02-23"
    },
    {
      "source": "Design",
      "target": "Problem 2353",
      "value": 1,
      "timestamp": "2026-02-23"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2353",
      "value": 1,
      "timestamp": "2026-02-23"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2353",
      "value": 1,
      "timestamp": "2026-02-23"
    },
    {
      "source": "Array",
      "target": "Problem 2357",
      "value": 1,
      "timestamp": "2026-02-23"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2357",
      "value": 1,
      "timestamp": "2026-02-23"
    },
    {
      "source": "Greedy",
      "target": "Problem 2357",
      "value": 1,
      "timestamp": "2026-02-23"
    },
    {
      "source": "Sorting",
      "target": "Problem 2357",
      "value": 1,
      "timestamp": "2026-02-23"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2357",
      "value": 1,
      "timestamp": "2026-02-23"
    },
    {
      "source": "Simulation",
      "target": "Problem 2357",
      "value": 1,
      "timestamp": "2026-02-23"
    },
    {
      "source": "Array",
      "target": "Problem 2354",
      "value": 1,
      "timestamp": "2026-02-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2354",
      "value": 1,
      "timestamp": "2026-02-24"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2354",
      "value": 1,
      "timestamp": "2026-02-24"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2354",
      "value": 1,
      "timestamp": "2026-02-24"
    },
    {
      "source": "Database",
      "target": "Problem 2356",
      "value": 1,
      "timestamp": "2026-02-24"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2360",
      "value": 1,
      "timestamp": "2026-02-24"
    },
    {
      "source": "Graph",
      "target": "Problem 2360",
      "value": 1,
      "timestamp": "2026-02-24"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 2360",
      "value": 1,
      "timestamp": "2026-02-24"
    },
    {
      "source": "Array",
      "target": "Problem 2358",
      "value": 1,
      "timestamp": "2026-02-25"
    },
    {
      "source": "Math",
      "target": "Problem 2358",
      "value": 1,
      "timestamp": "2026-02-25"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2358",
      "value": 1,
      "timestamp": "2026-02-25"
    },
    {
      "source": "Greedy",
      "target": "Problem 2358",
      "value": 1,
      "timestamp": "2026-02-25"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2359",
      "value": 1,
      "timestamp": "2026-02-25"
    },
    {
      "source": "Graph",
      "target": "Problem 2359",
      "value": 1,
      "timestamp": "2026-02-25"
    },
    {
      "source": "Array",
      "target": "Problem 2365",
      "value": 1,
      "timestamp": "2026-02-26"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2365",
      "value": 1,
      "timestamp": "2026-02-26"
    },
    {
      "source": "Simulation",
      "target": "Problem 2365",
      "value": 1,
      "timestamp": "2026-02-26"
    },
    {
      "source": "Array",
      "target": "Problem 2364",
      "value": 1,
      "timestamp": "2026-02-26"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2364",
      "value": 1,
      "timestamp": "2026-02-26"
    },
    {
      "source": "Math",
      "target": "Problem 2364",
      "value": 1,
      "timestamp": "2026-02-26"
    },
    {
      "source": "Counting",
      "target": "Problem 2364",
      "value": 1,
      "timestamp": "2026-02-26"
    },
    {
      "source": "Array",
      "target": "Problem 2363",
      "value": 1,
      "timestamp": "2026-02-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2363",
      "value": 1,
      "timestamp": "2026-02-27"
    },
    {
      "source": "Sorting",
      "target": "Problem 2363",
      "value": 1,
      "timestamp": "2026-02-27"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2363",
      "value": 1,
      "timestamp": "2026-02-27"
    },
    {
      "source": "Array",
      "target": "Problem 2367",
      "value": 1,
      "timestamp": "2026-02-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2367",
      "value": 1,
      "timestamp": "2026-02-27"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2367",
      "value": 1,
      "timestamp": "2026-02-27"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2367",
      "value": 1,
      "timestamp": "2026-02-27"
    },
    {
      "source": "Array",
      "target": "Problem 2369",
      "value": 1,
      "timestamp": "2026-02-27"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2369",
      "value": 1,
      "timestamp": "2026-02-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2370",
      "value": 1,
      "timestamp": "2026-02-28"
    },
    {
      "source": "String",
      "target": "Problem 2370",
      "value": 1,
      "timestamp": "2026-02-28"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2370",
      "value": 1,
      "timestamp": "2026-02-28"
    },
    {
      "source": "Array",
      "target": "Problem 2366",
      "value": 1,
      "timestamp": "2026-02-28"
    },
    {
      "source": "Math",
      "target": "Problem 2366",
      "value": 1,
      "timestamp": "2026-02-28"
    },
    {
      "source": "Greedy",
      "target": "Problem 2366",
      "value": 1,
      "timestamp": "2026-02-28"
    },
    {
      "source": "Array",
      "target": "Problem 2368",
      "value": 1,
      "timestamp": "2026-02-28"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2368",
      "value": 1,
      "timestamp": "2026-02-28"
    },
    {
      "source": "Tree",
      "target": "Problem 2368",
      "value": 1,
      "timestamp": "2026-02-28"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2368",
      "value": 1,
      "timestamp": "2026-02-28"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2368",
      "value": 1,
      "timestamp": "2026-02-28"
    },
    {
      "source": "Union Find",
      "target": "Problem 2368",
      "value": 1,
      "timestamp": "2026-02-28"
    },
    {
      "source": "Graph",
      "target": "Problem 2368",
      "value": 1,
      "timestamp": "2026-02-28"
    },
    {
      "source": "Array",
      "target": "Problem 2373",
      "value": 1,
      "timestamp": "2026-03-01"
    },
    {
      "source": "Matrix",
      "target": "Problem 2373",
      "value": 1,
      "timestamp": "2026-03-01"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2374",
      "value": 1,
      "timestamp": "2026-03-01"
    },
    {
      "source": "Graph",
      "target": "Problem 2374",
      "value": 1,
      "timestamp": "2026-03-01"
    },
    {
      "source": "String",
      "target": "Problem 2375",
      "value": 1,
      "timestamp": "2026-03-02"
    },
    {
      "source": "Backtracking",
      "target": "Problem 2375",
      "value": 1,
      "timestamp": "2026-03-02"
    },
    {
      "source": "Stack",
      "target": "Problem 2375",
      "value": 1,
      "timestamp": "2026-03-02"
    },
    {
      "source": "Greedy",
      "target": "Problem 2375",
      "value": 1,
      "timestamp": "2026-03-02"
    },
    {
      "source": "Math",
      "target": "Problem 2376",
      "value": 1,
      "timestamp": "2026-03-02"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2376",
      "value": 1,
      "timestamp": "2026-03-02"
    },
    {
      "source": "String",
      "target": "Problem 2379",
      "value": 1,
      "timestamp": "2026-03-03"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2379",
      "value": 1,
      "timestamp": "2026-03-03"
    },
    {
      "source": "Array",
      "target": "Problem 2381",
      "value": 1,
      "timestamp": "2026-03-04"
    },
    {
      "source": "String",
      "target": "Problem 2381",
      "value": 1,
      "timestamp": "2026-03-04"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2381",
      "value": 1,
      "timestamp": "2026-03-04"
    },
    {
      "source": "String",
      "target": "Problem 2380",
      "value": 1,
      "timestamp": "2026-03-04"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2380",
      "value": 1,
      "timestamp": "2026-03-04"
    },
    {
      "source": "Simulation",
      "target": "Problem 2380",
      "value": 1,
      "timestamp": "2026-03-04"
    },
    {
      "source": "Array",
      "target": "Problem 2386",
      "value": 1,
      "timestamp": "2026-03-04"
    },
    {
      "source": "Sorting",
      "target": "Problem 2386",
      "value": 1,
      "timestamp": "2026-03-04"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2386",
      "value": 1,
      "timestamp": "2026-03-04"
    },
    {
      "source": "Array",
      "target": "Problem 2382",
      "value": 1,
      "timestamp": "2026-03-05"
    },
    {
      "source": "Union Find",
      "target": "Problem 2382",
      "value": 1,
      "timestamp": "2026-03-05"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2382",
      "value": 1,
      "timestamp": "2026-03-05"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2382",
      "value": 1,
      "timestamp": "2026-03-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2385",
      "value": 1,
      "timestamp": "2026-03-05"
    },
    {
      "source": "Tree",
      "target": "Problem 2385",
      "value": 1,
      "timestamp": "2026-03-05"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2385",
      "value": 1,
      "timestamp": "2026-03-05"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2385",
      "value": 1,
      "timestamp": "2026-03-05"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 2385",
      "value": 1,
      "timestamp": "2026-03-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2384",
      "value": 1,
      "timestamp": "2026-03-05"
    },
    {
      "source": "String",
      "target": "Problem 2384",
      "value": 1,
      "timestamp": "2026-03-05"
    },
    {
      "source": "Greedy",
      "target": "Problem 2384",
      "value": 1,
      "timestamp": "2026-03-05"
    },
    {
      "source": "Counting",
      "target": "Problem 2384",
      "value": 1,
      "timestamp": "2026-03-05"
    },
    {
      "source": "Array",
      "target": "Problem 2383",
      "value": 1,
      "timestamp": "2026-03-06"
    },
    {
      "source": "Greedy",
      "target": "Problem 2383",
      "value": 1,
      "timestamp": "2026-03-06"
    },
    {
      "source": "Array",
      "target": "Problem 2389",
      "value": 1,
      "timestamp": "2026-03-07"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2389",
      "value": 1,
      "timestamp": "2026-03-07"
    },
    {
      "source": "Greedy",
      "target": "Problem 2389",
      "value": 1,
      "timestamp": "2026-03-07"
    },
    {
      "source": "Sorting",
      "target": "Problem 2389",
      "value": 1,
      "timestamp": "2026-03-07"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2389",
      "value": 1,
      "timestamp": "2026-03-07"
    },
    {
      "source": "String",
      "target": "Problem 2390",
      "value": 1,
      "timestamp": "2026-03-07"
    },
    {
      "source": "Stack",
      "target": "Problem 2390",
      "value": 1,
      "timestamp": "2026-03-07"
    },
    {
      "source": "Simulation",
      "target": "Problem 2390",
      "value": 1,
      "timestamp": "2026-03-07"
    },
    {
      "source": "Array",
      "target": "Problem 2392",
      "value": 1,
      "timestamp": "2026-03-07"
    },
    {
      "source": "Graph",
      "target": "Problem 2392",
      "value": 1,
      "timestamp": "2026-03-07"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 2392",
      "value": 1,
      "timestamp": "2026-03-07"
    },
    {
      "source": "Matrix",
      "target": "Problem 2392",
      "value": 1,
      "timestamp": "2026-03-07"
    },
    {
      "source": "Array",
      "target": "Problem 2395",
      "value": 1,
      "timestamp": "2026-03-08"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2395",
      "value": 1,
      "timestamp": "2026-03-08"
    },
    {
      "source": "Math",
      "target": "Problem 2396",
      "value": 1,
      "timestamp": "2026-03-08"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2396",
      "value": 1,
      "timestamp": "2026-03-08"
    },
    {
      "source": "Brainteaser",
      "target": "Problem 2396",
      "value": 1,
      "timestamp": "2026-03-08"
    },
    {
      "source": "Array",
      "target": "Problem 2397",
      "value": 1,
      "timestamp": "2026-03-09"
    },
    {
      "source": "Backtracking",
      "target": "Problem 2397",
      "value": 1,
      "timestamp": "2026-03-09"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2397",
      "value": 1,
      "timestamp": "2026-03-09"
    },
    {
      "source": "Matrix",
      "target": "Problem 2397",
      "value": 1,
      "timestamp": "2026-03-09"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2397",
      "value": 1,
      "timestamp": "2026-03-09"
    },
    {
      "source": "Array",
      "target": "Problem 2391",
      "value": 1,
      "timestamp": "2026-03-09"
    },
    {
      "source": "String",
      "target": "Problem 2391",
      "value": 1,
      "timestamp": "2026-03-09"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2391",
      "value": 1,
      "timestamp": "2026-03-09"
    },
    {
      "source": "Math",
      "target": "Problem 2400",
      "value": 1,
      "timestamp": "2026-03-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2400",
      "value": 1,
      "timestamp": "2026-03-10"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 2400",
      "value": 1,
      "timestamp": "2026-03-10"
    },
    {
      "source": "Array",
      "target": "Problem 2399",
      "value": 1,
      "timestamp": "2026-03-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2399",
      "value": 1,
      "timestamp": "2026-03-10"
    },
    {
      "source": "String",
      "target": "Problem 2399",
      "value": 1,
      "timestamp": "2026-03-10"
    },
    {
      "source": "Array",
      "target": "Problem 2398",
      "value": 1,
      "timestamp": "2026-03-10"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2398",
      "value": 1,
      "timestamp": "2026-03-10"
    },
    {
      "source": "Queue",
      "target": "Problem 2398",
      "value": 1,
      "timestamp": "2026-03-10"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2398",
      "value": 1,
      "timestamp": "2026-03-10"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2398",
      "value": 1,
      "timestamp": "2026-03-10"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2398",
      "value": 1,
      "timestamp": "2026-03-10"
    },
    {
      "source": "Monotonic Queue",
      "target": "Problem 2398",
      "value": 1,
      "timestamp": "2026-03-10"
    },
    {
      "source": "Array",
      "target": "Problem 2401",
      "value": 1,
      "timestamp": "2026-03-11"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2401",
      "value": 1,
      "timestamp": "2026-03-11"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2401",
      "value": 1,
      "timestamp": "2026-03-11"
    },
    {
      "source": "Array",
      "target": "Problem 2402",
      "value": 1,
      "timestamp": "2026-03-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2402",
      "value": 1,
      "timestamp": "2026-03-11"
    },
    {
      "source": "Sorting",
      "target": "Problem 2402",
      "value": 1,
      "timestamp": "2026-03-11"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2402",
      "value": 1,
      "timestamp": "2026-03-11"
    },
    {
      "source": "Simulation",
      "target": "Problem 2402",
      "value": 1,
      "timestamp": "2026-03-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2405",
      "value": 1,
      "timestamp": "2026-03-11"
    },
    {
      "source": "String",
      "target": "Problem 2405",
      "value": 1,
      "timestamp": "2026-03-11"
    },
    {
      "source": "Greedy",
      "target": "Problem 2405",
      "value": 1,
      "timestamp": "2026-03-11"
    },
    {
      "source": "Array",
      "target": "Problem 2404",
      "value": 1,
      "timestamp": "2026-03-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2404",
      "value": 1,
      "timestamp": "2026-03-12"
    },
    {
      "source": "Counting",
      "target": "Problem 2404",
      "value": 1,
      "timestamp": "2026-03-12"
    },
    {
      "source": "Array",
      "target": "Problem 2406",
      "value": 1,
      "timestamp": "2026-03-12"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2406",
      "value": 1,
      "timestamp": "2026-03-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 2406",
      "value": 1,
      "timestamp": "2026-03-12"
    },
    {
      "source": "Sorting",
      "target": "Problem 2406",
      "value": 1,
      "timestamp": "2026-03-12"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2406",
      "value": 1,
      "timestamp": "2026-03-12"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2406",
      "value": 1,
      "timestamp": "2026-03-12"
    },
    {
      "source": "Array",
      "target": "Problem 2407",
      "value": 1,
      "timestamp": "2026-03-13"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 2407",
      "value": 1,
      "timestamp": "2026-03-13"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2407",
      "value": 1,
      "timestamp": "2026-03-13"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 2407",
      "value": 1,
      "timestamp": "2026-03-13"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 2407",
      "value": 1,
      "timestamp": "2026-03-13"
    },
    {
      "source": "Queue",
      "target": "Problem 2407",
      "value": 1,
      "timestamp": "2026-03-13"
    },
    {
      "source": "Monotonic Queue",
      "target": "Problem 2407",
      "value": 1,
      "timestamp": "2026-03-13"
    },
    {
      "source": "Array",
      "target": "Problem 2411",
      "value": 1,
      "timestamp": "2026-03-13"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2411",
      "value": 1,
      "timestamp": "2026-03-13"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2411",
      "value": 1,
      "timestamp": "2026-03-13"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2411",
      "value": 1,
      "timestamp": "2026-03-13"
    },
    {
      "source": "Math",
      "target": "Problem 2413",
      "value": 1,
      "timestamp": "2026-03-14"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2413",
      "value": 1,
      "timestamp": "2026-03-14"
    },
    {
      "source": "Array",
      "target": "Problem 2410",
      "value": 1,
      "timestamp": "2026-03-14"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2410",
      "value": 1,
      "timestamp": "2026-03-14"
    },
    {
      "source": "Greedy",
      "target": "Problem 2410",
      "value": 1,
      "timestamp": "2026-03-14"
    },
    {
      "source": "Sorting",
      "target": "Problem 2410",
      "value": 1,
      "timestamp": "2026-03-14"
    },
    {
      "source": "Tree",
      "target": "Problem 2415",
      "value": 1,
      "timestamp": "2026-03-14"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2415",
      "value": 1,
      "timestamp": "2026-03-14"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2415",
      "value": 1,
      "timestamp": "2026-03-14"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 2415",
      "value": 1,
      "timestamp": "2026-03-14"
    },
    {
      "source": "String",
      "target": "Problem 2414",
      "value": 1,
      "timestamp": "2026-03-15"
    },
    {
      "source": "Array",
      "target": "Problem 2412",
      "value": 1,
      "timestamp": "2026-03-15"
    },
    {
      "source": "Greedy",
      "target": "Problem 2412",
      "value": 1,
      "timestamp": "2026-03-15"
    },
    {
      "source": "Sorting",
      "target": "Problem 2412",
      "value": 1,
      "timestamp": "2026-03-15"
    },
    {
      "source": "Array",
      "target": "Problem 2416",
      "value": 1,
      "timestamp": "2026-03-15"
    },
    {
      "source": "String",
      "target": "Problem 2416",
      "value": 1,
      "timestamp": "2026-03-15"
    },
    {
      "source": "Trie",
      "target": "Problem 2416",
      "value": 1,
      "timestamp": "2026-03-15"
    },
    {
      "source": "Counting",
      "target": "Problem 2416",
      "value": 1,
      "timestamp": "2026-03-15"
    },
    {
      "source": "Array",
      "target": "Problem 2418",
      "value": 1,
      "timestamp": "2026-03-16"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2418",
      "value": 1,
      "timestamp": "2026-03-16"
    },
    {
      "source": "String",
      "target": "Problem 2418",
      "value": 1,
      "timestamp": "2026-03-16"
    },
    {
      "source": "Sorting",
      "target": "Problem 2418",
      "value": 1,
      "timestamp": "2026-03-16"
    },
    {
      "source": "Array",
      "target": "Problem 2419",
      "value": 1,
      "timestamp": "2026-03-16"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2419",
      "value": 1,
      "timestamp": "2026-03-16"
    },
    {
      "source": "Brainteaser",
      "target": "Problem 2419",
      "value": 1,
      "timestamp": "2026-03-16"
    },
    {
      "source": "Math",
      "target": "Problem 2409",
      "value": 1,
      "timestamp": "2026-03-17"
    },
    {
      "source": "String",
      "target": "Problem 2409",
      "value": 1,
      "timestamp": "2026-03-17"
    },
    {
      "source": "Array",
      "target": "Problem 2420",
      "value": 1,
      "timestamp": "2026-03-17"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2420",
      "value": 1,
      "timestamp": "2026-03-17"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2420",
      "value": 1,
      "timestamp": "2026-03-17"
    },
    {
      "source": "Array",
      "target": "Problem 2421",
      "value": 1,
      "timestamp": "2026-03-18"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2421",
      "value": 1,
      "timestamp": "2026-03-18"
    },
    {
      "source": "Tree",
      "target": "Problem 2421",
      "value": 1,
      "timestamp": "2026-03-18"
    },
    {
      "source": "Union Find",
      "target": "Problem 2421",
      "value": 1,
      "timestamp": "2026-03-18"
    },
    {
      "source": "Graph",
      "target": "Problem 2421",
      "value": 1,
      "timestamp": "2026-03-18"
    },
    {
      "source": "Sorting",
      "target": "Problem 2421",
      "value": 1,
      "timestamp": "2026-03-18"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2423",
      "value": 1,
      "timestamp": "2026-03-18"
    },
    {
      "source": "String",
      "target": "Problem 2423",
      "value": 1,
      "timestamp": "2026-03-18"
    },
    {
      "source": "Counting",
      "target": "Problem 2423",
      "value": 1,
      "timestamp": "2026-03-18"
    },
    {
      "source": "Math",
      "target": "Problem 2427",
      "value": 1,
      "timestamp": "2026-03-18"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2427",
      "value": 1,
      "timestamp": "2026-03-18"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2427",
      "value": 1,
      "timestamp": "2026-03-18"
    },
    {
      "source": "Array",
      "target": "Problem 2425",
      "value": 1,
      "timestamp": "2026-03-19"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2425",
      "value": 1,
      "timestamp": "2026-03-19"
    },
    {
      "source": "Brainteaser",
      "target": "Problem 2425",
      "value": 1,
      "timestamp": "2026-03-19"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2424",
      "value": 1,
      "timestamp": "2026-03-19"
    },
    {
      "source": "Union Find",
      "target": "Problem 2424",
      "value": 1,
      "timestamp": "2026-03-19"
    },
    {
      "source": "Design",
      "target": "Problem 2424",
      "value": 1,
      "timestamp": "2026-03-19"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 2424",
      "value": 1,
      "timestamp": "2026-03-19"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 2424",
      "value": 1,
      "timestamp": "2026-03-19"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2424",
      "value": 1,
      "timestamp": "2026-03-19"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2424",
      "value": 1,
      "timestamp": "2026-03-19"
    },
    {
      "source": "Array",
      "target": "Problem 2426",
      "value": 1,
      "timestamp": "2026-03-19"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2426",
      "value": 1,
      "timestamp": "2026-03-19"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 2426",
      "value": 1,
      "timestamp": "2026-03-19"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 2426",
      "value": 1,
      "timestamp": "2026-03-19"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 2426",
      "value": 1,
      "timestamp": "2026-03-19"
    },
    {
      "source": "Merge Sort",
      "target": "Problem 2426",
      "value": 1,
      "timestamp": "2026-03-19"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2426",
      "value": 1,
      "timestamp": "2026-03-19"
    },
    {
      "source": "Greedy",
      "target": "Problem 2429",
      "value": 1,
      "timestamp": "2026-03-20"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2429",
      "value": 1,
      "timestamp": "2026-03-20"
    },
    {
      "source": "Array",
      "target": "Problem 2428",
      "value": 1,
      "timestamp": "2026-03-20"
    },
    {
      "source": "Matrix",
      "target": "Problem 2428",
      "value": 1,
      "timestamp": "2026-03-20"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2428",
      "value": 1,
      "timestamp": "2026-03-20"
    },
    {
      "source": "String",
      "target": "Problem 2430",
      "value": 1,
      "timestamp": "2026-03-20"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2430",
      "value": 1,
      "timestamp": "2026-03-20"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 2430",
      "value": 1,
      "timestamp": "2026-03-20"
    },
    {
      "source": "String Matching",
      "target": "Problem 2430",
      "value": 1,
      "timestamp": "2026-03-20"
    },
    {
      "source": "Hash Function",
      "target": "Problem 2430",
      "value": 1,
      "timestamp": "2026-03-20"
    },
    {
      "source": "Array",
      "target": "Problem 2433",
      "value": 1,
      "timestamp": "2026-03-21"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2433",
      "value": 1,
      "timestamp": "2026-03-21"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2434",
      "value": 1,
      "timestamp": "2026-03-21"
    },
    {
      "source": "String",
      "target": "Problem 2434",
      "value": 1,
      "timestamp": "2026-03-21"
    },
    {
      "source": "Stack",
      "target": "Problem 2434",
      "value": 1,
      "timestamp": "2026-03-21"
    },
    {
      "source": "Greedy",
      "target": "Problem 2434",
      "value": 1,
      "timestamp": "2026-03-21"
    },
    {
      "source": "Array",
      "target": "Problem 2435",
      "value": 1,
      "timestamp": "2026-03-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2435",
      "value": 1,
      "timestamp": "2026-03-22"
    },
    {
      "source": "Matrix",
      "target": "Problem 2435",
      "value": 1,
      "timestamp": "2026-03-22"
    },
    {
      "source": "Array",
      "target": "Problem 2432",
      "value": 1,
      "timestamp": "2026-03-22"
    },
    {
      "source": "Array",
      "target": "Problem 2438",
      "value": 1,
      "timestamp": "2026-03-23"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2438",
      "value": 1,
      "timestamp": "2026-03-23"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2438",
      "value": 1,
      "timestamp": "2026-03-23"
    },
    {
      "source": "String",
      "target": "Problem 2437",
      "value": 1,
      "timestamp": "2026-03-23"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2437",
      "value": 1,
      "timestamp": "2026-03-23"
    },
    {
      "source": "Math",
      "target": "Problem 2443",
      "value": 1,
      "timestamp": "2026-03-24"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2443",
      "value": 1,
      "timestamp": "2026-03-24"
    },
    {
      "source": "Array",
      "target": "Problem 2442",
      "value": 1,
      "timestamp": "2026-03-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2442",
      "value": 1,
      "timestamp": "2026-03-24"
    },
    {
      "source": "Math",
      "target": "Problem 2442",
      "value": 1,
      "timestamp": "2026-03-24"
    },
    {
      "source": "Counting",
      "target": "Problem 2442",
      "value": 1,
      "timestamp": "2026-03-24"
    },
    {
      "source": "Array",
      "target": "Problem 2439",
      "value": 1,
      "timestamp": "2026-03-24"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2439",
      "value": 1,
      "timestamp": "2026-03-24"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2439",
      "value": 1,
      "timestamp": "2026-03-24"
    },
    {
      "source": "Greedy",
      "target": "Problem 2439",
      "value": 1,
      "timestamp": "2026-03-24"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2439",
      "value": 1,
      "timestamp": "2026-03-24"
    },
    {
      "source": "Array",
      "target": "Problem 2444",
      "value": 1,
      "timestamp": "2026-03-25"
    },
    {
      "source": "Queue",
      "target": "Problem 2444",
      "value": 1,
      "timestamp": "2026-03-25"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2444",
      "value": 1,
      "timestamp": "2026-03-25"
    },
    {
      "source": "Monotonic Queue",
      "target": "Problem 2444",
      "value": 1,
      "timestamp": "2026-03-25"
    },
    {
      "source": "Array",
      "target": "Problem 2441",
      "value": 1,
      "timestamp": "2026-03-25"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2441",
      "value": 1,
      "timestamp": "2026-03-25"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2441",
      "value": 1,
      "timestamp": "2026-03-25"
    },
    {
      "source": "Sorting",
      "target": "Problem 2441",
      "value": 1,
      "timestamp": "2026-03-25"
    },
    {
      "source": "Array",
      "target": "Problem 2440",
      "value": 1,
      "timestamp": "2026-03-25"
    },
    {
      "source": "Math",
      "target": "Problem 2440",
      "value": 1,
      "timestamp": "2026-03-25"
    },
    {
      "source": "Tree",
      "target": "Problem 2440",
      "value": 1,
      "timestamp": "2026-03-25"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2440",
      "value": 1,
      "timestamp": "2026-03-25"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2440",
      "value": 1,
      "timestamp": "2026-03-25"
    },
    {
      "source": "Array",
      "target": "Problem 2446",
      "value": 1,
      "timestamp": "2026-03-26"
    },
    {
      "source": "String",
      "target": "Problem 2446",
      "value": 1,
      "timestamp": "2026-03-26"
    },
    {
      "source": "Array",
      "target": "Problem 2447",
      "value": 1,
      "timestamp": "2026-03-26"
    },
    {
      "source": "Math",
      "target": "Problem 2447",
      "value": 1,
      "timestamp": "2026-03-26"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2447",
      "value": 1,
      "timestamp": "2026-03-26"
    },
    {
      "source": "Array",
      "target": "Problem 2451",
      "value": 1,
      "timestamp": "2026-03-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2451",
      "value": 1,
      "timestamp": "2026-03-27"
    },
    {
      "source": "String",
      "target": "Problem 2451",
      "value": 1,
      "timestamp": "2026-03-27"
    },
    {
      "source": "Array",
      "target": "Problem 2452",
      "value": 1,
      "timestamp": "2026-03-27"
    },
    {
      "source": "String",
      "target": "Problem 2452",
      "value": 1,
      "timestamp": "2026-03-27"
    },
    {
      "source": "Array",
      "target": "Problem 2454",
      "value": 1,
      "timestamp": "2026-03-27"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2454",
      "value": 1,
      "timestamp": "2026-03-27"
    },
    {
      "source": "Stack",
      "target": "Problem 2454",
      "value": 1,
      "timestamp": "2026-03-27"
    },
    {
      "source": "Sorting",
      "target": "Problem 2454",
      "value": 1,
      "timestamp": "2026-03-27"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2454",
      "value": 1,
      "timestamp": "2026-03-27"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 2454",
      "value": 1,
      "timestamp": "2026-03-27"
    },
    {
      "source": "Array",
      "target": "Problem 2453",
      "value": 1,
      "timestamp": "2026-03-28"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2453",
      "value": 1,
      "timestamp": "2026-03-28"
    },
    {
      "source": "Counting",
      "target": "Problem 2453",
      "value": 1,
      "timestamp": "2026-03-28"
    },
    {
      "source": "Array",
      "target": "Problem 2448",
      "value": 1,
      "timestamp": "2026-03-28"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2448",
      "value": 1,
      "timestamp": "2026-03-28"
    },
    {
      "source": "Greedy",
      "target": "Problem 2448",
      "value": 1,
      "timestamp": "2026-03-28"
    },
    {
      "source": "Sorting",
      "target": "Problem 2448",
      "value": 1,
      "timestamp": "2026-03-28"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2448",
      "value": 1,
      "timestamp": "2026-03-28"
    },
    {
      "source": "Array",
      "target": "Problem 2449",
      "value": 1,
      "timestamp": "2026-03-28"
    },
    {
      "source": "Greedy",
      "target": "Problem 2449",
      "value": 1,
      "timestamp": "2026-03-28"
    },
    {
      "source": "Sorting",
      "target": "Problem 2449",
      "value": 1,
      "timestamp": "2026-03-28"
    },
    {
      "source": "Array",
      "target": "Problem 2455",
      "value": 1,
      "timestamp": "2026-03-29"
    },
    {
      "source": "Math",
      "target": "Problem 2455",
      "value": 1,
      "timestamp": "2026-03-29"
    },
    {
      "source": "Array",
      "target": "Problem 2460",
      "value": 1,
      "timestamp": "2026-03-29"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2460",
      "value": 1,
      "timestamp": "2026-03-29"
    },
    {
      "source": "Simulation",
      "target": "Problem 2460",
      "value": 1,
      "timestamp": "2026-03-29"
    },
    {
      "source": "Math",
      "target": "Problem 2457",
      "value": 1,
      "timestamp": "2026-03-30"
    },
    {
      "source": "Greedy",
      "target": "Problem 2457",
      "value": 1,
      "timestamp": "2026-03-30"
    },
    {
      "source": "Array",
      "target": "Problem 2458",
      "value": 1,
      "timestamp": "2026-03-30"
    },
    {
      "source": "Tree",
      "target": "Problem 2458",
      "value": 1,
      "timestamp": "2026-03-30"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2458",
      "value": 1,
      "timestamp": "2026-03-30"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2458",
      "value": 1,
      "timestamp": "2026-03-30"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 2458",
      "value": 1,
      "timestamp": "2026-03-30"
    },
    {
      "source": "Array",
      "target": "Problem 2456",
      "value": 1,
      "timestamp": "2026-03-30"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2456",
      "value": 1,
      "timestamp": "2026-03-30"
    },
    {
      "source": "String",
      "target": "Problem 2456",
      "value": 1,
      "timestamp": "2026-03-30"
    },
    {
      "source": "Sorting",
      "target": "Problem 2456",
      "value": 1,
      "timestamp": "2026-03-30"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2456",
      "value": 1,
      "timestamp": "2026-03-30"
    },
    {
      "source": "Array",
      "target": "Problem 2461",
      "value": 1,
      "timestamp": "2026-03-31"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2461",
      "value": 1,
      "timestamp": "2026-03-31"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2461",
      "value": 1,
      "timestamp": "2026-03-31"
    },
    {
      "source": "Array",
      "target": "Problem 2462",
      "value": 1,
      "timestamp": "2026-03-31"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2462",
      "value": 1,
      "timestamp": "2026-03-31"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2462",
      "value": 1,
      "timestamp": "2026-03-31"
    },
    {
      "source": "Simulation",
      "target": "Problem 2462",
      "value": 1,
      "timestamp": "2026-03-31"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2466",
      "value": 1,
      "timestamp": "2026-04-01"
    },
    {
      "source": "String",
      "target": "Problem 2468",
      "value": 1,
      "timestamp": "2026-04-01"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2468",
      "value": 1,
      "timestamp": "2026-04-01"
    },
    {
      "source": "Array",
      "target": "Problem 2465",
      "value": 1,
      "timestamp": "2026-04-01"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2465",
      "value": 1,
      "timestamp": "2026-04-01"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2465",
      "value": 1,
      "timestamp": "2026-04-01"
    },
    {
      "source": "Sorting",
      "target": "Problem 2465",
      "value": 1,
      "timestamp": "2026-04-01"
    },
    {
      "source": "Array",
      "target": "Problem 2467",
      "value": 1,
      "timestamp": "2026-04-02"
    },
    {
      "source": "Tree",
      "target": "Problem 2467",
      "value": 1,
      "timestamp": "2026-04-02"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2467",
      "value": 1,
      "timestamp": "2026-04-02"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2467",
      "value": 1,
      "timestamp": "2026-04-02"
    },
    {
      "source": "Graph",
      "target": "Problem 2467",
      "value": 1,
      "timestamp": "2026-04-02"
    },
    {
      "source": "Array",
      "target": "Problem 2463",
      "value": 1,
      "timestamp": "2026-04-02"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2463",
      "value": 1,
      "timestamp": "2026-04-02"
    },
    {
      "source": "Sorting",
      "target": "Problem 2463",
      "value": 1,
      "timestamp": "2026-04-02"
    },
    {
      "source": "Math",
      "target": "Problem 2469",
      "value": 1,
      "timestamp": "2026-04-02"
    },
    {
      "source": "Array",
      "target": "Problem 2470",
      "value": 1,
      "timestamp": "2026-04-03"
    },
    {
      "source": "Math",
      "target": "Problem 2470",
      "value": 1,
      "timestamp": "2026-04-03"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2470",
      "value": 1,
      "timestamp": "2026-04-03"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2472",
      "value": 1,
      "timestamp": "2026-04-03"
    },
    {
      "source": "String",
      "target": "Problem 2472",
      "value": 1,
      "timestamp": "2026-04-03"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2472",
      "value": 1,
      "timestamp": "2026-04-03"
    },
    {
      "source": "Greedy",
      "target": "Problem 2472",
      "value": 1,
      "timestamp": "2026-04-03"
    },
    {
      "source": "Tree",
      "target": "Problem 2471",
      "value": 1,
      "timestamp": "2026-04-04"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2471",
      "value": 1,
      "timestamp": "2026-04-04"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 2471",
      "value": 1,
      "timestamp": "2026-04-04"
    },
    {
      "source": "Array",
      "target": "Problem 2475",
      "value": 1,
      "timestamp": "2026-04-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2475",
      "value": 1,
      "timestamp": "2026-04-04"
    },
    {
      "source": "Sorting",
      "target": "Problem 2475",
      "value": 1,
      "timestamp": "2026-04-04"
    },
    {
      "source": "Array",
      "target": "Problem 2476",
      "value": 1,
      "timestamp": "2026-04-05"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2476",
      "value": 1,
      "timestamp": "2026-04-05"
    },
    {
      "source": "Tree",
      "target": "Problem 2476",
      "value": 1,
      "timestamp": "2026-04-05"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2476",
      "value": 1,
      "timestamp": "2026-04-05"
    },
    {
      "source": "Binary Search Tree",
      "target": "Problem 2476",
      "value": 1,
      "timestamp": "2026-04-05"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 2476",
      "value": 1,
      "timestamp": "2026-04-05"
    },
    {
      "source": "String",
      "target": "Problem 2478",
      "value": 1,
      "timestamp": "2026-04-05"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2478",
      "value": 1,
      "timestamp": "2026-04-05"
    },
    {
      "source": "Math",
      "target": "Problem 2481",
      "value": 1,
      "timestamp": "2026-04-05"
    },
    {
      "source": "Geometry",
      "target": "Problem 2481",
      "value": 1,
      "timestamp": "2026-04-05"
    },
    {
      "source": "Tree",
      "target": "Problem 2477",
      "value": 1,
      "timestamp": "2026-04-06"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2477",
      "value": 1,
      "timestamp": "2026-04-06"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2477",
      "value": 1,
      "timestamp": "2026-04-06"
    },
    {
      "source": "Graph",
      "target": "Problem 2477",
      "value": 1,
      "timestamp": "2026-04-06"
    },
    {
      "source": "String",
      "target": "Problem 2484",
      "value": 1,
      "timestamp": "2026-04-07"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2484",
      "value": 1,
      "timestamp": "2026-04-07"
    },
    {
      "source": "Array",
      "target": "Problem 2482",
      "value": 1,
      "timestamp": "2026-04-07"
    },
    {
      "source": "Matrix",
      "target": "Problem 2482",
      "value": 1,
      "timestamp": "2026-04-07"
    },
    {
      "source": "Simulation",
      "target": "Problem 2482",
      "value": 1,
      "timestamp": "2026-04-07"
    },
    {
      "source": "String",
      "target": "Problem 2483",
      "value": 1,
      "timestamp": "2026-04-07"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2483",
      "value": 1,
      "timestamp": "2026-04-07"
    },
    {
      "source": "Array",
      "target": "Problem 2488",
      "value": 1,
      "timestamp": "2026-04-08"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2488",
      "value": 1,
      "timestamp": "2026-04-08"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2488",
      "value": 1,
      "timestamp": "2026-04-08"
    },
    {
      "source": "Linked List",
      "target": "Problem 2487",
      "value": 1,
      "timestamp": "2026-04-08"
    },
    {
      "source": "Stack",
      "target": "Problem 2487",
      "value": 1,
      "timestamp": "2026-04-08"
    },
    {
      "source": "Recursion",
      "target": "Problem 2487",
      "value": 1,
      "timestamp": "2026-04-08"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 2487",
      "value": 1,
      "timestamp": "2026-04-08"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2486",
      "value": 1,
      "timestamp": "2026-04-08"
    },
    {
      "source": "String",
      "target": "Problem 2486",
      "value": 1,
      "timestamp": "2026-04-08"
    },
    {
      "source": "Greedy",
      "target": "Problem 2486",
      "value": 1,
      "timestamp": "2026-04-08"
    },
    {
      "source": "String",
      "target": "Problem 2490",
      "value": 1,
      "timestamp": "2026-04-09"
    },
    {
      "source": "Math",
      "target": "Problem 2485",
      "value": 1,
      "timestamp": "2026-04-09"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2485",
      "value": 1,
      "timestamp": "2026-04-09"
    },
    {
      "source": "Array",
      "target": "Problem 2491",
      "value": 1,
      "timestamp": "2026-04-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2491",
      "value": 1,
      "timestamp": "2026-04-10"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2491",
      "value": 1,
      "timestamp": "2026-04-10"
    },
    {
      "source": "Sorting",
      "target": "Problem 2491",
      "value": 1,
      "timestamp": "2026-04-10"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2492",
      "value": 1,
      "timestamp": "2026-04-10"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2492",
      "value": 1,
      "timestamp": "2026-04-10"
    },
    {
      "source": "Union Find",
      "target": "Problem 2492",
      "value": 1,
      "timestamp": "2026-04-10"
    },
    {
      "source": "Graph",
      "target": "Problem 2492",
      "value": 1,
      "timestamp": "2026-04-10"
    },
    {
      "source": "Array",
      "target": "Problem 2499",
      "value": 1,
      "timestamp": "2026-04-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2499",
      "value": 1,
      "timestamp": "2026-04-10"
    },
    {
      "source": "Greedy",
      "target": "Problem 2499",
      "value": 1,
      "timestamp": "2026-04-10"
    },
    {
      "source": "Counting",
      "target": "Problem 2499",
      "value": 1,
      "timestamp": "2026-04-10"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2493",
      "value": 1,
      "timestamp": "2026-04-11"
    },
    {
      "source": "Union Find",
      "target": "Problem 2493",
      "value": 1,
      "timestamp": "2026-04-11"
    },
    {
      "source": "Graph",
      "target": "Problem 2493",
      "value": 1,
      "timestamp": "2026-04-11"
    },
    {
      "source": "Array",
      "target": "Problem 2498",
      "value": 1,
      "timestamp": "2026-04-12"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2498",
      "value": 1,
      "timestamp": "2026-04-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 2498",
      "value": 1,
      "timestamp": "2026-04-12"
    },
    {
      "source": "Array",
      "target": "Problem 2496",
      "value": 1,
      "timestamp": "2026-04-12"
    },
    {
      "source": "String",
      "target": "Problem 2496",
      "value": 1,
      "timestamp": "2026-04-12"
    },
    {
      "source": "Array",
      "target": "Problem 2500",
      "value": 1,
      "timestamp": "2026-04-12"
    },
    {
      "source": "Sorting",
      "target": "Problem 2500",
      "value": 1,
      "timestamp": "2026-04-12"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2500",
      "value": 1,
      "timestamp": "2026-04-12"
    },
    {
      "source": "Matrix",
      "target": "Problem 2500",
      "value": 1,
      "timestamp": "2026-04-12"
    },
    {
      "source": "Simulation",
      "target": "Problem 2500",
      "value": 1,
      "timestamp": "2026-04-12"
    },
    {
      "source": "Array",
      "target": "Problem 2497",
      "value": 1,
      "timestamp": "2026-04-13"
    },
    {
      "source": "Greedy",
      "target": "Problem 2497",
      "value": 1,
      "timestamp": "2026-04-13"
    },
    {
      "source": "Graph",
      "target": "Problem 2497",
      "value": 1,
      "timestamp": "2026-04-13"
    },
    {
      "source": "Sorting",
      "target": "Problem 2497",
      "value": 1,
      "timestamp": "2026-04-13"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2497",
      "value": 1,
      "timestamp": "2026-04-13"
    },
    {
      "source": "Array",
      "target": "Problem 2506",
      "value": 1,
      "timestamp": "2026-04-13"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2506",
      "value": 1,
      "timestamp": "2026-04-13"
    },
    {
      "source": "String",
      "target": "Problem 2506",
      "value": 1,
      "timestamp": "2026-04-13"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2506",
      "value": 1,
      "timestamp": "2026-04-13"
    },
    {
      "source": "Counting",
      "target": "Problem 2506",
      "value": 1,
      "timestamp": "2026-04-13"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2508",
      "value": 1,
      "timestamp": "2026-04-14"
    },
    {
      "source": "Graph",
      "target": "Problem 2508",
      "value": 1,
      "timestamp": "2026-04-14"
    },
    {
      "source": "Math",
      "target": "Problem 2507",
      "value": 1,
      "timestamp": "2026-04-14"
    },
    {
      "source": "Simulation",
      "target": "Problem 2507",
      "value": 1,
      "timestamp": "2026-04-14"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2507",
      "value": 1,
      "timestamp": "2026-04-14"
    },
    {
      "source": "Array",
      "target": "Problem 2501",
      "value": 1,
      "timestamp": "2026-04-15"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2501",
      "value": 1,
      "timestamp": "2026-04-15"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2501",
      "value": 1,
      "timestamp": "2026-04-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2501",
      "value": 1,
      "timestamp": "2026-04-15"
    },
    {
      "source": "Sorting",
      "target": "Problem 2501",
      "value": 1,
      "timestamp": "2026-04-15"
    },
    {
      "source": "Array",
      "target": "Problem 2503",
      "value": 1,
      "timestamp": "2026-04-15"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2503",
      "value": 1,
      "timestamp": "2026-04-15"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2503",
      "value": 1,
      "timestamp": "2026-04-15"
    },
    {
      "source": "Union Find",
      "target": "Problem 2503",
      "value": 1,
      "timestamp": "2026-04-15"
    },
    {
      "source": "Sorting",
      "target": "Problem 2503",
      "value": 1,
      "timestamp": "2026-04-15"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2503",
      "value": 1,
      "timestamp": "2026-04-15"
    },
    {
      "source": "Matrix",
      "target": "Problem 2503",
      "value": 1,
      "timestamp": "2026-04-15"
    },
    {
      "source": "Array",
      "target": "Problem 2502",
      "value": 1,
      "timestamp": "2026-04-15"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2502",
      "value": 1,
      "timestamp": "2026-04-15"
    },
    {
      "source": "Design",
      "target": "Problem 2502",
      "value": 1,
      "timestamp": "2026-04-15"
    },
    {
      "source": "Simulation",
      "target": "Problem 2502",
      "value": 1,
      "timestamp": "2026-04-15"
    },
    {
      "source": "Array",
      "target": "Problem 2511",
      "value": 1,
      "timestamp": "2026-04-16"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2511",
      "value": 1,
      "timestamp": "2026-04-16"
    },
    {
      "source": "Array",
      "target": "Problem 2509",
      "value": 1,
      "timestamp": "2026-04-16"
    },
    {
      "source": "Tree",
      "target": "Problem 2509",
      "value": 1,
      "timestamp": "2026-04-16"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 2509",
      "value": 1,
      "timestamp": "2026-04-16"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2516",
      "value": 1,
      "timestamp": "2026-04-17"
    },
    {
      "source": "String",
      "target": "Problem 2516",
      "value": 1,
      "timestamp": "2026-04-17"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2516",
      "value": 1,
      "timestamp": "2026-04-17"
    },
    {
      "source": "Array",
      "target": "Problem 2515",
      "value": 1,
      "timestamp": "2026-04-17"
    },
    {
      "source": "String",
      "target": "Problem 2515",
      "value": 1,
      "timestamp": "2026-04-17"
    },
    {
      "source": "Math",
      "target": "Problem 2513",
      "value": 1,
      "timestamp": "2026-04-17"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2513",
      "value": 1,
      "timestamp": "2026-04-17"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2513",
      "value": 1,
      "timestamp": "2026-04-17"
    },
    {
      "source": "Array",
      "target": "Problem 2518",
      "value": 1,
      "timestamp": "2026-04-18"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2518",
      "value": 1,
      "timestamp": "2026-04-18"
    },
    {
      "source": "Array",
      "target": "Problem 2517",
      "value": 1,
      "timestamp": "2026-04-18"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2517",
      "value": 1,
      "timestamp": "2026-04-18"
    },
    {
      "source": "Greedy",
      "target": "Problem 2517",
      "value": 1,
      "timestamp": "2026-04-18"
    },
    {
      "source": "Sorting",
      "target": "Problem 2517",
      "value": 1,
      "timestamp": "2026-04-18"
    },
    {
      "source": "Array",
      "target": "Problem 2512",
      "value": 1,
      "timestamp": "2026-04-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2512",
      "value": 1,
      "timestamp": "2026-04-19"
    },
    {
      "source": "String",
      "target": "Problem 2512",
      "value": 1,
      "timestamp": "2026-04-19"
    },
    {
      "source": "Sorting",
      "target": "Problem 2512",
      "value": 1,
      "timestamp": "2026-04-19"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2512",
      "value": 1,
      "timestamp": "2026-04-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2514",
      "value": 1,
      "timestamp": "2026-04-19"
    },
    {
      "source": "Math",
      "target": "Problem 2514",
      "value": 1,
      "timestamp": "2026-04-19"
    },
    {
      "source": "String",
      "target": "Problem 2514",
      "value": 1,
      "timestamp": "2026-04-19"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 2514",
      "value": 1,
      "timestamp": "2026-04-19"
    },
    {
      "source": "Counting",
      "target": "Problem 2514",
      "value": 1,
      "timestamp": "2026-04-19"
    },
    {
      "source": "Array",
      "target": "Problem 2521",
      "value": 1,
      "timestamp": "2026-04-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2521",
      "value": 1,
      "timestamp": "2026-04-19"
    },
    {
      "source": "Math",
      "target": "Problem 2521",
      "value": 1,
      "timestamp": "2026-04-19"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2521",
      "value": 1,
      "timestamp": "2026-04-19"
    },
    {
      "source": "Math",
      "target": "Problem 2520",
      "value": 1,
      "timestamp": "2026-04-20"
    },
    {
      "source": "String",
      "target": "Problem 2522",
      "value": 1,
      "timestamp": "2026-04-20"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2522",
      "value": 1,
      "timestamp": "2026-04-20"
    },
    {
      "source": "Greedy",
      "target": "Problem 2522",
      "value": 1,
      "timestamp": "2026-04-20"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2526",
      "value": 1,
      "timestamp": "2026-04-21"
    },
    {
      "source": "Design",
      "target": "Problem 2526",
      "value": 1,
      "timestamp": "2026-04-21"
    },
    {
      "source": "Queue",
      "target": "Problem 2526",
      "value": 1,
      "timestamp": "2026-04-21"
    },
    {
      "source": "Counting",
      "target": "Problem 2526",
      "value": 1,
      "timestamp": "2026-04-21"
    },
    {
      "source": "Data Stream",
      "target": "Problem 2526",
      "value": 1,
      "timestamp": "2026-04-21"
    },
    {
      "source": "Array",
      "target": "Problem 2527",
      "value": 1,
      "timestamp": "2026-04-21"
    },
    {
      "source": "Math",
      "target": "Problem 2527",
      "value": 1,
      "timestamp": "2026-04-21"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2527",
      "value": 1,
      "timestamp": "2026-04-21"
    },
    {
      "source": "Math",
      "target": "Problem 2523",
      "value": 1,
      "timestamp": "2026-04-21"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2523",
      "value": 1,
      "timestamp": "2026-04-21"
    },
    {
      "source": "Math",
      "target": "Problem 2525",
      "value": 1,
      "timestamp": "2026-04-22"
    },
    {
      "source": "Array",
      "target": "Problem 2528",
      "value": 1,
      "timestamp": "2026-04-22"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2528",
      "value": 1,
      "timestamp": "2026-04-22"
    },
    {
      "source": "Greedy",
      "target": "Problem 2528",
      "value": 1,
      "timestamp": "2026-04-22"
    },
    {
      "source": "Queue",
      "target": "Problem 2528",
      "value": 1,
      "timestamp": "2026-04-22"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2528",
      "value": 1,
      "timestamp": "2026-04-22"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2528",
      "value": 1,
      "timestamp": "2026-04-22"
    },
    {
      "source": "Array",
      "target": "Problem 2529",
      "value": 1,
      "timestamp": "2026-04-22"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2529",
      "value": 1,
      "timestamp": "2026-04-22"
    },
    {
      "source": "Counting",
      "target": "Problem 2529",
      "value": 1,
      "timestamp": "2026-04-22"
    },
    {
      "source": "Array",
      "target": "Problem 2530",
      "value": 1,
      "timestamp": "2026-04-23"
    },
    {
      "source": "Greedy",
      "target": "Problem 2530",
      "value": 1,
      "timestamp": "2026-04-23"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2530",
      "value": 1,
      "timestamp": "2026-04-23"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2531",
      "value": 1,
      "timestamp": "2026-04-23"
    },
    {
      "source": "String",
      "target": "Problem 2531",
      "value": 1,
      "timestamp": "2026-04-23"
    },
    {
      "source": "Counting",
      "target": "Problem 2531",
      "value": 1,
      "timestamp": "2026-04-23"
    },
    {
      "source": "Array",
      "target": "Problem 2532",
      "value": 1,
      "timestamp": "2026-04-24"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2532",
      "value": 1,
      "timestamp": "2026-04-24"
    },
    {
      "source": "Simulation",
      "target": "Problem 2532",
      "value": 1,
      "timestamp": "2026-04-24"
    },
    {
      "source": "Array",
      "target": "Problem 2536",
      "value": 1,
      "timestamp": "2026-04-24"
    },
    {
      "source": "Matrix",
      "target": "Problem 2536",
      "value": 1,
      "timestamp": "2026-04-24"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2536",
      "value": 1,
      "timestamp": "2026-04-24"
    },
    {
      "source": "Array",
      "target": "Problem 2535",
      "value": 1,
      "timestamp": "2026-04-25"
    },
    {
      "source": "Math",
      "target": "Problem 2535",
      "value": 1,
      "timestamp": "2026-04-25"
    },
    {
      "source": "Array",
      "target": "Problem 2537",
      "value": 1,
      "timestamp": "2026-04-25"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2537",
      "value": 1,
      "timestamp": "2026-04-25"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2537",
      "value": 1,
      "timestamp": "2026-04-25"
    },
    {
      "source": "Array",
      "target": "Problem 2538",
      "value": 1,
      "timestamp": "2026-04-26"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2538",
      "value": 1,
      "timestamp": "2026-04-26"
    },
    {
      "source": "Tree",
      "target": "Problem 2538",
      "value": 1,
      "timestamp": "2026-04-26"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2538",
      "value": 1,
      "timestamp": "2026-04-26"
    },
    {
      "source": "Array",
      "target": "Problem 2540",
      "value": 1,
      "timestamp": "2026-04-26"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2540",
      "value": 1,
      "timestamp": "2026-04-26"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2540",
      "value": 1,
      "timestamp": "2026-04-26"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2540",
      "value": 1,
      "timestamp": "2026-04-26"
    },
    {
      "source": "Array",
      "target": "Problem 2545",
      "value": 1,
      "timestamp": "2026-04-26"
    },
    {
      "source": "Sorting",
      "target": "Problem 2545",
      "value": 1,
      "timestamp": "2026-04-26"
    },
    {
      "source": "Matrix",
      "target": "Problem 2545",
      "value": 1,
      "timestamp": "2026-04-26"
    },
    {
      "source": "Math",
      "target": "Problem 2544",
      "value": 1,
      "timestamp": "2026-04-27"
    },
    {
      "source": "Array",
      "target": "Problem 2542",
      "value": 1,
      "timestamp": "2026-04-27"
    },
    {
      "source": "Greedy",
      "target": "Problem 2542",
      "value": 1,
      "timestamp": "2026-04-27"
    },
    {
      "source": "Sorting",
      "target": "Problem 2542",
      "value": 1,
      "timestamp": "2026-04-27"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2542",
      "value": 1,
      "timestamp": "2026-04-27"
    },
    {
      "source": "Array",
      "target": "Problem 2541",
      "value": 1,
      "timestamp": "2026-04-27"
    },
    {
      "source": "Math",
      "target": "Problem 2541",
      "value": 1,
      "timestamp": "2026-04-27"
    },
    {
      "source": "Greedy",
      "target": "Problem 2541",
      "value": 1,
      "timestamp": "2026-04-27"
    },
    {
      "source": "Math",
      "target": "Problem 2543",
      "value": 1,
      "timestamp": "2026-04-28"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2543",
      "value": 1,
      "timestamp": "2026-04-28"
    },
    {
      "source": "String",
      "target": "Problem 2546",
      "value": 1,
      "timestamp": "2026-04-28"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2546",
      "value": 1,
      "timestamp": "2026-04-28"
    },
    {
      "source": "Array",
      "target": "Problem 2547",
      "value": 1,
      "timestamp": "2026-04-28"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2547",
      "value": 1,
      "timestamp": "2026-04-28"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2547",
      "value": 1,
      "timestamp": "2026-04-28"
    },
    {
      "source": "Counting",
      "target": "Problem 2547",
      "value": 1,
      "timestamp": "2026-04-28"
    },
    {
      "source": "Array",
      "target": "Problem 2551",
      "value": 1,
      "timestamp": "2026-04-29"
    },
    {
      "source": "Greedy",
      "target": "Problem 2551",
      "value": 1,
      "timestamp": "2026-04-29"
    },
    {
      "source": "Sorting",
      "target": "Problem 2551",
      "value": 1,
      "timestamp": "2026-04-29"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2551",
      "value": 1,
      "timestamp": "2026-04-29"
    },
    {
      "source": "Math",
      "target": "Problem 2550",
      "value": 1,
      "timestamp": "2026-04-29"
    },
    {
      "source": "Recursion",
      "target": "Problem 2550",
      "value": 1,
      "timestamp": "2026-04-29"
    },
    {
      "source": "Array",
      "target": "Problem 2549",
      "value": 1,
      "timestamp": "2026-04-29"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2549",
      "value": 1,
      "timestamp": "2026-04-29"
    },
    {
      "source": "Math",
      "target": "Problem 2549",
      "value": 1,
      "timestamp": "2026-04-29"
    },
    {
      "source": "Simulation",
      "target": "Problem 2549",
      "value": 1,
      "timestamp": "2026-04-29"
    },
    {
      "source": "Array",
      "target": "Problem 2553",
      "value": 1,
      "timestamp": "2026-04-30"
    },
    {
      "source": "Simulation",
      "target": "Problem 2553",
      "value": 1,
      "timestamp": "2026-04-30"
    },
    {
      "source": "Array",
      "target": "Problem 2552",
      "value": 1,
      "timestamp": "2026-04-30"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2552",
      "value": 1,
      "timestamp": "2026-04-30"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 2552",
      "value": 1,
      "timestamp": "2026-04-30"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2552",
      "value": 1,
      "timestamp": "2026-04-30"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2552",
      "value": 1,
      "timestamp": "2026-04-30"
    },
    {
      "source": "Array",
      "target": "Problem 2555",
      "value": 1,
      "timestamp": "2026-05-01"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2555",
      "value": 1,
      "timestamp": "2026-05-01"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2555",
      "value": 1,
      "timestamp": "2026-05-01"
    },
    {
      "source": "Array",
      "target": "Problem 2559",
      "value": 1,
      "timestamp": "2026-05-01"
    },
    {
      "source": "String",
      "target": "Problem 2559",
      "value": 1,
      "timestamp": "2026-05-01"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2559",
      "value": 1,
      "timestamp": "2026-05-01"
    },
    {
      "source": "Array",
      "target": "Problem 2560",
      "value": 1,
      "timestamp": "2026-05-02"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2560",
      "value": 1,
      "timestamp": "2026-05-02"
    },
    {
      "source": "Array",
      "target": "Problem 2554",
      "value": 1,
      "timestamp": "2026-05-02"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2554",
      "value": 1,
      "timestamp": "2026-05-02"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2554",
      "value": 1,
      "timestamp": "2026-05-02"
    },
    {
      "source": "Greedy",
      "target": "Problem 2554",
      "value": 1,
      "timestamp": "2026-05-02"
    },
    {
      "source": "Sorting",
      "target": "Problem 2554",
      "value": 1,
      "timestamp": "2026-05-02"
    },
    {
      "source": "Array",
      "target": "Problem 2561",
      "value": 1,
      "timestamp": "2026-05-02"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2561",
      "value": 1,
      "timestamp": "2026-05-02"
    },
    {
      "source": "Greedy",
      "target": "Problem 2561",
      "value": 1,
      "timestamp": "2026-05-02"
    },
    {
      "source": "Array",
      "target": "Problem 2556",
      "value": 1,
      "timestamp": "2026-05-03"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2556",
      "value": 1,
      "timestamp": "2026-05-03"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2556",
      "value": 1,
      "timestamp": "2026-05-03"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2556",
      "value": 1,
      "timestamp": "2026-05-03"
    },
    {
      "source": "Matrix",
      "target": "Problem 2556",
      "value": 1,
      "timestamp": "2026-05-03"
    },
    {
      "source": "Array",
      "target": "Problem 2558",
      "value": 1,
      "timestamp": "2026-05-03"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2558",
      "value": 1,
      "timestamp": "2026-05-03"
    },
    {
      "source": "Simulation",
      "target": "Problem 2558",
      "value": 1,
      "timestamp": "2026-05-03"
    },
    {
      "source": "Array",
      "target": "Problem 2563",
      "value": 1,
      "timestamp": "2026-05-03"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2563",
      "value": 1,
      "timestamp": "2026-05-03"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2563",
      "value": 1,
      "timestamp": "2026-05-03"
    },
    {
      "source": "Sorting",
      "target": "Problem 2563",
      "value": 1,
      "timestamp": "2026-05-03"
    },
    {
      "source": "Array",
      "target": "Problem 2562",
      "value": 1,
      "timestamp": "2026-05-04"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2562",
      "value": 1,
      "timestamp": "2026-05-04"
    },
    {
      "source": "Simulation",
      "target": "Problem 2562",
      "value": 1,
      "timestamp": "2026-05-04"
    },
    {
      "source": "Array",
      "target": "Problem 2564",
      "value": 1,
      "timestamp": "2026-05-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2564",
      "value": 1,
      "timestamp": "2026-05-04"
    },
    {
      "source": "String",
      "target": "Problem 2564",
      "value": 1,
      "timestamp": "2026-05-04"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2564",
      "value": 1,
      "timestamp": "2026-05-04"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2565",
      "value": 1,
      "timestamp": "2026-05-04"
    },
    {
      "source": "String",
      "target": "Problem 2565",
      "value": 1,
      "timestamp": "2026-05-04"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2565",
      "value": 1,
      "timestamp": "2026-05-04"
    },
    {
      "source": "Math",
      "target": "Problem 2566",
      "value": 1,
      "timestamp": "2026-05-05"
    },
    {
      "source": "Greedy",
      "target": "Problem 2566",
      "value": 1,
      "timestamp": "2026-05-05"
    },
    {
      "source": "Array",
      "target": "Problem 2567",
      "value": 1,
      "timestamp": "2026-05-05"
    },
    {
      "source": "Greedy",
      "target": "Problem 2567",
      "value": 1,
      "timestamp": "2026-05-05"
    },
    {
      "source": "Sorting",
      "target": "Problem 2567",
      "value": 1,
      "timestamp": "2026-05-05"
    },
    {
      "source": "Array",
      "target": "Problem 2568",
      "value": 1,
      "timestamp": "2026-05-05"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2568",
      "value": 1,
      "timestamp": "2026-05-05"
    },
    {
      "source": "Brainteaser",
      "target": "Problem 2568",
      "value": 1,
      "timestamp": "2026-05-05"
    },
    {
      "source": "Array",
      "target": "Problem 2569",
      "value": 1,
      "timestamp": "2026-05-06"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 2569",
      "value": 1,
      "timestamp": "2026-05-06"
    },
    {
      "source": "Array",
      "target": "Problem 2574",
      "value": 1,
      "timestamp": "2026-05-06"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2574",
      "value": 1,
      "timestamp": "2026-05-06"
    },
    {
      "source": "Array",
      "target": "Problem 2570",
      "value": 1,
      "timestamp": "2026-05-06"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2570",
      "value": 1,
      "timestamp": "2026-05-06"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2570",
      "value": 1,
      "timestamp": "2026-05-06"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2571",
      "value": 1,
      "timestamp": "2026-05-07"
    },
    {
      "source": "Greedy",
      "target": "Problem 2571",
      "value": 1,
      "timestamp": "2026-05-07"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2571",
      "value": 1,
      "timestamp": "2026-05-07"
    },
    {
      "source": "Array",
      "target": "Problem 2572",
      "value": 1,
      "timestamp": "2026-05-07"
    },
    {
      "source": "Math",
      "target": "Problem 2572",
      "value": 1,
      "timestamp": "2026-05-07"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2572",
      "value": 1,
      "timestamp": "2026-05-07"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2572",
      "value": 1,
      "timestamp": "2026-05-07"
    },
    {
      "source": "Bitmask",
      "target": "Problem 2572",
      "value": 1,
      "timestamp": "2026-05-07"
    },
    {
      "source": "Array",
      "target": "Problem 2573",
      "value": 1,
      "timestamp": "2026-05-07"
    },
    {
      "source": "String",
      "target": "Problem 2573",
      "value": 1,
      "timestamp": "2026-05-07"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2573",
      "value": 1,
      "timestamp": "2026-05-07"
    },
    {
      "source": "Greedy",
      "target": "Problem 2573",
      "value": 1,
      "timestamp": "2026-05-07"
    },
    {
      "source": "Union Find",
      "target": "Problem 2573",
      "value": 1,
      "timestamp": "2026-05-07"
    },
    {
      "source": "Matrix",
      "target": "Problem 2573",
      "value": 1,
      "timestamp": "2026-05-07"
    },
    {
      "source": "Array",
      "target": "Problem 2575",
      "value": 1,
      "timestamp": "2026-05-08"
    },
    {
      "source": "Math",
      "target": "Problem 2575",
      "value": 1,
      "timestamp": "2026-05-08"
    },
    {
      "source": "String",
      "target": "Problem 2575",
      "value": 1,
      "timestamp": "2026-05-08"
    },
    {
      "source": "Array",
      "target": "Problem 2576",
      "value": 1,
      "timestamp": "2026-05-08"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2576",
      "value": 1,
      "timestamp": "2026-05-08"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2576",
      "value": 1,
      "timestamp": "2026-05-08"
    },
    {
      "source": "Greedy",
      "target": "Problem 2576",
      "value": 1,
      "timestamp": "2026-05-08"
    },
    {
      "source": "Sorting",
      "target": "Problem 2576",
      "value": 1,
      "timestamp": "2026-05-08"
    },
    {
      "source": "Array",
      "target": "Problem 2581",
      "value": 1,
      "timestamp": "2026-05-08"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2581",
      "value": 1,
      "timestamp": "2026-05-08"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2581",
      "value": 1,
      "timestamp": "2026-05-08"
    },
    {
      "source": "Tree",
      "target": "Problem 2581",
      "value": 1,
      "timestamp": "2026-05-08"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2581",
      "value": 1,
      "timestamp": "2026-05-08"
    },
    {
      "source": "Array",
      "target": "Problem 2580",
      "value": 1,
      "timestamp": "2026-05-09"
    },
    {
      "source": "Sorting",
      "target": "Problem 2580",
      "value": 1,
      "timestamp": "2026-05-09"
    },
    {
      "source": "Math",
      "target": "Problem 2579",
      "value": 1,
      "timestamp": "2026-05-09"
    },
    {
      "source": "Array",
      "target": "Problem 2577",
      "value": 1,
      "timestamp": "2026-05-09"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2577",
      "value": 1,
      "timestamp": "2026-05-09"
    },
    {
      "source": "Graph",
      "target": "Problem 2577",
      "value": 1,
      "timestamp": "2026-05-09"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2577",
      "value": 1,
      "timestamp": "2026-05-09"
    },
    {
      "source": "Matrix",
      "target": "Problem 2577",
      "value": 1,
      "timestamp": "2026-05-09"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 2577",
      "value": 1,
      "timestamp": "2026-05-09"
    },
    {
      "source": "Math",
      "target": "Problem 2578",
      "value": 1,
      "timestamp": "2026-05-10"
    },
    {
      "source": "Greedy",
      "target": "Problem 2578",
      "value": 1,
      "timestamp": "2026-05-10"
    },
    {
      "source": "Sorting",
      "target": "Problem 2578",
      "value": 1,
      "timestamp": "2026-05-10"
    },
    {
      "source": "Tree",
      "target": "Problem 2583",
      "value": 1,
      "timestamp": "2026-05-10"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2583",
      "value": 1,
      "timestamp": "2026-05-10"
    },
    {
      "source": "Sorting",
      "target": "Problem 2583",
      "value": 1,
      "timestamp": "2026-05-10"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 2583",
      "value": 1,
      "timestamp": "2026-05-10"
    },
    {
      "source": "Math",
      "target": "Problem 2582",
      "value": 1,
      "timestamp": "2026-05-10"
    },
    {
      "source": "Simulation",
      "target": "Problem 2582",
      "value": 1,
      "timestamp": "2026-05-10"
    },
    {
      "source": "Array",
      "target": "Problem 2585",
      "value": 1,
      "timestamp": "2026-05-11"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2585",
      "value": 1,
      "timestamp": "2026-05-11"
    },
    {
      "source": "Math",
      "target": "Problem 2591",
      "value": 1,
      "timestamp": "2026-05-11"
    },
    {
      "source": "Greedy",
      "target": "Problem 2591",
      "value": 1,
      "timestamp": "2026-05-11"
    },
    {
      "source": "Array",
      "target": "Problem 2588",
      "value": 1,
      "timestamp": "2026-05-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2588",
      "value": 1,
      "timestamp": "2026-05-12"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2588",
      "value": 1,
      "timestamp": "2026-05-12"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2588",
      "value": 1,
      "timestamp": "2026-05-12"
    },
    {
      "source": "Array",
      "target": "Problem 2589",
      "value": 1,
      "timestamp": "2026-05-12"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2589",
      "value": 1,
      "timestamp": "2026-05-12"
    },
    {
      "source": "Stack",
      "target": "Problem 2589",
      "value": 1,
      "timestamp": "2026-05-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 2589",
      "value": 1,
      "timestamp": "2026-05-12"
    },
    {
      "source": "Sorting",
      "target": "Problem 2589",
      "value": 1,
      "timestamp": "2026-05-12"
    },
    {
      "source": "Array",
      "target": "Problem 2587",
      "value": 1,
      "timestamp": "2026-05-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 2587",
      "value": 1,
      "timestamp": "2026-05-12"
    },
    {
      "source": "Sorting",
      "target": "Problem 2587",
      "value": 1,
      "timestamp": "2026-05-12"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2587",
      "value": 1,
      "timestamp": "2026-05-12"
    },
    {
      "source": "Array",
      "target": "Problem 2584",
      "value": 1,
      "timestamp": "2026-05-13"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2584",
      "value": 1,
      "timestamp": "2026-05-13"
    },
    {
      "source": "Math",
      "target": "Problem 2584",
      "value": 1,
      "timestamp": "2026-05-13"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2584",
      "value": 1,
      "timestamp": "2026-05-13"
    },
    {
      "source": "Array",
      "target": "Problem 2594",
      "value": 1,
      "timestamp": "2026-05-13"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2594",
      "value": 1,
      "timestamp": "2026-05-13"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2595",
      "value": 1,
      "timestamp": "2026-05-13"
    },
    {
      "source": "Array",
      "target": "Problem 2596",
      "value": 1,
      "timestamp": "2026-05-14"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2596",
      "value": 1,
      "timestamp": "2026-05-14"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2596",
      "value": 1,
      "timestamp": "2026-05-14"
    },
    {
      "source": "Matrix",
      "target": "Problem 2596",
      "value": 1,
      "timestamp": "2026-05-14"
    },
    {
      "source": "Simulation",
      "target": "Problem 2596",
      "value": 1,
      "timestamp": "2026-05-14"
    },
    {
      "source": "Array",
      "target": "Problem 2586",
      "value": 1,
      "timestamp": "2026-05-14"
    },
    {
      "source": "String",
      "target": "Problem 2586",
      "value": 1,
      "timestamp": "2026-05-14"
    },
    {
      "source": "Counting",
      "target": "Problem 2586",
      "value": 1,
      "timestamp": "2026-05-14"
    },
    {
      "source": "Array",
      "target": "Problem 2592",
      "value": 1,
      "timestamp": "2026-05-14"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2592",
      "value": 1,
      "timestamp": "2026-05-14"
    },
    {
      "source": "Greedy",
      "target": "Problem 2592",
      "value": 1,
      "timestamp": "2026-05-14"
    },
    {
      "source": "Sorting",
      "target": "Problem 2592",
      "value": 1,
      "timestamp": "2026-05-14"
    },
    {
      "source": "Array",
      "target": "Problem 2593",
      "value": 1,
      "timestamp": "2026-05-15"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2593",
      "value": 1,
      "timestamp": "2026-05-15"
    },
    {
      "source": "Sorting",
      "target": "Problem 2593",
      "value": 1,
      "timestamp": "2026-05-15"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2593",
      "value": 1,
      "timestamp": "2026-05-15"
    },
    {
      "source": "Simulation",
      "target": "Problem 2593",
      "value": 1,
      "timestamp": "2026-05-15"
    },
    {
      "source": "Array",
      "target": "Problem 2597",
      "value": 1,
      "timestamp": "2026-05-15"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2597",
      "value": 1,
      "timestamp": "2026-05-15"
    },
    {
      "source": "Math",
      "target": "Problem 2597",
      "value": 1,
      "timestamp": "2026-05-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2597",
      "value": 1,
      "timestamp": "2026-05-15"
    },
    {
      "source": "Backtracking",
      "target": "Problem 2597",
      "value": 1,
      "timestamp": "2026-05-15"
    },
    {
      "source": "Sorting",
      "target": "Problem 2597",
      "value": 1,
      "timestamp": "2026-05-15"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 2597",
      "value": 1,
      "timestamp": "2026-05-15"
    },
    {
      "source": "Array",
      "target": "Problem 2603",
      "value": 1,
      "timestamp": "2026-05-15"
    },
    {
      "source": "Tree",
      "target": "Problem 2603",
      "value": 1,
      "timestamp": "2026-05-15"
    },
    {
      "source": "Graph",
      "target": "Problem 2603",
      "value": 1,
      "timestamp": "2026-05-15"
    },
    {
      "source": "Topological Sort",
      "target": "Problem 2603",
      "value": 1,
      "timestamp": "2026-05-15"
    },
    {
      "source": "Array",
      "target": "Problem 2602",
      "value": 1,
      "timestamp": "2026-05-16"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2602",
      "value": 1,
      "timestamp": "2026-05-16"
    },
    {
      "source": "Sorting",
      "target": "Problem 2602",
      "value": 1,
      "timestamp": "2026-05-16"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2602",
      "value": 1,
      "timestamp": "2026-05-16"
    },
    {
      "source": "Array",
      "target": "Problem 2605",
      "value": 1,
      "timestamp": "2026-05-16"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2605",
      "value": 1,
      "timestamp": "2026-05-16"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2605",
      "value": 1,
      "timestamp": "2026-05-16"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2608",
      "value": 1,
      "timestamp": "2026-05-16"
    },
    {
      "source": "Graph",
      "target": "Problem 2608",
      "value": 1,
      "timestamp": "2026-05-16"
    },
    {
      "source": "Array",
      "target": "Problem 2607",
      "value": 1,
      "timestamp": "2026-05-17"
    },
    {
      "source": "Math",
      "target": "Problem 2607",
      "value": 1,
      "timestamp": "2026-05-17"
    },
    {
      "source": "Sorting",
      "target": "Problem 2607",
      "value": 1,
      "timestamp": "2026-05-17"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2607",
      "value": 1,
      "timestamp": "2026-05-17"
    },
    {
      "source": "Array",
      "target": "Problem 2601",
      "value": 1,
      "timestamp": "2026-05-17"
    },
    {
      "source": "Math",
      "target": "Problem 2601",
      "value": 1,
      "timestamp": "2026-05-17"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2601",
      "value": 1,
      "timestamp": "2026-05-17"
    },
    {
      "source": "Greedy",
      "target": "Problem 2601",
      "value": 1,
      "timestamp": "2026-05-17"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2601",
      "value": 1,
      "timestamp": "2026-05-17"
    },
    {
      "source": "Array",
      "target": "Problem 2598",
      "value": 1,
      "timestamp": "2026-05-18"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2598",
      "value": 1,
      "timestamp": "2026-05-18"
    },
    {
      "source": "Math",
      "target": "Problem 2598",
      "value": 1,
      "timestamp": "2026-05-18"
    },
    {
      "source": "Greedy",
      "target": "Problem 2598",
      "value": 1,
      "timestamp": "2026-05-18"
    },
    {
      "source": "String",
      "target": "Problem 2609",
      "value": 1,
      "timestamp": "2026-05-18"
    },
    {
      "source": "Math",
      "target": "Problem 2600",
      "value": 1,
      "timestamp": "2026-05-18"
    },
    {
      "source": "Greedy",
      "target": "Problem 2600",
      "value": 1,
      "timestamp": "2026-05-18"
    },
    {
      "source": "Array",
      "target": "Problem 2611",
      "value": 1,
      "timestamp": "2026-05-19"
    },
    {
      "source": "Greedy",
      "target": "Problem 2611",
      "value": 1,
      "timestamp": "2026-05-19"
    },
    {
      "source": "Sorting",
      "target": "Problem 2611",
      "value": 1,
      "timestamp": "2026-05-19"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2611",
      "value": 1,
      "timestamp": "2026-05-19"
    },
    {
      "source": "Array",
      "target": "Problem 2610",
      "value": 1,
      "timestamp": "2026-05-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2610",
      "value": 1,
      "timestamp": "2026-05-19"
    },
    {
      "source": "Array",
      "target": "Problem 2606",
      "value": 1,
      "timestamp": "2026-05-20"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2606",
      "value": 1,
      "timestamp": "2026-05-20"
    },
    {
      "source": "String",
      "target": "Problem 2606",
      "value": 1,
      "timestamp": "2026-05-20"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2606",
      "value": 1,
      "timestamp": "2026-05-20"
    },
    {
      "source": "Array",
      "target": "Problem 2615",
      "value": 1,
      "timestamp": "2026-05-20"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2615",
      "value": 1,
      "timestamp": "2026-05-20"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2615",
      "value": 1,
      "timestamp": "2026-05-20"
    },
    {
      "source": "Array",
      "target": "Problem 2616",
      "value": 1,
      "timestamp": "2026-05-21"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2616",
      "value": 1,
      "timestamp": "2026-05-21"
    },
    {
      "source": "Greedy",
      "target": "Problem 2616",
      "value": 1,
      "timestamp": "2026-05-21"
    },
    {
      "source": "Array",
      "target": "Problem 2614",
      "value": 1,
      "timestamp": "2026-05-22"
    },
    {
      "source": "Math",
      "target": "Problem 2614",
      "value": 1,
      "timestamp": "2026-05-22"
    },
    {
      "source": "Matrix",
      "target": "Problem 2614",
      "value": 1,
      "timestamp": "2026-05-22"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2614",
      "value": 1,
      "timestamp": "2026-05-22"
    },
    {
      "source": "Array",
      "target": "Problem 2612",
      "value": 1,
      "timestamp": "2026-05-22"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2612",
      "value": 1,
      "timestamp": "2026-05-22"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2612",
      "value": 1,
      "timestamp": "2026-05-22"
    },
    {
      "source": "Array",
      "target": "Problem 2617",
      "value": 1,
      "timestamp": "2026-05-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2617",
      "value": 1,
      "timestamp": "2026-05-22"
    },
    {
      "source": "Stack",
      "target": "Problem 2617",
      "value": 1,
      "timestamp": "2026-05-22"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2617",
      "value": 1,
      "timestamp": "2026-05-22"
    },
    {
      "source": "Union Find",
      "target": "Problem 2617",
      "value": 1,
      "timestamp": "2026-05-22"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2617",
      "value": 1,
      "timestamp": "2026-05-22"
    },
    {
      "source": "Matrix",
      "target": "Problem 2617",
      "value": 1,
      "timestamp": "2026-05-22"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 2617",
      "value": 1,
      "timestamp": "2026-05-22"
    },
    {
      "source": "Array",
      "target": "Problem 2639",
      "value": 1,
      "timestamp": "2026-05-28"
    },
    {
      "source": "Matrix",
      "target": "Problem 2639",
      "value": 1,
      "timestamp": "2026-05-28"
    },
    {
      "source": "Array",
      "target": "Problem 2640",
      "value": 1,
      "timestamp": "2026-05-29"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2640",
      "value": 1,
      "timestamp": "2026-05-29"
    },
    {
      "source": "Graph",
      "target": "Problem 2642",
      "value": 1,
      "timestamp": "2026-05-30"
    },
    {
      "source": "Design",
      "target": "Problem 2642",
      "value": 1,
      "timestamp": "2026-05-30"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2642",
      "value": 1,
      "timestamp": "2026-05-30"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 2642",
      "value": 1,
      "timestamp": "2026-05-30"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2641",
      "value": 1,
      "timestamp": "2026-05-30"
    },
    {
      "source": "Tree",
      "target": "Problem 2641",
      "value": 1,
      "timestamp": "2026-05-30"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2641",
      "value": 1,
      "timestamp": "2026-05-30"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2641",
      "value": 1,
      "timestamp": "2026-05-30"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 2641",
      "value": 1,
      "timestamp": "2026-05-30"
    },
    {
      "source": "Array",
      "target": "Problem 2643",
      "value": 1,
      "timestamp": "2026-05-30"
    },
    {
      "source": "Matrix",
      "target": "Problem 2643",
      "value": 1,
      "timestamp": "2026-05-30"
    },
    {
      "source": "Array",
      "target": "Problem 2646",
      "value": 1,
      "timestamp": "2026-05-31"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2646",
      "value": 1,
      "timestamp": "2026-05-31"
    },
    {
      "source": "Tree",
      "target": "Problem 2646",
      "value": 1,
      "timestamp": "2026-05-31"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2646",
      "value": 1,
      "timestamp": "2026-05-31"
    },
    {
      "source": "Graph",
      "target": "Problem 2646",
      "value": 1,
      "timestamp": "2026-05-31"
    },
    {
      "source": "String",
      "target": "Problem 2645",
      "value": 1,
      "timestamp": "2026-05-31"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2645",
      "value": 1,
      "timestamp": "2026-05-31"
    },
    {
      "source": "Stack",
      "target": "Problem 2645",
      "value": 1,
      "timestamp": "2026-05-31"
    },
    {
      "source": "Greedy",
      "target": "Problem 2645",
      "value": 1,
      "timestamp": "2026-05-31"
    },
    {
      "source": "Array",
      "target": "Problem 2644",
      "value": 1,
      "timestamp": "2026-06-01"
    },
    {
      "source": "Math",
      "target": "Problem 2651",
      "value": 1,
      "timestamp": "2026-06-01"
    },
    {
      "source": "Math",
      "target": "Problem 2652",
      "value": 1,
      "timestamp": "2026-06-02"
    },
    {
      "source": "Array",
      "target": "Problem 2653",
      "value": 1,
      "timestamp": "2026-06-03"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2653",
      "value": 1,
      "timestamp": "2026-06-03"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2653",
      "value": 1,
      "timestamp": "2026-06-03"
    },
    {
      "source": "Array",
      "target": "Problem 2654",
      "value": 1,
      "timestamp": "2026-06-03"
    },
    {
      "source": "Math",
      "target": "Problem 2654",
      "value": 1,
      "timestamp": "2026-06-03"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2654",
      "value": 1,
      "timestamp": "2026-06-03"
    },
    {
      "source": "Array",
      "target": "Problem 2656",
      "value": 1,
      "timestamp": "2026-06-03"
    },
    {
      "source": "Greedy",
      "target": "Problem 2656",
      "value": 1,
      "timestamp": "2026-06-03"
    },
    {
      "source": "Array",
      "target": "Problem 2657",
      "value": 1,
      "timestamp": "2026-06-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2657",
      "value": 1,
      "timestamp": "2026-06-04"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2657",
      "value": 1,
      "timestamp": "2026-06-04"
    },
    {
      "source": "Array",
      "target": "Problem 2658",
      "value": 1,
      "timestamp": "2026-06-04"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2658",
      "value": 1,
      "timestamp": "2026-06-04"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2658",
      "value": 1,
      "timestamp": "2026-06-04"
    },
    {
      "source": "Union Find",
      "target": "Problem 2658",
      "value": 1,
      "timestamp": "2026-06-04"
    },
    {
      "source": "Matrix",
      "target": "Problem 2658",
      "value": 1,
      "timestamp": "2026-06-04"
    },
    {
      "source": "Array",
      "target": "Problem 2659",
      "value": 1,
      "timestamp": "2026-06-05"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2659",
      "value": 1,
      "timestamp": "2026-06-05"
    },
    {
      "source": "Greedy",
      "target": "Problem 2659",
      "value": 1,
      "timestamp": "2026-06-05"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 2659",
      "value": 1,
      "timestamp": "2026-06-05"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 2659",
      "value": 1,
      "timestamp": "2026-06-05"
    },
    {
      "source": "Sorting",
      "target": "Problem 2659",
      "value": 1,
      "timestamp": "2026-06-05"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2659",
      "value": 1,
      "timestamp": "2026-06-05"
    },
    {
      "source": "Array",
      "target": "Problem 2660",
      "value": 1,
      "timestamp": "2026-06-05"
    },
    {
      "source": "Simulation",
      "target": "Problem 2660",
      "value": 1,
      "timestamp": "2026-06-05"
    },
    {
      "source": "Array",
      "target": "Problem 2661",
      "value": 1,
      "timestamp": "2026-06-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2661",
      "value": 1,
      "timestamp": "2026-06-05"
    },
    {
      "source": "Matrix",
      "target": "Problem 2661",
      "value": 1,
      "timestamp": "2026-06-05"
    },
    {
      "source": "Array",
      "target": "Problem 2662",
      "value": 1,
      "timestamp": "2026-06-06"
    },
    {
      "source": "Graph",
      "target": "Problem 2662",
      "value": 1,
      "timestamp": "2026-06-06"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2662",
      "value": 1,
      "timestamp": "2026-06-06"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 2662",
      "value": 1,
      "timestamp": "2026-06-06"
    },
    {
      "source": "String",
      "target": "Problem 2663",
      "value": 1,
      "timestamp": "2026-06-06"
    },
    {
      "source": "Greedy",
      "target": "Problem 2663",
      "value": 1,
      "timestamp": "2026-06-06"
    },
    {
      "source": "Array",
      "target": "Problem 2672",
      "value": 1,
      "timestamp": "2026-06-08"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2671",
      "value": 1,
      "timestamp": "2026-06-08"
    },
    {
      "source": "Design",
      "target": "Problem 2671",
      "value": 1,
      "timestamp": "2026-06-08"
    },
    {
      "source": "Array",
      "target": "Problem 2670",
      "value": 1,
      "timestamp": "2026-06-09"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2670",
      "value": 1,
      "timestamp": "2026-06-09"
    },
    {
      "source": "Array",
      "target": "Problem 2673",
      "value": 1,
      "timestamp": "2026-06-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2673",
      "value": 1,
      "timestamp": "2026-06-10"
    },
    {
      "source": "Greedy",
      "target": "Problem 2673",
      "value": 1,
      "timestamp": "2026-06-10"
    },
    {
      "source": "Tree",
      "target": "Problem 2673",
      "value": 1,
      "timestamp": "2026-06-10"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 2673",
      "value": 1,
      "timestamp": "2026-06-10"
    },
    {
      "source": "Array",
      "target": "Problem 2679",
      "value": 1,
      "timestamp": "2026-06-11"
    },
    {
      "source": "Sorting",
      "target": "Problem 2679",
      "value": 1,
      "timestamp": "2026-06-11"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2679",
      "value": 1,
      "timestamp": "2026-06-11"
    },
    {
      "source": "Matrix",
      "target": "Problem 2679",
      "value": 1,
      "timestamp": "2026-06-11"
    },
    {
      "source": "Simulation",
      "target": "Problem 2679",
      "value": 1,
      "timestamp": "2026-06-11"
    },
    {
      "source": "Array",
      "target": "Problem 2678",
      "value": 1,
      "timestamp": "2026-06-11"
    },
    {
      "source": "String",
      "target": "Problem 2678",
      "value": 1,
      "timestamp": "2026-06-11"
    },
    {
      "source": "Array",
      "target": "Problem 2680",
      "value": 1,
      "timestamp": "2026-06-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 2680",
      "value": 1,
      "timestamp": "2026-06-12"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2680",
      "value": 1,
      "timestamp": "2026-06-12"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2680",
      "value": 1,
      "timestamp": "2026-06-12"
    },
    {
      "source": "Array",
      "target": "Problem 2681",
      "value": 1,
      "timestamp": "2026-06-12"
    },
    {
      "source": "Math",
      "target": "Problem 2681",
      "value": 1,
      "timestamp": "2026-06-12"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2681",
      "value": 1,
      "timestamp": "2026-06-12"
    },
    {
      "source": "Sorting",
      "target": "Problem 2681",
      "value": 1,
      "timestamp": "2026-06-12"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2681",
      "value": 1,
      "timestamp": "2026-06-12"
    },
    {
      "source": "Array",
      "target": "Problem 2682",
      "value": 1,
      "timestamp": "2026-06-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2682",
      "value": 1,
      "timestamp": "2026-06-12"
    },
    {
      "source": "Simulation",
      "target": "Problem 2682",
      "value": 1,
      "timestamp": "2026-06-12"
    },
    {
      "source": "Array",
      "target": "Problem 2683",
      "value": 1,
      "timestamp": "2026-06-13"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2683",
      "value": 1,
      "timestamp": "2026-06-13"
    },
    {
      "source": "Array",
      "target": "Problem 2684",
      "value": 1,
      "timestamp": "2026-06-14"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2684",
      "value": 1,
      "timestamp": "2026-06-14"
    },
    {
      "source": "Matrix",
      "target": "Problem 2684",
      "value": 1,
      "timestamp": "2026-06-14"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2685",
      "value": 1,
      "timestamp": "2026-06-14"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2685",
      "value": 1,
      "timestamp": "2026-06-14"
    },
    {
      "source": "Union Find",
      "target": "Problem 2685",
      "value": 1,
      "timestamp": "2026-06-14"
    },
    {
      "source": "Graph",
      "target": "Problem 2685",
      "value": 1,
      "timestamp": "2026-06-14"
    },
    {
      "source": "String",
      "target": "Problem 2696",
      "value": 1,
      "timestamp": "2026-06-17"
    },
    {
      "source": "Stack",
      "target": "Problem 2696",
      "value": 1,
      "timestamp": "2026-06-17"
    },
    {
      "source": "Simulation",
      "target": "Problem 2696",
      "value": 1,
      "timestamp": "2026-06-17"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2697",
      "value": 1,
      "timestamp": "2026-06-17"
    },
    {
      "source": "String",
      "target": "Problem 2697",
      "value": 1,
      "timestamp": "2026-06-17"
    },
    {
      "source": "Greedy",
      "target": "Problem 2697",
      "value": 1,
      "timestamp": "2026-06-17"
    },
    {
      "source": "Graph",
      "target": "Problem 2699",
      "value": 1,
      "timestamp": "2026-06-18"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2699",
      "value": 1,
      "timestamp": "2026-06-18"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 2699",
      "value": 1,
      "timestamp": "2026-06-18"
    },
    {
      "source": "Math",
      "target": "Problem 2698",
      "value": 1,
      "timestamp": "2026-06-19"
    },
    {
      "source": "Backtracking",
      "target": "Problem 2698",
      "value": 1,
      "timestamp": "2026-06-19"
    },
    {
      "source": "Array",
      "target": "Problem 2709",
      "value": 1,
      "timestamp": "2026-06-20"
    },
    {
      "source": "Math",
      "target": "Problem 2709",
      "value": 1,
      "timestamp": "2026-06-20"
    },
    {
      "source": "Union Find",
      "target": "Problem 2709",
      "value": 1,
      "timestamp": "2026-06-20"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2709",
      "value": 1,
      "timestamp": "2026-06-20"
    },
    {
      "source": "Array",
      "target": "Problem 2706",
      "value": 1,
      "timestamp": "2026-06-21"
    },
    {
      "source": "Greedy",
      "target": "Problem 2706",
      "value": 1,
      "timestamp": "2026-06-21"
    },
    {
      "source": "Sorting",
      "target": "Problem 2706",
      "value": 1,
      "timestamp": "2026-06-21"
    },
    {
      "source": "Array",
      "target": "Problem 2707",
      "value": 1,
      "timestamp": "2026-06-21"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2707",
      "value": 1,
      "timestamp": "2026-06-21"
    },
    {
      "source": "String",
      "target": "Problem 2707",
      "value": 1,
      "timestamp": "2026-06-21"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2707",
      "value": 1,
      "timestamp": "2026-06-21"
    },
    {
      "source": "Trie",
      "target": "Problem 2707",
      "value": 1,
      "timestamp": "2026-06-21"
    },
    {
      "source": "String",
      "target": "Problem 2710",
      "value": 1,
      "timestamp": "2026-06-21"
    },
    {
      "source": "Array",
      "target": "Problem 2708",
      "value": 1,
      "timestamp": "2026-06-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2708",
      "value": 1,
      "timestamp": "2026-06-22"
    },
    {
      "source": "Backtracking",
      "target": "Problem 2708",
      "value": 1,
      "timestamp": "2026-06-22"
    },
    {
      "source": "Greedy",
      "target": "Problem 2708",
      "value": 1,
      "timestamp": "2026-06-22"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2708",
      "value": 1,
      "timestamp": "2026-06-22"
    },
    {
      "source": "Sorting",
      "target": "Problem 2708",
      "value": 1,
      "timestamp": "2026-06-22"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2708",
      "value": 1,
      "timestamp": "2026-06-22"
    },
    {
      "source": "Array",
      "target": "Problem 2711",
      "value": 1,
      "timestamp": "2026-06-22"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2711",
      "value": 1,
      "timestamp": "2026-06-22"
    },
    {
      "source": "Matrix",
      "target": "Problem 2711",
      "value": 1,
      "timestamp": "2026-06-22"
    },
    {
      "source": "String",
      "target": "Problem 2712",
      "value": 1,
      "timestamp": "2026-06-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2712",
      "value": 1,
      "timestamp": "2026-06-22"
    },
    {
      "source": "Greedy",
      "target": "Problem 2712",
      "value": 1,
      "timestamp": "2026-06-22"
    },
    {
      "source": "Array",
      "target": "Problem 2713",
      "value": 1,
      "timestamp": "2026-06-23"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2713",
      "value": 1,
      "timestamp": "2026-06-23"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2713",
      "value": 1,
      "timestamp": "2026-06-23"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2713",
      "value": 1,
      "timestamp": "2026-06-23"
    },
    {
      "source": "Memoization",
      "target": "Problem 2713",
      "value": 1,
      "timestamp": "2026-06-23"
    },
    {
      "source": "Sorting",
      "target": "Problem 2713",
      "value": 1,
      "timestamp": "2026-06-23"
    },
    {
      "source": "Matrix",
      "target": "Problem 2713",
      "value": 1,
      "timestamp": "2026-06-23"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2713",
      "value": 1,
      "timestamp": "2026-06-23"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2716",
      "value": 1,
      "timestamp": "2026-06-23"
    },
    {
      "source": "String",
      "target": "Problem 2716",
      "value": 1,
      "timestamp": "2026-06-23"
    },
    {
      "source": "Array",
      "target": "Problem 2717",
      "value": 1,
      "timestamp": "2026-06-23"
    },
    {
      "source": "Simulation",
      "target": "Problem 2717",
      "value": 1,
      "timestamp": "2026-06-23"
    },
    {
      "source": "Array",
      "target": "Problem 2718",
      "value": 1,
      "timestamp": "2026-06-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2718",
      "value": 1,
      "timestamp": "2026-06-24"
    },
    {
      "source": "Math",
      "target": "Problem 2719",
      "value": 1,
      "timestamp": "2026-06-25"
    },
    {
      "source": "String",
      "target": "Problem 2719",
      "value": 1,
      "timestamp": "2026-06-25"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2719",
      "value": 1,
      "timestamp": "2026-06-25"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2729",
      "value": 1,
      "timestamp": "2026-06-28"
    },
    {
      "source": "Math",
      "target": "Problem 2729",
      "value": 1,
      "timestamp": "2026-06-28"
    },
    {
      "source": "String",
      "target": "Problem 2730",
      "value": 1,
      "timestamp": "2026-06-28"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2730",
      "value": 1,
      "timestamp": "2026-06-28"
    },
    {
      "source": "Array",
      "target": "Problem 2731",
      "value": 1,
      "timestamp": "2026-06-29"
    },
    {
      "source": "Brainteaser",
      "target": "Problem 2731",
      "value": 1,
      "timestamp": "2026-06-29"
    },
    {
      "source": "Sorting",
      "target": "Problem 2731",
      "value": 1,
      "timestamp": "2026-06-29"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2731",
      "value": 1,
      "timestamp": "2026-06-29"
    },
    {
      "source": "String",
      "target": "Problem 2734",
      "value": 1,
      "timestamp": "2026-06-29"
    },
    {
      "source": "Greedy",
      "target": "Problem 2734",
      "value": 1,
      "timestamp": "2026-06-29"
    },
    {
      "source": "Array",
      "target": "Problem 2733",
      "value": 1,
      "timestamp": "2026-06-29"
    },
    {
      "source": "Sorting",
      "target": "Problem 2733",
      "value": 1,
      "timestamp": "2026-06-29"
    },
    {
      "source": "Array",
      "target": "Problem 2732",
      "value": 1,
      "timestamp": "2026-06-30"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2732",
      "value": 1,
      "timestamp": "2026-06-30"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2732",
      "value": 1,
      "timestamp": "2026-06-30"
    },
    {
      "source": "Matrix",
      "target": "Problem 2732",
      "value": 1,
      "timestamp": "2026-06-30"
    },
    {
      "source": "Array",
      "target": "Problem 2735",
      "value": 1,
      "timestamp": "2026-06-30"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2735",
      "value": 1,
      "timestamp": "2026-06-30"
    },
    {
      "source": "Array",
      "target": "Problem 2736",
      "value": 1,
      "timestamp": "2026-07-01"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2736",
      "value": 1,
      "timestamp": "2026-07-01"
    },
    {
      "source": "Stack",
      "target": "Problem 2736",
      "value": 1,
      "timestamp": "2026-07-01"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 2736",
      "value": 1,
      "timestamp": "2026-07-01"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 2736",
      "value": 1,
      "timestamp": "2026-07-01"
    },
    {
      "source": "Sorting",
      "target": "Problem 2736",
      "value": 1,
      "timestamp": "2026-07-01"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 2736",
      "value": 1,
      "timestamp": "2026-07-01"
    },
    {
      "source": "Math",
      "target": "Problem 2739",
      "value": 1,
      "timestamp": "2026-07-01"
    },
    {
      "source": "Simulation",
      "target": "Problem 2739",
      "value": 1,
      "timestamp": "2026-07-01"
    },
    {
      "source": "Array",
      "target": "Problem 2741",
      "value": 1,
      "timestamp": "2026-07-02"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2741",
      "value": 1,
      "timestamp": "2026-07-02"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2741",
      "value": 1,
      "timestamp": "2026-07-02"
    },
    {
      "source": "Bitmask",
      "target": "Problem 2741",
      "value": 1,
      "timestamp": "2026-07-02"
    },
    {
      "source": "Array",
      "target": "Problem 2740",
      "value": 1,
      "timestamp": "2026-07-02"
    },
    {
      "source": "Sorting",
      "target": "Problem 2740",
      "value": 1,
      "timestamp": "2026-07-02"
    },
    {
      "source": "Array",
      "target": "Problem 2742",
      "value": 1,
      "timestamp": "2026-07-02"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2742",
      "value": 1,
      "timestamp": "2026-07-02"
    },
    {
      "source": "Math",
      "target": "Problem 2745",
      "value": 1,
      "timestamp": "2026-07-03"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2745",
      "value": 1,
      "timestamp": "2026-07-03"
    },
    {
      "source": "Greedy",
      "target": "Problem 2745",
      "value": 1,
      "timestamp": "2026-07-03"
    },
    {
      "source": "Brainteaser",
      "target": "Problem 2745",
      "value": 1,
      "timestamp": "2026-07-03"
    },
    {
      "source": "Array",
      "target": "Problem 2744",
      "value": 1,
      "timestamp": "2026-07-03"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2744",
      "value": 1,
      "timestamp": "2026-07-03"
    },
    {
      "source": "String",
      "target": "Problem 2744",
      "value": 1,
      "timestamp": "2026-07-03"
    },
    {
      "source": "Simulation",
      "target": "Problem 2744",
      "value": 1,
      "timestamp": "2026-07-03"
    },
    {
      "source": "Array",
      "target": "Problem 2746",
      "value": 1,
      "timestamp": "2026-07-04"
    },
    {
      "source": "String",
      "target": "Problem 2746",
      "value": 1,
      "timestamp": "2026-07-04"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2746",
      "value": 1,
      "timestamp": "2026-07-04"
    },
    {
      "source": "Array",
      "target": "Problem 2747",
      "value": 1,
      "timestamp": "2026-07-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2747",
      "value": 1,
      "timestamp": "2026-07-04"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2747",
      "value": 1,
      "timestamp": "2026-07-04"
    },
    {
      "source": "Sorting",
      "target": "Problem 2747",
      "value": 1,
      "timestamp": "2026-07-04"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2749",
      "value": 1,
      "timestamp": "2026-07-04"
    },
    {
      "source": "Brainteaser",
      "target": "Problem 2749",
      "value": 1,
      "timestamp": "2026-07-04"
    },
    {
      "source": "Array",
      "target": "Problem 2750",
      "value": 1,
      "timestamp": "2026-07-05"
    },
    {
      "source": "Math",
      "target": "Problem 2750",
      "value": 1,
      "timestamp": "2026-07-05"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2750",
      "value": 1,
      "timestamp": "2026-07-05"
    },
    {
      "source": "Array",
      "target": "Problem 2748",
      "value": 1,
      "timestamp": "2026-07-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2748",
      "value": 1,
      "timestamp": "2026-07-05"
    },
    {
      "source": "Math",
      "target": "Problem 2748",
      "value": 1,
      "timestamp": "2026-07-05"
    },
    {
      "source": "Counting",
      "target": "Problem 2748",
      "value": 1,
      "timestamp": "2026-07-05"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2748",
      "value": 1,
      "timestamp": "2026-07-05"
    },
    {
      "source": "Array",
      "target": "Problem 2751",
      "value": 1,
      "timestamp": "2026-07-06"
    },
    {
      "source": "Stack",
      "target": "Problem 2751",
      "value": 1,
      "timestamp": "2026-07-06"
    },
    {
      "source": "Sorting",
      "target": "Problem 2751",
      "value": 1,
      "timestamp": "2026-07-06"
    },
    {
      "source": "Simulation",
      "target": "Problem 2751",
      "value": 1,
      "timestamp": "2026-07-06"
    },
    {
      "source": "Array",
      "target": "Problem 2761",
      "value": 1,
      "timestamp": "2026-07-08"
    },
    {
      "source": "Math",
      "target": "Problem 2761",
      "value": 1,
      "timestamp": "2026-07-08"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2761",
      "value": 1,
      "timestamp": "2026-07-08"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2761",
      "value": 1,
      "timestamp": "2026-07-08"
    },
    {
      "source": "Array",
      "target": "Problem 2762",
      "value": 1,
      "timestamp": "2026-07-09"
    },
    {
      "source": "Queue",
      "target": "Problem 2762",
      "value": 1,
      "timestamp": "2026-07-09"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2762",
      "value": 1,
      "timestamp": "2026-07-09"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2762",
      "value": 1,
      "timestamp": "2026-07-09"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2762",
      "value": 1,
      "timestamp": "2026-07-09"
    },
    {
      "source": "Monotonic Queue",
      "target": "Problem 2762",
      "value": 1,
      "timestamp": "2026-07-09"
    },
    {
      "source": "Array",
      "target": "Problem 2760",
      "value": 1,
      "timestamp": "2026-07-09"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2760",
      "value": 1,
      "timestamp": "2026-07-09"
    },
    {
      "source": "Array",
      "target": "Problem 2765",
      "value": 1,
      "timestamp": "2026-07-09"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2765",
      "value": 1,
      "timestamp": "2026-07-09"
    },
    {
      "source": "Array",
      "target": "Problem 2766",
      "value": 1,
      "timestamp": "2026-07-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2766",
      "value": 1,
      "timestamp": "2026-07-10"
    },
    {
      "source": "Sorting",
      "target": "Problem 2766",
      "value": 1,
      "timestamp": "2026-07-10"
    },
    {
      "source": "Simulation",
      "target": "Problem 2766",
      "value": 1,
      "timestamp": "2026-07-10"
    },
    {
      "source": "Array",
      "target": "Problem 2763",
      "value": 1,
      "timestamp": "2026-07-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2763",
      "value": 1,
      "timestamp": "2026-07-10"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2763",
      "value": 1,
      "timestamp": "2026-07-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2767",
      "value": 1,
      "timestamp": "2026-07-11"
    },
    {
      "source": "String",
      "target": "Problem 2767",
      "value": 1,
      "timestamp": "2026-07-11"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2767",
      "value": 1,
      "timestamp": "2026-07-11"
    },
    {
      "source": "Backtracking",
      "target": "Problem 2767",
      "value": 1,
      "timestamp": "2026-07-11"
    },
    {
      "source": "Array",
      "target": "Problem 2768",
      "value": 1,
      "timestamp": "2026-07-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2768",
      "value": 1,
      "timestamp": "2026-07-11"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2768",
      "value": 1,
      "timestamp": "2026-07-11"
    },
    {
      "source": "Array",
      "target": "Problem 2770",
      "value": 1,
      "timestamp": "2026-07-11"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2770",
      "value": 1,
      "timestamp": "2026-07-11"
    },
    {
      "source": "Math",
      "target": "Problem 2769",
      "value": 1,
      "timestamp": "2026-07-12"
    },
    {
      "source": "Array",
      "target": "Problem 2772",
      "value": 1,
      "timestamp": "2026-07-12"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2772",
      "value": 1,
      "timestamp": "2026-07-12"
    },
    {
      "source": "Array",
      "target": "Problem 2771",
      "value": 1,
      "timestamp": "2026-07-13"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2771",
      "value": 1,
      "timestamp": "2026-07-13"
    },
    {
      "source": "Array",
      "target": "Problem 2778",
      "value": 1,
      "timestamp": "2026-07-14"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2778",
      "value": 1,
      "timestamp": "2026-07-14"
    },
    {
      "source": "Array",
      "target": "Problem 2779",
      "value": 1,
      "timestamp": "2026-07-15"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2779",
      "value": 1,
      "timestamp": "2026-07-15"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2779",
      "value": 1,
      "timestamp": "2026-07-15"
    },
    {
      "source": "Sorting",
      "target": "Problem 2779",
      "value": 1,
      "timestamp": "2026-07-15"
    },
    {
      "source": "Array",
      "target": "Problem 2781",
      "value": 1,
      "timestamp": "2026-07-15"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2781",
      "value": 1,
      "timestamp": "2026-07-15"
    },
    {
      "source": "String",
      "target": "Problem 2781",
      "value": 1,
      "timestamp": "2026-07-15"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2781",
      "value": 1,
      "timestamp": "2026-07-15"
    },
    {
      "source": "Array",
      "target": "Problem 2780",
      "value": 1,
      "timestamp": "2026-07-16"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2780",
      "value": 1,
      "timestamp": "2026-07-16"
    },
    {
      "source": "Sorting",
      "target": "Problem 2780",
      "value": 1,
      "timestamp": "2026-07-16"
    },
    {
      "source": "String",
      "target": "Problem 2785",
      "value": 1,
      "timestamp": "2026-07-16"
    },
    {
      "source": "Sorting",
      "target": "Problem 2785",
      "value": 1,
      "timestamp": "2026-07-16"
    },
    {
      "source": "Array",
      "target": "Problem 2784",
      "value": 1,
      "timestamp": "2026-07-17"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2784",
      "value": 1,
      "timestamp": "2026-07-17"
    },
    {
      "source": "Sorting",
      "target": "Problem 2784",
      "value": 1,
      "timestamp": "2026-07-17"
    },
    {
      "source": "Array",
      "target": "Problem 2786",
      "value": 1,
      "timestamp": "2026-07-17"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2786",
      "value": 1,
      "timestamp": "2026-07-17"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2787",
      "value": 1,
      "timestamp": "2026-07-17"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2791",
      "value": 1,
      "timestamp": "2026-07-18"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2791",
      "value": 1,
      "timestamp": "2026-07-18"
    },
    {
      "source": "Tree",
      "target": "Problem 2791",
      "value": 1,
      "timestamp": "2026-07-18"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2791",
      "value": 1,
      "timestamp": "2026-07-18"
    },
    {
      "source": "Bitmask",
      "target": "Problem 2791",
      "value": 1,
      "timestamp": "2026-07-18"
    },
    {
      "source": "Array",
      "target": "Problem 2789",
      "value": 1,
      "timestamp": "2026-07-18"
    },
    {
      "source": "Greedy",
      "target": "Problem 2789",
      "value": 1,
      "timestamp": "2026-07-18"
    },
    {
      "source": "Array",
      "target": "Problem 2790",
      "value": 1,
      "timestamp": "2026-07-19"
    },
    {
      "source": "Math",
      "target": "Problem 2790",
      "value": 1,
      "timestamp": "2026-07-19"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2790",
      "value": 1,
      "timestamp": "2026-07-19"
    },
    {
      "source": "Greedy",
      "target": "Problem 2790",
      "value": 1,
      "timestamp": "2026-07-19"
    },
    {
      "source": "Sorting",
      "target": "Problem 2790",
      "value": 1,
      "timestamp": "2026-07-19"
    },
    {
      "source": "Array",
      "target": "Problem 2788",
      "value": 1,
      "timestamp": "2026-07-19"
    },
    {
      "source": "String",
      "target": "Problem 2788",
      "value": 1,
      "timestamp": "2026-07-19"
    },
    {
      "source": "String",
      "target": "Problem 2801",
      "value": 1,
      "timestamp": "2026-07-21"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2801",
      "value": 1,
      "timestamp": "2026-07-21"
    },
    {
      "source": "Array",
      "target": "Problem 2799",
      "value": 1,
      "timestamp": "2026-07-22"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2799",
      "value": 1,
      "timestamp": "2026-07-22"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2799",
      "value": 1,
      "timestamp": "2026-07-22"
    },
    {
      "source": "Array",
      "target": "Problem 2798",
      "value": 1,
      "timestamp": "2026-07-22"
    },
    {
      "source": "String",
      "target": "Problem 2800",
      "value": 1,
      "timestamp": "2026-07-22"
    },
    {
      "source": "Greedy",
      "target": "Problem 2800",
      "value": 1,
      "timestamp": "2026-07-22"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2800",
      "value": 1,
      "timestamp": "2026-07-22"
    },
    {
      "source": "String",
      "target": "Problem 2810",
      "value": 1,
      "timestamp": "2026-07-24"
    },
    {
      "source": "Simulation",
      "target": "Problem 2810",
      "value": 1,
      "timestamp": "2026-07-24"
    },
    {
      "source": "Array",
      "target": "Problem 2808",
      "value": 1,
      "timestamp": "2026-07-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2808",
      "value": 1,
      "timestamp": "2026-07-24"
    },
    {
      "source": "Linked List",
      "target": "Problem 2807",
      "value": 1,
      "timestamp": "2026-07-24"
    },
    {
      "source": "Math",
      "target": "Problem 2807",
      "value": 1,
      "timestamp": "2026-07-24"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2807",
      "value": 1,
      "timestamp": "2026-07-24"
    },
    {
      "source": "Array",
      "target": "Problem 2809",
      "value": 1,
      "timestamp": "2026-07-25"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2809",
      "value": 1,
      "timestamp": "2026-07-25"
    },
    {
      "source": "Sorting",
      "target": "Problem 2809",
      "value": 1,
      "timestamp": "2026-07-25"
    },
    {
      "source": "Math",
      "target": "Problem 2806",
      "value": 1,
      "timestamp": "2026-07-25"
    },
    {
      "source": "Array",
      "target": "Problem 2811",
      "value": 1,
      "timestamp": "2026-07-25"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2811",
      "value": 1,
      "timestamp": "2026-07-25"
    },
    {
      "source": "Greedy",
      "target": "Problem 2811",
      "value": 1,
      "timestamp": "2026-07-25"
    },
    {
      "source": "Array",
      "target": "Problem 2813",
      "value": 1,
      "timestamp": "2026-07-26"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2813",
      "value": 1,
      "timestamp": "2026-07-26"
    },
    {
      "source": "Stack",
      "target": "Problem 2813",
      "value": 1,
      "timestamp": "2026-07-26"
    },
    {
      "source": "Greedy",
      "target": "Problem 2813",
      "value": 1,
      "timestamp": "2026-07-26"
    },
    {
      "source": "Sorting",
      "target": "Problem 2813",
      "value": 1,
      "timestamp": "2026-07-26"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2813",
      "value": 1,
      "timestamp": "2026-07-26"
    },
    {
      "source": "Array",
      "target": "Problem 2812",
      "value": 1,
      "timestamp": "2026-07-26"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2812",
      "value": 1,
      "timestamp": "2026-07-26"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2812",
      "value": 1,
      "timestamp": "2026-07-26"
    },
    {
      "source": "Union Find",
      "target": "Problem 2812",
      "value": 1,
      "timestamp": "2026-07-26"
    },
    {
      "source": "Matrix",
      "target": "Problem 2812",
      "value": 1,
      "timestamp": "2026-07-26"
    },
    {
      "source": "Array",
      "target": "Problem 2815",
      "value": 1,
      "timestamp": "2026-07-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2815",
      "value": 1,
      "timestamp": "2026-07-27"
    },
    {
      "source": "Array",
      "target": "Problem 2818",
      "value": 1,
      "timestamp": "2026-07-27"
    },
    {
      "source": "Math",
      "target": "Problem 2818",
      "value": 1,
      "timestamp": "2026-07-27"
    },
    {
      "source": "Stack",
      "target": "Problem 2818",
      "value": 1,
      "timestamp": "2026-07-27"
    },
    {
      "source": "Greedy",
      "target": "Problem 2818",
      "value": 1,
      "timestamp": "2026-07-27"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 2818",
      "value": 1,
      "timestamp": "2026-07-27"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2818",
      "value": 1,
      "timestamp": "2026-07-27"
    },
    {
      "source": "Linked List",
      "target": "Problem 2816",
      "value": 1,
      "timestamp": "2026-07-28"
    },
    {
      "source": "Math",
      "target": "Problem 2816",
      "value": 1,
      "timestamp": "2026-07-28"
    },
    {
      "source": "Stack",
      "target": "Problem 2816",
      "value": 1,
      "timestamp": "2026-07-28"
    },
    {
      "source": "Array",
      "target": "Problem 2817",
      "value": 1,
      "timestamp": "2026-07-28"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2817",
      "value": 1,
      "timestamp": "2026-07-28"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 2817",
      "value": 1,
      "timestamp": "2026-07-28"
    },
    {
      "source": "Math",
      "target": "Problem 2827",
      "value": 1,
      "timestamp": "2026-07-30"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2827",
      "value": 1,
      "timestamp": "2026-07-30"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2825",
      "value": 1,
      "timestamp": "2026-07-30"
    },
    {
      "source": "String",
      "target": "Problem 2825",
      "value": 1,
      "timestamp": "2026-07-30"
    },
    {
      "source": "Array",
      "target": "Problem 2826",
      "value": 1,
      "timestamp": "2026-07-30"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2826",
      "value": 1,
      "timestamp": "2026-07-30"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2826",
      "value": 1,
      "timestamp": "2026-07-30"
    },
    {
      "source": "Array",
      "target": "Problem 2824",
      "value": 1,
      "timestamp": "2026-07-31"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2824",
      "value": 1,
      "timestamp": "2026-07-31"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2824",
      "value": 1,
      "timestamp": "2026-07-31"
    },
    {
      "source": "Sorting",
      "target": "Problem 2824",
      "value": 1,
      "timestamp": "2026-07-31"
    },
    {
      "source": "Array",
      "target": "Problem 2828",
      "value": 1,
      "timestamp": "2026-07-31"
    },
    {
      "source": "String",
      "target": "Problem 2828",
      "value": 1,
      "timestamp": "2026-07-31"
    },
    {
      "source": "Math",
      "target": "Problem 2829",
      "value": 1,
      "timestamp": "2026-07-31"
    },
    {
      "source": "Greedy",
      "target": "Problem 2829",
      "value": 1,
      "timestamp": "2026-07-31"
    },
    {
      "source": "Array",
      "target": "Problem 2830",
      "value": 1,
      "timestamp": "2026-08-01"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2830",
      "value": 1,
      "timestamp": "2026-08-01"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2830",
      "value": 1,
      "timestamp": "2026-08-01"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2830",
      "value": 1,
      "timestamp": "2026-08-01"
    },
    {
      "source": "Sorting",
      "target": "Problem 2830",
      "value": 1,
      "timestamp": "2026-08-01"
    },
    {
      "source": "Array",
      "target": "Problem 2831",
      "value": 1,
      "timestamp": "2026-08-01"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2831",
      "value": 1,
      "timestamp": "2026-08-01"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2831",
      "value": 1,
      "timestamp": "2026-08-01"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2831",
      "value": 1,
      "timestamp": "2026-08-01"
    },
    {
      "source": "Array",
      "target": "Problem 2835",
      "value": 1,
      "timestamp": "2026-08-02"
    },
    {
      "source": "Greedy",
      "target": "Problem 2835",
      "value": 1,
      "timestamp": "2026-08-02"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2835",
      "value": 1,
      "timestamp": "2026-08-02"
    },
    {
      "source": "String",
      "target": "Problem 2833",
      "value": 1,
      "timestamp": "2026-08-02"
    },
    {
      "source": "Counting",
      "target": "Problem 2833",
      "value": 1,
      "timestamp": "2026-08-02"
    },
    {
      "source": "Array",
      "target": "Problem 2836",
      "value": 1,
      "timestamp": "2026-08-02"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2836",
      "value": 1,
      "timestamp": "2026-08-02"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2836",
      "value": 1,
      "timestamp": "2026-08-02"
    },
    {
      "source": "Math",
      "target": "Problem 2834",
      "value": 1,
      "timestamp": "2026-08-03"
    },
    {
      "source": "Greedy",
      "target": "Problem 2834",
      "value": 1,
      "timestamp": "2026-08-03"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2840",
      "value": 1,
      "timestamp": "2026-08-04"
    },
    {
      "source": "String",
      "target": "Problem 2840",
      "value": 1,
      "timestamp": "2026-08-04"
    },
    {
      "source": "Sorting",
      "target": "Problem 2840",
      "value": 1,
      "timestamp": "2026-08-04"
    },
    {
      "source": "String",
      "target": "Problem 2839",
      "value": 1,
      "timestamp": "2026-08-04"
    },
    {
      "source": "Array",
      "target": "Problem 2841",
      "value": 1,
      "timestamp": "2026-08-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2841",
      "value": 1,
      "timestamp": "2026-08-04"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2841",
      "value": 1,
      "timestamp": "2026-08-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2842",
      "value": 1,
      "timestamp": "2026-08-05"
    },
    {
      "source": "Math",
      "target": "Problem 2842",
      "value": 1,
      "timestamp": "2026-08-05"
    },
    {
      "source": "String",
      "target": "Problem 2842",
      "value": 1,
      "timestamp": "2026-08-05"
    },
    {
      "source": "Greedy",
      "target": "Problem 2842",
      "value": 1,
      "timestamp": "2026-08-05"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 2842",
      "value": 1,
      "timestamp": "2026-08-05"
    },
    {
      "source": "Math",
      "target": "Problem 2843",
      "value": 1,
      "timestamp": "2026-08-05"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2843",
      "value": 1,
      "timestamp": "2026-08-05"
    },
    {
      "source": "Math",
      "target": "Problem 2844",
      "value": 1,
      "timestamp": "2026-08-05"
    },
    {
      "source": "String",
      "target": "Problem 2844",
      "value": 1,
      "timestamp": "2026-08-05"
    },
    {
      "source": "Greedy",
      "target": "Problem 2844",
      "value": 1,
      "timestamp": "2026-08-05"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2844",
      "value": 1,
      "timestamp": "2026-08-05"
    },
    {
      "source": "Array",
      "target": "Problem 2845",
      "value": 1,
      "timestamp": "2026-08-06"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2845",
      "value": 1,
      "timestamp": "2026-08-06"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2845",
      "value": 1,
      "timestamp": "2026-08-06"
    },
    {
      "source": "Array",
      "target": "Problem 2846",
      "value": 1,
      "timestamp": "2026-08-06"
    },
    {
      "source": "Tree",
      "target": "Problem 2846",
      "value": 1,
      "timestamp": "2026-08-06"
    },
    {
      "source": "Graph",
      "target": "Problem 2846",
      "value": 1,
      "timestamp": "2026-08-06"
    },
    {
      "source": "Strongly Connected Component",
      "target": "Problem 2846",
      "value": 1,
      "timestamp": "2026-08-06"
    },
    {
      "source": "Math",
      "target": "Problem 2849",
      "value": 1,
      "timestamp": "2026-08-07"
    },
    {
      "source": "Array",
      "target": "Problem 2848",
      "value": 1,
      "timestamp": "2026-08-07"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2848",
      "value": 1,
      "timestamp": "2026-08-07"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2848",
      "value": 1,
      "timestamp": "2026-08-07"
    },
    {
      "source": "Array",
      "target": "Problem 2850",
      "value": 1,
      "timestamp": "2026-08-07"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2850",
      "value": 1,
      "timestamp": "2026-08-07"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2850",
      "value": 1,
      "timestamp": "2026-08-07"
    },
    {
      "source": "Matrix",
      "target": "Problem 2850",
      "value": 1,
      "timestamp": "2026-08-07"
    },
    {
      "source": "Math",
      "target": "Problem 2851",
      "value": 1,
      "timestamp": "2026-08-08"
    },
    {
      "source": "String",
      "target": "Problem 2851",
      "value": 1,
      "timestamp": "2026-08-08"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2851",
      "value": 1,
      "timestamp": "2026-08-08"
    },
    {
      "source": "String Matching",
      "target": "Problem 2851",
      "value": 1,
      "timestamp": "2026-08-08"
    },
    {
      "source": "Array",
      "target": "Problem 2855",
      "value": 1,
      "timestamp": "2026-08-09"
    },
    {
      "source": "Array",
      "target": "Problem 2856",
      "value": 1,
      "timestamp": "2026-08-09"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2856",
      "value": 1,
      "timestamp": "2026-08-09"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2856",
      "value": 1,
      "timestamp": "2026-08-09"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2856",
      "value": 1,
      "timestamp": "2026-08-09"
    },
    {
      "source": "Greedy",
      "target": "Problem 2856",
      "value": 1,
      "timestamp": "2026-08-09"
    },
    {
      "source": "Counting",
      "target": "Problem 2856",
      "value": 1,
      "timestamp": "2026-08-09"
    },
    {
      "source": "Array",
      "target": "Problem 2857",
      "value": 1,
      "timestamp": "2026-08-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2857",
      "value": 1,
      "timestamp": "2026-08-10"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2857",
      "value": 1,
      "timestamp": "2026-08-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2858",
      "value": 1,
      "timestamp": "2026-08-10"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2858",
      "value": 1,
      "timestamp": "2026-08-10"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2858",
      "value": 1,
      "timestamp": "2026-08-10"
    },
    {
      "source": "Graph",
      "target": "Problem 2858",
      "value": 1,
      "timestamp": "2026-08-10"
    },
    {
      "source": "Array",
      "target": "Problem 2859",
      "value": 1,
      "timestamp": "2026-08-10"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2859",
      "value": 1,
      "timestamp": "2026-08-10"
    },
    {
      "source": "Array",
      "target": "Problem 2860",
      "value": 1,
      "timestamp": "2026-08-11"
    },
    {
      "source": "Sorting",
      "target": "Problem 2860",
      "value": 1,
      "timestamp": "2026-08-11"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2860",
      "value": 1,
      "timestamp": "2026-08-11"
    },
    {
      "source": "Array",
      "target": "Problem 2861",
      "value": 1,
      "timestamp": "2026-08-11"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2861",
      "value": 1,
      "timestamp": "2026-08-11"
    },
    {
      "source": "Array",
      "target": "Problem 2862",
      "value": 1,
      "timestamp": "2026-08-11"
    },
    {
      "source": "Math",
      "target": "Problem 2862",
      "value": 1,
      "timestamp": "2026-08-11"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2862",
      "value": 1,
      "timestamp": "2026-08-11"
    },
    {
      "source": "Array",
      "target": "Problem 2865",
      "value": 1,
      "timestamp": "2026-08-12"
    },
    {
      "source": "Stack",
      "target": "Problem 2865",
      "value": 1,
      "timestamp": "2026-08-12"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 2865",
      "value": 1,
      "timestamp": "2026-08-12"
    },
    {
      "source": "Math",
      "target": "Problem 2864",
      "value": 1,
      "timestamp": "2026-08-12"
    },
    {
      "source": "String",
      "target": "Problem 2864",
      "value": 1,
      "timestamp": "2026-08-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 2864",
      "value": 1,
      "timestamp": "2026-08-12"
    },
    {
      "source": "Array",
      "target": "Problem 2866",
      "value": 1,
      "timestamp": "2026-08-13"
    },
    {
      "source": "Stack",
      "target": "Problem 2866",
      "value": 1,
      "timestamp": "2026-08-13"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 2866",
      "value": 1,
      "timestamp": "2026-08-13"
    },
    {
      "source": "Math",
      "target": "Problem 2867",
      "value": 1,
      "timestamp": "2026-08-13"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2867",
      "value": 1,
      "timestamp": "2026-08-13"
    },
    {
      "source": "Tree",
      "target": "Problem 2867",
      "value": 1,
      "timestamp": "2026-08-13"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2867",
      "value": 1,
      "timestamp": "2026-08-13"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2867",
      "value": 1,
      "timestamp": "2026-08-13"
    },
    {
      "source": "Array",
      "target": "Problem 2871",
      "value": 1,
      "timestamp": "2026-08-14"
    },
    {
      "source": "Greedy",
      "target": "Problem 2871",
      "value": 1,
      "timestamp": "2026-08-14"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2871",
      "value": 1,
      "timestamp": "2026-08-14"
    },
    {
      "source": "Tree",
      "target": "Problem 2872",
      "value": 1,
      "timestamp": "2026-08-14"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2872",
      "value": 1,
      "timestamp": "2026-08-14"
    },
    {
      "source": "Array",
      "target": "Problem 2870",
      "value": 1,
      "timestamp": "2026-08-14"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2870",
      "value": 1,
      "timestamp": "2026-08-14"
    },
    {
      "source": "Greedy",
      "target": "Problem 2870",
      "value": 1,
      "timestamp": "2026-08-14"
    },
    {
      "source": "Counting",
      "target": "Problem 2870",
      "value": 1,
      "timestamp": "2026-08-14"
    },
    {
      "source": "Array",
      "target": "Problem 2869",
      "value": 1,
      "timestamp": "2026-08-15"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2869",
      "value": 1,
      "timestamp": "2026-08-15"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2869",
      "value": 1,
      "timestamp": "2026-08-15"
    },
    {
      "source": "Array",
      "target": "Problem 2873",
      "value": 1,
      "timestamp": "2026-08-15"
    },
    {
      "source": "Array",
      "target": "Problem 2874",
      "value": 1,
      "timestamp": "2026-08-15"
    },
    {
      "source": "Array",
      "target": "Problem 2875",
      "value": 1,
      "timestamp": "2026-08-16"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2875",
      "value": 1,
      "timestamp": "2026-08-16"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2875",
      "value": 1,
      "timestamp": "2026-08-16"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2875",
      "value": 1,
      "timestamp": "2026-08-16"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2876",
      "value": 1,
      "timestamp": "2026-08-16"
    },
    {
      "source": "Graph",
      "target": "Problem 2876",
      "value": 1,
      "timestamp": "2026-08-16"
    },
    {
      "source": "Memoization",
      "target": "Problem 2876",
      "value": 1,
      "timestamp": "2026-08-16"
    },
    {
      "source": "String",
      "target": "Problem 2896",
      "value": 1,
      "timestamp": "2026-08-21"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2896",
      "value": 1,
      "timestamp": "2026-08-21"
    },
    {
      "source": "Array",
      "target": "Problem 2895",
      "value": 1,
      "timestamp": "2026-08-22"
    },
    {
      "source": "Greedy",
      "target": "Problem 2895",
      "value": 1,
      "timestamp": "2026-08-22"
    },
    {
      "source": "Sorting",
      "target": "Problem 2895",
      "value": 1,
      "timestamp": "2026-08-22"
    },
    {
      "source": "Array",
      "target": "Problem 2899",
      "value": 1,
      "timestamp": "2026-08-22"
    },
    {
      "source": "Simulation",
      "target": "Problem 2899",
      "value": 1,
      "timestamp": "2026-08-22"
    },
    {
      "source": "Array",
      "target": "Problem 2901",
      "value": 1,
      "timestamp": "2026-08-22"
    },
    {
      "source": "String",
      "target": "Problem 2901",
      "value": 1,
      "timestamp": "2026-08-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2901",
      "value": 1,
      "timestamp": "2026-08-22"
    },
    {
      "source": "Math",
      "target": "Problem 2894",
      "value": 1,
      "timestamp": "2026-08-23"
    },
    {
      "source": "Array",
      "target": "Problem 2902",
      "value": 1,
      "timestamp": "2026-08-23"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2902",
      "value": 1,
      "timestamp": "2026-08-23"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2902",
      "value": 1,
      "timestamp": "2026-08-23"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2902",
      "value": 1,
      "timestamp": "2026-08-23"
    },
    {
      "source": "Array",
      "target": "Problem 2900",
      "value": 1,
      "timestamp": "2026-08-24"
    },
    {
      "source": "String",
      "target": "Problem 2900",
      "value": 1,
      "timestamp": "2026-08-24"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2900",
      "value": 1,
      "timestamp": "2026-08-24"
    },
    {
      "source": "Greedy",
      "target": "Problem 2900",
      "value": 1,
      "timestamp": "2026-08-24"
    },
    {
      "source": "Array",
      "target": "Problem 2897",
      "value": 1,
      "timestamp": "2026-08-25"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2897",
      "value": 1,
      "timestamp": "2026-08-25"
    },
    {
      "source": "Greedy",
      "target": "Problem 2897",
      "value": 1,
      "timestamp": "2026-08-25"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2897",
      "value": 1,
      "timestamp": "2026-08-25"
    },
    {
      "source": "Array",
      "target": "Problem 2903",
      "value": 1,
      "timestamp": "2026-08-25"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2903",
      "value": 1,
      "timestamp": "2026-08-25"
    },
    {
      "source": "String",
      "target": "Problem 2904",
      "value": 1,
      "timestamp": "2026-08-25"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2904",
      "value": 1,
      "timestamp": "2026-08-25"
    },
    {
      "source": "Array",
      "target": "Problem 2905",
      "value": 1,
      "timestamp": "2026-08-26"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2905",
      "value": 1,
      "timestamp": "2026-08-26"
    },
    {
      "source": "Array",
      "target": "Problem 2910",
      "value": 1,
      "timestamp": "2026-08-26"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2910",
      "value": 1,
      "timestamp": "2026-08-26"
    },
    {
      "source": "Greedy",
      "target": "Problem 2910",
      "value": 1,
      "timestamp": "2026-08-26"
    },
    {
      "source": "Array",
      "target": "Problem 2908",
      "value": 1,
      "timestamp": "2026-08-26"
    },
    {
      "source": "Array",
      "target": "Problem 2906",
      "value": 1,
      "timestamp": "2026-08-27"
    },
    {
      "source": "Matrix",
      "target": "Problem 2906",
      "value": 1,
      "timestamp": "2026-08-27"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2906",
      "value": 1,
      "timestamp": "2026-08-27"
    },
    {
      "source": "Array",
      "target": "Problem 2909",
      "value": 1,
      "timestamp": "2026-08-27"
    },
    {
      "source": "Array",
      "target": "Problem 2913",
      "value": 1,
      "timestamp": "2026-08-28"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2913",
      "value": 1,
      "timestamp": "2026-08-28"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2911",
      "value": 1,
      "timestamp": "2026-08-28"
    },
    {
      "source": "String",
      "target": "Problem 2911",
      "value": 1,
      "timestamp": "2026-08-28"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2911",
      "value": 1,
      "timestamp": "2026-08-28"
    },
    {
      "source": "String",
      "target": "Problem 2914",
      "value": 1,
      "timestamp": "2026-08-29"
    },
    {
      "source": "Array",
      "target": "Problem 2915",
      "value": 1,
      "timestamp": "2026-08-29"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2915",
      "value": 1,
      "timestamp": "2026-08-29"
    },
    {
      "source": "Array",
      "target": "Problem 2916",
      "value": 1,
      "timestamp": "2026-08-29"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2916",
      "value": 1,
      "timestamp": "2026-08-29"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 2916",
      "value": 1,
      "timestamp": "2026-08-29"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 2916",
      "value": 1,
      "timestamp": "2026-08-29"
    },
    {
      "source": "Array",
      "target": "Problem 2920",
      "value": 1,
      "timestamp": "2026-08-30"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2920",
      "value": 1,
      "timestamp": "2026-08-30"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2920",
      "value": 1,
      "timestamp": "2026-08-30"
    },
    {
      "source": "Tree",
      "target": "Problem 2920",
      "value": 1,
      "timestamp": "2026-08-30"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2920",
      "value": 1,
      "timestamp": "2026-08-30"
    },
    {
      "source": "Array",
      "target": "Problem 2919",
      "value": 1,
      "timestamp": "2026-08-30"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2919",
      "value": 1,
      "timestamp": "2026-08-30"
    },
    {
      "source": "Array",
      "target": "Problem 2918",
      "value": 1,
      "timestamp": "2026-08-31"
    },
    {
      "source": "Greedy",
      "target": "Problem 2918",
      "value": 1,
      "timestamp": "2026-08-31"
    },
    {
      "source": "Array",
      "target": "Problem 2923",
      "value": 1,
      "timestamp": "2026-08-31"
    },
    {
      "source": "Matrix",
      "target": "Problem 2923",
      "value": 1,
      "timestamp": "2026-08-31"
    },
    {
      "source": "Array",
      "target": "Problem 2926",
      "value": 1,
      "timestamp": "2026-09-01"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2926",
      "value": 1,
      "timestamp": "2026-09-01"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2926",
      "value": 1,
      "timestamp": "2026-09-01"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 2926",
      "value": 1,
      "timestamp": "2026-09-01"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 2926",
      "value": 1,
      "timestamp": "2026-09-01"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2925",
      "value": 1,
      "timestamp": "2026-09-01"
    },
    {
      "source": "Tree",
      "target": "Problem 2925",
      "value": 1,
      "timestamp": "2026-09-01"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2925",
      "value": 1,
      "timestamp": "2026-09-01"
    },
    {
      "source": "Graph",
      "target": "Problem 2924",
      "value": 1,
      "timestamp": "2026-09-01"
    },
    {
      "source": "Math",
      "target": "Problem 2929",
      "value": 1,
      "timestamp": "2026-09-02"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 2929",
      "value": 1,
      "timestamp": "2026-09-02"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2929",
      "value": 1,
      "timestamp": "2026-09-02"
    },
    {
      "source": "Array",
      "target": "Problem 2931",
      "value": 1,
      "timestamp": "2026-09-02"
    },
    {
      "source": "Greedy",
      "target": "Problem 2931",
      "value": 1,
      "timestamp": "2026-09-02"
    },
    {
      "source": "Sorting",
      "target": "Problem 2931",
      "value": 1,
      "timestamp": "2026-09-02"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2931",
      "value": 1,
      "timestamp": "2026-09-02"
    },
    {
      "source": "Matrix",
      "target": "Problem 2931",
      "value": 1,
      "timestamp": "2026-09-02"
    },
    {
      "source": "Math",
      "target": "Problem 2928",
      "value": 1,
      "timestamp": "2026-09-03"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 2928",
      "value": 1,
      "timestamp": "2026-09-03"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2928",
      "value": 1,
      "timestamp": "2026-09-03"
    },
    {
      "source": "Array",
      "target": "Problem 2932",
      "value": 1,
      "timestamp": "2026-09-03"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2932",
      "value": 1,
      "timestamp": "2026-09-03"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2932",
      "value": 1,
      "timestamp": "2026-09-03"
    },
    {
      "source": "Trie",
      "target": "Problem 2932",
      "value": 1,
      "timestamp": "2026-09-03"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2932",
      "value": 1,
      "timestamp": "2026-09-03"
    },
    {
      "source": "Array",
      "target": "Problem 2935",
      "value": 1,
      "timestamp": "2026-09-03"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2935",
      "value": 1,
      "timestamp": "2026-09-03"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2935",
      "value": 1,
      "timestamp": "2026-09-03"
    },
    {
      "source": "Trie",
      "target": "Problem 2935",
      "value": 1,
      "timestamp": "2026-09-03"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2935",
      "value": 1,
      "timestamp": "2026-09-03"
    },
    {
      "source": "Array",
      "target": "Problem 2933",
      "value": 1,
      "timestamp": "2026-09-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2933",
      "value": 1,
      "timestamp": "2026-09-04"
    },
    {
      "source": "String",
      "target": "Problem 2933",
      "value": 1,
      "timestamp": "2026-09-04"
    },
    {
      "source": "Sorting",
      "target": "Problem 2933",
      "value": 1,
      "timestamp": "2026-09-04"
    },
    {
      "source": "Array",
      "target": "Problem 2934",
      "value": 1,
      "timestamp": "2026-09-04"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2934",
      "value": 1,
      "timestamp": "2026-09-04"
    },
    {
      "source": "Array",
      "target": "Problem 2917",
      "value": 1,
      "timestamp": "2026-09-05"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2917",
      "value": 1,
      "timestamp": "2026-09-05"
    },
    {
      "source": "Math",
      "target": "Problem 2930",
      "value": 1,
      "timestamp": "2026-09-05"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2930",
      "value": 1,
      "timestamp": "2026-09-05"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 2930",
      "value": 1,
      "timestamp": "2026-09-05"
    },
    {
      "source": "String",
      "target": "Problem 2937",
      "value": 1,
      "timestamp": "2026-09-05"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2938",
      "value": 1,
      "timestamp": "2026-09-06"
    },
    {
      "source": "String",
      "target": "Problem 2938",
      "value": 1,
      "timestamp": "2026-09-06"
    },
    {
      "source": "Greedy",
      "target": "Problem 2938",
      "value": 1,
      "timestamp": "2026-09-06"
    },
    {
      "source": "Math",
      "target": "Problem 2939",
      "value": 1,
      "timestamp": "2026-09-06"
    },
    {
      "source": "Greedy",
      "target": "Problem 2939",
      "value": 1,
      "timestamp": "2026-09-06"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2939",
      "value": 1,
      "timestamp": "2026-09-06"
    },
    {
      "source": "Array",
      "target": "Problem 2946",
      "value": 1,
      "timestamp": "2026-09-07"
    },
    {
      "source": "Math",
      "target": "Problem 2946",
      "value": 1,
      "timestamp": "2026-09-07"
    },
    {
      "source": "Matrix",
      "target": "Problem 2946",
      "value": 1,
      "timestamp": "2026-09-07"
    },
    {
      "source": "Simulation",
      "target": "Problem 2946",
      "value": 1,
      "timestamp": "2026-09-07"
    },
    {
      "source": "Array",
      "target": "Problem 2945",
      "value": 1,
      "timestamp": "2026-09-07"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2945",
      "value": 1,
      "timestamp": "2026-09-07"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2945",
      "value": 1,
      "timestamp": "2026-09-07"
    },
    {
      "source": "Stack",
      "target": "Problem 2945",
      "value": 1,
      "timestamp": "2026-09-07"
    },
    {
      "source": "Queue",
      "target": "Problem 2945",
      "value": 1,
      "timestamp": "2026-09-07"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 2945",
      "value": 1,
      "timestamp": "2026-09-07"
    },
    {
      "source": "Monotonic Queue",
      "target": "Problem 2945",
      "value": 1,
      "timestamp": "2026-09-07"
    },
    {
      "source": "Array",
      "target": "Problem 2944",
      "value": 1,
      "timestamp": "2026-09-07"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2944",
      "value": 1,
      "timestamp": "2026-09-07"
    },
    {
      "source": "Queue",
      "target": "Problem 2944",
      "value": 1,
      "timestamp": "2026-09-07"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2944",
      "value": 1,
      "timestamp": "2026-09-07"
    },
    {
      "source": "Monotonic Queue",
      "target": "Problem 2944",
      "value": 1,
      "timestamp": "2026-09-07"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2947",
      "value": 1,
      "timestamp": "2026-09-08"
    },
    {
      "source": "Math",
      "target": "Problem 2947",
      "value": 1,
      "timestamp": "2026-09-08"
    },
    {
      "source": "String",
      "target": "Problem 2947",
      "value": 1,
      "timestamp": "2026-09-08"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2947",
      "value": 1,
      "timestamp": "2026-09-08"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2947",
      "value": 1,
      "timestamp": "2026-09-08"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2947",
      "value": 1,
      "timestamp": "2026-09-08"
    },
    {
      "source": "Array",
      "target": "Problem 2940",
      "value": 1,
      "timestamp": "2026-09-08"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2940",
      "value": 1,
      "timestamp": "2026-09-08"
    },
    {
      "source": "Stack",
      "target": "Problem 2940",
      "value": 1,
      "timestamp": "2026-09-08"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 2940",
      "value": 1,
      "timestamp": "2026-09-08"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 2940",
      "value": 1,
      "timestamp": "2026-09-08"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2940",
      "value": 1,
      "timestamp": "2026-09-08"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 2940",
      "value": 1,
      "timestamp": "2026-09-08"
    },
    {
      "source": "Array",
      "target": "Problem 2942",
      "value": 1,
      "timestamp": "2026-09-08"
    },
    {
      "source": "String",
      "target": "Problem 2942",
      "value": 1,
      "timestamp": "2026-09-08"
    },
    {
      "source": "Array",
      "target": "Problem 2943",
      "value": 1,
      "timestamp": "2026-09-09"
    },
    {
      "source": "Sorting",
      "target": "Problem 2943",
      "value": 1,
      "timestamp": "2026-09-09"
    },
    {
      "source": "Array",
      "target": "Problem 2948",
      "value": 1,
      "timestamp": "2026-09-09"
    },
    {
      "source": "Union Find",
      "target": "Problem 2948",
      "value": 1,
      "timestamp": "2026-09-09"
    },
    {
      "source": "Sorting",
      "target": "Problem 2948",
      "value": 1,
      "timestamp": "2026-09-09"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2949",
      "value": 1,
      "timestamp": "2026-09-09"
    },
    {
      "source": "Math",
      "target": "Problem 2949",
      "value": 1,
      "timestamp": "2026-09-09"
    },
    {
      "source": "String",
      "target": "Problem 2949",
      "value": 1,
      "timestamp": "2026-09-09"
    },
    {
      "source": "Number Theory",
      "target": "Problem 2949",
      "value": 1,
      "timestamp": "2026-09-09"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2949",
      "value": 1,
      "timestamp": "2026-09-09"
    },
    {
      "source": "Array",
      "target": "Problem 2952",
      "value": 1,
      "timestamp": "2026-09-10"
    },
    {
      "source": "Greedy",
      "target": "Problem 2952",
      "value": 1,
      "timestamp": "2026-09-10"
    },
    {
      "source": "Sorting",
      "target": "Problem 2952",
      "value": 1,
      "timestamp": "2026-09-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2953",
      "value": 1,
      "timestamp": "2026-09-10"
    },
    {
      "source": "String",
      "target": "Problem 2953",
      "value": 1,
      "timestamp": "2026-09-10"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2953",
      "value": 1,
      "timestamp": "2026-09-10"
    },
    {
      "source": "Array",
      "target": "Problem 2954",
      "value": 1,
      "timestamp": "2026-09-11"
    },
    {
      "source": "Math",
      "target": "Problem 2954",
      "value": 1,
      "timestamp": "2026-09-11"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 2954",
      "value": 1,
      "timestamp": "2026-09-11"
    },
    {
      "source": "Array",
      "target": "Problem 2951",
      "value": 1,
      "timestamp": "2026-09-11"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2951",
      "value": 1,
      "timestamp": "2026-09-11"
    },
    {
      "source": "Array",
      "target": "Problem 2958",
      "value": 1,
      "timestamp": "2026-09-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2958",
      "value": 1,
      "timestamp": "2026-09-12"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2958",
      "value": 1,
      "timestamp": "2026-09-12"
    },
    {
      "source": "Array",
      "target": "Problem 2956",
      "value": 1,
      "timestamp": "2026-09-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2956",
      "value": 1,
      "timestamp": "2026-09-12"
    },
    {
      "source": "Array",
      "target": "Problem 2960",
      "value": 1,
      "timestamp": "2026-09-12"
    },
    {
      "source": "Simulation",
      "target": "Problem 2960",
      "value": 1,
      "timestamp": "2026-09-12"
    },
    {
      "source": "Counting",
      "target": "Problem 2960",
      "value": 1,
      "timestamp": "2026-09-12"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2959",
      "value": 1,
      "timestamp": "2026-09-13"
    },
    {
      "source": "Graph",
      "target": "Problem 2959",
      "value": 1,
      "timestamp": "2026-09-13"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2959",
      "value": 1,
      "timestamp": "2026-09-13"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2959",
      "value": 1,
      "timestamp": "2026-09-13"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 2959",
      "value": 1,
      "timestamp": "2026-09-13"
    },
    {
      "source": "String",
      "target": "Problem 2957",
      "value": 1,
      "timestamp": "2026-09-13"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2957",
      "value": 1,
      "timestamp": "2026-09-13"
    },
    {
      "source": "Greedy",
      "target": "Problem 2957",
      "value": 1,
      "timestamp": "2026-09-13"
    },
    {
      "source": "Array",
      "target": "Problem 2961",
      "value": 1,
      "timestamp": "2026-09-13"
    },
    {
      "source": "Math",
      "target": "Problem 2961",
      "value": 1,
      "timestamp": "2026-09-13"
    },
    {
      "source": "Simulation",
      "target": "Problem 2961",
      "value": 1,
      "timestamp": "2026-09-13"
    },
    {
      "source": "Array",
      "target": "Problem 2962",
      "value": 1,
      "timestamp": "2026-09-14"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2962",
      "value": 1,
      "timestamp": "2026-09-14"
    },
    {
      "source": "Array",
      "target": "Problem 2963",
      "value": 1,
      "timestamp": "2026-09-14"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2963",
      "value": 1,
      "timestamp": "2026-09-14"
    },
    {
      "source": "Math",
      "target": "Problem 2963",
      "value": 1,
      "timestamp": "2026-09-14"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 2963",
      "value": 1,
      "timestamp": "2026-09-14"
    },
    {
      "source": "Array",
      "target": "Problem 2965",
      "value": 1,
      "timestamp": "2026-09-14"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2965",
      "value": 1,
      "timestamp": "2026-09-14"
    },
    {
      "source": "Math",
      "target": "Problem 2965",
      "value": 1,
      "timestamp": "2026-09-14"
    },
    {
      "source": "Matrix",
      "target": "Problem 2965",
      "value": 1,
      "timestamp": "2026-09-14"
    },
    {
      "source": "Array",
      "target": "Problem 2966",
      "value": 1,
      "timestamp": "2026-09-15"
    },
    {
      "source": "Greedy",
      "target": "Problem 2966",
      "value": 1,
      "timestamp": "2026-09-15"
    },
    {
      "source": "Sorting",
      "target": "Problem 2966",
      "value": 1,
      "timestamp": "2026-09-15"
    },
    {
      "source": "Array",
      "target": "Problem 2967",
      "value": 1,
      "timestamp": "2026-09-15"
    },
    {
      "source": "Math",
      "target": "Problem 2967",
      "value": 1,
      "timestamp": "2026-09-15"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2967",
      "value": 1,
      "timestamp": "2026-09-15"
    },
    {
      "source": "Greedy",
      "target": "Problem 2967",
      "value": 1,
      "timestamp": "2026-09-15"
    },
    {
      "source": "Sorting",
      "target": "Problem 2967",
      "value": 1,
      "timestamp": "2026-09-15"
    },
    {
      "source": "Array",
      "target": "Problem 2968",
      "value": 1,
      "timestamp": "2026-09-16"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2968",
      "value": 1,
      "timestamp": "2026-09-16"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2968",
      "value": 1,
      "timestamp": "2026-09-16"
    },
    {
      "source": "Sorting",
      "target": "Problem 2968",
      "value": 1,
      "timestamp": "2026-09-16"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2968",
      "value": 1,
      "timestamp": "2026-09-16"
    },
    {
      "source": "Array",
      "target": "Problem 2970",
      "value": 1,
      "timestamp": "2026-09-16"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2970",
      "value": 1,
      "timestamp": "2026-09-16"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2970",
      "value": 1,
      "timestamp": "2026-09-16"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2970",
      "value": 1,
      "timestamp": "2026-09-16"
    },
    {
      "source": "Array",
      "target": "Problem 2971",
      "value": 1,
      "timestamp": "2026-09-17"
    },
    {
      "source": "Greedy",
      "target": "Problem 2971",
      "value": 1,
      "timestamp": "2026-09-17"
    },
    {
      "source": "Sorting",
      "target": "Problem 2971",
      "value": 1,
      "timestamp": "2026-09-17"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2971",
      "value": 1,
      "timestamp": "2026-09-17"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2973",
      "value": 1,
      "timestamp": "2026-09-18"
    },
    {
      "source": "Tree",
      "target": "Problem 2973",
      "value": 1,
      "timestamp": "2026-09-18"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 2973",
      "value": 1,
      "timestamp": "2026-09-18"
    },
    {
      "source": "Sorting",
      "target": "Problem 2973",
      "value": 1,
      "timestamp": "2026-09-18"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2973",
      "value": 1,
      "timestamp": "2026-09-18"
    },
    {
      "source": "Array",
      "target": "Problem 2974",
      "value": 1,
      "timestamp": "2026-09-18"
    },
    {
      "source": "Sorting",
      "target": "Problem 2974",
      "value": 1,
      "timestamp": "2026-09-18"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 2974",
      "value": 1,
      "timestamp": "2026-09-18"
    },
    {
      "source": "Simulation",
      "target": "Problem 2974",
      "value": 1,
      "timestamp": "2026-09-18"
    },
    {
      "source": "Array",
      "target": "Problem 2976",
      "value": 1,
      "timestamp": "2026-09-18"
    },
    {
      "source": "String",
      "target": "Problem 2976",
      "value": 1,
      "timestamp": "2026-09-18"
    },
    {
      "source": "Graph",
      "target": "Problem 2976",
      "value": 1,
      "timestamp": "2026-09-18"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 2976",
      "value": 1,
      "timestamp": "2026-09-18"
    },
    {
      "source": "Array",
      "target": "Problem 2975",
      "value": 1,
      "timestamp": "2026-09-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2975",
      "value": 1,
      "timestamp": "2026-09-19"
    },
    {
      "source": "Enumeration",
      "target": "Problem 2975",
      "value": 1,
      "timestamp": "2026-09-19"
    },
    {
      "source": "Array",
      "target": "Problem 2977",
      "value": 1,
      "timestamp": "2026-09-19"
    },
    {
      "source": "String",
      "target": "Problem 2977",
      "value": 1,
      "timestamp": "2026-09-19"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2977",
      "value": 1,
      "timestamp": "2026-09-19"
    },
    {
      "source": "Graph",
      "target": "Problem 2977",
      "value": 1,
      "timestamp": "2026-09-19"
    },
    {
      "source": "Trie",
      "target": "Problem 2977",
      "value": 1,
      "timestamp": "2026-09-19"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 2977",
      "value": 1,
      "timestamp": "2026-09-19"
    },
    {
      "source": "Array",
      "target": "Problem 2972",
      "value": 1,
      "timestamp": "2026-09-19"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 2972",
      "value": 1,
      "timestamp": "2026-09-19"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2972",
      "value": 1,
      "timestamp": "2026-09-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2982",
      "value": 1,
      "timestamp": "2026-09-21"
    },
    {
      "source": "String",
      "target": "Problem 2982",
      "value": 1,
      "timestamp": "2026-09-21"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2982",
      "value": 1,
      "timestamp": "2026-09-21"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2982",
      "value": 1,
      "timestamp": "2026-09-21"
    },
    {
      "source": "Counting",
      "target": "Problem 2982",
      "value": 1,
      "timestamp": "2026-09-21"
    },
    {
      "source": "Array",
      "target": "Problem 2980",
      "value": 1,
      "timestamp": "2026-09-21"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2980",
      "value": 1,
      "timestamp": "2026-09-21"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2981",
      "value": 1,
      "timestamp": "2026-09-21"
    },
    {
      "source": "String",
      "target": "Problem 2981",
      "value": 1,
      "timestamp": "2026-09-21"
    },
    {
      "source": "Binary Search",
      "target": "Problem 2981",
      "value": 1,
      "timestamp": "2026-09-21"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 2981",
      "value": 1,
      "timestamp": "2026-09-21"
    },
    {
      "source": "Counting",
      "target": "Problem 2981",
      "value": 1,
      "timestamp": "2026-09-21"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2983",
      "value": 1,
      "timestamp": "2026-09-24"
    },
    {
      "source": "String",
      "target": "Problem 2983",
      "value": 1,
      "timestamp": "2026-09-24"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 2983",
      "value": 1,
      "timestamp": "2026-09-24"
    },
    {
      "source": "Array",
      "target": "Problem 3001",
      "value": 1,
      "timestamp": "2026-09-25"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3001",
      "value": 1,
      "timestamp": "2026-09-25"
    },
    {
      "source": "Array",
      "target": "Problem 2996",
      "value": 1,
      "timestamp": "2026-09-25"
    },
    {
      "source": "Hash Table",
      "target": "Problem 2996",
      "value": 1,
      "timestamp": "2026-09-25"
    },
    {
      "source": "Sorting",
      "target": "Problem 2996",
      "value": 1,
      "timestamp": "2026-09-25"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2998",
      "value": 1,
      "timestamp": "2026-09-26"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 2998",
      "value": 1,
      "timestamp": "2026-09-26"
    },
    {
      "source": "Memoization",
      "target": "Problem 2998",
      "value": 1,
      "timestamp": "2026-09-26"
    },
    {
      "source": "Math",
      "target": "Problem 2999",
      "value": 1,
      "timestamp": "2026-09-26"
    },
    {
      "source": "String",
      "target": "Problem 2999",
      "value": 1,
      "timestamp": "2026-09-26"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 2999",
      "value": 1,
      "timestamp": "2026-09-26"
    },
    {
      "source": "Array",
      "target": "Problem 2997",
      "value": 1,
      "timestamp": "2026-09-26"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 2997",
      "value": 1,
      "timestamp": "2026-09-26"
    },
    {
      "source": "Array",
      "target": "Problem 3000",
      "value": 1,
      "timestamp": "2026-09-27"
    },
    {
      "source": "Array",
      "target": "Problem 3002",
      "value": 1,
      "timestamp": "2026-09-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3002",
      "value": 1,
      "timestamp": "2026-09-27"
    },
    {
      "source": "Greedy",
      "target": "Problem 3002",
      "value": 1,
      "timestamp": "2026-09-27"
    },
    {
      "source": "String",
      "target": "Problem 3003",
      "value": 1,
      "timestamp": "2026-09-27"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3003",
      "value": 1,
      "timestamp": "2026-09-27"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3003",
      "value": 1,
      "timestamp": "2026-09-27"
    },
    {
      "source": "Bitmask",
      "target": "Problem 3003",
      "value": 1,
      "timestamp": "2026-09-27"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3007",
      "value": 1,
      "timestamp": "2026-09-28"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3007",
      "value": 1,
      "timestamp": "2026-09-28"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3007",
      "value": 1,
      "timestamp": "2026-09-28"
    },
    {
      "source": "Array",
      "target": "Problem 3005",
      "value": 1,
      "timestamp": "2026-09-28"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3005",
      "value": 1,
      "timestamp": "2026-09-28"
    },
    {
      "source": "Counting",
      "target": "Problem 3005",
      "value": 1,
      "timestamp": "2026-09-28"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 3006",
      "value": 1,
      "timestamp": "2026-09-29"
    },
    {
      "source": "String",
      "target": "Problem 3006",
      "value": 1,
      "timestamp": "2026-09-29"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3006",
      "value": 1,
      "timestamp": "2026-09-29"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 3006",
      "value": 1,
      "timestamp": "2026-09-29"
    },
    {
      "source": "String Matching",
      "target": "Problem 3006",
      "value": 1,
      "timestamp": "2026-09-29"
    },
    {
      "source": "Hash Function",
      "target": "Problem 3006",
      "value": 1,
      "timestamp": "2026-09-29"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 3008",
      "value": 1,
      "timestamp": "2026-09-29"
    },
    {
      "source": "String",
      "target": "Problem 3008",
      "value": 1,
      "timestamp": "2026-09-29"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3008",
      "value": 1,
      "timestamp": "2026-09-29"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 3008",
      "value": 1,
      "timestamp": "2026-09-29"
    },
    {
      "source": "String Matching",
      "target": "Problem 3008",
      "value": 1,
      "timestamp": "2026-09-29"
    },
    {
      "source": "Hash Function",
      "target": "Problem 3008",
      "value": 1,
      "timestamp": "2026-09-29"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 3015",
      "value": 1,
      "timestamp": "2026-09-30"
    },
    {
      "source": "Graph",
      "target": "Problem 3015",
      "value": 1,
      "timestamp": "2026-09-30"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3015",
      "value": 1,
      "timestamp": "2026-09-30"
    },
    {
      "source": "Array",
      "target": "Problem 3013",
      "value": 1,
      "timestamp": "2026-09-30"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3013",
      "value": 1,
      "timestamp": "2026-09-30"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3013",
      "value": 1,
      "timestamp": "2026-09-30"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 3013",
      "value": 1,
      "timestamp": "2026-09-30"
    },
    {
      "source": "Array",
      "target": "Problem 3011",
      "value": 1,
      "timestamp": "2026-09-30"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3011",
      "value": 1,
      "timestamp": "2026-09-30"
    },
    {
      "source": "Sorting",
      "target": "Problem 3011",
      "value": 1,
      "timestamp": "2026-09-30"
    },
    {
      "source": "Math",
      "target": "Problem 3014",
      "value": 1,
      "timestamp": "2026-10-01"
    },
    {
      "source": "String",
      "target": "Problem 3014",
      "value": 1,
      "timestamp": "2026-10-01"
    },
    {
      "source": "Greedy",
      "target": "Problem 3014",
      "value": 1,
      "timestamp": "2026-10-01"
    },
    {
      "source": "Array",
      "target": "Problem 3010",
      "value": 1,
      "timestamp": "2026-10-01"
    },
    {
      "source": "Sorting",
      "target": "Problem 3010",
      "value": 1,
      "timestamp": "2026-10-01"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3010",
      "value": 1,
      "timestamp": "2026-10-01"
    },
    {
      "source": "Array",
      "target": "Problem 3012",
      "value": 1,
      "timestamp": "2026-10-01"
    },
    {
      "source": "Math",
      "target": "Problem 3012",
      "value": 1,
      "timestamp": "2026-10-01"
    },
    {
      "source": "Greedy",
      "target": "Problem 3012",
      "value": 1,
      "timestamp": "2026-10-01"
    },
    {
      "source": "Number Theory",
      "target": "Problem 3012",
      "value": 1,
      "timestamp": "2026-10-01"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3016",
      "value": 1,
      "timestamp": "2026-10-02"
    },
    {
      "source": "String",
      "target": "Problem 3016",
      "value": 1,
      "timestamp": "2026-10-02"
    },
    {
      "source": "Greedy",
      "target": "Problem 3016",
      "value": 1,
      "timestamp": "2026-10-02"
    },
    {
      "source": "Sorting",
      "target": "Problem 3016",
      "value": 1,
      "timestamp": "2026-10-02"
    },
    {
      "source": "Counting",
      "target": "Problem 3016",
      "value": 1,
      "timestamp": "2026-10-02"
    },
    {
      "source": "Graph",
      "target": "Problem 3017",
      "value": 1,
      "timestamp": "2026-10-02"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3017",
      "value": 1,
      "timestamp": "2026-10-02"
    },
    {
      "source": "Array",
      "target": "Problem 3022",
      "value": 1,
      "timestamp": "2026-10-03"
    },
    {
      "source": "Greedy",
      "target": "Problem 3022",
      "value": 1,
      "timestamp": "2026-10-03"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3022",
      "value": 1,
      "timestamp": "2026-10-03"
    },
    {
      "source": "String",
      "target": "Problem 3019",
      "value": 1,
      "timestamp": "2026-10-03"
    },
    {
      "source": "Array",
      "target": "Problem 3024",
      "value": 1,
      "timestamp": "2026-10-03"
    },
    {
      "source": "Math",
      "target": "Problem 3024",
      "value": 1,
      "timestamp": "2026-10-03"
    },
    {
      "source": "Sorting",
      "target": "Problem 3024",
      "value": 1,
      "timestamp": "2026-10-03"
    },
    {
      "source": "Math",
      "target": "Problem 3021",
      "value": 1,
      "timestamp": "2026-10-04"
    },
    {
      "source": "Array",
      "target": "Problem 3025",
      "value": 1,
      "timestamp": "2026-10-04"
    },
    {
      "source": "Math",
      "target": "Problem 3025",
      "value": 1,
      "timestamp": "2026-10-04"
    },
    {
      "source": "Geometry",
      "target": "Problem 3025",
      "value": 1,
      "timestamp": "2026-10-04"
    },
    {
      "source": "Sorting",
      "target": "Problem 3025",
      "value": 1,
      "timestamp": "2026-10-04"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3025",
      "value": 1,
      "timestamp": "2026-10-04"
    },
    {
      "source": "Array",
      "target": "Problem 3020",
      "value": 1,
      "timestamp": "2026-10-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3020",
      "value": 1,
      "timestamp": "2026-10-05"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3020",
      "value": 1,
      "timestamp": "2026-10-05"
    },
    {
      "source": "Array",
      "target": "Problem 3026",
      "value": 1,
      "timestamp": "2026-10-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3026",
      "value": 1,
      "timestamp": "2026-10-05"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3026",
      "value": 1,
      "timestamp": "2026-10-05"
    },
    {
      "source": "Array",
      "target": "Problem 3027",
      "value": 1,
      "timestamp": "2026-10-05"
    },
    {
      "source": "Math",
      "target": "Problem 3027",
      "value": 1,
      "timestamp": "2026-10-05"
    },
    {
      "source": "Geometry",
      "target": "Problem 3027",
      "value": 1,
      "timestamp": "2026-10-05"
    },
    {
      "source": "Sorting",
      "target": "Problem 3027",
      "value": 1,
      "timestamp": "2026-10-05"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3027",
      "value": 1,
      "timestamp": "2026-10-05"
    },
    {
      "source": "String",
      "target": "Problem 3029",
      "value": 1,
      "timestamp": "2026-10-06"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 3029",
      "value": 1,
      "timestamp": "2026-10-06"
    },
    {
      "source": "String Matching",
      "target": "Problem 3029",
      "value": 1,
      "timestamp": "2026-10-06"
    },
    {
      "source": "Hash Function",
      "target": "Problem 3029",
      "value": 1,
      "timestamp": "2026-10-06"
    },
    {
      "source": "Array",
      "target": "Problem 3028",
      "value": 1,
      "timestamp": "2026-10-06"
    },
    {
      "source": "Simulation",
      "target": "Problem 3028",
      "value": 1,
      "timestamp": "2026-10-06"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3028",
      "value": 1,
      "timestamp": "2026-10-06"
    },
    {
      "source": "Array",
      "target": "Problem 3030",
      "value": 1,
      "timestamp": "2026-10-06"
    },
    {
      "source": "Matrix",
      "target": "Problem 3030",
      "value": 1,
      "timestamp": "2026-10-06"
    },
    {
      "source": "String",
      "target": "Problem 3031",
      "value": 1,
      "timestamp": "2026-10-07"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 3031",
      "value": 1,
      "timestamp": "2026-10-07"
    },
    {
      "source": "String Matching",
      "target": "Problem 3031",
      "value": 1,
      "timestamp": "2026-10-07"
    },
    {
      "source": "Hash Function",
      "target": "Problem 3031",
      "value": 1,
      "timestamp": "2026-10-07"
    },
    {
      "source": "Array",
      "target": "Problem 3039",
      "value": 1,
      "timestamp": "2026-10-08"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3039",
      "value": 1,
      "timestamp": "2026-10-08"
    },
    {
      "source": "Sorting",
      "target": "Problem 3039",
      "value": 1,
      "timestamp": "2026-10-08"
    },
    {
      "source": "Counting",
      "target": "Problem 3039",
      "value": 1,
      "timestamp": "2026-10-08"
    },
    {
      "source": "Array",
      "target": "Problem 3035",
      "value": 1,
      "timestamp": "2026-10-08"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3035",
      "value": 1,
      "timestamp": "2026-10-08"
    },
    {
      "source": "String",
      "target": "Problem 3035",
      "value": 1,
      "timestamp": "2026-10-08"
    },
    {
      "source": "Greedy",
      "target": "Problem 3035",
      "value": 1,
      "timestamp": "2026-10-08"
    },
    {
      "source": "Sorting",
      "target": "Problem 3035",
      "value": 1,
      "timestamp": "2026-10-08"
    },
    {
      "source": "Counting",
      "target": "Problem 3035",
      "value": 1,
      "timestamp": "2026-10-08"
    },
    {
      "source": "Array",
      "target": "Problem 3038",
      "value": 1,
      "timestamp": "2026-10-08"
    },
    {
      "source": "Simulation",
      "target": "Problem 3038",
      "value": 1,
      "timestamp": "2026-10-08"
    },
    {
      "source": "Array",
      "target": "Problem 3033",
      "value": 1,
      "timestamp": "2026-10-09"
    },
    {
      "source": "Matrix",
      "target": "Problem 3033",
      "value": 1,
      "timestamp": "2026-10-09"
    },
    {
      "source": "Array",
      "target": "Problem 3036",
      "value": 1,
      "timestamp": "2026-10-09"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 3036",
      "value": 1,
      "timestamp": "2026-10-09"
    },
    {
      "source": "String Matching",
      "target": "Problem 3036",
      "value": 1,
      "timestamp": "2026-10-09"
    },
    {
      "source": "Hash Function",
      "target": "Problem 3036",
      "value": 1,
      "timestamp": "2026-10-09"
    },
    {
      "source": "Array",
      "target": "Problem 3034",
      "value": 1,
      "timestamp": "2026-10-09"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 3034",
      "value": 1,
      "timestamp": "2026-10-09"
    },
    {
      "source": "String Matching",
      "target": "Problem 3034",
      "value": 1,
      "timestamp": "2026-10-09"
    },
    {
      "source": "Hash Function",
      "target": "Problem 3034",
      "value": 1,
      "timestamp": "2026-10-09"
    },
    {
      "source": "Array",
      "target": "Problem 3040",
      "value": 1,
      "timestamp": "2026-10-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3040",
      "value": 1,
      "timestamp": "2026-10-10"
    },
    {
      "source": "Memoization",
      "target": "Problem 3040",
      "value": 1,
      "timestamp": "2026-10-10"
    },
    {
      "source": "Array",
      "target": "Problem 3041",
      "value": 1,
      "timestamp": "2026-10-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3041",
      "value": 1,
      "timestamp": "2026-10-10"
    },
    {
      "source": "Sorting",
      "target": "Problem 3041",
      "value": 1,
      "timestamp": "2026-10-10"
    },
    {
      "source": "Array",
      "target": "Problem 3043",
      "value": 1,
      "timestamp": "2026-10-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3043",
      "value": 1,
      "timestamp": "2026-10-10"
    },
    {
      "source": "String",
      "target": "Problem 3043",
      "value": 1,
      "timestamp": "2026-10-10"
    },
    {
      "source": "Trie",
      "target": "Problem 3043",
      "value": 1,
      "timestamp": "2026-10-10"
    },
    {
      "source": "Array",
      "target": "Problem 3046",
      "value": 1,
      "timestamp": "2026-10-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3046",
      "value": 1,
      "timestamp": "2026-10-11"
    },
    {
      "source": "Counting",
      "target": "Problem 3046",
      "value": 1,
      "timestamp": "2026-10-11"
    },
    {
      "source": "Array",
      "target": "Problem 3045",
      "value": 1,
      "timestamp": "2026-10-11"
    },
    {
      "source": "String",
      "target": "Problem 3045",
      "value": 1,
      "timestamp": "2026-10-11"
    },
    {
      "source": "Trie",
      "target": "Problem 3045",
      "value": 1,
      "timestamp": "2026-10-11"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 3045",
      "value": 1,
      "timestamp": "2026-10-11"
    },
    {
      "source": "String Matching",
      "target": "Problem 3045",
      "value": 1,
      "timestamp": "2026-10-11"
    },
    {
      "source": "Hash Function",
      "target": "Problem 3045",
      "value": 1,
      "timestamp": "2026-10-11"
    },
    {
      "source": "Array",
      "target": "Problem 3044",
      "value": 1,
      "timestamp": "2026-10-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3044",
      "value": 1,
      "timestamp": "2026-10-11"
    },
    {
      "source": "Math",
      "target": "Problem 3044",
      "value": 1,
      "timestamp": "2026-10-11"
    },
    {
      "source": "Matrix",
      "target": "Problem 3044",
      "value": 1,
      "timestamp": "2026-10-11"
    },
    {
      "source": "Counting",
      "target": "Problem 3044",
      "value": 1,
      "timestamp": "2026-10-11"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3044",
      "value": 1,
      "timestamp": "2026-10-11"
    },
    {
      "source": "Number Theory",
      "target": "Problem 3044",
      "value": 1,
      "timestamp": "2026-10-11"
    },
    {
      "source": "Array",
      "target": "Problem 3042",
      "value": 1,
      "timestamp": "2026-10-12"
    },
    {
      "source": "String",
      "target": "Problem 3042",
      "value": 1,
      "timestamp": "2026-10-12"
    },
    {
      "source": "Trie",
      "target": "Problem 3042",
      "value": 1,
      "timestamp": "2026-10-12"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 3042",
      "value": 1,
      "timestamp": "2026-10-12"
    },
    {
      "source": "String Matching",
      "target": "Problem 3042",
      "value": 1,
      "timestamp": "2026-10-12"
    },
    {
      "source": "Hash Function",
      "target": "Problem 3042",
      "value": 1,
      "timestamp": "2026-10-12"
    },
    {
      "source": "Array",
      "target": "Problem 3048",
      "value": 1,
      "timestamp": "2026-10-14"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3048",
      "value": 1,
      "timestamp": "2026-10-14"
    },
    {
      "source": "Array",
      "target": "Problem 3047",
      "value": 1,
      "timestamp": "2026-10-14"
    },
    {
      "source": "Math",
      "target": "Problem 3047",
      "value": 1,
      "timestamp": "2026-10-14"
    },
    {
      "source": "Geometry",
      "target": "Problem 3047",
      "value": 1,
      "timestamp": "2026-10-14"
    },
    {
      "source": "Array",
      "target": "Problem 3049",
      "value": 1,
      "timestamp": "2026-10-14"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3049",
      "value": 1,
      "timestamp": "2026-10-14"
    },
    {
      "source": "Greedy",
      "target": "Problem 3049",
      "value": 1,
      "timestamp": "2026-10-14"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 3049",
      "value": 1,
      "timestamp": "2026-10-14"
    },
    {
      "source": "Array",
      "target": "Problem 3065",
      "value": 1,
      "timestamp": "2026-10-17"
    },
    {
      "source": "Array",
      "target": "Problem 3066",
      "value": 1,
      "timestamp": "2026-10-18"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 3066",
      "value": 1,
      "timestamp": "2026-10-18"
    },
    {
      "source": "Simulation",
      "target": "Problem 3066",
      "value": 1,
      "timestamp": "2026-10-18"
    },
    {
      "source": "Array",
      "target": "Problem 3067",
      "value": 1,
      "timestamp": "2026-10-19"
    },
    {
      "source": "Tree",
      "target": "Problem 3067",
      "value": 1,
      "timestamp": "2026-10-19"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 3067",
      "value": 1,
      "timestamp": "2026-10-19"
    },
    {
      "source": "Array",
      "target": "Problem 3068",
      "value": 1,
      "timestamp": "2026-10-19"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3068",
      "value": 1,
      "timestamp": "2026-10-19"
    },
    {
      "source": "Greedy",
      "target": "Problem 3068",
      "value": 1,
      "timestamp": "2026-10-19"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3068",
      "value": 1,
      "timestamp": "2026-10-19"
    },
    {
      "source": "Tree",
      "target": "Problem 3068",
      "value": 1,
      "timestamp": "2026-10-19"
    },
    {
      "source": "Sorting",
      "target": "Problem 3068",
      "value": 1,
      "timestamp": "2026-10-19"
    },
    {
      "source": "Array",
      "target": "Problem 3069",
      "value": 1,
      "timestamp": "2026-10-19"
    },
    {
      "source": "Simulation",
      "target": "Problem 3069",
      "value": 1,
      "timestamp": "2026-10-19"
    },
    {
      "source": "Array",
      "target": "Problem 3072",
      "value": 1,
      "timestamp": "2026-10-20"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 3072",
      "value": 1,
      "timestamp": "2026-10-20"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 3072",
      "value": 1,
      "timestamp": "2026-10-20"
    },
    {
      "source": "Simulation",
      "target": "Problem 3072",
      "value": 1,
      "timestamp": "2026-10-20"
    },
    {
      "source": "Array",
      "target": "Problem 3071",
      "value": 1,
      "timestamp": "2026-10-20"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3071",
      "value": 1,
      "timestamp": "2026-10-20"
    },
    {
      "source": "Matrix",
      "target": "Problem 3071",
      "value": 1,
      "timestamp": "2026-10-20"
    },
    {
      "source": "Counting",
      "target": "Problem 3071",
      "value": 1,
      "timestamp": "2026-10-20"
    },
    {
      "source": "Array",
      "target": "Problem 3075",
      "value": 1,
      "timestamp": "2026-10-21"
    },
    {
      "source": "Greedy",
      "target": "Problem 3075",
      "value": 1,
      "timestamp": "2026-10-21"
    },
    {
      "source": "Sorting",
      "target": "Problem 3075",
      "value": 1,
      "timestamp": "2026-10-21"
    },
    {
      "source": "Array",
      "target": "Problem 3076",
      "value": 1,
      "timestamp": "2026-10-21"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3076",
      "value": 1,
      "timestamp": "2026-10-21"
    },
    {
      "source": "String",
      "target": "Problem 3076",
      "value": 1,
      "timestamp": "2026-10-21"
    },
    {
      "source": "Trie",
      "target": "Problem 3076",
      "value": 1,
      "timestamp": "2026-10-21"
    },
    {
      "source": "Array",
      "target": "Problem 3074",
      "value": 1,
      "timestamp": "2026-10-21"
    },
    {
      "source": "Greedy",
      "target": "Problem 3074",
      "value": 1,
      "timestamp": "2026-10-21"
    },
    {
      "source": "Sorting",
      "target": "Problem 3074",
      "value": 1,
      "timestamp": "2026-10-21"
    },
    {
      "source": "Array",
      "target": "Problem 3070",
      "value": 1,
      "timestamp": "2026-10-22"
    },
    {
      "source": "Matrix",
      "target": "Problem 3070",
      "value": 1,
      "timestamp": "2026-10-22"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3070",
      "value": 1,
      "timestamp": "2026-10-22"
    },
    {
      "source": "Array",
      "target": "Problem 3079",
      "value": 1,
      "timestamp": "2026-10-22"
    },
    {
      "source": "Math",
      "target": "Problem 3079",
      "value": 1,
      "timestamp": "2026-10-22"
    },
    {
      "source": "Array",
      "target": "Problem 3080",
      "value": 1,
      "timestamp": "2026-10-22"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3080",
      "value": 1,
      "timestamp": "2026-10-22"
    },
    {
      "source": "Sorting",
      "target": "Problem 3080",
      "value": 1,
      "timestamp": "2026-10-22"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 3080",
      "value": 1,
      "timestamp": "2026-10-22"
    },
    {
      "source": "Simulation",
      "target": "Problem 3080",
      "value": 1,
      "timestamp": "2026-10-22"
    },
    {
      "source": "Array",
      "target": "Problem 3077",
      "value": 1,
      "timestamp": "2026-10-23"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3077",
      "value": 1,
      "timestamp": "2026-10-23"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3077",
      "value": 1,
      "timestamp": "2026-10-23"
    },
    {
      "source": "Math",
      "target": "Problem 3084",
      "value": 1,
      "timestamp": "2026-10-23"
    },
    {
      "source": "String",
      "target": "Problem 3084",
      "value": 1,
      "timestamp": "2026-10-23"
    },
    {
      "source": "Counting",
      "target": "Problem 3084",
      "value": 1,
      "timestamp": "2026-10-23"
    },
    {
      "source": "Array",
      "target": "Problem 3082",
      "value": 1,
      "timestamp": "2026-10-24"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3082",
      "value": 1,
      "timestamp": "2026-10-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3081",
      "value": 1,
      "timestamp": "2026-10-24"
    },
    {
      "source": "String",
      "target": "Problem 3081",
      "value": 1,
      "timestamp": "2026-10-24"
    },
    {
      "source": "Greedy",
      "target": "Problem 3081",
      "value": 1,
      "timestamp": "2026-10-24"
    },
    {
      "source": "Sorting",
      "target": "Problem 3081",
      "value": 1,
      "timestamp": "2026-10-24"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 3081",
      "value": 1,
      "timestamp": "2026-10-24"
    },
    {
      "source": "Counting",
      "target": "Problem 3081",
      "value": 1,
      "timestamp": "2026-10-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3083",
      "value": 1,
      "timestamp": "2026-10-24"
    },
    {
      "source": "String",
      "target": "Problem 3083",
      "value": 1,
      "timestamp": "2026-10-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3085",
      "value": 1,
      "timestamp": "2026-10-25"
    },
    {
      "source": "String",
      "target": "Problem 3085",
      "value": 1,
      "timestamp": "2026-10-25"
    },
    {
      "source": "Greedy",
      "target": "Problem 3085",
      "value": 1,
      "timestamp": "2026-10-25"
    },
    {
      "source": "Sorting",
      "target": "Problem 3085",
      "value": 1,
      "timestamp": "2026-10-25"
    },
    {
      "source": "Counting",
      "target": "Problem 3085",
      "value": 1,
      "timestamp": "2026-10-25"
    },
    {
      "source": "Array",
      "target": "Problem 3086",
      "value": 1,
      "timestamp": "2026-10-25"
    },
    {
      "source": "Greedy",
      "target": "Problem 3086",
      "value": 1,
      "timestamp": "2026-10-25"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3086",
      "value": 1,
      "timestamp": "2026-10-25"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3086",
      "value": 1,
      "timestamp": "2026-10-25"
    },
    {
      "source": "Math",
      "target": "Problem 3091",
      "value": 1,
      "timestamp": "2026-10-26"
    },
    {
      "source": "Greedy",
      "target": "Problem 3091",
      "value": 1,
      "timestamp": "2026-10-26"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3091",
      "value": 1,
      "timestamp": "2026-10-26"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3090",
      "value": 1,
      "timestamp": "2026-10-27"
    },
    {
      "source": "String",
      "target": "Problem 3090",
      "value": 1,
      "timestamp": "2026-10-27"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3090",
      "value": 1,
      "timestamp": "2026-10-27"
    },
    {
      "source": "Array",
      "target": "Problem 3093",
      "value": 1,
      "timestamp": "2026-10-27"
    },
    {
      "source": "String",
      "target": "Problem 3093",
      "value": 1,
      "timestamp": "2026-10-27"
    },
    {
      "source": "Trie",
      "target": "Problem 3093",
      "value": 1,
      "timestamp": "2026-10-27"
    },
    {
      "source": "Array",
      "target": "Problem 3092",
      "value": 1,
      "timestamp": "2026-10-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3092",
      "value": 1,
      "timestamp": "2026-10-27"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 3092",
      "value": 1,
      "timestamp": "2026-10-27"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 3092",
      "value": 1,
      "timestamp": "2026-10-27"
    },
    {
      "source": "Array",
      "target": "Problem 3095",
      "value": 1,
      "timestamp": "2026-10-28"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3095",
      "value": 1,
      "timestamp": "2026-10-28"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3095",
      "value": 1,
      "timestamp": "2026-10-28"
    },
    {
      "source": "Math",
      "target": "Problem 3099",
      "value": 1,
      "timestamp": "2026-10-28"
    },
    {
      "source": "Array",
      "target": "Problem 3098",
      "value": 1,
      "timestamp": "2026-10-29"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3098",
      "value": 1,
      "timestamp": "2026-10-29"
    },
    {
      "source": "Sorting",
      "target": "Problem 3098",
      "value": 1,
      "timestamp": "2026-10-29"
    },
    {
      "source": "Array",
      "target": "Problem 3097",
      "value": 1,
      "timestamp": "2026-10-29"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3097",
      "value": 1,
      "timestamp": "2026-10-29"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3097",
      "value": 1,
      "timestamp": "2026-10-29"
    },
    {
      "source": "Array",
      "target": "Problem 3096",
      "value": 1,
      "timestamp": "2026-10-29"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3096",
      "value": 1,
      "timestamp": "2026-10-29"
    },
    {
      "source": "Array",
      "target": "Problem 3102",
      "value": 1,
      "timestamp": "2026-10-30"
    },
    {
      "source": "Math",
      "target": "Problem 3102",
      "value": 1,
      "timestamp": "2026-10-30"
    },
    {
      "source": "Geometry",
      "target": "Problem 3102",
      "value": 1,
      "timestamp": "2026-10-30"
    },
    {
      "source": "Sorting",
      "target": "Problem 3102",
      "value": 1,
      "timestamp": "2026-10-30"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 3102",
      "value": 1,
      "timestamp": "2026-10-30"
    },
    {
      "source": "Math",
      "target": "Problem 3100",
      "value": 1,
      "timestamp": "2026-10-30"
    },
    {
      "source": "Simulation",
      "target": "Problem 3100",
      "value": 1,
      "timestamp": "2026-10-30"
    },
    {
      "source": "Array",
      "target": "Problem 3101",
      "value": 1,
      "timestamp": "2026-10-30"
    },
    {
      "source": "Math",
      "target": "Problem 3101",
      "value": 1,
      "timestamp": "2026-10-30"
    },
    {
      "source": "Array",
      "target": "Problem 3105",
      "value": 1,
      "timestamp": "2026-10-31"
    },
    {
      "source": "String",
      "target": "Problem 3106",
      "value": 1,
      "timestamp": "2026-11-01"
    },
    {
      "source": "Greedy",
      "target": "Problem 3106",
      "value": 1,
      "timestamp": "2026-11-01"
    },
    {
      "source": "Array",
      "target": "Problem 3107",
      "value": 1,
      "timestamp": "2026-11-01"
    },
    {
      "source": "Greedy",
      "target": "Problem 3107",
      "value": 1,
      "timestamp": "2026-11-01"
    },
    {
      "source": "Sorting",
      "target": "Problem 3107",
      "value": 1,
      "timestamp": "2026-11-01"
    },
    {
      "source": "Array",
      "target": "Problem 3108",
      "value": 1,
      "timestamp": "2026-11-01"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3108",
      "value": 1,
      "timestamp": "2026-11-01"
    },
    {
      "source": "Union Find",
      "target": "Problem 3108",
      "value": 1,
      "timestamp": "2026-11-01"
    },
    {
      "source": "Graph",
      "target": "Problem 3108",
      "value": 1,
      "timestamp": "2026-11-01"
    },
    {
      "source": "Array",
      "target": "Problem 3111",
      "value": 1,
      "timestamp": "2026-11-02"
    },
    {
      "source": "Greedy",
      "target": "Problem 3111",
      "value": 1,
      "timestamp": "2026-11-02"
    },
    {
      "source": "Sorting",
      "target": "Problem 3111",
      "value": 1,
      "timestamp": "2026-11-02"
    },
    {
      "source": "String",
      "target": "Problem 3110",
      "value": 1,
      "timestamp": "2026-11-02"
    },
    {
      "source": "Array",
      "target": "Problem 3113",
      "value": 1,
      "timestamp": "2026-11-03"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3113",
      "value": 1,
      "timestamp": "2026-11-03"
    },
    {
      "source": "Stack",
      "target": "Problem 3113",
      "value": 1,
      "timestamp": "2026-11-03"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 3113",
      "value": 1,
      "timestamp": "2026-11-03"
    },
    {
      "source": "Array",
      "target": "Problem 3115",
      "value": 1,
      "timestamp": "2026-11-03"
    },
    {
      "source": "Math",
      "target": "Problem 3115",
      "value": 1,
      "timestamp": "2026-11-03"
    },
    {
      "source": "Number Theory",
      "target": "Problem 3115",
      "value": 1,
      "timestamp": "2026-11-03"
    },
    {
      "source": "String",
      "target": "Problem 3114",
      "value": 1,
      "timestamp": "2026-11-03"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3114",
      "value": 1,
      "timestamp": "2026-11-03"
    },
    {
      "source": "Array",
      "target": "Problem 3112",
      "value": 1,
      "timestamp": "2026-11-04"
    },
    {
      "source": "Graph",
      "target": "Problem 3112",
      "value": 1,
      "timestamp": "2026-11-04"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 3112",
      "value": 1,
      "timestamp": "2026-11-04"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 3112",
      "value": 1,
      "timestamp": "2026-11-04"
    },
    {
      "source": "Array",
      "target": "Problem 3117",
      "value": 1,
      "timestamp": "2026-11-04"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3117",
      "value": 1,
      "timestamp": "2026-11-04"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3117",
      "value": 1,
      "timestamp": "2026-11-04"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3117",
      "value": 1,
      "timestamp": "2026-11-04"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 3117",
      "value": 1,
      "timestamp": "2026-11-04"
    },
    {
      "source": "Queue",
      "target": "Problem 3117",
      "value": 1,
      "timestamp": "2026-11-04"
    },
    {
      "source": "Array",
      "target": "Problem 3116",
      "value": 1,
      "timestamp": "2026-11-05"
    },
    {
      "source": "Math",
      "target": "Problem 3116",
      "value": 1,
      "timestamp": "2026-11-05"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3116",
      "value": 1,
      "timestamp": "2026-11-05"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3116",
      "value": 1,
      "timestamp": "2026-11-05"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 3116",
      "value": 1,
      "timestamp": "2026-11-05"
    },
    {
      "source": "Number Theory",
      "target": "Problem 3116",
      "value": 1,
      "timestamp": "2026-11-05"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3120",
      "value": 1,
      "timestamp": "2026-11-05"
    },
    {
      "source": "String",
      "target": "Problem 3120",
      "value": 1,
      "timestamp": "2026-11-05"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 3123",
      "value": 1,
      "timestamp": "2026-11-06"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 3123",
      "value": 1,
      "timestamp": "2026-11-06"
    },
    {
      "source": "Graph",
      "target": "Problem 3123",
      "value": 1,
      "timestamp": "2026-11-06"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 3123",
      "value": 1,
      "timestamp": "2026-11-06"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 3123",
      "value": 1,
      "timestamp": "2026-11-06"
    },
    {
      "source": "Array",
      "target": "Problem 3122",
      "value": 1,
      "timestamp": "2026-11-06"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3122",
      "value": 1,
      "timestamp": "2026-11-06"
    },
    {
      "source": "Matrix",
      "target": "Problem 3122",
      "value": 1,
      "timestamp": "2026-11-06"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3121",
      "value": 1,
      "timestamp": "2026-11-06"
    },
    {
      "source": "String",
      "target": "Problem 3121",
      "value": 1,
      "timestamp": "2026-11-06"
    },
    {
      "source": "Array",
      "target": "Problem 3127",
      "value": 1,
      "timestamp": "2026-11-08"
    },
    {
      "source": "Matrix",
      "target": "Problem 3127",
      "value": 1,
      "timestamp": "2026-11-08"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3127",
      "value": 1,
      "timestamp": "2026-11-08"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3129",
      "value": 1,
      "timestamp": "2026-11-08"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3129",
      "value": 1,
      "timestamp": "2026-11-08"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3130",
      "value": 1,
      "timestamp": "2026-11-08"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3130",
      "value": 1,
      "timestamp": "2026-11-08"
    },
    {
      "source": "Array",
      "target": "Problem 3128",
      "value": 1,
      "timestamp": "2026-11-09"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3128",
      "value": 1,
      "timestamp": "2026-11-09"
    },
    {
      "source": "Math",
      "target": "Problem 3128",
      "value": 1,
      "timestamp": "2026-11-09"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 3128",
      "value": 1,
      "timestamp": "2026-11-09"
    },
    {
      "source": "Counting",
      "target": "Problem 3128",
      "value": 1,
      "timestamp": "2026-11-09"
    },
    {
      "source": "Array",
      "target": "Problem 3132",
      "value": 1,
      "timestamp": "2026-11-09"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 3132",
      "value": 1,
      "timestamp": "2026-11-09"
    },
    {
      "source": "Sorting",
      "target": "Problem 3132",
      "value": 1,
      "timestamp": "2026-11-09"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3132",
      "value": 1,
      "timestamp": "2026-11-09"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3133",
      "value": 1,
      "timestamp": "2026-11-09"
    },
    {
      "source": "Array",
      "target": "Problem 3131",
      "value": 1,
      "timestamp": "2026-11-10"
    },
    {
      "source": "Array",
      "target": "Problem 3134",
      "value": 1,
      "timestamp": "2026-11-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3134",
      "value": 1,
      "timestamp": "2026-11-10"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3134",
      "value": 1,
      "timestamp": "2026-11-10"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3134",
      "value": 1,
      "timestamp": "2026-11-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3137",
      "value": 1,
      "timestamp": "2026-11-11"
    },
    {
      "source": "String",
      "target": "Problem 3137",
      "value": 1,
      "timestamp": "2026-11-11"
    },
    {
      "source": "Counting",
      "target": "Problem 3137",
      "value": 1,
      "timestamp": "2026-11-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3138",
      "value": 1,
      "timestamp": "2026-11-11"
    },
    {
      "source": "String",
      "target": "Problem 3138",
      "value": 1,
      "timestamp": "2026-11-11"
    },
    {
      "source": "Counting",
      "target": "Problem 3138",
      "value": 1,
      "timestamp": "2026-11-11"
    },
    {
      "source": "Array",
      "target": "Problem 3139",
      "value": 1,
      "timestamp": "2026-11-12"
    },
    {
      "source": "Greedy",
      "target": "Problem 3139",
      "value": 1,
      "timestamp": "2026-11-12"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3139",
      "value": 1,
      "timestamp": "2026-11-12"
    },
    {
      "source": "Array",
      "target": "Problem 3142",
      "value": 1,
      "timestamp": "2026-11-12"
    },
    {
      "source": "Matrix",
      "target": "Problem 3142",
      "value": 1,
      "timestamp": "2026-11-12"
    },
    {
      "source": "String",
      "target": "Problem 3136",
      "value": 1,
      "timestamp": "2026-11-13"
    },
    {
      "source": "Array",
      "target": "Problem 3145",
      "value": 1,
      "timestamp": "2026-11-13"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3145",
      "value": 1,
      "timestamp": "2026-11-13"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3145",
      "value": 1,
      "timestamp": "2026-11-13"
    },
    {
      "source": "Array",
      "target": "Problem 3148",
      "value": 1,
      "timestamp": "2026-11-13"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3148",
      "value": 1,
      "timestamp": "2026-11-13"
    },
    {
      "source": "Matrix",
      "target": "Problem 3148",
      "value": 1,
      "timestamp": "2026-11-13"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3144",
      "value": 1,
      "timestamp": "2026-11-14"
    },
    {
      "source": "String",
      "target": "Problem 3144",
      "value": 1,
      "timestamp": "2026-11-14"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3144",
      "value": 1,
      "timestamp": "2026-11-14"
    },
    {
      "source": "Counting",
      "target": "Problem 3144",
      "value": 1,
      "timestamp": "2026-11-14"
    },
    {
      "source": "Array",
      "target": "Problem 3147",
      "value": 1,
      "timestamp": "2026-11-14"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3147",
      "value": 1,
      "timestamp": "2026-11-14"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3146",
      "value": 1,
      "timestamp": "2026-11-14"
    },
    {
      "source": "String",
      "target": "Problem 3146",
      "value": 1,
      "timestamp": "2026-11-14"
    },
    {
      "source": "Array",
      "target": "Problem 3143",
      "value": 1,
      "timestamp": "2026-11-15"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3143",
      "value": 1,
      "timestamp": "2026-11-15"
    },
    {
      "source": "String",
      "target": "Problem 3143",
      "value": 1,
      "timestamp": "2026-11-15"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3143",
      "value": 1,
      "timestamp": "2026-11-15"
    },
    {
      "source": "Sorting",
      "target": "Problem 3143",
      "value": 1,
      "timestamp": "2026-11-15"
    },
    {
      "source": "Array",
      "target": "Problem 3149",
      "value": 1,
      "timestamp": "2026-11-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3149",
      "value": 1,
      "timestamp": "2026-11-15"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3149",
      "value": 1,
      "timestamp": "2026-11-15"
    },
    {
      "source": "Bitmask",
      "target": "Problem 3149",
      "value": 1,
      "timestamp": "2026-11-15"
    },
    {
      "source": "Math",
      "target": "Problem 3154",
      "value": 1,
      "timestamp": "2026-11-16"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3154",
      "value": 1,
      "timestamp": "2026-11-16"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3154",
      "value": 1,
      "timestamp": "2026-11-16"
    },
    {
      "source": "Memoization",
      "target": "Problem 3154",
      "value": 1,
      "timestamp": "2026-11-16"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 3154",
      "value": 1,
      "timestamp": "2026-11-16"
    },
    {
      "source": "Array",
      "target": "Problem 3151",
      "value": 1,
      "timestamp": "2026-11-16"
    },
    {
      "source": "Array",
      "target": "Problem 3152",
      "value": 1,
      "timestamp": "2026-11-17"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3152",
      "value": 1,
      "timestamp": "2026-11-17"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3152",
      "value": 1,
      "timestamp": "2026-11-17"
    },
    {
      "source": "Array",
      "target": "Problem 3153",
      "value": 1,
      "timestamp": "2026-11-17"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3153",
      "value": 1,
      "timestamp": "2026-11-17"
    },
    {
      "source": "Math",
      "target": "Problem 3153",
      "value": 1,
      "timestamp": "2026-11-17"
    },
    {
      "source": "Counting",
      "target": "Problem 3153",
      "value": 1,
      "timestamp": "2026-11-17"
    },
    {
      "source": "Array",
      "target": "Problem 3159",
      "value": 1,
      "timestamp": "2026-11-18"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3159",
      "value": 1,
      "timestamp": "2026-11-18"
    },
    {
      "source": "Array",
      "target": "Problem 3158",
      "value": 1,
      "timestamp": "2026-11-18"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3158",
      "value": 1,
      "timestamp": "2026-11-18"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3158",
      "value": 1,
      "timestamp": "2026-11-18"
    },
    {
      "source": "Array",
      "target": "Problem 3160",
      "value": 1,
      "timestamp": "2026-11-18"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3160",
      "value": 1,
      "timestamp": "2026-11-18"
    },
    {
      "source": "Simulation",
      "target": "Problem 3160",
      "value": 1,
      "timestamp": "2026-11-18"
    },
    {
      "source": "String",
      "target": "Problem 3163",
      "value": 1,
      "timestamp": "2026-11-19"
    },
    {
      "source": "Array",
      "target": "Problem 3162",
      "value": 1,
      "timestamp": "2026-11-19"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3162",
      "value": 1,
      "timestamp": "2026-11-19"
    },
    {
      "source": "Array",
      "target": "Problem 3164",
      "value": 1,
      "timestamp": "2026-11-20"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3164",
      "value": 1,
      "timestamp": "2026-11-20"
    },
    {
      "source": "Array",
      "target": "Problem 3161",
      "value": 1,
      "timestamp": "2026-11-20"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3161",
      "value": 1,
      "timestamp": "2026-11-20"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 3161",
      "value": 1,
      "timestamp": "2026-11-20"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 3161",
      "value": 1,
      "timestamp": "2026-11-20"
    },
    {
      "source": "Array",
      "target": "Problem 3165",
      "value": 1,
      "timestamp": "2026-11-21"
    },
    {
      "source": "Divide and Conquer",
      "target": "Problem 3165",
      "value": 1,
      "timestamp": "2026-11-21"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3165",
      "value": 1,
      "timestamp": "2026-11-21"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 3165",
      "value": 1,
      "timestamp": "2026-11-21"
    },
    {
      "source": "String",
      "target": "Problem 3168",
      "value": 1,
      "timestamp": "2026-11-21"
    },
    {
      "source": "Simulation",
      "target": "Problem 3168",
      "value": 1,
      "timestamp": "2026-11-21"
    },
    {
      "source": "Array",
      "target": "Problem 3169",
      "value": 1,
      "timestamp": "2026-11-21"
    },
    {
      "source": "Sorting",
      "target": "Problem 3169",
      "value": 1,
      "timestamp": "2026-11-21"
    },
    {
      "source": "Array",
      "target": "Problem 3171",
      "value": 1,
      "timestamp": "2026-11-22"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3171",
      "value": 1,
      "timestamp": "2026-11-22"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3171",
      "value": 1,
      "timestamp": "2026-11-22"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 3171",
      "value": 1,
      "timestamp": "2026-11-22"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3170",
      "value": 1,
      "timestamp": "2026-11-23"
    },
    {
      "source": "String",
      "target": "Problem 3170",
      "value": 1,
      "timestamp": "2026-11-23"
    },
    {
      "source": "Stack",
      "target": "Problem 3170",
      "value": 1,
      "timestamp": "2026-11-23"
    },
    {
      "source": "Greedy",
      "target": "Problem 3170",
      "value": 1,
      "timestamp": "2026-11-23"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 3170",
      "value": 1,
      "timestamp": "2026-11-23"
    },
    {
      "source": "Math",
      "target": "Problem 3178",
      "value": 1,
      "timestamp": "2026-11-23"
    },
    {
      "source": "Simulation",
      "target": "Problem 3178",
      "value": 1,
      "timestamp": "2026-11-23"
    },
    {
      "source": "Array",
      "target": "Problem 3177",
      "value": 1,
      "timestamp": "2026-11-23"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3177",
      "value": 1,
      "timestamp": "2026-11-23"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3177",
      "value": 1,
      "timestamp": "2026-11-23"
    },
    {
      "source": "String",
      "target": "Problem 3174",
      "value": 1,
      "timestamp": "2026-11-24"
    },
    {
      "source": "Stack",
      "target": "Problem 3174",
      "value": 1,
      "timestamp": "2026-11-24"
    },
    {
      "source": "Simulation",
      "target": "Problem 3174",
      "value": 1,
      "timestamp": "2026-11-24"
    },
    {
      "source": "Array",
      "target": "Problem 3175",
      "value": 1,
      "timestamp": "2026-11-24"
    },
    {
      "source": "Simulation",
      "target": "Problem 3175",
      "value": 1,
      "timestamp": "2026-11-24"
    },
    {
      "source": "Array",
      "target": "Problem 3176",
      "value": 1,
      "timestamp": "2026-11-25"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3176",
      "value": 1,
      "timestamp": "2026-11-25"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3176",
      "value": 1,
      "timestamp": "2026-11-25"
    },
    {
      "source": "Array",
      "target": "Problem 3179",
      "value": 1,
      "timestamp": "2026-11-25"
    },
    {
      "source": "Math",
      "target": "Problem 3179",
      "value": 1,
      "timestamp": "2026-11-25"
    },
    {
      "source": "Simulation",
      "target": "Problem 3179",
      "value": 1,
      "timestamp": "2026-11-25"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 3179",
      "value": 1,
      "timestamp": "2026-11-25"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3179",
      "value": 1,
      "timestamp": "2026-11-25"
    },
    {
      "source": "Array",
      "target": "Problem 3180",
      "value": 1,
      "timestamp": "2026-11-25"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3180",
      "value": 1,
      "timestamp": "2026-11-25"
    },
    {
      "source": "Array",
      "target": "Problem 3185",
      "value": 1,
      "timestamp": "2026-11-26"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3185",
      "value": 1,
      "timestamp": "2026-11-26"
    },
    {
      "source": "Counting",
      "target": "Problem 3185",
      "value": 1,
      "timestamp": "2026-11-26"
    },
    {
      "source": "Array",
      "target": "Problem 3187",
      "value": 1,
      "timestamp": "2026-11-27"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 3187",
      "value": 1,
      "timestamp": "2026-11-27"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 3187",
      "value": 1,
      "timestamp": "2026-11-27"
    },
    {
      "source": "Array",
      "target": "Problem 3186",
      "value": 1,
      "timestamp": "2026-11-27"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3186",
      "value": 1,
      "timestamp": "2026-11-27"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 3186",
      "value": 1,
      "timestamp": "2026-11-27"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3186",
      "value": 1,
      "timestamp": "2026-11-27"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3186",
      "value": 1,
      "timestamp": "2026-11-27"
    },
    {
      "source": "Sorting",
      "target": "Problem 3186",
      "value": 1,
      "timestamp": "2026-11-27"
    },
    {
      "source": "Counting",
      "target": "Problem 3186",
      "value": 1,
      "timestamp": "2026-11-27"
    },
    {
      "source": "Array",
      "target": "Problem 3184",
      "value": 1,
      "timestamp": "2026-11-28"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3184",
      "value": 1,
      "timestamp": "2026-11-28"
    },
    {
      "source": "Counting",
      "target": "Problem 3184",
      "value": 1,
      "timestamp": "2026-11-28"
    },
    {
      "source": "Array",
      "target": "Problem 3181",
      "value": 1,
      "timestamp": "2026-11-28"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3181",
      "value": 1,
      "timestamp": "2026-11-28"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3181",
      "value": 1,
      "timestamp": "2026-11-28"
    },
    {
      "source": "Array",
      "target": "Problem 3192",
      "value": 1,
      "timestamp": "2026-11-28"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3192",
      "value": 1,
      "timestamp": "2026-11-28"
    },
    {
      "source": "Greedy",
      "target": "Problem 3192",
      "value": 1,
      "timestamp": "2026-11-28"
    },
    {
      "source": "Array",
      "target": "Problem 3191",
      "value": 1,
      "timestamp": "2026-11-29"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3191",
      "value": 1,
      "timestamp": "2026-11-29"
    },
    {
      "source": "Queue",
      "target": "Problem 3191",
      "value": 1,
      "timestamp": "2026-11-29"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3191",
      "value": 1,
      "timestamp": "2026-11-29"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3191",
      "value": 1,
      "timestamp": "2026-11-29"
    },
    {
      "source": "Array",
      "target": "Problem 3194",
      "value": 1,
      "timestamp": "2026-11-29"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 3194",
      "value": 1,
      "timestamp": "2026-11-29"
    },
    {
      "source": "Sorting",
      "target": "Problem 3194",
      "value": 1,
      "timestamp": "2026-11-29"
    },
    {
      "source": "Array",
      "target": "Problem 3193",
      "value": 1,
      "timestamp": "2026-11-30"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3193",
      "value": 1,
      "timestamp": "2026-11-30"
    },
    {
      "source": "Array",
      "target": "Problem 3196",
      "value": 1,
      "timestamp": "2026-11-30"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3196",
      "value": 1,
      "timestamp": "2026-11-30"
    },
    {
      "source": "Array",
      "target": "Problem 3195",
      "value": 1,
      "timestamp": "2026-11-30"
    },
    {
      "source": "Matrix",
      "target": "Problem 3195",
      "value": 1,
      "timestamp": "2026-11-30"
    },
    {
      "source": "Array",
      "target": "Problem 3190",
      "value": 1,
      "timestamp": "2026-12-01"
    },
    {
      "source": "Math",
      "target": "Problem 3190",
      "value": 1,
      "timestamp": "2026-12-01"
    },
    {
      "source": "Array",
      "target": "Problem 3200",
      "value": 1,
      "timestamp": "2026-12-02"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3200",
      "value": 1,
      "timestamp": "2026-12-02"
    },
    {
      "source": "Array",
      "target": "Problem 3197",
      "value": 1,
      "timestamp": "2026-12-02"
    },
    {
      "source": "Matrix",
      "target": "Problem 3197",
      "value": 1,
      "timestamp": "2026-12-02"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3197",
      "value": 1,
      "timestamp": "2026-12-02"
    },
    {
      "source": "Array",
      "target": "Problem 3201",
      "value": 1,
      "timestamp": "2026-12-02"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3201",
      "value": 1,
      "timestamp": "2026-12-02"
    },
    {
      "source": "Tree",
      "target": "Problem 3203",
      "value": 1,
      "timestamp": "2026-12-03"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 3203",
      "value": 1,
      "timestamp": "2026-12-03"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 3203",
      "value": 1,
      "timestamp": "2026-12-03"
    },
    {
      "source": "Graph",
      "target": "Problem 3203",
      "value": 1,
      "timestamp": "2026-12-03"
    },
    {
      "source": "Array",
      "target": "Problem 3206",
      "value": 1,
      "timestamp": "2026-12-03"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3206",
      "value": 1,
      "timestamp": "2026-12-03"
    },
    {
      "source": "Array",
      "target": "Problem 3202",
      "value": 1,
      "timestamp": "2026-12-04"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3202",
      "value": 1,
      "timestamp": "2026-12-04"
    },
    {
      "source": "String",
      "target": "Problem 3210",
      "value": 1,
      "timestamp": "2026-12-04"
    },
    {
      "source": "Array",
      "target": "Problem 3207",
      "value": 1,
      "timestamp": "2026-12-05"
    },
    {
      "source": "Greedy",
      "target": "Problem 3207",
      "value": 1,
      "timestamp": "2026-12-05"
    },
    {
      "source": "Array",
      "target": "Problem 3209",
      "value": 1,
      "timestamp": "2026-12-05"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3209",
      "value": 1,
      "timestamp": "2026-12-05"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3209",
      "value": 1,
      "timestamp": "2026-12-05"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 3209",
      "value": 1,
      "timestamp": "2026-12-05"
    },
    {
      "source": "Array",
      "target": "Problem 3208",
      "value": 1,
      "timestamp": "2026-12-05"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3208",
      "value": 1,
      "timestamp": "2026-12-05"
    },
    {
      "source": "String",
      "target": "Problem 3211",
      "value": 1,
      "timestamp": "2026-12-06"
    },
    {
      "source": "Backtracking",
      "target": "Problem 3211",
      "value": 1,
      "timestamp": "2026-12-06"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3211",
      "value": 1,
      "timestamp": "2026-12-06"
    },
    {
      "source": "Array",
      "target": "Problem 3213",
      "value": 1,
      "timestamp": "2026-12-06"
    },
    {
      "source": "String",
      "target": "Problem 3213",
      "value": 1,
      "timestamp": "2026-12-06"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3213",
      "value": 1,
      "timestamp": "2026-12-06"
    },
    {
      "source": "Suffix Array",
      "target": "Problem 3213",
      "value": 1,
      "timestamp": "2026-12-06"
    },
    {
      "source": "Array",
      "target": "Problem 3212",
      "value": 1,
      "timestamp": "2026-12-06"
    },
    {
      "source": "Matrix",
      "target": "Problem 3212",
      "value": 1,
      "timestamp": "2026-12-06"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3212",
      "value": 1,
      "timestamp": "2026-12-06"
    },
    {
      "source": "String",
      "target": "Problem 3216",
      "value": 1,
      "timestamp": "2026-12-07"
    },
    {
      "source": "Greedy",
      "target": "Problem 3216",
      "value": 1,
      "timestamp": "2026-12-07"
    },
    {
      "source": "Array",
      "target": "Problem 3218",
      "value": 1,
      "timestamp": "2026-12-08"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3218",
      "value": 1,
      "timestamp": "2026-12-08"
    },
    {
      "source": "Greedy",
      "target": "Problem 3218",
      "value": 1,
      "timestamp": "2026-12-08"
    },
    {
      "source": "Sorting",
      "target": "Problem 3218",
      "value": 1,
      "timestamp": "2026-12-08"
    },
    {
      "source": "Array",
      "target": "Problem 3217",
      "value": 1,
      "timestamp": "2026-12-08"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3217",
      "value": 1,
      "timestamp": "2026-12-08"
    },
    {
      "source": "Linked List",
      "target": "Problem 3217",
      "value": 1,
      "timestamp": "2026-12-08"
    },
    {
      "source": "Database",
      "target": "Problem 3220",
      "value": 1,
      "timestamp": "2026-12-09"
    },
    {
      "source": "Math",
      "target": "Problem 3222",
      "value": 1,
      "timestamp": "2026-12-09"
    },
    {
      "source": "Simulation",
      "target": "Problem 3222",
      "value": 1,
      "timestamp": "2026-12-09"
    },
    {
      "source": "Game Theory",
      "target": "Problem 3222",
      "value": 1,
      "timestamp": "2026-12-09"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3223",
      "value": 1,
      "timestamp": "2026-12-09"
    },
    {
      "source": "String",
      "target": "Problem 3223",
      "value": 1,
      "timestamp": "2026-12-09"
    },
    {
      "source": "Counting",
      "target": "Problem 3223",
      "value": 1,
      "timestamp": "2026-12-09"
    },
    {
      "source": "Array",
      "target": "Problem 3219",
      "value": 1,
      "timestamp": "2026-12-10"
    },
    {
      "source": "Greedy",
      "target": "Problem 3219",
      "value": 1,
      "timestamp": "2026-12-10"
    },
    {
      "source": "Sorting",
      "target": "Problem 3219",
      "value": 1,
      "timestamp": "2026-12-10"
    },
    {
      "source": "Array",
      "target": "Problem 3224",
      "value": 1,
      "timestamp": "2026-12-10"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3224",
      "value": 1,
      "timestamp": "2026-12-10"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3224",
      "value": 1,
      "timestamp": "2026-12-10"
    },
    {
      "source": "Array",
      "target": "Problem 3225",
      "value": 1,
      "timestamp": "2026-12-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3225",
      "value": 1,
      "timestamp": "2026-12-10"
    },
    {
      "source": "Matrix",
      "target": "Problem 3225",
      "value": 1,
      "timestamp": "2026-12-10"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3225",
      "value": 1,
      "timestamp": "2026-12-10"
    },
    {
      "source": "Math",
      "target": "Problem 3227",
      "value": 1,
      "timestamp": "2026-12-11"
    },
    {
      "source": "String",
      "target": "Problem 3227",
      "value": 1,
      "timestamp": "2026-12-11"
    },
    {
      "source": "Brainteaser",
      "target": "Problem 3227",
      "value": 1,
      "timestamp": "2026-12-11"
    },
    {
      "source": "Game Theory",
      "target": "Problem 3227",
      "value": 1,
      "timestamp": "2026-12-11"
    },
    {
      "source": "Array",
      "target": "Problem 3229",
      "value": 1,
      "timestamp": "2026-12-11"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3229",
      "value": 1,
      "timestamp": "2026-12-11"
    },
    {
      "source": "Stack",
      "target": "Problem 3229",
      "value": 1,
      "timestamp": "2026-12-11"
    },
    {
      "source": "Greedy",
      "target": "Problem 3229",
      "value": 1,
      "timestamp": "2026-12-11"
    },
    {
      "source": "Monotonic Stack",
      "target": "Problem 3229",
      "value": 1,
      "timestamp": "2026-12-11"
    },
    {
      "source": "String",
      "target": "Problem 3228",
      "value": 1,
      "timestamp": "2026-12-11"
    },
    {
      "source": "Greedy",
      "target": "Problem 3228",
      "value": 1,
      "timestamp": "2026-12-11"
    },
    {
      "source": "Counting",
      "target": "Problem 3228",
      "value": 1,
      "timestamp": "2026-12-11"
    },
    {
      "source": "Array",
      "target": "Problem 3232",
      "value": 1,
      "timestamp": "2026-12-12"
    },
    {
      "source": "Math",
      "target": "Problem 3232",
      "value": 1,
      "timestamp": "2026-12-12"
    },
    {
      "source": "Array",
      "target": "Problem 3235",
      "value": 1,
      "timestamp": "2026-12-13"
    },
    {
      "source": "Math",
      "target": "Problem 3235",
      "value": 1,
      "timestamp": "2026-12-13"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 3235",
      "value": 1,
      "timestamp": "2026-12-13"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 3235",
      "value": 1,
      "timestamp": "2026-12-13"
    },
    {
      "source": "Union Find",
      "target": "Problem 3235",
      "value": 1,
      "timestamp": "2026-12-13"
    },
    {
      "source": "Geometry",
      "target": "Problem 3235",
      "value": 1,
      "timestamp": "2026-12-13"
    },
    {
      "source": "String",
      "target": "Problem 3234",
      "value": 1,
      "timestamp": "2026-12-13"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3234",
      "value": 1,
      "timestamp": "2026-12-13"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3234",
      "value": 1,
      "timestamp": "2026-12-13"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3226",
      "value": 1,
      "timestamp": "2026-12-14"
    },
    {
      "source": "Array",
      "target": "Problem 3233",
      "value": 1,
      "timestamp": "2026-12-14"
    },
    {
      "source": "Math",
      "target": "Problem 3233",
      "value": 1,
      "timestamp": "2026-12-14"
    },
    {
      "source": "Number Theory",
      "target": "Problem 3233",
      "value": 1,
      "timestamp": "2026-12-14"
    },
    {
      "source": "Array",
      "target": "Problem 3238",
      "value": 1,
      "timestamp": "2026-12-14"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3238",
      "value": 1,
      "timestamp": "2026-12-14"
    },
    {
      "source": "Counting",
      "target": "Problem 3238",
      "value": 1,
      "timestamp": "2026-12-14"
    },
    {
      "source": "Array",
      "target": "Problem 3239",
      "value": 1,
      "timestamp": "2026-12-15"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 3239",
      "value": 1,
      "timestamp": "2026-12-15"
    },
    {
      "source": "Matrix",
      "target": "Problem 3239",
      "value": 1,
      "timestamp": "2026-12-15"
    },
    {
      "source": "Array",
      "target": "Problem 3240",
      "value": 1,
      "timestamp": "2026-12-15"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 3240",
      "value": 1,
      "timestamp": "2026-12-15"
    },
    {
      "source": "Matrix",
      "target": "Problem 3240",
      "value": 1,
      "timestamp": "2026-12-15"
    },
    {
      "source": "Array",
      "target": "Problem 3244",
      "value": 1,
      "timestamp": "2026-12-16"
    },
    {
      "source": "Greedy",
      "target": "Problem 3244",
      "value": 1,
      "timestamp": "2026-12-16"
    },
    {
      "source": "Graph",
      "target": "Problem 3244",
      "value": 1,
      "timestamp": "2026-12-16"
    },
    {
      "source": "Ordered Set",
      "target": "Problem 3244",
      "value": 1,
      "timestamp": "2026-12-16"
    },
    {
      "source": "Array",
      "target": "Problem 3245",
      "value": 1,
      "timestamp": "2026-12-16"
    },
    {
      "source": "Binary Indexed Tree",
      "target": "Problem 3245",
      "value": 1,
      "timestamp": "2026-12-16"
    },
    {
      "source": "Array",
      "target": "Problem 3243",
      "value": 1,
      "timestamp": "2026-12-16"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 3243",
      "value": 1,
      "timestamp": "2026-12-16"
    },
    {
      "source": "Graph",
      "target": "Problem 3243",
      "value": 1,
      "timestamp": "2026-12-16"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3241",
      "value": 1,
      "timestamp": "2026-12-17"
    },
    {
      "source": "Tree",
      "target": "Problem 3241",
      "value": 1,
      "timestamp": "2026-12-17"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 3241",
      "value": 1,
      "timestamp": "2026-12-17"
    },
    {
      "source": "Graph",
      "target": "Problem 3241",
      "value": 1,
      "timestamp": "2026-12-17"
    },
    {
      "source": "Array",
      "target": "Problem 3242",
      "value": 1,
      "timestamp": "2026-12-17"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3242",
      "value": 1,
      "timestamp": "2026-12-17"
    },
    {
      "source": "Design",
      "target": "Problem 3242",
      "value": 1,
      "timestamp": "2026-12-17"
    },
    {
      "source": "Matrix",
      "target": "Problem 3242",
      "value": 1,
      "timestamp": "2026-12-17"
    },
    {
      "source": "Simulation",
      "target": "Problem 3242",
      "value": 1,
      "timestamp": "2026-12-17"
    },
    {
      "source": "Tree",
      "target": "Problem 3249",
      "value": 1,
      "timestamp": "2026-12-18"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 3249",
      "value": 1,
      "timestamp": "2026-12-18"
    },
    {
      "source": "Array",
      "target": "Problem 3248",
      "value": 1,
      "timestamp": "2026-12-18"
    },
    {
      "source": "String",
      "target": "Problem 3248",
      "value": 1,
      "timestamp": "2026-12-18"
    },
    {
      "source": "Simulation",
      "target": "Problem 3248",
      "value": 1,
      "timestamp": "2026-12-18"
    },
    {
      "source": "Array",
      "target": "Problem 3251",
      "value": 1,
      "timestamp": "2026-12-19"
    },
    {
      "source": "Math",
      "target": "Problem 3251",
      "value": 1,
      "timestamp": "2026-12-19"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3251",
      "value": 1,
      "timestamp": "2026-12-19"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 3251",
      "value": 1,
      "timestamp": "2026-12-19"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3251",
      "value": 1,
      "timestamp": "2026-12-19"
    },
    {
      "source": "Array",
      "target": "Problem 3254",
      "value": 1,
      "timestamp": "2026-12-20"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3254",
      "value": 1,
      "timestamp": "2026-12-20"
    },
    {
      "source": "Array",
      "target": "Problem 3250",
      "value": 1,
      "timestamp": "2026-12-20"
    },
    {
      "source": "Math",
      "target": "Problem 3250",
      "value": 1,
      "timestamp": "2026-12-20"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3250",
      "value": 1,
      "timestamp": "2026-12-20"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 3250",
      "value": 1,
      "timestamp": "2026-12-20"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3250",
      "value": 1,
      "timestamp": "2026-12-20"
    },
    {
      "source": "Array",
      "target": "Problem 3255",
      "value": 1,
      "timestamp": "2026-12-20"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3255",
      "value": 1,
      "timestamp": "2026-12-20"
    },
    {
      "source": "Array",
      "target": "Problem 3257",
      "value": 1,
      "timestamp": "2026-12-21"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3257",
      "value": 1,
      "timestamp": "2026-12-21"
    },
    {
      "source": "Matrix",
      "target": "Problem 3257",
      "value": 1,
      "timestamp": "2026-12-21"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3257",
      "value": 1,
      "timestamp": "2026-12-21"
    },
    {
      "source": "Array",
      "target": "Problem 3256",
      "value": 1,
      "timestamp": "2026-12-21"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3256",
      "value": 1,
      "timestamp": "2026-12-21"
    },
    {
      "source": "Matrix",
      "target": "Problem 3256",
      "value": 1,
      "timestamp": "2026-12-21"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3256",
      "value": 1,
      "timestamp": "2026-12-21"
    },
    {
      "source": "Array",
      "target": "Problem 3259",
      "value": 1,
      "timestamp": "2026-12-21"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3259",
      "value": 1,
      "timestamp": "2026-12-21"
    },
    {
      "source": "String",
      "target": "Problem 3258",
      "value": 1,
      "timestamp": "2026-12-22"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3258",
      "value": 1,
      "timestamp": "2026-12-22"
    },
    {
      "source": "Math",
      "target": "Problem 3260",
      "value": 1,
      "timestamp": "2026-12-22"
    },
    {
      "source": "String",
      "target": "Problem 3260",
      "value": 1,
      "timestamp": "2026-12-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3260",
      "value": 1,
      "timestamp": "2026-12-22"
    },
    {
      "source": "Greedy",
      "target": "Problem 3260",
      "value": 1,
      "timestamp": "2026-12-22"
    },
    {
      "source": "Number Theory",
      "target": "Problem 3260",
      "value": 1,
      "timestamp": "2026-12-22"
    },
    {
      "source": "Array",
      "target": "Problem 3261",
      "value": 1,
      "timestamp": "2026-12-22"
    },
    {
      "source": "String",
      "target": "Problem 3261",
      "value": 1,
      "timestamp": "2026-12-22"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3261",
      "value": 1,
      "timestamp": "2026-12-22"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3261",
      "value": 1,
      "timestamp": "2026-12-22"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3261",
      "value": 1,
      "timestamp": "2026-12-22"
    },
    {
      "source": "Array",
      "target": "Problem 3264",
      "value": 1,
      "timestamp": "2026-12-23"
    },
    {
      "source": "Math",
      "target": "Problem 3264",
      "value": 1,
      "timestamp": "2026-12-23"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 3264",
      "value": 1,
      "timestamp": "2026-12-23"
    },
    {
      "source": "Simulation",
      "target": "Problem 3264",
      "value": 1,
      "timestamp": "2026-12-23"
    },
    {
      "source": "Array",
      "target": "Problem 3265",
      "value": 1,
      "timestamp": "2026-12-24"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3265",
      "value": 1,
      "timestamp": "2026-12-24"
    },
    {
      "source": "Sorting",
      "target": "Problem 3265",
      "value": 1,
      "timestamp": "2026-12-24"
    },
    {
      "source": "Counting",
      "target": "Problem 3265",
      "value": 1,
      "timestamp": "2026-12-24"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3265",
      "value": 1,
      "timestamp": "2026-12-24"
    },
    {
      "source": "Array",
      "target": "Problem 3266",
      "value": 1,
      "timestamp": "2026-12-25"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 3266",
      "value": 1,
      "timestamp": "2026-12-25"
    },
    {
      "source": "Simulation",
      "target": "Problem 3266",
      "value": 1,
      "timestamp": "2026-12-25"
    },
    {
      "source": "Array",
      "target": "Problem 3267",
      "value": 1,
      "timestamp": "2026-12-25"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3267",
      "value": 1,
      "timestamp": "2026-12-25"
    },
    {
      "source": "Sorting",
      "target": "Problem 3267",
      "value": 1,
      "timestamp": "2026-12-25"
    },
    {
      "source": "Counting",
      "target": "Problem 3267",
      "value": 1,
      "timestamp": "2026-12-25"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3267",
      "value": 1,
      "timestamp": "2026-12-25"
    },
    {
      "source": "Array",
      "target": "Problem 3273",
      "value": 1,
      "timestamp": "2026-12-25"
    },
    {
      "source": "Greedy",
      "target": "Problem 3273",
      "value": 1,
      "timestamp": "2026-12-25"
    },
    {
      "source": "Sorting",
      "target": "Problem 3273",
      "value": 1,
      "timestamp": "2026-12-25"
    },
    {
      "source": "Math",
      "target": "Problem 3270",
      "value": 1,
      "timestamp": "2026-12-26"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3272",
      "value": 1,
      "timestamp": "2026-12-26"
    },
    {
      "source": "Math",
      "target": "Problem 3272",
      "value": 1,
      "timestamp": "2026-12-26"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 3272",
      "value": 1,
      "timestamp": "2026-12-26"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3272",
      "value": 1,
      "timestamp": "2026-12-26"
    },
    {
      "source": "String",
      "target": "Problem 3271",
      "value": 1,
      "timestamp": "2026-12-26"
    },
    {
      "source": "Simulation",
      "target": "Problem 3271",
      "value": 1,
      "timestamp": "2026-12-26"
    },
    {
      "source": "Array",
      "target": "Problem 3277",
      "value": 1,
      "timestamp": "2026-12-27"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3277",
      "value": 1,
      "timestamp": "2026-12-27"
    },
    {
      "source": "Math",
      "target": "Problem 3274",
      "value": 1,
      "timestamp": "2026-12-27"
    },
    {
      "source": "String",
      "target": "Problem 3274",
      "value": 1,
      "timestamp": "2026-12-27"
    },
    {
      "source": "Array",
      "target": "Problem 3275",
      "value": 1,
      "timestamp": "2026-12-27"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 3275",
      "value": 1,
      "timestamp": "2026-12-27"
    },
    {
      "source": "Array",
      "target": "Problem 3276",
      "value": 1,
      "timestamp": "2026-12-28"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3276",
      "value": 1,
      "timestamp": "2026-12-28"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3276",
      "value": 1,
      "timestamp": "2026-12-28"
    },
    {
      "source": "Matrix",
      "target": "Problem 3276",
      "value": 1,
      "timestamp": "2026-12-28"
    },
    {
      "source": "Bitmask",
      "target": "Problem 3276",
      "value": 1,
      "timestamp": "2026-12-28"
    },
    {
      "source": "Math",
      "target": "Problem 3280",
      "value": 1,
      "timestamp": "2026-12-29"
    },
    {
      "source": "String",
      "target": "Problem 3280",
      "value": 1,
      "timestamp": "2026-12-29"
    },
    {
      "source": "Array",
      "target": "Problem 3281",
      "value": 1,
      "timestamp": "2026-12-29"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3281",
      "value": 1,
      "timestamp": "2026-12-29"
    },
    {
      "source": "Greedy",
      "target": "Problem 3281",
      "value": 1,
      "timestamp": "2026-12-29"
    },
    {
      "source": "Sorting",
      "target": "Problem 3281",
      "value": 1,
      "timestamp": "2026-12-29"
    },
    {
      "source": "Array",
      "target": "Problem 3282",
      "value": 1,
      "timestamp": "2026-12-29"
    },
    {
      "source": "Greedy",
      "target": "Problem 3282",
      "value": 1,
      "timestamp": "2026-12-29"
    },
    {
      "source": "Array",
      "target": "Problem 3283",
      "value": 1,
      "timestamp": "2026-12-30"
    },
    {
      "source": "Math",
      "target": "Problem 3283",
      "value": 1,
      "timestamp": "2026-12-30"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3283",
      "value": 1,
      "timestamp": "2026-12-30"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 3283",
      "value": 1,
      "timestamp": "2026-12-30"
    },
    {
      "source": "Game Theory",
      "target": "Problem 3283",
      "value": 1,
      "timestamp": "2026-12-30"
    },
    {
      "source": "Bitmask",
      "target": "Problem 3283",
      "value": 1,
      "timestamp": "2026-12-30"
    },
    {
      "source": "Array",
      "target": "Problem 3287",
      "value": 1,
      "timestamp": "2026-12-30"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3287",
      "value": 1,
      "timestamp": "2026-12-30"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3287",
      "value": 1,
      "timestamp": "2026-12-30"
    },
    {
      "source": "Array",
      "target": "Problem 3288",
      "value": 1,
      "timestamp": "2026-12-31"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3288",
      "value": 1,
      "timestamp": "2026-12-31"
    },
    {
      "source": "Sorting",
      "target": "Problem 3288",
      "value": 1,
      "timestamp": "2026-12-31"
    },
    {
      "source": "Array",
      "target": "Problem 3289",
      "value": 1,
      "timestamp": "2026-12-31"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3289",
      "value": 1,
      "timestamp": "2026-12-31"
    },
    {
      "source": "Math",
      "target": "Problem 3289",
      "value": 1,
      "timestamp": "2026-12-31"
    },
    {
      "source": "Array",
      "target": "Problem 3286",
      "value": 1,
      "timestamp": "2026-12-31"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 3286",
      "value": 1,
      "timestamp": "2026-12-31"
    },
    {
      "source": "Graph",
      "target": "Problem 3286",
      "value": 1,
      "timestamp": "2026-12-31"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 3286",
      "value": 1,
      "timestamp": "2026-12-31"
    },
    {
      "source": "Matrix",
      "target": "Problem 3286",
      "value": 1,
      "timestamp": "2026-12-31"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 3286",
      "value": 1,
      "timestamp": "2026-12-31"
    },
    {
      "source": "Array",
      "target": "Problem 3285",
      "value": 1,
      "timestamp": "2027-01-01"
    },
    {
      "source": "Array",
      "target": "Problem 3291",
      "value": 1,
      "timestamp": "2027-01-01"
    },
    {
      "source": "String",
      "target": "Problem 3291",
      "value": 1,
      "timestamp": "2027-01-01"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3291",
      "value": 1,
      "timestamp": "2027-01-01"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3291",
      "value": 1,
      "timestamp": "2027-01-01"
    },
    {
      "source": "Trie",
      "target": "Problem 3291",
      "value": 1,
      "timestamp": "2027-01-01"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 3291",
      "value": 1,
      "timestamp": "2027-01-01"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 3291",
      "value": 1,
      "timestamp": "2027-01-01"
    },
    {
      "source": "String Matching",
      "target": "Problem 3291",
      "value": 1,
      "timestamp": "2027-01-01"
    },
    {
      "source": "Hash Function",
      "target": "Problem 3291",
      "value": 1,
      "timestamp": "2027-01-01"
    },
    {
      "source": "Array",
      "target": "Problem 3292",
      "value": 1,
      "timestamp": "2027-01-01"
    },
    {
      "source": "String",
      "target": "Problem 3292",
      "value": 1,
      "timestamp": "2027-01-01"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3292",
      "value": 1,
      "timestamp": "2027-01-01"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3292",
      "value": 1,
      "timestamp": "2027-01-01"
    },
    {
      "source": "Segment Tree",
      "target": "Problem 3292",
      "value": 1,
      "timestamp": "2027-01-01"
    },
    {
      "source": "Rolling Hash",
      "target": "Problem 3292",
      "value": 1,
      "timestamp": "2027-01-01"
    },
    {
      "source": "String Matching",
      "target": "Problem 3292",
      "value": 1,
      "timestamp": "2027-01-01"
    },
    {
      "source": "Hash Function",
      "target": "Problem 3292",
      "value": 1,
      "timestamp": "2027-01-01"
    },
    {
      "source": "Array",
      "target": "Problem 3290",
      "value": 1,
      "timestamp": "2027-01-02"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3290",
      "value": 1,
      "timestamp": "2027-01-02"
    },
    {
      "source": "Array",
      "target": "Problem 3295",
      "value": 1,
      "timestamp": "2027-01-02"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3295",
      "value": 1,
      "timestamp": "2027-01-02"
    },
    {
      "source": "String",
      "target": "Problem 3295",
      "value": 1,
      "timestamp": "2027-01-02"
    },
    {
      "source": "Array",
      "target": "Problem 3296",
      "value": 1,
      "timestamp": "2027-01-02"
    },
    {
      "source": "Math",
      "target": "Problem 3296",
      "value": 1,
      "timestamp": "2027-01-02"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3296",
      "value": 1,
      "timestamp": "2027-01-02"
    },
    {
      "source": "Greedy",
      "target": "Problem 3296",
      "value": 1,
      "timestamp": "2027-01-02"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 3296",
      "value": 1,
      "timestamp": "2027-01-02"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3297",
      "value": 1,
      "timestamp": "2027-01-03"
    },
    {
      "source": "String",
      "target": "Problem 3297",
      "value": 1,
      "timestamp": "2027-01-03"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3297",
      "value": 1,
      "timestamp": "2027-01-03"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3298",
      "value": 1,
      "timestamp": "2027-01-04"
    },
    {
      "source": "String",
      "target": "Problem 3298",
      "value": 1,
      "timestamp": "2027-01-04"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3298",
      "value": 1,
      "timestamp": "2027-01-04"
    },
    {
      "source": "Array",
      "target": "Problem 3300",
      "value": 1,
      "timestamp": "2027-01-04"
    },
    {
      "source": "Math",
      "target": "Problem 3300",
      "value": 1,
      "timestamp": "2027-01-04"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3305",
      "value": 1,
      "timestamp": "2027-01-05"
    },
    {
      "source": "String",
      "target": "Problem 3305",
      "value": 1,
      "timestamp": "2027-01-05"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3305",
      "value": 1,
      "timestamp": "2027-01-05"
    },
    {
      "source": "Array",
      "target": "Problem 3301",
      "value": 1,
      "timestamp": "2027-01-05"
    },
    {
      "source": "Greedy",
      "target": "Problem 3301",
      "value": 1,
      "timestamp": "2027-01-05"
    },
    {
      "source": "Sorting",
      "target": "Problem 3301",
      "value": 1,
      "timestamp": "2027-01-05"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 3302",
      "value": 1,
      "timestamp": "2027-01-05"
    },
    {
      "source": "String",
      "target": "Problem 3302",
      "value": 1,
      "timestamp": "2027-01-05"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3302",
      "value": 1,
      "timestamp": "2027-01-05"
    },
    {
      "source": "Greedy",
      "target": "Problem 3302",
      "value": 1,
      "timestamp": "2027-01-05"
    },
    {
      "source": "String",
      "target": "Problem 3303",
      "value": 1,
      "timestamp": "2027-01-06"
    },
    {
      "source": "String Matching",
      "target": "Problem 3303",
      "value": 1,
      "timestamp": "2027-01-06"
    },
    {
      "source": "Math",
      "target": "Problem 3304",
      "value": 1,
      "timestamp": "2027-01-06"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3304",
      "value": 1,
      "timestamp": "2027-01-06"
    },
    {
      "source": "Recursion",
      "target": "Problem 3304",
      "value": 1,
      "timestamp": "2027-01-06"
    },
    {
      "source": "Simulation",
      "target": "Problem 3304",
      "value": 1,
      "timestamp": "2027-01-06"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3306",
      "value": 1,
      "timestamp": "2027-01-06"
    },
    {
      "source": "String",
      "target": "Problem 3306",
      "value": 1,
      "timestamp": "2027-01-06"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3306",
      "value": 1,
      "timestamp": "2027-01-06"
    },
    {
      "source": "Math",
      "target": "Problem 3307",
      "value": 1,
      "timestamp": "2027-01-07"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3307",
      "value": 1,
      "timestamp": "2027-01-07"
    },
    {
      "source": "Recursion",
      "target": "Problem 3307",
      "value": 1,
      "timestamp": "2027-01-07"
    },
    {
      "source": "Array",
      "target": "Problem 3311",
      "value": 1,
      "timestamp": "2027-01-07"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3311",
      "value": 1,
      "timestamp": "2027-01-07"
    },
    {
      "source": "Graph",
      "target": "Problem 3311",
      "value": 1,
      "timestamp": "2027-01-07"
    },
    {
      "source": "Matrix",
      "target": "Problem 3311",
      "value": 1,
      "timestamp": "2027-01-07"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 3310",
      "value": 1,
      "timestamp": "2027-01-08"
    },
    {
      "source": "Breadth-First Search",
      "target": "Problem 3310",
      "value": 1,
      "timestamp": "2027-01-08"
    },
    {
      "source": "Graph",
      "target": "Problem 3310",
      "value": 1,
      "timestamp": "2027-01-08"
    },
    {
      "source": "Array",
      "target": "Problem 3312",
      "value": 1,
      "timestamp": "2027-01-08"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3312",
      "value": 1,
      "timestamp": "2027-01-08"
    },
    {
      "source": "Math",
      "target": "Problem 3312",
      "value": 1,
      "timestamp": "2027-01-08"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3312",
      "value": 1,
      "timestamp": "2027-01-08"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 3312",
      "value": 1,
      "timestamp": "2027-01-08"
    },
    {
      "source": "Counting",
      "target": "Problem 3312",
      "value": 1,
      "timestamp": "2027-01-08"
    },
    {
      "source": "Number Theory",
      "target": "Problem 3312",
      "value": 1,
      "timestamp": "2027-01-08"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3312",
      "value": 1,
      "timestamp": "2027-01-08"
    },
    {
      "source": "Array",
      "target": "Problem 3309",
      "value": 1,
      "timestamp": "2027-01-09"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3309",
      "value": 1,
      "timestamp": "2027-01-09"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3309",
      "value": 1,
      "timestamp": "2027-01-09"
    },
    {
      "source": "Array",
      "target": "Problem 3314",
      "value": 1,
      "timestamp": "2027-01-09"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3314",
      "value": 1,
      "timestamp": "2027-01-09"
    },
    {
      "source": "Array",
      "target": "Problem 3315",
      "value": 1,
      "timestamp": "2027-01-10"
    },
    {
      "source": "Bit Manipulation",
      "target": "Problem 3315",
      "value": 1,
      "timestamp": "2027-01-10"
    },
    {
      "source": "Math",
      "target": "Problem 3317",
      "value": 1,
      "timestamp": "2027-01-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3317",
      "value": 1,
      "timestamp": "2027-01-10"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 3317",
      "value": 1,
      "timestamp": "2027-01-10"
    },
    {
      "source": "String",
      "target": "Problem 3320",
      "value": 1,
      "timestamp": "2027-01-10"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3320",
      "value": 1,
      "timestamp": "2027-01-10"
    },
    {
      "source": "Array",
      "target": "Problem 3316",
      "value": 1,
      "timestamp": "2027-01-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3316",
      "value": 1,
      "timestamp": "2027-01-11"
    },
    {
      "source": "Two Pointers",
      "target": "Problem 3316",
      "value": 1,
      "timestamp": "2027-01-11"
    },
    {
      "source": "String",
      "target": "Problem 3316",
      "value": 1,
      "timestamp": "2027-01-11"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3316",
      "value": 1,
      "timestamp": "2027-01-11"
    },
    {
      "source": "Array",
      "target": "Problem 3321",
      "value": 1,
      "timestamp": "2027-01-11"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3321",
      "value": 1,
      "timestamp": "2027-01-11"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3321",
      "value": 1,
      "timestamp": "2027-01-11"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 3321",
      "value": 1,
      "timestamp": "2027-01-11"
    },
    {
      "source": "Tree",
      "target": "Problem 3319",
      "value": 1,
      "timestamp": "2027-01-11"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 3319",
      "value": 1,
      "timestamp": "2027-01-11"
    },
    {
      "source": "Sorting",
      "target": "Problem 3319",
      "value": 1,
      "timestamp": "2027-01-11"
    },
    {
      "source": "Binary Tree",
      "target": "Problem 3319",
      "value": 1,
      "timestamp": "2027-01-11"
    },
    {
      "source": "Array",
      "target": "Problem 3318",
      "value": 1,
      "timestamp": "2027-01-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3318",
      "value": 1,
      "timestamp": "2027-01-12"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3318",
      "value": 1,
      "timestamp": "2027-01-12"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 3318",
      "value": 1,
      "timestamp": "2027-01-12"
    },
    {
      "source": "Array",
      "target": "Problem 3327",
      "value": 1,
      "timestamp": "2027-01-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3327",
      "value": 1,
      "timestamp": "2027-01-12"
    },
    {
      "source": "String",
      "target": "Problem 3327",
      "value": 1,
      "timestamp": "2027-01-12"
    },
    {
      "source": "Tree",
      "target": "Problem 3327",
      "value": 1,
      "timestamp": "2027-01-12"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 3327",
      "value": 1,
      "timestamp": "2027-01-12"
    },
    {
      "source": "Hash Function",
      "target": "Problem 3327",
      "value": 1,
      "timestamp": "2027-01-12"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3325",
      "value": 1,
      "timestamp": "2027-01-13"
    },
    {
      "source": "String",
      "target": "Problem 3325",
      "value": 1,
      "timestamp": "2027-01-13"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3325",
      "value": 1,
      "timestamp": "2027-01-13"
    },
    {
      "source": "String",
      "target": "Problem 3330",
      "value": 1,
      "timestamp": "2027-01-13"
    },
    {
      "source": "Array",
      "target": "Problem 3326",
      "value": 1,
      "timestamp": "2027-01-14"
    },
    {
      "source": "Math",
      "target": "Problem 3326",
      "value": 1,
      "timestamp": "2027-01-14"
    },
    {
      "source": "Greedy",
      "target": "Problem 3326",
      "value": 1,
      "timestamp": "2027-01-14"
    },
    {
      "source": "Number Theory",
      "target": "Problem 3326",
      "value": 1,
      "timestamp": "2027-01-14"
    },
    {
      "source": "String",
      "target": "Problem 3324",
      "value": 1,
      "timestamp": "2027-01-14"
    },
    {
      "source": "Simulation",
      "target": "Problem 3324",
      "value": 1,
      "timestamp": "2027-01-14"
    },
    {
      "source": "Array",
      "target": "Problem 3331",
      "value": 1,
      "timestamp": "2027-01-15"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3331",
      "value": 1,
      "timestamp": "2027-01-15"
    },
    {
      "source": "String",
      "target": "Problem 3331",
      "value": 1,
      "timestamp": "2027-01-15"
    },
    {
      "source": "Tree",
      "target": "Problem 3331",
      "value": 1,
      "timestamp": "2027-01-15"
    },
    {
      "source": "Depth-First Search",
      "target": "Problem 3331",
      "value": 1,
      "timestamp": "2027-01-15"
    },
    {
      "source": "String",
      "target": "Problem 3333",
      "value": 1,
      "timestamp": "2027-01-15"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3333",
      "value": 1,
      "timestamp": "2027-01-15"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3333",
      "value": 1,
      "timestamp": "2027-01-15"
    },
    {
      "source": "Array",
      "target": "Problem 3334",
      "value": 1,
      "timestamp": "2027-01-15"
    },
    {
      "source": "Math",
      "target": "Problem 3334",
      "value": 1,
      "timestamp": "2027-01-15"
    },
    {
      "source": "Number Theory",
      "target": "Problem 3334",
      "value": 1,
      "timestamp": "2027-01-15"
    },
    {
      "source": "Array",
      "target": "Problem 3332",
      "value": 1,
      "timestamp": "2027-01-16"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3332",
      "value": 1,
      "timestamp": "2027-01-16"
    },
    {
      "source": "Matrix",
      "target": "Problem 3332",
      "value": 1,
      "timestamp": "2027-01-16"
    },
    {
      "source": "Array",
      "target": "Problem 3336",
      "value": 1,
      "timestamp": "2027-01-16"
    },
    {
      "source": "Math",
      "target": "Problem 3336",
      "value": 1,
      "timestamp": "2027-01-16"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3336",
      "value": 1,
      "timestamp": "2027-01-16"
    },
    {
      "source": "Number Theory",
      "target": "Problem 3336",
      "value": 1,
      "timestamp": "2027-01-16"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3335",
      "value": 1,
      "timestamp": "2027-01-16"
    },
    {
      "source": "Math",
      "target": "Problem 3335",
      "value": 1,
      "timestamp": "2027-01-16"
    },
    {
      "source": "String",
      "target": "Problem 3335",
      "value": 1,
      "timestamp": "2027-01-16"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3335",
      "value": 1,
      "timestamp": "2027-01-16"
    },
    {
      "source": "Counting",
      "target": "Problem 3335",
      "value": 1,
      "timestamp": "2027-01-16"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3337",
      "value": 1,
      "timestamp": "2027-01-17"
    },
    {
      "source": "Math",
      "target": "Problem 3337",
      "value": 1,
      "timestamp": "2027-01-17"
    },
    {
      "source": "String",
      "target": "Problem 3337",
      "value": 1,
      "timestamp": "2027-01-17"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3337",
      "value": 1,
      "timestamp": "2027-01-17"
    },
    {
      "source": "Counting",
      "target": "Problem 3337",
      "value": 1,
      "timestamp": "2027-01-17"
    },
    {
      "source": "Array",
      "target": "Problem 3347",
      "value": 1,
      "timestamp": "2027-01-18"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3347",
      "value": 1,
      "timestamp": "2027-01-18"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3347",
      "value": 1,
      "timestamp": "2027-01-18"
    },
    {
      "source": "Sorting",
      "target": "Problem 3347",
      "value": 1,
      "timestamp": "2027-01-18"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3347",
      "value": 1,
      "timestamp": "2027-01-18"
    },
    {
      "source": "Array",
      "target": "Problem 3346",
      "value": 1,
      "timestamp": "2027-01-18"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3346",
      "value": 1,
      "timestamp": "2027-01-18"
    },
    {
      "source": "Sliding Window",
      "target": "Problem 3346",
      "value": 1,
      "timestamp": "2027-01-18"
    },
    {
      "source": "Sorting",
      "target": "Problem 3346",
      "value": 1,
      "timestamp": "2027-01-18"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3346",
      "value": 1,
      "timestamp": "2027-01-18"
    },
    {
      "source": "String",
      "target": "Problem 3340",
      "value": 1,
      "timestamp": "2027-01-18"
    },
    {
      "source": "Math",
      "target": "Problem 3345",
      "value": 1,
      "timestamp": "2027-01-19"
    },
    {
      "source": "Enumeration",
      "target": "Problem 3345",
      "value": 1,
      "timestamp": "2027-01-19"
    },
    {
      "source": "Array",
      "target": "Problem 3342",
      "value": 1,
      "timestamp": "2027-01-19"
    },
    {
      "source": "Graph",
      "target": "Problem 3342",
      "value": 1,
      "timestamp": "2027-01-19"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 3342",
      "value": 1,
      "timestamp": "2027-01-19"
    },
    {
      "source": "Matrix",
      "target": "Problem 3342",
      "value": 1,
      "timestamp": "2027-01-19"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 3342",
      "value": 1,
      "timestamp": "2027-01-19"
    },
    {
      "source": "Array",
      "target": "Problem 3341",
      "value": 1,
      "timestamp": "2027-01-19"
    },
    {
      "source": "Graph",
      "target": "Problem 3341",
      "value": 1,
      "timestamp": "2027-01-19"
    },
    {
      "source": "Heap (Priority Queue)",
      "target": "Problem 3341",
      "value": 1,
      "timestamp": "2027-01-19"
    },
    {
      "source": "Matrix",
      "target": "Problem 3341",
      "value": 1,
      "timestamp": "2027-01-19"
    },
    {
      "source": "Shortest Path",
      "target": "Problem 3341",
      "value": 1,
      "timestamp": "2027-01-19"
    },
    {
      "source": "Math",
      "target": "Problem 3343",
      "value": 1,
      "timestamp": "2027-01-20"
    },
    {
      "source": "String",
      "target": "Problem 3343",
      "value": 1,
      "timestamp": "2027-01-20"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3343",
      "value": 1,
      "timestamp": "2027-01-20"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 3343",
      "value": 1,
      "timestamp": "2027-01-20"
    },
    {
      "source": "Math",
      "target": "Problem 3348",
      "value": 1,
      "timestamp": "2027-01-20"
    },
    {
      "source": "String",
      "target": "Problem 3348",
      "value": 1,
      "timestamp": "2027-01-20"
    },
    {
      "source": "Backtracking",
      "target": "Problem 3348",
      "value": 1,
      "timestamp": "2027-01-20"
    },
    {
      "source": "Greedy",
      "target": "Problem 3348",
      "value": 1,
      "timestamp": "2027-01-20"
    },
    {
      "source": "Number Theory",
      "target": "Problem 3348",
      "value": 1,
      "timestamp": "2027-01-20"
    },
    {
      "source": "Array",
      "target": "Problem 3349",
      "value": 1,
      "timestamp": "2027-01-21"
    },
    {
      "source": "Array",
      "target": "Problem 3350",
      "value": 1,
      "timestamp": "2027-01-21"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3350",
      "value": 1,
      "timestamp": "2027-01-21"
    },
    {
      "source": "Array",
      "target": "Problem 3351",
      "value": 1,
      "timestamp": "2027-01-21"
    },
    {
      "source": "Hash Table",
      "target": "Problem 3351",
      "value": 1,
      "timestamp": "2027-01-21"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3351",
      "value": 1,
      "timestamp": "2027-01-21"
    },
    {
      "source": "Math",
      "target": "Problem 3352",
      "value": 1,
      "timestamp": "2027-01-22"
    },
    {
      "source": "String",
      "target": "Problem 3352",
      "value": 1,
      "timestamp": "2027-01-22"
    },
    {
      "source": "Dynamic Programming",
      "target": "Problem 3352",
      "value": 1,
      "timestamp": "2027-01-22"
    },
    {
      "source": "Combinatorics",
      "target": "Problem 3352",
      "value": 1,
      "timestamp": "2027-01-22"
    },
    {
      "source": "Array",
      "target": "Problem 3357",
      "value": 1,
      "timestamp": "2027-01-22"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3357",
      "value": 1,
      "timestamp": "2027-01-22"
    },
    {
      "source": "Greedy",
      "target": "Problem 3357",
      "value": 1,
      "timestamp": "2027-01-22"
    },
    {
      "source": "Array",
      "target": "Problem 3355",
      "value": 1,
      "timestamp": "2027-01-23"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3355",
      "value": 1,
      "timestamp": "2027-01-23"
    },
    {
      "source": "Array",
      "target": "Problem 3354",
      "value": 1,
      "timestamp": "2027-01-23"
    },
    {
      "source": "Simulation",
      "target": "Problem 3354",
      "value": 1,
      "timestamp": "2027-01-23"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3354",
      "value": 1,
      "timestamp": "2027-01-23"
    },
    {
      "source": "Array",
      "target": "Problem 3356",
      "value": 1,
      "timestamp": "2027-01-23"
    },
    {
      "source": "Binary Search",
      "target": "Problem 3356",
      "value": 1,
      "timestamp": "2027-01-23"
    },
    {
      "source": "Prefix Sum",
      "target": "Problem 3356",
      "value": 1,
      "timestamp": "2027-01-23"
    }
  ]
}